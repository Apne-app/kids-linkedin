{"dependencies":[{"name":"./internal/_cloneRegExp","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":34}}]}},{"name":"./internal/_curry2","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":29}}]}},{"name":"./internal/_isRegExp","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":31}}]}},{"name":"./toString","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":21}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _cloneRegExp = _$$_REQUIRE(_dependencyMap[0], \"./internal/_cloneRegExp\");\n\n  var _curry2 = _$$_REQUIRE(_dependencyMap[1], \"./internal/_curry2\");\n\n  var _isRegExp = _$$_REQUIRE(_dependencyMap[2], \"./internal/_isRegExp\");\n\n  var toString = _$$_REQUIRE(_dependencyMap[3], \"./toString\");\n\n  var test = _curry2(function test(pattern, str) {\n    if (!_isRegExp(pattern)) {\n      throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n    }\n\n    return _cloneRegExp(pattern).test(str);\n  });\n\n  module.exports = test;\n});","lineCount":19,"map":[[2,0,1,0],[2,6,1,4,"_cloneRegExp"],[2,18,1,16],[2,21,3,0,"require"],[2,32,3,7],[2,78,1,0],[4,0,5,0],[4,6,5,4,"_curry2"],[4,13,5,11],[4,16,7,0,"require"],[4,27,7,7],[4,68,5,0],[6,0,9,0],[6,6,9,4,"_isRegExp"],[6,15,9,13],[6,18,11,0,"require"],[6,29,11,7],[6,72,9,0],[8,0,13,0],[8,6,13,4,"toString"],[8,14,13,12],[8,17,15,0,"require"],[8,28,15,7],[8,61,13,0],[10,0,35,0],[10,6,35,4,"test"],[10,10,35,8],[10,13,37,0,"_curry2"],[10,20,37,7],[10,21,37,8],[10,30,37,17,"test"],[10,34,37,8],[10,35,37,22,"pattern"],[10,42,37,8],[10,44,37,31,"str"],[10,47,37,8],[10,49,37,36],[11,0,38,2],[11,8,38,6],[11,9,38,7,"_isRegExp"],[11,18,38,16],[11,19,38,17,"pattern"],[11,26,38,16],[11,27,38,2],[11,29,38,27],[12,0,39,4],[12,12,39,10],[12,16,39,14,"TypeError"],[12,25,39,10],[12,26,39,24],[12,102,39,100,"toString"],[12,110,39,108],[12,111,39,109,"pattern"],[12,118,39,108],[12,119,39,10],[12,120,39,4],[13,0,40,3],[15,0,42,2],[15,11,42,9,"_cloneRegExp"],[15,23,42,21],[15,24,42,22,"pattern"],[15,31,42,21],[15,32,42,9],[15,33,42,31,"test"],[15,37,42,9],[15,38,42,36,"str"],[15,41,42,9],[15,42,42,2],[16,0,43,1],[16,3,37,7],[16,4,35,0],[18,0,45,0,"module"],[18,2,45,0,"module"],[18,8,45,6],[18,9,45,7,"exports"],[18,16,45,0],[18,19,45,17,"test"],[18,23,45,0]],"functionMap":{"names":["<global>","test"],"mappings":"AAA;QCoC;CDM"}},"type":"js/module"}]}