{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XFind = function () {\n    function XFind(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.found = false;\n    }\n\n    XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFind.prototype['@@transducer/result'] = function (result) {\n      if (!this.found) {\n        result = this.xf['@@transducer/step'](result, void 0);\n      }\n\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XFind.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f(input)) {\n        this.found = true;\n        result = _reduced(this.xf['@@transducer/step'](result, input));\n      }\n\n      return result;\n    };\n\n    return XFind;\n  }();\n\n  var _xfind = _curry2(function _xfind(f, xf) {\n    return new XFind(f, xf);\n  });\n\n  module.exports = _xfind;\n});","lineCount":42,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_reduced"],[4,14,3,12],[4,17,3,28,"require"],[4,28,3,35],[4,61,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XFind"],[8,11,7,9],[8,14,7,25],[8,26,7,37],[9,0,9,2],[9,13,9,11,"XFind"],[9,18,9,2],[9,19,9,17,"f"],[9,20,9,2],[9,22,9,20,"xf"],[9,24,9,2],[9,26,9,24],[10,0,10,4],[10,11,10,9,"xf"],[10,13,10,4],[10,16,10,14,"xf"],[10,18,10,4],[11,0,11,4],[11,11,11,9,"f"],[11,12,11,4],[11,15,11,13,"f"],[11,16,11,4],[12,0,12,4],[12,11,12,9,"found"],[12,16,12,4],[12,19,12,17],[12,24,12,4],[13,0,13,3],[15,0,14,2,"XFind"],[15,4,14,2,"XFind"],[15,9,14,7],[15,10,14,8,"prototype"],[15,19,14,2],[15,20,14,18],[15,39,14,2],[15,43,14,41,"_xfBase"],[15,50,14,48],[15,51,14,49,"init"],[15,55,14,2],[17,0,15,2,"XFind"],[17,4,15,2,"XFind"],[17,9,15,7],[17,10,15,8,"prototype"],[17,19,15,2],[17,20,15,18],[17,41,15,2],[17,45,15,43],[17,55,15,53,"result"],[17,61,15,43],[17,63,15,61],[18,0,16,4],[18,10,16,8],[18,11,16,9],[18,16,16,14,"found"],[18,21,16,4],[18,23,16,21],[19,0,17,6,"result"],[19,8,17,6,"result"],[19,14,17,12],[19,17,17,15],[19,22,17,20,"xf"],[19,24,17,15],[19,25,17,23],[19,44,17,15],[19,46,17,44,"result"],[19,52,17,15],[19,54,17,52],[19,59,17,57],[19,60,17,15],[19,61,17,6],[20,0,18,5],[22,0,19,4],[22,13,19,11],[22,18,19,16,"xf"],[22,20,19,11],[22,21,19,19],[22,42,19,11],[22,44,19,42,"result"],[22,50,19,11],[22,51,19,4],[23,0,20,3],[23,5,15,2],[25,0,21,2,"XFind"],[25,4,21,2,"XFind"],[25,9,21,7],[25,10,21,8,"prototype"],[25,19,21,2],[25,20,21,18],[25,39,21,2],[25,43,21,41],[25,53,21,51,"result"],[25,59,21,41],[25,61,21,59,"input"],[25,66,21,41],[25,68,21,66],[26,0,22,4],[26,10,22,8],[26,15,22,13,"f"],[26,16,22,8],[26,17,22,15,"input"],[26,22,22,8],[26,23,22,4],[26,25,22,23],[27,0,23,6],[27,13,23,11,"found"],[27,18,23,6],[27,21,23,19],[27,25,23,6],[28,0,24,6,"result"],[28,8,24,6,"result"],[28,14,24,12],[28,17,24,15,"_reduced"],[28,25,24,23],[28,26,24,24],[28,31,24,29,"xf"],[28,33,24,24],[28,34,24,32],[28,53,24,24],[28,55,24,53,"result"],[28,61,24,24],[28,63,24,61,"input"],[28,68,24,24],[28,69,24,23],[28,70,24,6],[29,0,25,5],[31,0,26,4],[31,13,26,11,"result"],[31,19,26,4],[32,0,27,3],[32,5,21,2],[34,0,29,2],[34,11,29,9,"XFind"],[34,16,29,2],[35,0,30,1],[35,3,7,25],[35,5,7,0],[37,0,32,0],[37,6,32,4,"_xfind"],[37,12,32,10],[37,15,32,26,"_curry2"],[37,22,32,33],[37,23,32,34],[37,32,32,43,"_xfind"],[37,38,32,34],[37,39,32,50,"f"],[37,40,32,34],[37,42,32,53,"xf"],[37,44,32,34],[37,46,32,57],[38,0,33,2],[38,11,33,9],[38,15,33,13,"XFind"],[38,20,33,9],[38,21,33,19,"f"],[38,22,33,9],[38,24,33,22,"xf"],[38,26,33,9],[38,27,33,2],[39,0,34,1],[39,3,32,33],[39,4,32,0],[41,0,35,0,"module"],[41,2,35,0,"module"],[41,8,35,6],[41,9,35,7,"exports"],[41,16,35,0],[41,19,35,17,"_xfind"],[41,25,35,0]],"functionMap":{"names":["<global>","<anonymous>","XFind","XFind.prototype.transducerResult","XFind.prototype.transducerStep","_xfind"],"mappings":"AAA;yBCM;ECE;GDI;2CEE;GFK;yCGC;GHM;CDG;kCKE;CLE"}},"type":"js/module"}]}