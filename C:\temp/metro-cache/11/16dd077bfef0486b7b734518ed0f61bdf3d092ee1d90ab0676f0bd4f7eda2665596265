{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XFind = function () {\n    function XFind(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.found = false;\n    }\n\n    XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFind.prototype['@@transducer/result'] = function (result) {\n      if (!this.found) {\n        result = this.xf['@@transducer/step'](result, void 0);\n      }\n\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XFind.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f(input)) {\n        this.found = true;\n        result = _reduced(this.xf['@@transducer/step'](result, input));\n      }\n\n      return result;\n    };\n\n    return XFind;\n  }();\n\n  var _xfind = _curry2(function _xfind(f, xf) {\n    return new XFind(f, xf);\n  });\n\n  module.exports = _xfind;\n});","lineCount":42,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_reduced"],[4,14,5,12],[4,17,7,0,"require"],[4,28,7,7],[4,61,5,0],[6,0,9,0],[6,6,9,4,"_xfBase"],[6,13,9,11],[6,16,11,0,"require"],[6,27,11,7],[6,59,9,0],[8,0,13,0],[8,6,13,4,"XFind"],[8,11,13,9],[8,14,15,0],[8,26,15,12],[9,0,16,2],[9,13,16,11,"XFind"],[9,18,16,2],[9,19,16,17,"f"],[9,20,16,2],[9,22,16,20,"xf"],[9,24,16,2],[9,26,16,24],[10,0,17,4],[10,11,17,9,"xf"],[10,13,17,4],[10,16,17,14,"xf"],[10,18,17,4],[11,0,18,4],[11,11,18,9,"f"],[11,12,18,4],[11,15,18,13,"f"],[11,16,18,4],[12,0,19,4],[12,11,19,9,"found"],[12,16,19,4],[12,19,19,17],[12,24,19,4],[13,0,20,3],[15,0,22,2,"XFind"],[15,4,22,2,"XFind"],[15,9,22,7],[15,10,22,8,"prototype"],[15,19,22,2],[15,20,22,18],[15,39,22,2],[15,43,22,41,"_xfBase"],[15,50,22,48],[15,51,22,49,"init"],[15,55,22,2],[17,0,24,2,"XFind"],[17,4,24,2,"XFind"],[17,9,24,7],[17,10,24,8,"prototype"],[17,19,24,2],[17,20,24,18],[17,41,24,2],[17,45,24,43],[17,55,24,53,"result"],[17,61,24,43],[17,63,24,61],[18,0,25,4],[18,10,25,8],[18,11,25,9],[18,16,25,14,"found"],[18,21,25,4],[18,23,25,21],[19,0,26,6,"result"],[19,8,26,6,"result"],[19,14,26,12],[19,17,26,15],[19,22,26,20,"xf"],[19,24,26,15],[19,25,26,23],[19,44,26,15],[19,46,26,44,"result"],[19,52,26,15],[19,54,26,52],[19,59,26,57],[19,60,26,15],[19,61,26,6],[20,0,27,5],[22,0,29,4],[22,13,29,11],[22,18,29,16,"xf"],[22,20,29,11],[22,21,29,19],[22,42,29,11],[22,44,29,42,"result"],[22,50,29,11],[22,51,29,4],[23,0,30,3],[23,5,24,2],[25,0,32,2,"XFind"],[25,4,32,2,"XFind"],[25,9,32,7],[25,10,32,8,"prototype"],[25,19,32,2],[25,20,32,18],[25,39,32,2],[25,43,32,41],[25,53,32,51,"result"],[25,59,32,41],[25,61,32,59,"input"],[25,66,32,41],[25,68,32,66],[26,0,33,4],[26,10,33,8],[26,15,33,13,"f"],[26,16,33,8],[26,17,33,15,"input"],[26,22,33,8],[26,23,33,4],[26,25,33,23],[27,0,34,6],[27,13,34,11,"found"],[27,18,34,6],[27,21,34,19],[27,25,34,6],[28,0,35,6,"result"],[28,8,35,6,"result"],[28,14,35,12],[28,17,35,15,"_reduced"],[28,25,35,23],[28,26,35,24],[28,31,35,29,"xf"],[28,33,35,24],[28,34,35,32],[28,53,35,24],[28,55,35,53,"result"],[28,61,35,24],[28,63,35,61,"input"],[28,68,35,24],[28,69,35,23],[28,70,35,6],[29,0,36,5],[31,0,38,4],[31,13,38,11,"result"],[31,19,38,4],[32,0,39,3],[32,5,32,2],[34,0,41,2],[34,11,41,9,"XFind"],[34,16,41,2],[35,0,42,1],[35,3,15,0],[35,5,13,0],[37,0,44,0],[37,6,44,4,"_xfind"],[37,12,44,10],[37,15,46,0,"_curry2"],[37,22,46,7],[37,23,46,8],[37,32,46,17,"_xfind"],[37,38,46,8],[37,39,46,24,"f"],[37,40,46,8],[37,42,46,27,"xf"],[37,44,46,8],[37,46,46,31],[38,0,47,2],[38,11,47,9],[38,15,47,13,"XFind"],[38,20,47,9],[38,21,47,19,"f"],[38,22,47,9],[38,24,47,22,"xf"],[38,26,47,9],[38,27,47,2],[39,0,48,1],[39,3,46,7],[39,4,44,0],[41,0,50,0,"module"],[41,2,50,0,"module"],[41,8,50,6],[41,9,50,7,"exports"],[41,16,50,0],[41,19,50,17,"_xfind"],[41,25,50,0]],"functionMap":{"names":["<global>","<anonymous>","XFind","XFind.prototype.transducerResult","XFind.prototype.transducerStep","_xfind"],"mappings":"AAA;ACc;ECC;GDI;2CEI;GFM;yCGE;GHO;CDG;QKI;CLE"}},"type":"js/module"}]}