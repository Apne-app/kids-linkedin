{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XTake = function () {\n    function XTake(n, xf) {\n      this.xf = xf;\n      this.n = n;\n      this.i = 0;\n    }\n\n    XTake.prototype['@@transducer/init'] = _xfBase.init;\n    XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n    XTake.prototype['@@transducer/step'] = function (result, input) {\n      this.i += 1;\n      var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n      return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n    };\n\n    return XTake;\n  }();\n\n  var _xtake = _curry2(function _xtake(n, xf) {\n    return new XTake(n, xf);\n  });\n\n  module.exports = _xtake;\n});","lineCount":32,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_reduced"],[4,14,3,12],[4,17,3,28,"require"],[4,28,3,35],[4,61,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XTake"],[8,11,7,9],[8,14,7,25],[8,26,7,37],[9,0,9,2],[9,13,9,11,"XTake"],[9,18,9,2],[9,19,9,17,"n"],[9,20,9,2],[9,22,9,20,"xf"],[9,24,9,2],[9,26,9,24],[10,0,10,4],[10,11,10,9,"xf"],[10,13,10,4],[10,16,10,14,"xf"],[10,18,10,4],[11,0,11,4],[11,11,11,9,"n"],[11,12,11,4],[11,15,11,13,"n"],[11,16,11,4],[12,0,12,4],[12,11,12,9,"i"],[12,12,12,4],[12,15,12,13],[12,16,12,4],[13,0,13,3],[15,0,14,2,"XTake"],[15,4,14,2,"XTake"],[15,9,14,7],[15,10,14,8,"prototype"],[15,19,14,2],[15,20,14,18],[15,39,14,2],[15,43,14,41,"_xfBase"],[15,50,14,48],[15,51,14,49,"init"],[15,55,14,2],[16,0,15,2,"XTake"],[16,4,15,2,"XTake"],[16,9,15,7],[16,10,15,8,"prototype"],[16,19,15,2],[16,20,15,18],[16,41,15,2],[16,45,15,43,"_xfBase"],[16,52,15,50],[16,53,15,51,"result"],[16,59,15,2],[18,0,16,2,"XTake"],[18,4,16,2,"XTake"],[18,9,16,7],[18,10,16,8,"prototype"],[18,19,16,2],[18,20,16,18],[18,39,16,2],[18,43,16,41],[18,53,16,51,"result"],[18,59,16,41],[18,61,16,59,"input"],[18,66,16,41],[18,68,16,66],[19,0,17,4],[19,11,17,9,"i"],[19,12,17,4],[19,16,17,14],[19,17,17,4],[20,0,18,4],[20,10,18,8,"ret"],[20,13,18,11],[20,16,18,14],[20,21,18,19,"n"],[20,22,18,14],[20,27,18,25],[20,28,18,14],[20,31,18,29,"result"],[20,37,18,14],[20,40,18,38],[20,45,18,43,"xf"],[20,47,18,38],[20,48,18,46],[20,67,18,38],[20,69,18,67,"result"],[20,75,18,38],[20,77,18,75,"input"],[20,82,18,38],[20,83,18,4],[21,0,19,4],[21,13,19,11],[21,18,19,16,"n"],[21,19,19,11],[21,23,19,21],[21,24,19,11],[21,28,19,26],[21,33,19,31,"i"],[21,34,19,26],[21,38,19,36],[21,43,19,41,"n"],[21,44,19,11],[21,47,19,45,"_reduced"],[21,55,19,53],[21,56,19,54,"ret"],[21,59,19,53],[21,60,19,11],[21,63,19,61,"ret"],[21,66,19,4],[22,0,20,3],[22,5,16,2],[24,0,22,2],[24,11,22,9,"XTake"],[24,16,22,2],[25,0,23,1],[25,3,7,25],[25,5,7,0],[27,0,25,0],[27,6,25,4,"_xtake"],[27,12,25,10],[27,15,25,26,"_curry2"],[27,22,25,33],[27,23,25,34],[27,32,25,43,"_xtake"],[27,38,25,34],[27,39,25,50,"n"],[27,40,25,34],[27,42,25,53,"xf"],[27,44,25,34],[27,46,25,57],[28,0,26,2],[28,11,26,9],[28,15,26,13,"XTake"],[28,20,26,9],[28,21,26,19,"n"],[28,22,26,9],[28,24,26,22,"xf"],[28,26,26,9],[28,27,26,2],[29,0,27,1],[29,3,25,33],[29,4,25,0],[31,0,28,0,"module"],[31,2,28,0,"module"],[31,8,28,6],[31,9,28,7,"exports"],[31,16,28,0],[31,19,28,17,"_xtake"],[31,25,28,0]],"functionMap":{"names":["<global>","<anonymous>","XTake","XTake.prototype.transducerStep","_xtake"],"mappings":"AAA;yBCM;ECE;GDI;yCEG;GFI;CDG;kCIE;CJE"}},"type":"js/module"}]}