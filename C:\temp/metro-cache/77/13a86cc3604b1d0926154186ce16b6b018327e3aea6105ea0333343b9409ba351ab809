{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XTake = function () {\n    function XTake(n, xf) {\n      this.xf = xf;\n      this.n = n;\n      this.i = 0;\n    }\n\n    XTake.prototype['@@transducer/init'] = _xfBase.init;\n    XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n    XTake.prototype['@@transducer/step'] = function (result, input) {\n      this.i += 1;\n      var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n      return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n    };\n\n    return XTake;\n  }();\n\n  var _xtake = _curry2(function _xtake(n, xf) {\n    return new XTake(n, xf);\n  });\n\n  module.exports = _xtake;\n});","lineCount":32,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_reduced"],[4,14,5,12],[4,17,7,0,"require"],[4,28,7,7],[4,61,5,0],[6,0,9,0],[6,6,9,4,"_xfBase"],[6,13,9,11],[6,16,11,0,"require"],[6,27,11,7],[6,59,9,0],[8,0,13,0],[8,6,13,4,"XTake"],[8,11,13,9],[8,14,15,0],[8,26,15,12],[9,0,16,2],[9,13,16,11,"XTake"],[9,18,16,2],[9,19,16,17,"n"],[9,20,16,2],[9,22,16,20,"xf"],[9,24,16,2],[9,26,16,24],[10,0,17,4],[10,11,17,9,"xf"],[10,13,17,4],[10,16,17,14,"xf"],[10,18,17,4],[11,0,18,4],[11,11,18,9,"n"],[11,12,18,4],[11,15,18,13,"n"],[11,16,18,4],[12,0,19,4],[12,11,19,9,"i"],[12,12,19,4],[12,15,19,13],[12,16,19,4],[13,0,20,3],[15,0,22,2,"XTake"],[15,4,22,2,"XTake"],[15,9,22,7],[15,10,22,8,"prototype"],[15,19,22,2],[15,20,22,18],[15,39,22,2],[15,43,22,41,"_xfBase"],[15,50,22,48],[15,51,22,49,"init"],[15,55,22,2],[16,0,23,2,"XTake"],[16,4,23,2,"XTake"],[16,9,23,7],[16,10,23,8,"prototype"],[16,19,23,2],[16,20,23,18],[16,41,23,2],[16,45,23,43,"_xfBase"],[16,52,23,50],[16,53,23,51,"result"],[16,59,23,2],[18,0,25,2,"XTake"],[18,4,25,2,"XTake"],[18,9,25,7],[18,10,25,8,"prototype"],[18,19,25,2],[18,20,25,18],[18,39,25,2],[18,43,25,41],[18,53,25,51,"result"],[18,59,25,41],[18,61,25,59,"input"],[18,66,25,41],[18,68,25,66],[19,0,26,4],[19,11,26,9,"i"],[19,12,26,4],[19,16,26,14],[19,17,26,4],[20,0,27,4],[20,10,27,8,"ret"],[20,13,27,11],[20,16,27,14],[20,21,27,19,"n"],[20,22,27,14],[20,27,27,25],[20,28,27,14],[20,31,27,29,"result"],[20,37,27,14],[20,40,27,38],[20,45,27,43,"xf"],[20,47,27,38],[20,48,27,46],[20,67,27,38],[20,69,27,67,"result"],[20,75,27,38],[20,77,27,75,"input"],[20,82,27,38],[20,83,27,4],[21,0,28,4],[21,13,28,11],[21,18,28,16,"n"],[21,19,28,11],[21,23,28,21],[21,24,28,11],[21,28,28,26],[21,33,28,31,"i"],[21,34,28,26],[21,38,28,36],[21,43,28,41,"n"],[21,44,28,11],[21,47,28,45,"_reduced"],[21,55,28,53],[21,56,28,54,"ret"],[21,59,28,53],[21,60,28,11],[21,63,28,61,"ret"],[21,66,28,4],[22,0,29,3],[22,5,25,2],[24,0,31,2],[24,11,31,9,"XTake"],[24,16,31,2],[25,0,32,1],[25,3,15,0],[25,5,13,0],[27,0,34,0],[27,6,34,4,"_xtake"],[27,12,34,10],[27,15,36,0,"_curry2"],[27,22,36,7],[27,23,36,8],[27,32,36,17,"_xtake"],[27,38,36,8],[27,39,36,24,"n"],[27,40,36,8],[27,42,36,27,"xf"],[27,44,36,8],[27,46,36,31],[28,0,37,2],[28,11,37,9],[28,15,37,13,"XTake"],[28,20,37,9],[28,21,37,19,"n"],[28,22,37,9],[28,24,37,22,"xf"],[28,26,37,9],[28,27,37,2],[29,0,38,1],[29,3,36,7],[29,4,34,0],[31,0,40,0,"module"],[31,2,40,0,"module"],[31,8,40,6],[31,9,40,7,"exports"],[31,16,40,0],[31,19,40,17,"_xtake"],[31,25,40,0]],"functionMap":{"names":["<global>","<anonymous>","XTake","XTake.prototype.transducerStep","_xtake"],"mappings":"AAA;ACc;ECC;GDI;yCEK;GFI;CDG;QII;CJE"}},"type":"js/module"}]}