{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"react-native/Libraries/Utilities/binaryToBase64","data":{"isAsync":false}},{"name":"./promise","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _binaryToBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"react-native/Libraries/Utilities/binaryToBase64\"));\n\n  var _promise = _$$_REQUIRE(_dependencyMap[2], \"./promise\");\n\n  var CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function btoa(input) {\n    var map;\n    var i = 0;\n    var block = 0;\n    var output = '';\n\n    for (block = 0, i = 0, map = CHARS; input.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n      var charCode = input.charCodeAt(i += 3 / 4);\n\n      if (charCode > 0xff) {\n        throw new Error(\"'RNFirebase.Base64.btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  }\n\n  function atob(input) {\n    var i = 0;\n    var bc = 0;\n    var bs = 0;\n    var buffer;\n    var output = '';\n    var str = input.replace(/[=]+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'RNFirebase.Base64.atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (bc = 0, bs = 0, i = 0; buffer = str.charAt(i++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      buffer = CHARS.indexOf(buffer);\n    }\n\n    return output;\n  }\n\n  function fromData(data) {\n    if (data instanceof Blob) {\n      var fileReader = new FileReader();\n\n      var _promiseDefer = (0, _promise.promiseDefer)(),\n          resolve = _promiseDefer.resolve,\n          reject = _promiseDefer.reject,\n          promise = _promiseDefer.promise;\n\n      fileReader.readAsDataURL(data);\n\n      fileReader.onloadend = function onloadend() {\n        resolve({\n          string: fileReader.result,\n          format: 'data_url'\n        });\n      };\n\n      fileReader.onerror = function onerror(event) {\n        fileReader.abort();\n        reject(event);\n      };\n\n      return promise;\n    }\n\n    if (data instanceof ArrayBuffer || data instanceof Uint8Array) {\n      return Promise.resolve({\n        string: (0, _binaryToBase.default)(data),\n        format: 'base64'\n      });\n    }\n\n    throw new Error(\"'RNFirebase.Base64.fromData' failed: Unknown data type.\");\n  }\n\n  var _default = {\n    btoa: btoa,\n    atob: atob,\n    fromData: fromData\n  };\n  exports.default = _default;\n});","lineCount":95,"map":[[9,0,19,0],[11,0,20,0],[13,0,22,0],[13,6,22,6,"CHARS"],[13,11,22,11],[13,14,22,14],[13,81,22,0],[15,0,27,0],[15,11,27,9,"btoa"],[15,15,27,0],[15,16,27,14,"input"],[15,21,27,0],[15,23,27,21],[16,0,28,2],[16,8,28,6,"map"],[16,11,28,2],[17,0,29,2],[17,8,29,6,"i"],[17,9,29,7],[17,12,29,10],[17,13,29,2],[18,0,30,2],[18,8,30,6,"block"],[18,13,30,11],[18,16,30,14],[18,17,30,2],[19,0,31,2],[19,8,31,6,"output"],[19,14,31,12],[19,17,31,15],[19,19,31,2],[21,0,33,2],[21,9,34,4,"block"],[21,14,34,9],[21,17,34,12],[21,18,34,4],[21,20,34,15,"i"],[21,21,34,16],[21,24,34,19],[21,25,34,4],[21,27,34,22,"map"],[21,30,34,25],[21,33,34,28,"CHARS"],[21,38,33,2],[21,40,35,4,"input"],[21,45,35,9],[21,46,35,10,"charAt"],[21,52,35,4],[21,53,35,17,"i"],[21,54,35,18],[21,57,35,21],[21,58,35,4],[21,64,35,29,"map"],[21,67,35,32],[21,70,35,35],[21,73,35,28],[21,75,35,41,"i"],[21,76,35,42],[21,79,35,45],[21,80,35,4],[21,81,33,2],[21,83,36,4,"output"],[21,89,36,10],[21,93,36,14,"map"],[21,96,36,17],[21,97,36,18,"charAt"],[21,103,36,14],[21,104,36,25],[21,109,36,31,"block"],[21,114,36,36],[21,118,36,41],[21,122,36,46,"i"],[21,123,36,47],[21,126,36,50],[21,127,36,45],[21,130,36,55],[21,131,36,14],[21,132,33,2],[21,134,37,4],[22,0,38,4],[22,10,38,10,"charCode"],[22,18,38,18],[22,21,38,21,"input"],[22,26,38,26],[22,27,38,27,"charCodeAt"],[22,37,38,21],[22,38,38,39,"i"],[22,39,38,40],[22,43,38,44],[22,47,38,48],[22,48,38,21],[22,49,38,4],[24,0,40,4],[24,10,40,8,"charCode"],[24,18,40,16],[24,21,40,19],[24,25,40,4],[24,27,40,25],[25,0,41,6],[25,14,41,12],[25,18,41,16,"Error"],[25,23,41,12],[25,24,42,8],[25,132,41,12],[25,133,41,6],[26,0,44,5],[28,0,46,4,"block"],[28,6,46,4,"block"],[28,11,46,9],[28,14,46,13,"block"],[28,19,46,18],[28,23,46,22],[28,24,46,12],[28,27,46,27,"charCode"],[28,35,46,4],[29,0,47,3],[31,0,49,2],[31,11,49,9,"output"],[31,17,49,2],[32,0,50,1],[34,0,55,0],[34,11,55,9,"atob"],[34,15,55,0],[34,16,55,14,"input"],[34,21,55,0],[34,23,55,21],[35,0,56,2],[35,8,56,6,"i"],[35,9,56,7],[35,12,56,10],[35,13,56,2],[36,0,57,2],[36,8,57,6,"bc"],[36,10,57,8],[36,13,57,11],[36,14,57,2],[37,0,58,2],[37,8,58,6,"bs"],[37,10,58,8],[37,13,58,11],[37,14,58,2],[38,0,59,2],[38,8,59,6,"buffer"],[38,14,59,2],[39,0,60,2],[39,8,60,6,"output"],[39,14,60,12],[39,17,60,15],[39,19,60,2],[40,0,62,2],[40,8,62,8,"str"],[40,11,62,11],[40,14,62,14,"input"],[40,19,62,19],[40,20,62,20,"replace"],[40,27,62,14],[40,28,62,28],[40,35,62,14],[40,37,62,37],[40,39,62,14],[40,40,62,2],[42,0,64,2],[42,8,64,6,"str"],[42,11,64,9],[42,12,64,10,"length"],[42,18,64,6],[42,21,64,19],[42,22,64,6],[42,27,64,25],[42,28,64,2],[42,30,64,28],[43,0,65,4],[43,12,65,10],[43,16,65,14,"Error"],[43,21,65,10],[43,22,66,6],[43,107,65,10],[43,108,65,4],[44,0,68,3],[46,0,70,2],[46,9,71,4,"bc"],[46,11,71,6],[46,14,71,9],[46,15,71,4],[46,17,71,12,"bs"],[46,19,71,14],[46,22,71,17],[46,23,71,4],[46,25,71,20,"i"],[46,26,71,21],[46,29,71,24],[46,30,70,2],[46,32,72,5,"buffer"],[46,38,72,11],[46,41,72,14,"str"],[46,44,72,17],[46,45,72,18,"charAt"],[46,51,72,14],[46,52,72,25,"i"],[46,53,72,26],[46,55,72,14],[46,56,70,2],[46,58,73,4],[46,59,73,5,"buffer"],[46,65,73,4],[46,70,73,17,"bs"],[46,72,73,19],[46,75,73,22,"bc"],[46,77,73,24],[46,80,73,27],[46,81,73,22],[46,84,73,31,"bs"],[46,86,73,33],[46,89,73,36],[46,91,73,31],[46,94,73,41,"buffer"],[46,100,73,22],[46,103,73,50,"buffer"],[46,109,73,16],[46,111,73,59,"bc"],[46,113,73,61],[46,118,73,66],[46,119,73,4],[46,123,74,9,"output"],[46,129,74,15],[46,133,74,19,"String"],[46,139,74,25],[46,140,74,26,"fromCharCode"],[46,152,74,19],[46,153,74,39],[46,159,74,46,"bs"],[46,161,74,48],[46,166,74,54],[46,167,74,55],[46,168,74,54],[46,171,74,59,"bc"],[46,173,74,53],[46,176,74,65],[46,177,74,48],[46,178,74,19],[46,179,73,4],[46,182,75,8],[46,183,70,2],[46,185,76,4],[47,0,77,4,"buffer"],[47,6,77,4,"buffer"],[47,12,77,10],[47,15,77,13,"CHARS"],[47,20,77,18],[47,21,77,19,"indexOf"],[47,28,77,13],[47,29,77,27,"buffer"],[47,35,77,13],[47,36,77,4],[48,0,78,3],[50,0,80,2],[50,11,80,9,"output"],[50,17,80,2],[51,0,81,1],[53,0,86,0],[53,11,86,9,"fromData"],[53,19,86,0],[53,20,86,18,"data"],[53,24,86,0],[53,26,86,24],[54,0,87,2],[54,8,87,6,"data"],[54,12,87,10],[54,24,87,22,"Blob"],[54,28,87,2],[54,30,87,28],[55,0,88,4],[55,10,88,10,"fileReader"],[55,20,88,20],[55,23,88,23],[55,27,88,27,"FileReader"],[55,37,88,23],[55,39,88,4],[57,0,87,28],[57,26,89,41],[57,54,87,28],[58,0,87,28],[58,10,89,12,"resolve"],[58,17,87,28],[58,34,89,12,"resolve"],[58,41,87,28],[59,0,87,28],[59,10,89,21,"reject"],[59,16,87,28],[59,33,89,21,"reject"],[59,39,87,28],[60,0,87,28],[60,10,89,29,"promise"],[60,17,87,28],[60,34,89,29,"promise"],[60,41,87,28],[62,0,91,4,"fileReader"],[62,6,91,4,"fileReader"],[62,16,91,14],[62,17,91,15,"readAsDataURL"],[62,30,91,4],[62,31,91,29,"data"],[62,35,91,4],[64,0,93,4,"fileReader"],[64,6,93,4,"fileReader"],[64,16,93,14],[64,17,93,15,"onloadend"],[64,26,93,4],[64,29,93,27],[64,38,93,36,"onloadend"],[64,47,93,27],[64,50,93,48],[65,0,94,6,"resolve"],[65,8,94,6,"resolve"],[65,15,94,13],[65,16,94,14],[66,0,94,16,"string"],[66,10,94,16,"string"],[66,16,94,22],[66,18,94,24,"fileReader"],[66,28,94,34],[66,29,94,35,"result"],[66,35,94,14],[67,0,94,43,"format"],[67,10,94,43,"format"],[67,16,94,49],[67,18,94,51],[68,0,94,14],[68,9,94,13],[68,10,94,6],[69,0,95,5],[69,7,93,4],[71,0,97,4,"fileReader"],[71,6,97,4,"fileReader"],[71,16,97,14],[71,17,97,15,"onerror"],[71,24,97,4],[71,27,97,25],[71,36,97,34,"onerror"],[71,43,97,25],[71,44,97,42,"event"],[71,49,97,25],[71,51,97,49],[72,0,98,6,"fileReader"],[72,8,98,6,"fileReader"],[72,18,98,16],[72,19,98,17,"abort"],[72,24,98,6],[73,0,99,6,"reject"],[73,8,99,6,"reject"],[73,14,99,12],[73,15,99,13,"event"],[73,20,99,12],[73,21,99,6],[74,0,100,5],[74,7,97,4],[76,0,102,4],[76,13,102,11,"promise"],[76,20,102,4],[77,0,103,3],[79,0,105,2],[79,8,105,6,"data"],[79,12,105,10],[79,24,105,22,"ArrayBuffer"],[79,35,105,6],[79,39,105,37,"data"],[79,43,105,41],[79,55,105,53,"Uint8Array"],[79,65,105,2],[79,67,105,65],[80,0,106,4],[80,13,106,11,"Promise"],[80,20,106,18],[80,21,106,19,"resolve"],[80,28,106,11],[80,29,106,27],[81,0,107,6,"string"],[81,8,107,6,"string"],[81,14,107,12],[81,16,107,14],[81,43,107,29,"data"],[81,47,107,14],[81,48,106,27],[82,0,108,6,"format"],[82,8,108,6,"format"],[82,14,108,12],[82,16,108,14],[83,0,106,27],[83,7,106,11],[83,8,106,4],[84,0,110,3],[86,0,112,2],[86,10,112,8],[86,14,112,12,"Error"],[86,19,112,8],[86,20,112,18],[86,77,112,8],[86,78,112,2],[87,0,113,1],[89,17,115,15],[90,0,116,2,"btoa"],[90,4,116,2,"btoa"],[90,8,116,6],[90,10,116,2,"btoa"],[90,14,115,15],[91,0,117,2,"atob"],[91,4,117,2,"atob"],[91,8,117,6],[91,10,117,2,"atob"],[91,14,115,15],[92,0,118,2,"fromData"],[92,4,118,2,"fromData"],[92,12,118,10],[92,14,118,2,"fromData"],[93,0,115,15],[93,3]],"functionMap":{"names":["<global>","btoa","atob","fromData","onloadend","onerror"],"mappings":"AAA;AC0B;CDuB;AEK;CF0B;AGK;2BCO;KDE;yBEE;KFG;CHa"}},"type":"js/module"}]}