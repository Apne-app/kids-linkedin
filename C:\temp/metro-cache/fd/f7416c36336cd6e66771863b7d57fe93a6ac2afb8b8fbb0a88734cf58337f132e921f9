{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduce","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduce = _$$_REQUIRE(_dependencyMap[1], \"./_reduce\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XDropLastWhile = function () {\n    function XDropLastWhile(fn, xf) {\n      this.f = fn;\n      this.retained = [];\n      this.xf = xf;\n    }\n\n    XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n    XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n      this.retained = null;\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n      return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n    };\n\n    XDropLastWhile.prototype.flush = function (result, input) {\n      result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n      this.retained = [];\n      return this.xf['@@transducer/step'](result, input);\n    };\n\n    XDropLastWhile.prototype.retain = function (result, input) {\n      this.retained.push(input);\n      return result;\n    };\n\n    return XDropLastWhile;\n  }();\n\n  var _xdropLastWhile = _curry2(function _xdropLastWhile(fn, xf) {\n    return new XDropLastWhile(fn, xf);\n  });\n\n  module.exports = _xdropLastWhile;\n});","lineCount":45,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_reduce"],[4,13,3,11],[4,16,3,27,"require"],[4,27,3,34],[4,59,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XDropLastWhile"],[8,20,7,18],[8,23,7,34],[8,35,7,46],[9,0,9,2],[9,13,9,11,"XDropLastWhile"],[9,27,9,2],[9,28,9,26,"fn"],[9,30,9,2],[9,32,9,30,"xf"],[9,34,9,2],[9,36,9,34],[10,0,10,4],[10,11,10,9,"f"],[10,12,10,4],[10,15,10,13,"fn"],[10,17,10,4],[11,0,11,4],[11,11,11,9,"retained"],[11,19,11,4],[11,22,11,20],[11,24,11,4],[12,0,12,4],[12,11,12,9,"xf"],[12,13,12,4],[12,16,12,14,"xf"],[12,18,12,4],[13,0,13,3],[15,0,14,2,"XDropLastWhile"],[15,4,14,2,"XDropLastWhile"],[15,18,14,16],[15,19,14,17,"prototype"],[15,28,14,2],[15,29,14,27],[15,48,14,2],[15,52,14,50,"_xfBase"],[15,59,14,57],[15,60,14,58,"init"],[15,64,14,2],[17,0,15,2,"XDropLastWhile"],[17,4,15,2,"XDropLastWhile"],[17,18,15,16],[17,19,15,17,"prototype"],[17,28,15,2],[17,29,15,27],[17,50,15,2],[17,54,15,52],[17,64,15,62,"result"],[17,70,15,52],[17,72,15,70],[18,0,16,4],[18,11,16,9,"retained"],[18,19,16,4],[18,22,16,20],[18,26,16,4],[19,0,17,4],[19,13,17,11],[19,18,17,16,"xf"],[19,20,17,11],[19,21,17,19],[19,42,17,11],[19,44,17,42,"result"],[19,50,17,11],[19,51,17,4],[20,0,18,3],[20,5,15,2],[22,0,19,2,"XDropLastWhile"],[22,4,19,2,"XDropLastWhile"],[22,18,19,16],[22,19,19,17,"prototype"],[22,28,19,2],[22,29,19,27],[22,48,19,2],[22,52,19,50],[22,62,19,60,"result"],[22,68,19,50],[22,70,19,68,"input"],[22,75,19,50],[22,77,19,75],[23,0,20,4],[23,13,20,11],[23,18,20,16,"f"],[23,19,20,11],[23,20,20,18,"input"],[23,25,20,11],[23,29,20,27],[23,34,20,32,"retain"],[23,40,20,27],[23,41,20,39,"result"],[23,47,20,27],[23,49,20,47,"input"],[23,54,20,27],[23,55,20,11],[23,58,20,56],[23,63,20,61,"flush"],[23,68,20,56],[23,69,20,67,"result"],[23,75,20,56],[23,77,20,75,"input"],[23,82,20,56],[23,83,20,4],[24,0,21,3],[24,5,19,2],[26,0,22,2,"XDropLastWhile"],[26,4,22,2,"XDropLastWhile"],[26,18,22,16],[26,19,22,17,"prototype"],[26,28,22,2],[26,29,22,27,"flush"],[26,34,22,2],[26,37,22,35],[26,47,22,45,"result"],[26,53,22,35],[26,55,22,53,"input"],[26,60,22,35],[26,62,22,60],[27,0,23,4,"result"],[27,6,23,4,"result"],[27,12,23,10],[27,15,23,13,"_reduce"],[27,22,23,20],[27,23,23,21],[27,28,23,26,"xf"],[27,30,23,21],[27,31,23,29],[27,50,23,21],[27,51,23,20],[27,53,23,51,"result"],[27,59,23,20],[27,61,23,59],[27,66,23,64,"retained"],[27,74,23,20],[27,75,23,4],[28,0,24,4],[28,11,24,9,"retained"],[28,19,24,4],[28,22,24,20],[28,24,24,4],[29,0,25,4],[29,13,25,11],[29,18,25,16,"xf"],[29,20,25,11],[29,21,25,19],[29,40,25,11],[29,42,25,40,"result"],[29,48,25,11],[29,50,25,48,"input"],[29,55,25,11],[29,56,25,4],[30,0,26,3],[30,5,22,2],[32,0,27,2,"XDropLastWhile"],[32,4,27,2,"XDropLastWhile"],[32,18,27,16],[32,19,27,17,"prototype"],[32,28,27,2],[32,29,27,27,"retain"],[32,35,27,2],[32,38,27,36],[32,48,27,46,"result"],[32,54,27,36],[32,56,27,54,"input"],[32,61,27,36],[32,63,27,61],[33,0,28,4],[33,11,28,9,"retained"],[33,19,28,4],[33,20,28,18,"push"],[33,24,28,4],[33,25,28,23,"input"],[33,30,28,4],[34,0,29,4],[34,13,29,11,"result"],[34,19,29,4],[35,0,30,3],[35,5,27,2],[37,0,32,2],[37,11,32,9,"XDropLastWhile"],[37,25,32,2],[38,0,33,1],[38,3,7,34],[38,5,7,0],[40,0,35,0],[40,6,35,4,"_xdropLastWhile"],[40,21,35,19],[40,24,35,35,"_curry2"],[40,31,35,42],[40,32,35,43],[40,41,35,52,"_xdropLastWhile"],[40,56,35,43],[40,57,35,68,"fn"],[40,59,35,43],[40,61,35,72,"xf"],[40,63,35,43],[40,65,35,76],[41,0,36,2],[41,11,36,9],[41,15,36,13,"XDropLastWhile"],[41,29,36,9],[41,30,36,28,"fn"],[41,32,36,9],[41,34,36,32,"xf"],[41,36,36,9],[41,37,36,2],[42,0,37,1],[42,3,35,42],[42,4,35,0],[44,0,38,0,"module"],[44,2,38,0,"module"],[44,8,38,6],[44,9,38,7,"exports"],[44,16,38,0],[44,19,38,17,"_xdropLastWhile"],[44,34,38,0]],"functionMap":{"names":["<global>","<anonymous>","XDropLastWhile","XDropLastWhile.prototype.transducerResult","XDropLastWhile.prototype.transducerStep","XDropLastWhile.prototype.flush","XDropLastWhile.prototype.retain","_xdropLastWhile"],"mappings":"AAA;kCCM;ECE;GDI;oDEE;GFG;kDGC;GHE;mCIC;GJI;oCKC;GLG;CDG;2COE;CPE"}},"type":"js/module"}]}