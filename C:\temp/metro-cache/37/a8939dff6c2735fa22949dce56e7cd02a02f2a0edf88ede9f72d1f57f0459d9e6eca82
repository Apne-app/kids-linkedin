{"dependencies":[{"name":"./internal/_arity","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":28}}]}},{"name":"./internal/_curry2","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":29}}]}},{"name":"./head","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":17}}]}},{"name":"./internal/_reduce","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":29}}]}},{"name":"./tail","data":{"isAsync":false,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":17}}]}},{"name":"./identity","data":{"isAsync":false,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _arity = _$$_REQUIRE(_dependencyMap[0], \"./internal/_arity\");\n\n  var _curry2 = _$$_REQUIRE(_dependencyMap[1], \"./internal/_curry2\");\n\n  var head = _$$_REQUIRE(_dependencyMap[2], \"./head\");\n\n  var _reduce = _$$_REQUIRE(_dependencyMap[3], \"./internal/_reduce\");\n\n  var tail = _$$_REQUIRE(_dependencyMap[4], \"./tail\");\n\n  var identity = _$$_REQUIRE(_dependencyMap[5], \"./identity\");\n\n  var pipeWith = _curry2(function pipeWith(xf, list) {\n    if (list.length <= 0) {\n      return identity;\n    }\n\n    var headList = head(list);\n    var tailList = tail(list);\n    return _arity(headList.length, function () {\n      return _reduce(function (result, f) {\n        return xf.call(this, f, result);\n      }, headList.apply(this, arguments), tailList);\n    });\n  });\n\n  module.exports = pipeWith;\n});","lineCount":29,"map":[[2,0,1,0],[2,6,1,4,"_arity"],[2,12,1,10],[2,15,3,0,"require"],[2,26,3,7],[2,66,1,0],[4,0,5,0],[4,6,5,4,"_curry2"],[4,13,5,11],[4,16,7,0,"require"],[4,27,7,7],[4,68,5,0],[6,0,9,0],[6,6,9,4,"head"],[6,10,9,8],[6,13,11,0,"require"],[6,24,11,7],[6,53,9,0],[8,0,13,0],[8,6,13,4,"_reduce"],[8,13,13,11],[8,16,15,0,"require"],[8,27,15,7],[8,68,13,0],[10,0,17,0],[10,6,17,4,"tail"],[10,10,17,8],[10,13,19,0,"require"],[10,24,19,7],[10,53,17,0],[12,0,21,0],[12,6,21,4,"identity"],[12,14,21,12],[12,17,23,0,"require"],[12,28,23,7],[12,61,21,0],[14,0,49,0],[14,6,49,4,"pipeWith"],[14,14,49,12],[14,17,51,0,"_curry2"],[14,24,51,7],[14,25,51,8],[14,34,51,17,"pipeWith"],[14,42,51,8],[14,43,51,26,"xf"],[14,45,51,8],[14,47,51,30,"list"],[14,51,51,8],[14,53,51,36],[15,0,52,2],[15,8,52,6,"list"],[15,12,52,10],[15,13,52,11,"length"],[15,19,52,6],[15,23,52,21],[15,24,52,2],[15,26,52,24],[16,0,53,4],[16,13,53,11,"identity"],[16,21,53,4],[17,0,54,3],[19,0,56,2],[19,8,56,6,"headList"],[19,16,56,14],[19,19,56,17,"head"],[19,23,56,21],[19,24,56,22,"list"],[19,28,56,21],[19,29,56,2],[20,0,57,2],[20,8,57,6,"tailList"],[20,16,57,14],[20,19,57,17,"tail"],[20,23,57,21],[20,24,57,22,"list"],[20,28,57,21],[20,29,57,2],[21,0,58,2],[21,11,58,9,"_arity"],[21,17,58,15],[21,18,58,16,"headList"],[21,26,58,24],[21,27,58,25,"length"],[21,33,58,15],[21,35,58,33],[21,47,58,45],[22,0,59,4],[22,13,59,11,"_reduce"],[22,20,59,18],[22,21,59,19],[22,31,59,29,"result"],[22,37,59,19],[22,39,59,37,"f"],[22,40,59,19],[22,42,59,40],[23,0,60,6],[23,15,60,13,"xf"],[23,17,60,15],[23,18,60,16,"call"],[23,22,60,13],[23,23,60,21],[23,27,60,13],[23,29,60,27,"f"],[23,30,60,13],[23,32,60,30,"result"],[23,38,60,13],[23,39,60,6],[24,0,61,5],[24,7,59,18],[24,9,61,7,"headList"],[24,17,61,15],[24,18,61,16,"apply"],[24,23,61,7],[24,24,61,22],[24,28,61,7],[24,30,61,28,"arguments"],[24,39,61,7],[24,40,59,18],[24,42,61,40,"tailList"],[24,50,59,18],[24,51,59,4],[25,0,62,3],[25,5,58,15],[25,6,58,2],[26,0,63,1],[26,3,51,7],[26,4,49,0],[28,0,65,0,"module"],[28,2,65,0,"module"],[28,8,65,6],[28,9,65,7,"exports"],[28,16,65,0],[28,19,65,17,"pipeWith"],[28,27,65,0]],"functionMap":{"names":["<global>","pipeWith","_arity$argument_1","_reduce$argument_0"],"mappings":"AAA;QCkD;iCCO;mBCC;KDE;GDC;CDC"}},"type":"js/module"}]}