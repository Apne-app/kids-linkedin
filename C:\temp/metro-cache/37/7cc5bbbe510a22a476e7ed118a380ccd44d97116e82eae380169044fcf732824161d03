{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"xmlhttprequest-ssl","data":{"isAsync":false}},{"name":"./polling","data":{"isAsync":false}},{"name":"component-emitter","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}},{"name":"../globalThis","data":{"isAsync":false}},{"name":"debug","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[6], \"xmlhttprequest-ssl\");\n\n  var Polling = _$$_REQUIRE(_dependencyMap[7], \"./polling\");\n\n  var Emitter = _$$_REQUIRE(_dependencyMap[8], \"component-emitter\");\n\n  var _require = _$$_REQUIRE(_dependencyMap[9], \"../util\"),\n      pick = _require.pick;\n\n  var globalThis = _$$_REQUIRE(_dependencyMap[10], \"../globalThis\");\n\n  var debug = _$$_REQUIRE(_dependencyMap[11], \"debug\")(\"engine.io-client:polling-xhr\");\n\n  function empty() {}\n\n  var hasXHR2 = function () {\n    var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[6], \"xmlhttprequest-ssl\");\n\n    var xhr = new XMLHttpRequest({\n      xdomain: false\n    });\n    return null != xhr.responseType;\n  }();\n\n  var XHR = function (_Polling) {\n    \"use strict\";\n\n    _inherits(XHR, _Polling);\n\n    var _super = _createSuper(XHR);\n\n    function XHR(opts) {\n      var _this;\n\n      _classCallCheck(this, XHR);\n\n      _this = _super.call(this, opts);\n\n      if (typeof location !== \"undefined\") {\n        var isSSL = \"https:\" === location.protocol;\n        var port = location.port;\n\n        if (!port) {\n          port = isSSL ? 443 : 80;\n        }\n\n        _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n        _this.xs = opts.secure !== isSSL;\n      }\n\n      var forceBase64 = opts && opts.forceBase64;\n      _this.supportsBinary = hasXHR2 && !forceBase64;\n      return _this;\n    }\n\n    _createClass(XHR, [{\n      key: \"request\",\n      value: function request() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _extends(opts, {\n          xd: this.xd,\n          xs: this.xs\n        }, this.opts);\n\n        return new Request(this.uri(), opts);\n      }\n    }, {\n      key: \"doWrite\",\n      value: function doWrite(data, fn) {\n        var req = this.request({\n          method: \"POST\",\n          data: data\n        });\n        var self = this;\n        req.on(\"success\", fn);\n        req.on(\"error\", function (err) {\n          self.onError(\"xhr post error\", err);\n        });\n      }\n    }, {\n      key: \"doPoll\",\n      value: function doPoll() {\n        debug(\"xhr poll\");\n        var req = this.request();\n        var self = this;\n        req.on(\"data\", function (data) {\n          self.onData(data);\n        });\n        req.on(\"error\", function (err) {\n          self.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n      }\n    }]);\n\n    return XHR;\n  }(Polling);\n\n  var Request = function (_Emitter) {\n    \"use strict\";\n\n    _inherits(Request, _Emitter);\n\n    var _super2 = _createSuper(Request);\n\n    function Request(uri, opts) {\n      var _this2;\n\n      _classCallCheck(this, Request);\n\n      _this2 = _super2.call(this);\n      _this2.opts = opts;\n      _this2.method = opts.method || \"GET\";\n      _this2.uri = uri;\n      _this2.async = false !== opts.async;\n      _this2.data = undefined !== opts.data ? opts.data : null;\n\n      _this2.create();\n\n      return _this2;\n    }\n\n    _createClass(Request, [{\n      key: \"create\",\n      value: function create() {\n        var opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        var xhr = this.xhr = new XMLHttpRequest(opts);\n        var self = this;\n\n        try {\n          debug(\"xhr open %s: %s\", this.method, this.uri);\n          xhr.open(this.method, this.uri, this.async);\n\n          try {\n            if (this.opts.extraHeaders) {\n              xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n              for (var i in this.opts.extraHeaders) {\n                if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                  xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                }\n              }\n            }\n          } catch (e) {}\n\n          if (\"POST\" === this.method) {\n            try {\n              xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n            } catch (e) {}\n          }\n\n          try {\n            xhr.setRequestHeader(\"Accept\", \"*/*\");\n          } catch (e) {}\n\n          if (\"withCredentials\" in xhr) {\n            xhr.withCredentials = this.opts.withCredentials;\n          }\n\n          if (this.opts.requestTimeout) {\n            xhr.timeout = this.opts.requestTimeout;\n          }\n\n          if (this.hasXDR()) {\n            xhr.onload = function () {\n              self.onLoad();\n            };\n\n            xhr.onerror = function () {\n              self.onError(xhr.responseText);\n            };\n          } else {\n            xhr.onreadystatechange = function () {\n              if (4 !== xhr.readyState) return;\n\n              if (200 === xhr.status || 1223 === xhr.status) {\n                self.onLoad();\n              } else {\n                setTimeout(function () {\n                  self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                }, 0);\n              }\n            };\n          }\n\n          debug(\"xhr data %s\", this.data);\n          xhr.send(this.data);\n        } catch (e) {\n          setTimeout(function () {\n            self.onError(e);\n          }, 0);\n          return;\n        }\n\n        if (typeof document !== \"undefined\") {\n          this.index = Request.requestsCount++;\n          Request.requests[this.index] = this;\n        }\n      }\n    }, {\n      key: \"onSuccess\",\n      value: function onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n      }\n    }, {\n      key: \"onData\",\n      value: function onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n      }\n    }, {\n      key: \"onError\",\n      value: function onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n      }\n    }, {\n      key: \"cleanup\",\n      value: function cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n          return;\n        }\n\n        if (this.hasXDR()) {\n          this.xhr.onload = this.xhr.onerror = empty;\n        } else {\n          this.xhr.onreadystatechange = empty;\n        }\n\n        if (fromError) {\n          try {\n            this.xhr.abort();\n          } catch (e) {}\n        }\n\n        if (typeof document !== \"undefined\") {\n          delete Request.requests[this.index];\n        }\n\n        this.xhr = null;\n      }\n    }, {\n      key: \"onLoad\",\n      value: function onLoad() {\n        var data = this.xhr.responseText;\n\n        if (data !== null) {\n          this.onData(data);\n        }\n      }\n    }, {\n      key: \"hasXDR\",\n      value: function hasXDR() {\n        return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        this.cleanup();\n      }\n    }]);\n\n    return Request;\n  }(Emitter);\n\n  Request.requestsCount = 0;\n  Request.requests = {};\n\n  if (typeof document !== \"undefined\") {\n    if (typeof attachEvent === \"function\") {\n      attachEvent(\"onunload\", unloadHandler);\n    } else if (typeof addEventListener === \"function\") {\n      var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n      addEventListener(terminationEvent, unloadHandler, false);\n    }\n  }\n\n  function unloadHandler() {\n    for (var i in Request.requests) {\n      if (Request.requests.hasOwnProperty(i)) {\n        Request.requests[i].abort();\n      }\n    }\n  }\n\n  module.exports = XHR;\n  module.exports.Request = Request;\n});","lineCount":309,"map":[[18,0,3,0],[18,6,3,6,"XMLHttpRequest"],[18,20,3,20],[18,23,3,23,"require"],[18,34,3,30],[18,75,3,0],[20,0,4,0],[20,6,4,6,"Polling"],[20,13,4,13],[20,16,4,16,"require"],[20,27,4,23],[20,59,4,0],[22,0,5,0],[22,6,5,6,"Emitter"],[22,13,5,13],[22,16,5,16,"require"],[22,27,5,23],[22,67,5,0],[24,17,6,17,"require"],[24,28,6,24],[24,58],[25,6,6,8,"pick"],[25,10],[25,22,6,8,"pick"],[25,26],[27,0,7,0],[27,6,7,6,"globalThis"],[27,16,7,16],[27,19,7,19,"require"],[27,30,7,26],[27,67,7,0],[29,0,9,0],[29,6,9,6,"debug"],[29,11,9,11],[29,14,9,14,"require"],[29,25,9,21],[29,54,9,14],[29,55,9,31],[29,85,9,14],[29,86,9,0],[31,0,15,0],[31,11,15,9,"empty"],[31,16,15,0],[31,19,15,17],[31,20,15,19],[33,0,17,0],[33,6,17,6,"hasXHR2"],[33,13,17,13],[33,16,17,17],[33,28,17,28],[34,0,18,2],[34,8,18,8,"XMLHttpRequest"],[34,22,18,22],[34,25,18,25,"require"],[34,36,18,32],[34,77,18,2],[36,0,19,2],[36,8,19,8,"xhr"],[36,11,19,11],[36,14,19,14],[36,18,19,18,"XMLHttpRequest"],[36,32,19,14],[36,33,19,33],[37,0,19,35,"xdomain"],[37,6,19,35,"xdomain"],[37,13,19,42],[37,15,19,44],[38,0,19,33],[38,5,19,14],[38,6,19,2],[39,0,20,2],[39,11,20,9],[39,19,20,17,"xhr"],[39,22,20,20],[39,23,20,21,"responseType"],[39,35,20,2],[40,0,21,1],[40,3,17,16],[40,5,17,0],[42,6,23,6,"XHR"],[42,9],[49,0,30,2],[49,17,30,14,"opts"],[49,21,30,2],[49,23,30,20],[50,0,30,20],[52,0,30,20],[54,0,31,4],[54,32,31,10,"opts"],[54,36,31,4],[56,0,33,4],[56,10,33,8],[56,17,33,15,"location"],[56,25,33,8],[56,30,33,28],[56,41,33,4],[56,43,33,41],[57,0,34,6],[57,12,34,12,"isSSL"],[57,17,34,17],[57,20,34,20],[57,33,34,33,"location"],[57,41,34,41],[57,42,34,42,"protocol"],[57,50,34,6],[58,0,35,6],[58,12,35,10,"port"],[58,16,35,14],[58,19,35,17,"location"],[58,27,35,25],[58,28,35,26,"port"],[58,32,35,6],[60,0,38,6],[60,12,38,10],[60,13,38,11,"port"],[60,17,38,6],[60,19,38,17],[61,0,39,8,"port"],[61,10,39,8,"port"],[61,14,39,12],[61,17,39,15,"isSSL"],[61,22,39,20],[61,25,39,23],[61,28,39,20],[61,31,39,29],[61,33,39,8],[62,0,40,7],[64,0,42,6],[64,14,42,11,"xd"],[64,16,42,6],[64,19,43,9],[64,26,43,16,"location"],[64,34,43,9],[64,39,43,29],[64,50,43,9],[64,54,44,10,"opts"],[64,58,44,14],[64,59,44,15,"hostname"],[64,67,44,10],[64,72,44,28,"location"],[64,80,44,36],[64,81,44,37,"hostname"],[64,89,43,8],[64,93,45,8,"port"],[64,97,45,12],[64,102,45,17,"opts"],[64,106,45,21],[64,107,45,22,"port"],[64,111,42,6],[65,0,46,6],[65,14,46,11,"xs"],[65,16,46,6],[65,19,46,16,"opts"],[65,23,46,20],[65,24,46,21,"secure"],[65,30,46,16],[65,35,46,32,"isSSL"],[65,40,46,6],[66,0,47,5],[68,0,51,4],[68,10,51,10,"forceBase64"],[68,21,51,21],[68,24,51,24,"opts"],[68,28,51,28],[68,32,51,32,"opts"],[68,36,51,36],[68,37,51,37,"forceBase64"],[68,48,51,4],[69,0,52,4],[69,12,52,9,"supportsBinary"],[69,26,52,4],[69,29,52,26,"hasXHR2"],[69,36,52,33],[69,40,52,37],[69,41,52,38,"forceBase64"],[69,52,52,4],[70,0,30,20],[71,0,53,3],[75,32,61,21],[76,0,61,21],[76,12,61,10,"opts"],[76,16,61,21],[76,87,61,17],[76,89,61,21],[78,0,62,4],[78,17,62,18,"opts"],[78,21,62,4],[78,23,62,24],[79,0,62,26,"xd"],[79,10,62,26,"xd"],[79,12,62,28],[79,14,62,30],[79,19,62,35,"xd"],[79,21,62,24],[80,0,62,39,"xs"],[80,10,62,39,"xs"],[80,12,62,41],[80,14,62,43],[80,19,62,48,"xs"],[81,0,62,24],[81,9,62,4],[81,11,62,54],[81,16,62,59,"opts"],[81,20,62,4],[83,0,63,4],[83,15,63,11],[83,19,63,15,"Request"],[83,26,63,11],[83,27,63,23],[83,32,63,28,"uri"],[83,35,63,23],[83,37,63,11],[83,39,63,35,"opts"],[83,43,63,11],[83,44,63,4],[84,0,64,3],[87,30,73,10,"data"],[87,34],[87,36,73,16,"fn"],[87,38],[87,40,73,20],[88,0,74,4],[88,12,74,10,"req"],[88,15,74,13],[88,18,74,16],[88,23,74,21,"request"],[88,30,74,16],[88,31,74,29],[89,0,75,6,"method"],[89,10,75,6,"method"],[89,16,75,12],[89,18,75,14],[89,24,74,29],[90,0,76,6,"data"],[90,10,76,6,"data"],[90,14,76,10],[90,16,76,12,"data"],[91,0,74,29],[91,9,74,16],[91,10,74,4],[92,0,78,4],[92,12,78,10,"self"],[92,16,78,14],[92,19,78,17],[92,23,78,4],[93,0,79,4,"req"],[93,8,79,4,"req"],[93,11,79,7],[93,12,79,8,"on"],[93,14,79,4],[93,15,79,11],[93,24,79,4],[93,26,79,22,"fn"],[93,28,79,4],[94,0,80,4,"req"],[94,8,80,4,"req"],[94,11,80,7],[94,12,80,8,"on"],[94,14,80,4],[94,15,80,11],[94,22,80,4],[94,24,80,20],[94,34,80,29,"err"],[94,37,80,20],[94,39,80,34],[95,0,81,6,"self"],[95,10,81,6,"self"],[95,14,81,10],[95,15,81,11,"onError"],[95,22,81,6],[95,23,81,19],[95,39,81,6],[95,41,81,37,"err"],[95,44,81,6],[96,0,82,5],[96,9,80,4],[97,0,83,3],[100,31,90,11],[101,0,91,4,"debug"],[101,8,91,4,"debug"],[101,13,91,9],[101,14,91,10],[101,24,91,9],[101,25,91,4],[102,0,92,4],[102,12,92,10,"req"],[102,15,92,13],[102,18,92,16],[102,23,92,21,"request"],[102,30,92,16],[102,32,92,4],[103,0,93,4],[103,12,93,10,"self"],[103,16,93,14],[103,19,93,17],[103,23,93,4],[104,0,94,4,"req"],[104,8,94,4,"req"],[104,11,94,7],[104,12,94,8,"on"],[104,14,94,4],[104,15,94,11],[104,21,94,4],[104,23,94,19],[104,33,94,28,"data"],[104,37,94,19],[104,39,94,34],[105,0,95,6,"self"],[105,10,95,6,"self"],[105,14,95,10],[105,15,95,11,"onData"],[105,21,95,6],[105,22,95,18,"data"],[105,26,95,6],[106,0,96,5],[106,9,94,4],[107,0,97,4,"req"],[107,8,97,4,"req"],[107,11,97,7],[107,12,97,8,"on"],[107,14,97,4],[107,15,97,11],[107,22,97,4],[107,24,97,20],[107,34,97,29,"err"],[107,37,97,20],[107,39,97,34],[108,0,98,6,"self"],[108,10,98,6,"self"],[108,14,98,10],[108,15,98,11,"onError"],[108,22,98,6],[108,23,98,19],[108,39,98,6],[108,41,98,37,"err"],[108,44,98,6],[109,0,99,5],[109,9,97,4],[110,0,100,4],[110,13,100,9,"pollXhr"],[110,20,100,4],[110,23,100,19,"req"],[110,26,100,4],[111,0,101,3],[115,4,23,18,"Polling"],[115,11],[117,6,104,6,"Request"],[117,13],[124,0,111,2],[124,21,111,14,"uri"],[124,24,111,2],[124,26,111,19,"opts"],[124,30,111,2],[124,32,111,25],[125,0,111,25],[127,0,111,25],[129,0,112,4],[130,0,113,4],[130,13,113,9,"opts"],[130,17,113,4],[130,20,113,16,"opts"],[130,24,113,4],[131,0,115,4],[131,13,115,9,"method"],[131,19,115,4],[131,22,115,18,"opts"],[131,26,115,22],[131,27,115,23,"method"],[131,33,115,18],[131,37,115,33],[131,42,115,4],[132,0,116,4],[132,13,116,9,"uri"],[132,16,116,4],[132,19,116,15,"uri"],[132,22,116,4],[133,0,117,4],[133,13,117,9,"async"],[133,18,117,4],[133,21,117,17],[133,31,117,27,"opts"],[133,35,117,31],[133,36,117,32,"async"],[133,41,117,4],[134,0,118,4],[134,13,118,9,"data"],[134,17,118,4],[134,20,118,16,"undefined"],[134,29,118,25],[134,34,118,30,"opts"],[134,38,118,34],[134,39,118,35,"data"],[134,43,118,16],[134,46,118,42,"opts"],[134,50,118,46],[134,51,118,47,"data"],[134,55,118,16],[134,58,118,54],[134,62,118,4],[136,0,120,4],[136,13,120,9,"create"],[136,19,120,4],[138,0,111,25],[139,0,121,3],[143,31,128,11],[144,0,129,4],[144,12,129,10,"opts"],[144,16,129,14],[144,19,129,17,"pick"],[144,23,129,21],[144,24,130,6],[144,29,130,11,"opts"],[144,33,129,21],[144,35,131,6],[144,42,129,21],[144,44,132,6],[144,56,129,21],[144,58,133,6],[144,63,129,21],[144,65,134,6],[144,70,129,21],[144,72,135,6],[144,84,129,21],[144,86,136,6],[144,92,129,21],[144,94,137,6],[144,98,129,21],[144,100,138,6],[144,109,129,21],[144,111,139,6],[144,131,129,21],[144,132,129,4],[145,0,141,4,"opts"],[145,8,141,4,"opts"],[145,12,141,8],[145,13,141,9,"xdomain"],[145,20,141,4],[145,23,141,19],[145,24,141,20],[145,25,141,21],[145,30,141,26,"opts"],[145,34,141,21],[145,35,141,31,"xd"],[145,37,141,4],[146,0,142,4,"opts"],[146,8,142,4,"opts"],[146,12,142,8],[146,13,142,9,"xscheme"],[146,20,142,4],[146,23,142,19],[146,24,142,20],[146,25,142,21],[146,30,142,26,"opts"],[146,34,142,21],[146,35,142,31,"xs"],[146,37,142,4],[147,0,144,4],[147,12,144,10,"xhr"],[147,15,144,13],[147,18,144,17],[147,23,144,22,"xhr"],[147,26,144,17],[147,29,144,28],[147,33,144,32,"XMLHttpRequest"],[147,47,144,28],[147,48,144,47,"opts"],[147,52,144,28],[147,53,144,4],[148,0,145,4],[148,12,145,10,"self"],[148,16,145,14],[148,19,145,17],[148,23,145,4],[150,0,147,4],[150,12,147,8],[151,0,148,6,"debug"],[151,10,148,6,"debug"],[151,15,148,11],[151,16,148,12],[151,33,148,11],[151,35,148,31],[151,40,148,36,"method"],[151,46,148,11],[151,48,148,44],[151,53,148,49,"uri"],[151,56,148,11],[151,57,148,6],[152,0,149,6,"xhr"],[152,10,149,6,"xhr"],[152,13,149,9],[152,14,149,10,"open"],[152,18,149,6],[152,19,149,15],[152,24,149,20,"method"],[152,30,149,6],[152,32,149,28],[152,37,149,33,"uri"],[152,40,149,6],[152,42,149,38],[152,47,149,43,"async"],[152,52,149,6],[154,0,150,6],[154,14,150,10],[155,0,151,8],[155,16,151,12],[155,21,151,17,"opts"],[155,25,151,12],[155,26,151,22,"extraHeaders"],[155,38,151,8],[155,40,151,36],[156,0,152,10,"xhr"],[156,14,152,10,"xhr"],[156,17,152,13],[156,18,152,14,"setDisableHeaderCheck"],[156,39,152,10],[156,43,152,39,"xhr"],[156,46,152,42],[156,47,152,43,"setDisableHeaderCheck"],[156,68,152,39],[156,69,152,65],[156,73,152,39],[156,74,152,10],[158,0,153,10],[158,19,153,15],[158,23,153,19,"i"],[158,24,153,10],[158,28,153,24],[158,33,153,29,"opts"],[158,37,153,24],[158,38,153,34,"extraHeaders"],[158,50,153,10],[158,52,153,48],[159,0,154,12],[159,20,154,16],[159,25,154,21,"opts"],[159,29,154,16],[159,30,154,26,"extraHeaders"],[159,42,154,16],[159,43,154,39,"hasOwnProperty"],[159,57,154,16],[159,58,154,54,"i"],[159,59,154,16],[159,60,154,12],[159,62,154,58],[160,0,155,14,"xhr"],[160,18,155,14,"xhr"],[160,21,155,17],[160,22,155,18,"setRequestHeader"],[160,38,155,14],[160,39,155,35,"i"],[160,40,155,14],[160,42,155,38],[160,47,155,43,"opts"],[160,51,155,38],[160,52,155,48,"extraHeaders"],[160,64,155,38],[160,65,155,61,"i"],[160,66,155,38],[160,67,155,14],[161,0,156,13],[162,0,157,11],[163,0,158,9],[164,0,159,7],[164,11,150,6],[164,12,159,8],[164,19,159,15,"e"],[164,20,159,8],[164,22,159,18],[164,23,159,20],[166,0,161,6],[166,14,161,10],[166,25,161,21],[166,30,161,26,"method"],[166,36,161,6],[166,38,161,34],[167,0,162,8],[167,16,162,12],[168,0,163,10,"xhr"],[168,14,163,10,"xhr"],[168,17,163,13],[168,18,163,14,"setRequestHeader"],[168,34,163,10],[168,35,163,31],[168,49,163,10],[168,51,163,47],[168,77,163,10],[169,0,164,9],[169,13,162,8],[169,14,164,10],[169,21,164,17,"e"],[169,22,164,10],[169,24,164,20],[169,25,164,22],[170,0,165,7],[172,0,167,6],[172,14,167,10],[173,0,168,8,"xhr"],[173,12,168,8,"xhr"],[173,15,168,11],[173,16,168,12,"setRequestHeader"],[173,32,168,8],[173,33,168,29],[173,41,168,8],[173,43,168,39],[173,48,168,8],[174,0,169,7],[174,11,167,6],[174,12,169,8],[174,19,169,15,"e"],[174,20,169,8],[174,22,169,18],[174,23,169,20],[176,0,172,6],[176,14,172,10],[176,35,172,31,"xhr"],[176,38,172,6],[176,40,172,36],[177,0,173,8,"xhr"],[177,12,173,8,"xhr"],[177,15,173,11],[177,16,173,12,"withCredentials"],[177,31,173,8],[177,34,173,30],[177,39,173,35,"opts"],[177,43,173,30],[177,44,173,40,"withCredentials"],[177,59,173,8],[178,0,174,7],[180,0,176,6],[180,14,176,10],[180,19,176,15,"opts"],[180,23,176,10],[180,24,176,20,"requestTimeout"],[180,38,176,6],[180,40,176,36],[181,0,177,8,"xhr"],[181,12,177,8,"xhr"],[181,15,177,11],[181,16,177,12,"timeout"],[181,23,177,8],[181,26,177,22],[181,31,177,27,"opts"],[181,35,177,22],[181,36,177,32,"requestTimeout"],[181,50,177,8],[182,0,178,7],[184,0,180,6],[184,14,180,10],[184,19,180,15,"hasXDR"],[184,25,180,10],[184,27,180,6],[184,29,180,25],[185,0,181,8,"xhr"],[185,12,181,8,"xhr"],[185,15,181,11],[185,16,181,12,"onload"],[185,22,181,8],[185,25,181,21],[185,37,181,32],[186,0,182,10,"self"],[186,14,182,10,"self"],[186,18,182,14],[186,19,182,15,"onLoad"],[186,25,182,10],[187,0,183,9],[187,13,181,8],[189,0,184,8,"xhr"],[189,12,184,8,"xhr"],[189,15,184,11],[189,16,184,12,"onerror"],[189,23,184,8],[189,26,184,22],[189,38,184,33],[190,0,185,10,"self"],[190,14,185,10,"self"],[190,18,185,14],[190,19,185,15,"onError"],[190,26,185,10],[190,27,185,23,"xhr"],[190,30,185,26],[190,31,185,27,"responseText"],[190,43,185,10],[191,0,186,9],[191,13,184,8],[192,0,187,7],[192,11,180,6],[192,17,187,13],[193,0,188,8,"xhr"],[193,12,188,8,"xhr"],[193,15,188,11],[193,16,188,12,"onreadystatechange"],[193,34,188,8],[193,37,188,33],[193,49,188,44],[194,0,189,10],[194,18,189,14],[194,24,189,20,"xhr"],[194,27,189,23],[194,28,189,24,"readyState"],[194,38,189,10],[194,40,189,36],[196,0,190,10],[196,18,190,14],[196,26,190,22,"xhr"],[196,29,190,25],[196,30,190,26,"status"],[196,36,190,14],[196,40,190,36],[196,49,190,45,"xhr"],[196,52,190,48],[196,53,190,49,"status"],[196,59,190,10],[196,61,190,57],[197,0,191,12,"self"],[197,16,191,12,"self"],[197,20,191,16],[197,21,191,17,"onLoad"],[197,27,191,12],[198,0,192,11],[198,15,190,10],[198,21,192,17],[199,0,195,12,"setTimeout"],[199,16,195,12,"setTimeout"],[199,26,195,22],[199,27,195,23],[199,39,195,34],[200,0,196,14,"self"],[200,18,196,14,"self"],[200,22,196,18],[200,23,196,19,"onError"],[200,30,196,14],[200,31,196,27],[200,38,196,34,"xhr"],[200,41,196,37],[200,42,196,38,"status"],[200,48,196,27],[200,53,196,49],[200,61,196,27],[200,64,196,60,"xhr"],[200,67,196,63],[200,68,196,64,"status"],[200,74,196,27],[200,77,196,73],[200,78,196,14],[201,0,197,13],[201,17,195,22],[201,19,197,15],[201,20,195,22],[201,21,195,12],[202,0,198,11],[203,0,199,9],[203,13,188,8],[204,0,200,7],[206,0,202,6,"debug"],[206,10,202,6,"debug"],[206,15,202,11],[206,16,202,12],[206,29,202,11],[206,31,202,27],[206,36,202,32,"data"],[206,40,202,11],[206,41,202,6],[207,0,203,6,"xhr"],[207,10,203,6,"xhr"],[207,13,203,9],[207,14,203,10,"send"],[207,18,203,6],[207,19,203,15],[207,24,203,20,"data"],[207,28,203,6],[208,0,204,5],[208,9,147,4],[208,10,204,6],[208,17,204,13,"e"],[208,18,204,6],[208,20,204,16],[209,0,208,6,"setTimeout"],[209,10,208,6,"setTimeout"],[209,20,208,16],[209,21,208,17],[209,33,208,28],[210,0,209,8,"self"],[210,12,209,8,"self"],[210,16,209,12],[210,17,209,13,"onError"],[210,24,209,8],[210,25,209,21,"e"],[210,26,209,8],[211,0,210,7],[211,11,208,16],[211,13,210,9],[211,14,208,16],[211,15,208,6],[212,0,211,6],[213,0,212,5],[215,0,214,4],[215,12,214,8],[215,19,214,15,"document"],[215,27,214,8],[215,32,214,28],[215,43,214,4],[215,45,214,41],[216,0,215,6],[216,15,215,11,"index"],[216,20,215,6],[216,23,215,19,"Request"],[216,30,215,26],[216,31,215,27,"requestsCount"],[216,44,215,19],[216,46,215,6],[217,0,216,6,"Request"],[217,10,216,6,"Request"],[217,17,216,13],[217,18,216,14,"requests"],[217,26,216,6],[217,27,216,23],[217,32,216,28,"index"],[217,37,216,6],[217,41,216,37],[217,45,216,6],[218,0,217,5],[219,0,218,3],[222,34,225,14],[223,0,226,4],[223,13,226,9,"emit"],[223,17,226,4],[223,18,226,14],[223,27,226,4],[224,0,227,4],[224,13,227,9,"cleanup"],[224,20,227,4],[225,0,228,3],[228,29,235,9,"data"],[228,33],[228,35,235,15],[229,0,236,4],[229,13,236,9,"emit"],[229,17,236,4],[229,18,236,14],[229,24,236,4],[229,26,236,22,"data"],[229,30,236,4],[230,0,237,4],[230,13,237,9,"onSuccess"],[230,22,237,4],[231,0,238,3],[234,30,245,10,"err"],[234,33],[234,35,245,15],[235,0,246,4],[235,13,246,9,"emit"],[235,17,246,4],[235,18,246,14],[235,25,246,4],[235,27,246,23,"err"],[235,30,246,4],[236,0,247,4],[236,13,247,9,"cleanup"],[236,20,247,4],[236,21,247,17],[236,25,247,4],[237,0,248,3],[240,30,255,10,"fromError"],[240,39],[240,41,255,21],[241,0,256,4],[241,12,256,8],[241,28,256,24],[241,35,256,31],[241,40,256,36,"xhr"],[241,43,256,8],[241,47,256,43],[241,56,256,52],[241,61,256,57,"xhr"],[241,64,256,4],[241,66,256,62],[242,0,257,6],[243,0,258,5],[245,0,260,4],[245,12,260,8],[245,17,260,13,"hasXDR"],[245,23,260,8],[245,25,260,4],[245,27,260,23],[246,0,261,6],[246,15,261,11,"xhr"],[246,18,261,6],[246,19,261,15,"onload"],[246,25,261,6],[246,28,261,24],[246,33,261,29,"xhr"],[246,36,261,24],[246,37,261,33,"onerror"],[246,44,261,24],[246,47,261,43,"empty"],[246,52,261,6],[247,0,262,5],[247,9,260,4],[247,15,262,11],[248,0,263,6],[248,15,263,11,"xhr"],[248,18,263,6],[248,19,263,15,"onreadystatechange"],[248,37,263,6],[248,40,263,36,"empty"],[248,45,263,6],[249,0,264,5],[251,0,266,4],[251,12,266,8,"fromError"],[251,21,266,4],[251,23,266,19],[252,0,267,6],[252,14,267,10],[253,0,268,8],[253,17,268,13,"xhr"],[253,20,268,8],[253,21,268,17,"abort"],[253,26,268,8],[254,0,269,7],[254,11,267,6],[254,12,269,8],[254,19,269,15,"e"],[254,20,269,8],[254,22,269,18],[254,23,269,20],[255,0,270,5],[257,0,272,4],[257,12,272,8],[257,19,272,15,"document"],[257,27,272,8],[257,32,272,28],[257,43,272,4],[257,45,272,41],[258,0,273,6],[258,17,273,13,"Request"],[258,24,273,20],[258,25,273,21,"requests"],[258,33,273,13],[258,34,273,30],[258,39,273,35,"index"],[258,44,273,13],[258,45,273,6],[259,0,274,5],[261,0,276,4],[261,13,276,9,"xhr"],[261,16,276,4],[261,19,276,15],[261,23,276,4],[262,0,277,3],[265,31,284,11],[266,0,285,4],[266,12,285,10,"data"],[266,16,285,14],[266,19,285,17],[266,24,285,22,"xhr"],[266,27,285,17],[266,28,285,26,"responseText"],[266,40,285,4],[268,0,286,4],[268,12,286,8,"data"],[268,16,286,12],[268,21,286,17],[268,25,286,4],[268,27,286,23],[269,0,287,6],[269,15,287,11,"onData"],[269,21,287,6],[269,22,287,18,"data"],[269,26,287,6],[270,0,288,5],[271,0,289,3],[274,31,296,11],[275,0,297,4],[275,15,297,11],[275,22,297,18,"XDomainRequest"],[275,36,297,11],[275,41,297,37],[275,52,297,11],[275,56,297,52],[275,57,297,53],[275,62,297,58,"xs"],[275,64,297,11],[275,68,297,64],[275,73,297,69,"enablesXDR"],[275,83,297,4],[276,0,298,3],[279,30,305,10],[280,0,306,4],[280,13,306,9,"cleanup"],[280,20,306,4],[281,0,307,3],[285,4,104,22,"Emitter"],[285,11],[287,0,316,0,"Request"],[287,2,316,0,"Request"],[287,9,316,7],[287,10,316,8,"requestsCount"],[287,23,316,0],[287,26,316,24],[287,27,316,0],[288,0,317,0,"Request"],[288,2,317,0,"Request"],[288,9,317,7],[288,10,317,8,"requests"],[288,18,317,0],[288,21,317,19],[288,23,317,0],[290,0,319,0],[290,6,319,4],[290,13,319,11,"document"],[290,21,319,4],[290,26,319,24],[290,37,319,0],[290,39,319,37],[291,0,320,2],[291,8,320,6],[291,15,320,13,"attachEvent"],[291,26,320,6],[291,31,320,29],[291,41,320,2],[291,43,320,41],[292,0,321,4,"attachEvent"],[292,6,321,4,"attachEvent"],[292,17,321,15],[292,18,321,16],[292,28,321,15],[292,30,321,28,"unloadHandler"],[292,43,321,15],[292,44,321,4],[293,0,322,3],[293,5,320,2],[293,11,322,9],[293,15,322,13],[293,22,322,20,"addEventListener"],[293,38,322,13],[293,43,322,41],[293,53,322,9],[293,55,322,53],[294,0,323,4],[294,10,323,10,"terminationEvent"],[294,26,323,26],[294,29,323,29],[294,45,323,45,"globalThis"],[294,55,323,29],[294,58,323,58],[294,68,323,29],[294,71,323,71],[294,79,323,4],[295,0,324,4,"addEventListener"],[295,6,324,4,"addEventListener"],[295,22,324,20],[295,23,324,21,"terminationEvent"],[295,39,324,20],[295,41,324,39,"unloadHandler"],[295,54,324,20],[295,56,324,54],[295,61,324,20],[295,62,324,4],[296,0,325,3],[297,0,326,1],[299,0,328,0],[299,11,328,9,"unloadHandler"],[299,24,328,0],[299,27,328,25],[300,0,329,2],[300,9,329,7],[300,13,329,11,"i"],[300,14,329,2],[300,18,329,16,"Request"],[300,25,329,23],[300,26,329,24,"requests"],[300,34,329,2],[300,36,329,34],[301,0,330,4],[301,10,330,8,"Request"],[301,17,330,15],[301,18,330,16,"requests"],[301,26,330,8],[301,27,330,25,"hasOwnProperty"],[301,41,330,8],[301,42,330,40,"i"],[301,43,330,8],[301,44,330,4],[301,46,330,44],[302,0,331,6,"Request"],[302,8,331,6,"Request"],[302,15,331,13],[302,16,331,14,"requests"],[302,24,331,6],[302,25,331,23,"i"],[302,26,331,6],[302,28,331,26,"abort"],[302,33,331,6],[303,0,332,5],[304,0,333,3],[305,0,334,1],[307,0,336,0,"module"],[307,2,336,0,"module"],[307,8,336,6],[307,9,336,7,"exports"],[307,16,336,0],[307,19,336,17,"XHR"],[307,22,336,0],[308,0,337,0,"module"],[308,2,337,0,"module"],[308,8,337,6],[308,9,337,7,"exports"],[308,16,337,0],[308,17,337,15,"Request"],[308,24,337,0],[308,27,337,25,"Request"],[308,34,337,0]],"functionMap":{"names":["<global>","empty","<anonymous>","XHR","XHR#constructor","XHR#request","XHR#doWrite","req.on$argument_1","XHR#doPoll","Request","Request#constructor","Request#create","xhr.onload","xhr.onerror","xhr.onreadystatechange","setTimeout$argument_0","Request#onSuccess","Request#onData","Request#onError","Request#cleanup","Request#onLoad","Request#hasXDR","Request#abort","unloadHandler"],"mappings":"AAA;ACc,mBD;iBEE;CFI;AGE;ECO;GDuB;EEQ;GFG;EGS;oBCO;KDE;GHC;EKO;mBDI;KCE;oBDC;KCE;GLE;CHC;ASE;ECO;GDU;EEO;qBCqD;SDE;sBEC;SFE;iCGE;uBCO;aDE;SHE;iBIS;OJE;GFQ;EOO;GPG;EQO;GRG;ESO;GTG;EUO;GVsB;EWO;GXK;EYO;GZE;EaO;GbE;CTC;AuBoB;CvBM"}},"type":"js/module"}]}