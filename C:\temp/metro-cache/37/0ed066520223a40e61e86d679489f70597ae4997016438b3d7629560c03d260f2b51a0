{"dependencies":[{"name":"./_baseRepeat","data":{"isAsync":false}},{"name":"./_baseToString","data":{"isAsync":false}},{"name":"./_castSlice","data":{"isAsync":false}},{"name":"./_hasUnicode","data":{"isAsync":false}},{"name":"./_stringSize","data":{"isAsync":false}},{"name":"./_stringToArray","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseRepeat = _$$_REQUIRE(_dependencyMap[0], \"./_baseRepeat\"),\n      baseToString = _$$_REQUIRE(_dependencyMap[1], \"./_baseToString\"),\n      castSlice = _$$_REQUIRE(_dependencyMap[2], \"./_castSlice\"),\n      hasUnicode = _$$_REQUIRE(_dependencyMap[3], \"./_hasUnicode\"),\n      stringSize = _$$_REQUIRE(_dependencyMap[4], \"./_stringSize\"),\n      stringToArray = _$$_REQUIRE(_dependencyMap[5], \"./_stringToArray\");\n\n  var nativeCeil = Math.ceil;\n\n  function createPadding(length, chars) {\n    chars = chars === undefined ? ' ' : baseToString(chars);\n    var charsLength = chars.length;\n\n    if (charsLength < 2) {\n      return charsLength ? baseRepeat(chars, length) : chars;\n    }\n\n    var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n    return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);\n  }\n\n  module.exports = createPadding;\n});","lineCount":24,"map":[[2,0,1,0],[2,6,1,4,"baseRepeat"],[2,16,1,14],[2,19,1,17,"require"],[2,30,1,24],[2,66,1,0],[3,0,1,0],[3,6,2,4,"baseToString"],[3,18,2,16],[3,21,2,19,"require"],[3,32,2,26],[3,70,1,0],[4,0,1,0],[4,6,3,4,"castSlice"],[4,15,3,13],[4,18,3,16,"require"],[4,29,3,23],[4,64,1,0],[5,0,1,0],[5,6,4,4,"hasUnicode"],[5,16,4,14],[5,19,4,17,"require"],[5,30,4,24],[5,66,1,0],[6,0,1,0],[6,6,5,4,"stringSize"],[6,16,5,14],[6,19,5,17,"require"],[6,30,5,24],[6,66,1,0],[7,0,1,0],[7,6,6,4,"stringToArray"],[7,19,6,17],[7,22,6,20,"require"],[7,33,6,27],[7,72,1,0],[9,0,9,0],[9,6,9,4,"nativeCeil"],[9,16,9,14],[9,19,9,17,"Math"],[9,23,9,21],[9,24,9,22,"ceil"],[9,28,9,0],[11,0,20,0],[11,11,20,9,"createPadding"],[11,24,20,0],[11,25,20,23,"length"],[11,31,20,0],[11,33,20,31,"chars"],[11,38,20,0],[11,40,20,38],[12,0,21,2,"chars"],[12,4,21,2,"chars"],[12,9,21,7],[12,12,21,10,"chars"],[12,17,21,15],[12,22,21,20,"undefined"],[12,31,21,10],[12,34,21,32],[12,37,21,10],[12,40,21,38,"baseToString"],[12,52,21,50],[12,53,21,51,"chars"],[12,58,21,50],[12,59,21,2],[13,0,23,2],[13,8,23,6,"charsLength"],[13,19,23,17],[13,22,23,20,"chars"],[13,27,23,25],[13,28,23,26,"length"],[13,34,23,2],[15,0,24,2],[15,8,24,6,"charsLength"],[15,19,24,17],[15,22,24,20],[15,23,24,2],[15,25,24,23],[16,0,25,4],[16,13,25,11,"charsLength"],[16,24,25,22],[16,27,25,25,"baseRepeat"],[16,37,25,35],[16,38,25,36,"chars"],[16,43,25,35],[16,45,25,43,"length"],[16,51,25,35],[16,52,25,22],[16,55,25,53,"chars"],[16,60,25,4],[17,0,26,3],[19,0,27,2],[19,8,27,6,"result"],[19,14,27,12],[19,17,27,15,"baseRepeat"],[19,27,27,25],[19,28,27,26,"chars"],[19,33,27,25],[19,35,27,33,"nativeCeil"],[19,45,27,43],[19,46,27,44,"length"],[19,52,27,50],[19,55,27,53,"stringSize"],[19,65,27,63],[19,66,27,64,"chars"],[19,71,27,63],[19,72,27,43],[19,73,27,25],[19,74,27,2],[20,0,28,2],[20,11,28,9,"hasUnicode"],[20,21,28,19],[20,22,28,20,"chars"],[20,27,28,19],[20,28,28,9],[20,31,29,6,"castSlice"],[20,40,29,15],[20,41,29,16,"stringToArray"],[20,54,29,29],[20,55,29,30,"result"],[20,61,29,29],[20,62,29,15],[20,64,29,39],[20,65,29,15],[20,67,29,42,"length"],[20,73,29,15],[20,74,29,6],[20,75,29,50,"join"],[20,79,29,6],[20,80,29,55],[20,82,29,6],[20,83,28,9],[20,86,30,6,"result"],[20,92,30,12],[20,93,30,13,"slice"],[20,98,30,6],[20,99,30,19],[20,100,30,6],[20,102,30,22,"length"],[20,108,30,6],[20,109,28,2],[21,0,31,1],[23,0,33,0,"module"],[23,2,33,0,"module"],[23,8,33,6],[23,9,33,7,"exports"],[23,16,33,0],[23,19,33,17,"createPadding"],[23,32,33,0]],"functionMap":{"names":["<global>","createPadding"],"mappings":"AAA;ACmB;CDW"}},"type":"js/module"}]}