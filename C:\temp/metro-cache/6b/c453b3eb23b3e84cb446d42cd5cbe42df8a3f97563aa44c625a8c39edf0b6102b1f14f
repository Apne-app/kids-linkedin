{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"unimodules-permissions-interface","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"../ExponentAV","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"./Sound","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function get() {\n      return _unimodulesPermissionsInterface.PermissionStatus;\n    }\n  });\n  exports.Recording = exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@unimodules/core\");\n\n  var _unimodulesPermissionsInterface = _$$_REQUIRE(_dependencyMap[6], \"unimodules-permissions-interface\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[7], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../ExponentAV\"));\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[9], \"./AudioAvailability\");\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[10], \"./Sound\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = 1;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = 2;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = 3;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = 4;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = 5;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = 6;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = 7;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = 8;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = 9;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = 1;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = 2;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = 3;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = 4;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = 5;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = 'lpcm';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = 'ac-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = 'cac3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = 'ima4';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = 'aac ';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = 'celp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = 'hvxc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = 'twvq';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = 'MAC3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = 'MAC6';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = 'ulaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = 'alaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = 'QDMC';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = 'QDM2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = 'Qclp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = '.mp1';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = '.mp2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = '.mp3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = 'alac';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = 'aach';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = 'aacl';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = 'aace';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = 'aacf';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = 'aacg';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = 'aacp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = 'aacs';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = 'samr';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = 'sawb';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = 'AUDB';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = 'ilbc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = 0x6d730011;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = 0x6d730031;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = 'aes3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = 'ec-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = 0;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = 0x20;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = 0x40;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = 0x60;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = 0x7f;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = 0;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = 1;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = 2;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = 3;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE;\n  var RECORDING_OPTIONS_PRESET_HIGH_QUALITY = {\n    isMeteringEnabled: true,\n    android: {\n      extension: '.m4a',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = RECORDING_OPTIONS_PRESET_HIGH_QUALITY;\n  var RECORDING_OPTIONS_PRESET_LOW_QUALITY = {\n    isMeteringEnabled: true,\n    android: {\n      extension: '.3gp',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n  var _recorderExists = false;\n  var eventEmitter = _core.Platform.OS === 'android' ? new _core.EventEmitter(_ExponentAV.default) : null;\n\n  function getPermissionsAsync() {\n    return _regenerator.default.async(function getPermissionsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExponentAV.default.getPermissionsAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _ExponentAV.default.requestPermissionsAsync());\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var Recording = function () {\n    function Recording() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Recording);\n      this._subscription = null;\n      this._canRecord = false;\n      this._isDoneRecording = false;\n      this._finalDurationMillis = 0;\n      this._uri = null;\n      this._onRecordingStatusUpdate = null;\n      this._progressUpdateTimeoutVariable = null;\n      this._progressUpdateIntervalMillis = _AV._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n      this._options = null;\n\n      this._cleanupForUnloadedRecorder = function _callee(finalStatus) {\n        var _finalStatus$duration;\n\n        return _regenerator.default.async(function _callee$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this._canRecord = false;\n                _this._isDoneRecording = true;\n                _this._finalDurationMillis = (_finalStatus$duration = finalStatus == null ? void 0 : finalStatus.durationMillis) != null ? _finalStatus$duration : 0;\n                _recorderExists = false;\n\n                if (_this._subscription) {\n                  _this._subscription.remove();\n\n                  _this._subscription = null;\n                }\n\n                _this._disablePolling();\n\n                _context3.next = 8;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      this._pollingLoop = function _callee2() {\n        return _regenerator.default.async(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!((0, _AudioAvailability.isAudioEnabled)() && _this._canRecord && _this._onRecordingStatusUpdate != null)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _this._progressUpdateTimeoutVariable = setTimeout(_this._pollingLoop, _this._progressUpdateIntervalMillis);\n                _context4.prev = 2;\n                _context4.next = 5;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 5:\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](2);\n\n                _this._disablePolling();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      };\n\n      this.getStatusAsync = function _callee3() {\n        var status;\n        return _regenerator.default.async(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!_this._canRecord) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getAudioRecordingStatus();\n                }));\n\n              case 2:\n                status = {\n                  canRecord: false,\n                  isRecording: false,\n                  isDoneRecording: _this._isDoneRecording,\n                  durationMillis: _this._finalDurationMillis\n                };\n\n                _this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context5.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n    }\n\n    (0, _createClass2.default)(Recording, [{\n      key: \"_disablePolling\",\n      value: function _disablePolling() {\n        if (this._progressUpdateTimeoutVariable != null) {\n          clearTimeout(this._progressUpdateTimeoutVariable);\n          this._progressUpdateTimeoutVariable = null;\n        }\n      }\n    }, {\n      key: \"_enablePollingIfNecessaryAndPossible\",\n      value: function _enablePollingIfNecessaryAndPossible() {\n        if ((0, _AudioAvailability.isAudioEnabled)() && this._canRecord && this._onRecordingStatusUpdate != null) {\n          this._disablePolling();\n\n          this._pollingLoop();\n        }\n      }\n    }, {\n      key: \"_callOnRecordingStatusUpdateForNewStatus\",\n      value: function _callOnRecordingStatusUpdateForNewStatus(status) {\n        if (this._onRecordingStatusUpdate != null) {\n          this._onRecordingStatusUpdate(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var status;\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._canRecord) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                status = _context6.sent;\n\n                this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context6.abrupt(\"return\", status);\n\n              case 9:\n                throw new Error('Cannot complete operation because this recorder is not ready to record.');\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"setOnRecordingStatusUpdate\",\n      value: function setOnRecordingStatusUpdate(onRecordingStatusUpdate) {\n        this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n\n        if (onRecordingStatusUpdate == null) {\n          this._disablePolling();\n        } else {\n          this._enablePollingIfNecessaryAndPossible();\n        }\n\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"setProgressUpdateInterval\",\n      value: function setProgressUpdateInterval(progressUpdateIntervalMillis) {\n        this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"prepareToRecordAsync\",\n      value: function prepareToRecordAsync() {\n        var options,\n            extensionRegex,\n            _await$ExponentAV$pre,\n            uri,\n            status,\n            currentStatus,\n            _args7 = arguments;\n\n        return _regenerator.default.async(function prepareToRecordAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!_recorderExists) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error('Only one Recording object can be prepared at a given time.');\n\n              case 4:\n                if (!this._isDoneRecording) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error('This Recording object is done recording; you must make a new one.');\n\n              case 6:\n                if (!(!options || !options.android || !options.ios)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                throw new Error('You must provide recording options for android and ios in order to prepare to record.');\n\n              case 8:\n                extensionRegex = /^\\.\\w+$/;\n\n                if (!(!options.android.extension || !options.ios.extension || !extensionRegex.test(options.android.extension) || !extensionRegex.test(options.ios.extension))) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                throw new Error(\"Your file extensions must match \" + extensionRegex.toString() + \".\");\n\n              case 11:\n                if (this._canRecord) {\n                  _context7.next = 28;\n                  break;\n                }\n\n                if (eventEmitter) {\n                  this._subscription = eventEmitter.addListener('Expo.Recording.recorderUnloaded', this._cleanupForUnloadedRecorder);\n                }\n\n                _context7.next = 15;\n                return _regenerator.default.awrap(_ExponentAV.default.prepareAudioRecorder(options));\n\n              case 15:\n                _await$ExponentAV$pre = _context7.sent;\n                uri = _await$ExponentAV$pre.uri;\n                status = _await$ExponentAV$pre.status;\n                _recorderExists = true;\n                this._uri = uri;\n                this._options = options;\n                this._canRecord = true;\n                currentStatus = _objectSpread(_objectSpread({}, status), {}, {\n                  canRecord: true\n                });\n\n                this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n\n                this._enablePollingIfNecessaryAndPossible();\n\n                return _context7.abrupt(\"return\", currentStatus);\n\n              case 28:\n                throw new Error('This Recording object is already prepared to record.');\n\n              case 29:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"startAsync\",\n      value: function startAsync() {\n        return _regenerator.default.async(function startAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.startAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"pauseAsync\",\n      value: function pauseAsync() {\n        return _regenerator.default.async(function pauseAsync$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.pauseAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"stopAndUnloadAsync\",\n      value: function stopAndUnloadAsync() {\n        var stopResult, stopError, status;\n        return _regenerator.default.async(function stopAndUnloadAsync$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (this._canRecord) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                if (!this._isDoneRecording) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                throw new Error('Cannot unload a Recording that has already been unloaded.');\n\n              case 5:\n                throw new Error('Cannot unload a Recording that has not been prepared.');\n\n              case 6:\n                _context10.prev = 6;\n                _context10.next = 9;\n                return _regenerator.default.awrap(_ExponentAV.default.stopAudioRecording());\n\n              case 9:\n                stopResult = _context10.sent;\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](6);\n                stopError = _context10.t0;\n\n              case 15:\n                _context10.next = 17;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadAudioRecorder());\n\n              case 17:\n                _context10.next = 19;\n                return _regenerator.default.awrap(this._cleanupForUnloadedRecorder(stopResult));\n\n              case 19:\n                status = _context10.sent;\n                return _context10.abrupt(\"return\", stopError ? Promise.reject(stopError) : status);\n\n              case 21:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, this, [[6, 12]], Promise);\n      }\n    }, {\n      key: \"getURI\",\n      value: function getURI() {\n        return this._uri;\n      }\n    }, {\n      key: \"createNewLoadedSound\",\n      value: function createNewLoadedSound() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args11 = arguments;\n        return _regenerator.default.async(function createNewLoadedSound$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                initialStatus = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : {};\n                onPlaybackStatusUpdate = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : null;\n                console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");\n                return _context11.abrupt(\"return\", this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate));\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"createNewLoadedSoundAsync\",\n      value: function createNewLoadedSoundAsync() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args12 = arguments;\n        return _regenerator.default.async(function createNewLoadedSoundAsync$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                initialStatus = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};\n                onPlaybackStatusUpdate = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : null;\n\n                if (!(this._uri == null || !this._isDoneRecording)) {\n                  _context12.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot create sound when the Recording has not finished!');\n\n              case 4:\n                return _context12.abrupt(\"return\", _Sound.Sound.createAsync({\n                  uri: this._uri\n                }, initialStatus, onPlaybackStatusUpdate, false));\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }]);\n    return Recording;\n  }();\n\n  exports.Recording = Recording;\n});","lineCount":681,"map":[[25,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[41,0,8,7],[41,6,8,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT"],[41,52,8,59],[41,55,8,62],[41,56,8,7],[43,0,9,7],[43,6,9,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[43,54,9,61],[43,57,9,64],[43,58,9,7],[45,0,10,7],[45,6,10,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[45,51,10,58],[45,54,10,61],[45,55,10,7],[47,0,11,7],[47,6,11,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB"],[47,51,11,58],[47,54,11,61],[47,55,11,7],[49,0,12,7],[49,6,12,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB"],[49,51,12,58],[49,54,12,61],[49,55,12,7],[51,0,13,7],[51,6,13,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF"],[51,53,13,60],[51,56,13,63],[51,57,13,7],[53,0,14,7],[53,6,14,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS"],[53,53,14,60],[53,56,14,63],[53,57,14,7],[55,0,15,7],[55,6,15,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP"],[55,52,15,59],[55,55,15,62],[55,56,15,7],[57,0,16,7],[57,6,16,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS"],[57,52,16,59],[57,55,16,62],[57,56,16,7],[59,0,17,7],[59,6,17,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM"],[59,49,17,56],[59,52,17,59],[59,53,17,7],[61,0,18,7],[61,6,18,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT"],[61,52,18,59],[61,55,18,62],[61,56,18,7],[63,0,19,7],[63,6,19,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[63,51,19,58],[63,54,19,61],[63,55,19,7],[65,0,20,7],[65,6,20,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB"],[65,51,20,58],[65,54,20,61],[65,55,20,7],[67,0,21,7],[67,6,21,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[67,48,21,55],[67,51,21,58],[67,52,21,7],[69,0,22,7],[69,6,22,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC"],[69,51,22,58],[69,54,22,61],[69,55,22,7],[71,0,23,7],[71,6,23,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD"],[71,52,23,59],[71,55,23,62],[71,56,23,7],[73,0,24,7],[73,6,24,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM"],[73,50,24,57],[73,53,24,60],[73,59,24,7],[75,0,25,7],[75,6,25,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3"],[75,44,25,51],[75,47,25,54],[75,53,25,7],[77,0,26,7],[77,6,26,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3"],[77,49,26,56],[77,52,26,59],[77,58,26,7],[79,0,27,7],[79,6,27,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4"],[79,50,27,57],[79,53,27,60],[79,59,27,7],[81,0,28,7],[81,6,28,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC"],[81,49,28,56],[81,52,28,59],[81,58,28,7],[83,0,29,7],[83,6,29,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP"],[83,50,29,57],[83,53,29,60],[83,59,29,7],[85,0,30,7],[85,6,30,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC"],[85,50,30,57],[85,53,30,60],[85,59,30,7],[87,0,31,7],[87,6,31,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ"],[87,52,31,59],[87,55,31,62],[87,61,31,7],[89,0,32,7],[89,6,32,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3"],[89,46,32,53],[89,49,32,56],[89,55,32,7],[91,0,33,7],[91,6,33,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6"],[91,46,33,53],[91,49,33,56],[91,55,33,7],[93,0,34,7],[93,6,34,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW"],[93,45,34,52],[93,48,34,55],[93,54,34,7],[95,0,35,7],[95,6,35,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW"],[95,45,35,52],[95,48,35,55],[95,54,35,7],[97,0,36,7],[97,6,36,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN"],[97,48,36,55],[97,51,36,58],[97,57,36,7],[99,0,37,7],[99,6,37,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2"],[99,49,37,56],[99,52,37,59],[99,58,37,7],[101,0,38,7],[101,6,38,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM"],[101,49,38,56],[101,52,38,59],[101,58,38,7],[103,0,39,7],[103,6,39,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1"],[103,51,39,58],[103,54,39,61],[103,60,39,7],[105,0,40,7],[105,6,40,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2"],[105,51,40,58],[105,54,40,61],[105,60,40,7],[107,0,41,7],[107,6,41,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3"],[107,51,41,58],[107,54,41,61],[107,60,41,7],[109,0,42,7],[109,6,42,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS"],[109,54,42,61],[109,57,42,64],[109,63,42,7],[111,0,43,7],[111,6,43,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE"],[111,52,43,59],[111,55,43,62],[111,61,43,7],[113,0,44,7],[113,6,44,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD"],[113,52,44,59],[113,55,44,62],[113,61,44,7],[115,0,45,7],[115,6,45,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD"],[115,53,45,60],[115,56,45,63],[115,62,45,7],[117,0,46,7],[117,6,46,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR"],[117,57,46,64],[117,60,46,67],[117,66,46,7],[119,0,47,7],[119,6,47,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2"],[119,56,47,63],[119,59,47,66],[119,65,47,7],[121,0,48,7],[121,6,48,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2"],[121,55,48,62],[121,58,48,65],[121,64,48,7],[123,0,49,7],[123,6,49,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL"],[123,57,49,64],[123,60,49,67],[123,66,49,7],[125,0,50,7],[125,6,50,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR"],[125,44,50,51],[125,47,50,54],[125,53,50,7],[127,0,51,7],[127,6,51,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB"],[127,47,51,54],[127,50,51,57],[127,56,51,7],[129,0,52,7],[129,6,52,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE"],[129,48,52,55],[129,51,52,58],[129,57,52,7],[131,0,53,7],[131,6,53,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC"],[131,45,53,52],[131,48,53,55],[131,54,53,7],[133,0,54,7],[133,6,54,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA"],[133,52,54,59],[133,55,54,62],[133,65,54,7],[135,0,55,7],[135,6,55,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM"],[135,53,55,60],[135,56,55,63],[135,66,55,7],[137,0,56,7],[137,6,56,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3"],[137,45,56,52],[137,48,56,55],[137,54,56,7],[139,0,57,7],[139,6,57,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3"],[139,52,57,59],[139,55,57,62],[139,61,57,7],[141,0,58,7],[141,6,58,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[141,44,58,51],[141,47,58,54],[141,48,58,7],[143,0,59,7],[143,6,59,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW"],[143,44,59,51],[143,47,59,54],[143,51,59,7],[145,0,60,7],[145,6,60,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM"],[145,47,60,54],[145,50,60,57],[145,54,60,7],[147,0,61,7],[147,6,61,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH"],[147,45,61,52],[147,48,61,55],[147,52,61,7],[149,0,62,7],[149,6,62,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[149,44,62,51],[149,47,62,54],[149,51,62,7],[151,0,63,7],[151,6,63,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT"],[151,53,63,60],[151,56,63,63],[151,57,63,7],[153,0,64,7],[153,6,64,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE"],[153,62,64,69],[153,65,64,72],[153,66,64,7],[155,0,65,7],[155,6,65,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED"],[155,65,65,72],[155,68,65,75],[155,69,65,7],[157,0,66,7],[157,6,66,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE"],[157,53,66,60],[157,56,66,63],[157,57,66,7],[159,0,68,7],[159,6,68,13,"RECORDING_OPTIONS_PRESET_HIGH_QUALITY"],[159,43,68,50],[159,46,68,53],[160,0,69,4,"isMeteringEnabled"],[160,4,69,4,"isMeteringEnabled"],[160,21,69,21],[160,23,69,23],[160,27,68,53],[161,0,70,4,"android"],[161,4,70,4,"android"],[161,11,70,11],[161,13,70,13],[162,0,71,8,"extension"],[162,6,71,8,"extension"],[162,15,71,17],[162,17,71,19],[162,23,70,13],[163,0,72,8,"outputFormat"],[163,6,72,8,"outputFormat"],[163,18,72,20],[163,20,72,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[163,65,70,13],[164,0,73,8,"audioEncoder"],[164,6,73,8,"audioEncoder"],[164,18,73,20],[164,20,73,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[164,62,70,13],[165,0,74,8,"sampleRate"],[165,6,74,8,"sampleRate"],[165,16,74,18],[165,18,74,20],[165,23,70,13],[166,0,75,8,"numberOfChannels"],[166,6,75,8,"numberOfChannels"],[166,22,75,24],[166,24,75,26],[166,25,70,13],[167,0,76,8,"bitRate"],[167,6,76,8,"bitRate"],[167,13,76,15],[167,15,76,17],[168,0,70,13],[168,5,68,53],[169,0,78,4,"ios"],[169,4,78,4,"ios"],[169,7,78,7],[169,9,78,9],[170,0,79,8,"extension"],[170,6,79,8,"extension"],[170,15,79,17],[170,17,79,19],[170,23,78,9],[171,0,80,8,"audioQuality"],[171,6,80,8,"audioQuality"],[171,18,80,20],[171,20,80,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[171,58,78,9],[172,0,81,8,"sampleRate"],[172,6,81,8,"sampleRate"],[172,16,81,18],[172,18,81,20],[172,23,78,9],[173,0,82,8,"numberOfChannels"],[173,6,82,8,"numberOfChannels"],[173,22,82,24],[173,24,82,26],[173,25,78,9],[174,0,83,8,"bitRate"],[174,6,83,8,"bitRate"],[174,13,83,15],[174,15,83,17],[174,21,78,9],[175,0,84,8,"linearPCMBitDepth"],[175,6,84,8,"linearPCMBitDepth"],[175,23,84,25],[175,25,84,27],[175,27,78,9],[176,0,85,8,"linearPCMIsBigEndian"],[176,6,85,8,"linearPCMIsBigEndian"],[176,26,85,28],[176,28,85,30],[176,33,78,9],[177,0,86,8,"linearPCMIsFloat"],[177,6,86,8,"linearPCMIsFloat"],[177,22,86,24],[177,24,86,26],[178,0,78,9],[179,0,68,53],[179,3,68,7],[181,0,89,7],[181,6,89,13,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[181,42,89,49],[181,45,89,52],[182,0,90,4,"isMeteringEnabled"],[182,4,90,4,"isMeteringEnabled"],[182,21,90,21],[182,23,90,23],[182,27,89,52],[183,0,91,4,"android"],[183,4,91,4,"android"],[183,11,91,11],[183,13,91,13],[184,0,92,8,"extension"],[184,6,92,8,"extension"],[184,15,92,17],[184,17,92,19],[184,23,91,13],[185,0,93,8,"outputFormat"],[185,6,93,8,"outputFormat"],[185,18,93,20],[185,20,93,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[185,68,91,13],[186,0,94,8,"audioEncoder"],[186,6,94,8,"audioEncoder"],[186,18,94,20],[186,20,94,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[186,65,91,13],[187,0,95,8,"sampleRate"],[187,6,95,8,"sampleRate"],[187,16,95,18],[187,18,95,20],[187,23,91,13],[188,0,96,8,"numberOfChannels"],[188,6,96,8,"numberOfChannels"],[188,22,96,24],[188,24,96,26],[188,25,91,13],[189,0,97,8,"bitRate"],[189,6,97,8,"bitRate"],[189,13,97,15],[189,15,97,17],[190,0,91,13],[190,5,89,52],[191,0,99,4,"ios"],[191,4,99,4,"ios"],[191,7,99,7],[191,9,99,9],[192,0,100,8,"extension"],[192,6,100,8,"extension"],[192,15,100,17],[192,17,100,19],[192,23,99,9],[193,0,101,8,"audioQuality"],[193,6,101,8,"audioQuality"],[193,18,101,20],[193,20,101,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[193,58,99,9],[194,0,102,8,"sampleRate"],[194,6,102,8,"sampleRate"],[194,16,102,18],[194,18,102,20],[194,23,99,9],[195,0,103,8,"numberOfChannels"],[195,6,103,8,"numberOfChannels"],[195,22,103,24],[195,24,103,26],[195,25,99,9],[196,0,104,8,"bitRate"],[196,6,104,8,"bitRate"],[196,13,104,15],[196,15,104,17],[196,21,99,9],[197,0,105,8,"linearPCMBitDepth"],[197,6,105,8,"linearPCMBitDepth"],[197,23,105,25],[197,25,105,27],[197,27,99,9],[198,0,106,8,"linearPCMIsBigEndian"],[198,6,106,8,"linearPCMIsBigEndian"],[198,26,106,28],[198,28,106,30],[198,33,99,9],[199,0,107,8,"linearPCMIsFloat"],[199,6,107,8,"linearPCMIsFloat"],[199,22,107,24],[199,24,107,26],[200,0,99,9],[201,0,89,52],[201,3,89,7],[203,0,111,0],[203,6,111,4,"_recorderExists"],[203,21,111,19],[203,24,111,22],[203,29,111,0],[204,0,112,0],[204,6,112,6,"eventEmitter"],[204,18,112,18],[204,21,112,21,"Platform"],[204,36,112,30,"OS"],[204,38,112,21],[204,43,112,37],[204,52,112,21],[204,55,112,49],[204,59,112,53,"EventEmitter"],[204,77,112,49],[204,78,112,66,"ExponentAV"],[204,97,112,49],[204,98,112,21],[204,101,112,80],[204,105,112,0],[206,0,113,7],[206,11,113,22,"getPermissionsAsync"],[206,30,113,7],[207,0,113,7],[208,0,113,7],[209,0,113,7],[210,0,113,7],[211,0,113,7],[211,45,114,11,"ExponentAV"],[211,65,114,22,"getPermissionsAsync"],[211,84,114,11],[211,86,113,7],[213,0,113,7],[214,0,113,7],[215,0,113,7],[216,0,113,7],[217,0,113,7],[218,0,113,7],[219,0,113,7],[221,0,116,7],[221,11,116,22,"requestPermissionsAsync"],[221,34,116,7],[222,0,116,7],[223,0,116,7],[224,0,116,7],[225,0,116,7],[226,0,116,7],[226,46,117,11,"ExponentAV"],[226,66,117,22,"requestPermissionsAsync"],[226,89,117,11],[226,91,116,7],[228,0,116,7],[229,0,116,7],[230,0,116,7],[231,0,116,7],[232,0,116,7],[233,0,116,7],[234,0,116,7],[236,6,119,13,"Recording"],[236,15],[237,0,120,4],[237,25,120,18],[238,0,120,18],[240,0,120,18],[241,0,121,8],[241,11,121,13,"_subscription"],[241,24,121,8],[241,27,121,29],[241,31,121,8],[242,0,122,8],[242,11,122,13,"_canRecord"],[242,21,122,8],[242,24,122,26],[242,29,122,8],[243,0,123,8],[243,11,123,13,"_isDoneRecording"],[243,27,123,8],[243,30,123,32],[243,35,123,8],[244,0,124,8],[244,11,124,13,"_finalDurationMillis"],[244,31,124,8],[244,34,124,36],[244,35,124,8],[245,0,125,8],[245,11,125,13,"_uri"],[245,15,125,8],[245,18,125,20],[245,22,125,8],[246,0,126,8],[246,11,126,13,"_onRecordingStatusUpdate"],[246,35,126,8],[246,38,126,40],[246,42,126,8],[247,0,127,8],[247,11,127,13,"_progressUpdateTimeoutVariable"],[247,41,127,8],[247,44,127,46],[247,48,127,8],[248,0,128,8],[248,11,128,13,"_progressUpdateIntervalMillis"],[248,40,128,8],[248,43,128,45,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[248,87,128,8],[249,0,129,8],[249,11,129,13,"_options"],[249,19,129,8],[249,22,129,24],[249,26,129,8],[251,0,131,8],[251,11,131,13,"_cleanupForUnloadedRecorder"],[251,38,131,8],[251,41,131,43],[251,58,131,50,"finalStatus"],[251,69,131,43],[252,0,131,43],[254,0,131,43],[255,0,131,43],[256,0,131,43],[257,0,131,43],[258,0,132,12],[258,16,132,12],[258,21,132,16],[258,22,132,17,"_canRecord"],[258,32,132,12],[258,35,132,30],[258,40,132,12],[259,0,133,12],[259,16,133,12],[259,21,133,16],[259,22,133,17,"_isDoneRecording"],[259,38,133,12],[259,41,133,36],[259,45,133,12],[260,0,134,12],[260,16,134,12],[260,21,134,16],[260,22,134,17,"_finalDurationMillis"],[260,42,134,12],[260,70,134,40,"finalStatus"],[260,81,134,12],[260,101,134,40,"finalStatus"],[260,112,134,51],[260,113,134,53,"durationMillis"],[260,127,134,12],[260,163,134,71],[260,164,134,12],[261,0,135,12,"_recorderExists"],[261,16,135,12,"_recorderExists"],[261,31,135,27],[261,34,135,30],[261,39,135,12],[263,0,136,12],[263,20,136,16],[263,25,136,20],[263,26,136,21,"_subscription"],[263,39,136,12],[263,41,136,36],[264,0,137,16],[264,18,137,16],[264,23,137,20],[264,24,137,21,"_subscription"],[264,37,137,16],[264,38,137,35,"remove"],[264,44,137,16],[266,0,138,16],[266,18,138,16],[266,23,138,20],[266,24,138,21,"_subscription"],[266,37,138,16],[266,40,138,37],[266,44,138,16],[267,0,139,13],[269,0,140,12],[269,16,140,12],[269,21,140,16],[269,22,140,17,"_disablePolling"],[269,37,140,12],[271,0,131,43],[272,0,131,43],[272,50,141,25],[272,55,141,29],[272,56,141,30,"getStatusAsync"],[272,70,141,25],[272,72,131,43],[274,0,131,43],[275,0,131,43],[277,0,131,43],[278,0,131,43],[279,0,131,43],[280,0,131,43],[281,0,131,43],[282,0,131,43],[283,0,131,43],[283,7,131,8],[285,0,143,8],[285,11,143,13,"_pollingLoop"],[285,23,143,8],[285,26,143,28],[286,0,143,28],[287,0,143,28],[288,0,143,28],[289,0,143,28],[290,0,143,28],[290,22,144,16],[290,66,144,36],[290,71,144,40],[290,72,144,41,"_canRecord"],[290,82,144,16],[290,86,144,55],[290,91,144,59],[290,92,144,60,"_onRecordingStatusUpdate"],[290,116,144,55],[290,120,144,88],[290,124,143,28],[291,0,143,28],[292,0,143,28],[293,0,143,28],[295,0,145,16],[295,16,145,16],[295,21,145,20],[295,22,145,21,"_progressUpdateTimeoutVariable"],[295,52,145,16],[295,55,145,54,"setTimeout"],[295,65,145,64],[295,66,145,65],[295,71,145,69],[295,72,145,70,"_pollingLoop"],[295,84,145,64],[295,86,145,84],[295,91,145,88],[295,92,145,89,"_progressUpdateIntervalMillis"],[295,121,145,64],[295,122,145,16],[296,0,143,28],[297,0,143,28],[298,0,143,28],[298,50,147,26],[298,55,147,30],[298,56,147,31,"getStatusAsync"],[298,70,147,26],[298,72,143,28],[300,0,143,28],[301,0,143,28],[302,0,143,28],[304,0,143,28],[305,0,143,28],[306,0,143,28],[308,0,150,20],[308,16,150,20],[308,21,150,24],[308,22,150,25,"_disablePolling"],[308,37,150,20],[310,0,143,28],[311,0,143,28],[312,0,143,28],[313,0,143,28],[314,0,143,28],[315,0,143,28],[316,0,143,28],[316,7,143,8],[318,0,156,8],[318,11,156,13,"getStatusAsync"],[318,25,156,8],[318,28,156,30],[319,0,156,30],[320,0,156,30],[321,0,156,30],[322,0,156,30],[323,0,156,30],[324,0,156,30],[324,21,158,16],[324,26,158,20],[324,27,158,21,"_canRecord"],[324,37,156,30],[325,0,156,30],[326,0,156,30],[327,0,156,30],[329,0,156,30],[329,50,159,23],[329,55,159,27],[329,56,159,28,"_performOperationAndHandleStatusAsync"],[329,93,159,23],[329,94,159,66],[330,0,159,66],[330,25,159,72,"ExponentAV"],[330,45,159,83,"getAudioRecordingStatus"],[330,68,159,72],[330,70,159,66],[331,0,159,66],[331,17,159,23],[331,18,156,30],[333,0,156,30],[334,0,161,18,"status"],[334,16,161,18,"status"],[334,22,156,30],[334,25,161,27],[335,0,162,16,"canRecord"],[335,18,162,16,"canRecord"],[335,27,162,25],[335,29,162,27],[335,34,161,27],[336,0,163,16,"isRecording"],[336,18,163,16,"isRecording"],[336,29,163,27],[336,31,163,29],[336,36,161,27],[337,0,164,16,"isDoneRecording"],[337,18,164,16,"isDoneRecording"],[337,33,164,31],[337,35,164,33],[337,40,164,37],[337,41,164,38,"_isDoneRecording"],[337,57,161,27],[338,0,165,16,"durationMillis"],[338,18,165,16,"durationMillis"],[338,32,165,30],[338,34,165,32],[338,39,165,36],[338,40,165,37,"_finalDurationMillis"],[339,0,161,27],[339,17,156,30],[341,0,167,12],[341,16,167,12],[341,21,167,16],[341,22,167,17,"_callOnRecordingStatusUpdateForNewStatus"],[341,62,167,12],[341,63,167,58,"status"],[341,69,167,12],[343,0,156,30],[343,50,168,19,"status"],[343,56,156,30],[345,0,156,30],[346,0,156,30],[347,0,156,30],[348,0,156,30],[349,0,156,30],[350,0,156,30],[351,0,156,30],[351,7,156,8],[352,0,170,5],[356,40,171,22],[357,0,172,8],[357,12,172,12],[357,17,172,17,"_progressUpdateTimeoutVariable"],[357,47,172,12],[357,51,172,51],[357,55,172,8],[357,57,172,57],[358,0,173,12,"clearTimeout"],[358,10,173,12,"clearTimeout"],[358,22,173,24],[358,23,173,25],[358,28,173,30,"_progressUpdateTimeoutVariable"],[358,58,173,24],[358,59,173,12],[359,0,174,12],[359,15,174,17,"_progressUpdateTimeoutVariable"],[359,45,174,12],[359,48,174,50],[359,52,174,12],[360,0,175,9],[361,0,176,5],[364,61,177,43],[365,0,178,8],[365,12,178,12],[365,56,178,32],[365,61,178,37,"_canRecord"],[365,71,178,12],[365,75,178,51],[365,80,178,56,"_onRecordingStatusUpdate"],[365,104,178,51],[365,108,178,84],[365,112,178,8],[365,114,178,90],[366,0,179,12],[366,15,179,17,"_disablePolling"],[366,30,179,12],[368,0,180,12],[368,15,180,17,"_pollingLoop"],[368,27,180,12],[369,0,181,9],[370,0,182,5],[373,63,183,45,"status"],[373,69],[373,71,183,53],[374,0,184,8],[374,12,184,12],[374,17,184,17,"_onRecordingStatusUpdate"],[374,41,184,12],[374,45,184,45],[374,49,184,8],[374,51,184,51],[375,0,185,12],[375,15,185,17,"_onRecordingStatusUpdate"],[375,39,185,12],[375,40,185,42,"status"],[375,46,185,12],[376,0,186,9],[377,0,187,5],[380,60,188,48,"operation"],[380,69],[386,0,189,8],[388,21,190,12],[388,26,190,17,"_canRecord"],[388,36],[394,50,191,33,"operation"],[394,59,191,42],[394,61],[397,0,191,18,"status"],[397,16,191,18,"status"],[397,22],[399,0,192,12],[399,21,192,17,"_callOnRecordingStatusUpdateForNewStatus"],[399,61,192,12],[399,62,192,58,"status"],[399,68,192,12],[401,50,193,19,"status"],[401,56],[404,22,196,18],[404,26,196,22,"Error"],[404,31,196,18],[404,32,196,28],[404,105,196,18],[404,106],[415,49,199,31,"onRecordingStatusUpdate"],[415,72],[415,74,199,56],[416,0,200,8],[416,13,200,13,"_onRecordingStatusUpdate"],[416,37,200,8],[416,40,200,40,"onRecordingStatusUpdate"],[416,63,200,8],[418,0,201,8],[418,12,201,12,"onRecordingStatusUpdate"],[418,35,201,35],[418,39,201,39],[418,43,201,8],[418,45,201,45],[419,0,202,12],[419,15,202,17,"_disablePolling"],[419,30,202,12],[420,0,203,9],[420,9,201,8],[420,15,204,13],[421,0,205,12],[421,15,205,17,"_enablePollingIfNecessaryAndPossible"],[421,51,205,12],[422,0,206,9],[424,0,207,8],[424,13,207,13,"getStatusAsync"],[424,27,207,8],[425,0,208,5],[428,48,209,30,"progressUpdateIntervalMillis"],[428,76],[428,78,209,60],[429,0,210,8],[429,13,210,13,"_progressUpdateIntervalMillis"],[429,42,210,8],[429,45,210,45,"progressUpdateIntervalMillis"],[429,73,210,8],[430,0,211,8],[430,13,211,13,"getStatusAsync"],[430,27,211,8],[431,0,212,5],[447,0,214,31,"options"],[447,16,214,31,"options"],[447,23],[447,85,214,41,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[447,121],[448,0,215,8],[450,21,216,12,"_recorderExists"],[450,36],[455,22,217,18],[455,26,217,22,"Error"],[455,31,217,18],[455,32,217,28],[455,92,217,18],[455,93],[458,21,219,12],[458,26,219,17,"_isDoneRecording"],[458,42],[463,22,220,18],[463,26,220,22,"Error"],[463,31,220,18],[463,32,220,28],[463,99,220,18],[463,100],[466,22,222,12],[466,23,222,13,"options"],[466,30,222,12],[466,34,222,24],[466,35,222,25,"options"],[466,42,222,32],[466,43,222,33,"android"],[466,50,222,12],[466,54,222,44],[466,55,222,45,"options"],[466,62,222,52],[466,63,222,53,"ios"],[466,66],[471,22,223,18],[471,26,223,22,"Error"],[471,31,223,18],[471,32,223,28],[471,119,223,18],[471,120],[474,0,225,14,"extensionRegex"],[474,16,225,14,"extensionRegex"],[474,30],[474,33,225,31],[474,42],[476,22,226,12],[476,23,226,13,"options"],[476,30,226,20],[476,31,226,21,"android"],[476,38,226,13],[476,39,226,29,"extension"],[476,48,226,12],[476,52,227,12],[476,53,227,13,"options"],[476,60,227,20],[476,61,227,21,"ios"],[476,64,227,13],[476,65,227,25,"extension"],[476,74,226,12],[476,78,228,12],[476,79,228,13,"extensionRegex"],[476,93,228,27],[476,94,228,28,"test"],[476,98,228,13],[476,99,228,33,"options"],[476,106,228,40],[476,107,228,41,"android"],[476,114,228,33],[476,115,228,49,"extension"],[476,124,228,13],[476,125,226,12],[476,129,229,12],[476,130,229,13,"extensionRegex"],[476,144,229,27],[476,145,229,28,"test"],[476,149,229,13],[476,150,229,33,"options"],[476,157,229,40],[476,158,229,41,"ios"],[476,161,229,33],[476,162,229,45,"extension"],[476,171,229,13],[476,172],[481,22,230,18],[481,26,230,22,"Error"],[481,31,230,18],[481,69,230,63,"extensionRegex"],[481,83,230,77],[481,84,230,78,"toString"],[481,92,230,63],[481,94,230,18],[481,101],[484,20,232,13],[484,25,232,18,"_canRecord"],[484,35],[489,0,233,12],[489,20,233,16,"eventEmitter"],[489,32,233,12],[489,34,233,30],[490,0,234,16],[490,23,234,21,"_subscription"],[490,36,234,16],[490,39,234,37,"eventEmitter"],[490,51,234,49],[490,52,234,50,"addListener"],[490,63,234,37],[490,64,234,62],[490,97,234,37],[490,99,234,97],[490,104,234,102,"_cleanupForUnloadedRecorder"],[490,131,234,37],[490,132,234,16],[491,0,235,13],[494,50,236,43,"ExponentAV"],[494,70,236,54,"prepareAudioRecorder"],[494,90,236,43],[494,91,236,75,"options"],[494,98,236,43],[494,99],[498,0,236,20,"uri"],[498,16,236,20,"uri"],[498,19],[498,44,236,20,"uri"],[498,47],[499,0,236,25,"status"],[499,16,236,25,"status"],[499,22],[499,47,236,25,"status"],[499,53],[500,0,237,12,"_recorderExists"],[500,16,237,12,"_recorderExists"],[500,31,237,27],[500,34,237,30],[500,38,237,12],[501,0,238,12],[501,21,238,17,"_uri"],[501,25,238,12],[501,28,238,24,"uri"],[501,31,238,12],[502,0,239,12],[502,21,239,17,"_options"],[502,29,239,12],[502,32,239,28,"options"],[502,39,239,12],[503,0,240,12],[503,21,240,17,"_canRecord"],[503,31,240,12],[503,34,240,30],[503,38,240,12],[504,0,241,18,"currentStatus"],[504,16,241,18,"currentStatus"],[504,29],[504,64,241,39,"status"],[504,70],[505,0,241,47,"canRecord"],[505,18,241,47,"canRecord"],[505,27,241,56],[505,29,241,58],[508,0,242,12],[508,21,242,17,"_callOnRecordingStatusUpdateForNewStatus"],[508,61,242,12],[508,62,242,58,"currentStatus"],[508,75,242,12],[510,0,243,12],[510,21,243,17,"_enablePollingIfNecessaryAndPossible"],[510,57,243,12],[512,50,244,19,"currentStatus"],[512,63],[515,22,247,18],[515,26,247,22,"Error"],[515,31,247,18],[515,32,247,28],[515,86,247,18],[515,87],[531,50,251,15],[531,55,251,20,"_performOperationAndHandleStatusAsync"],[531,92,251,15],[531,93,251,58],[532,0,251,58],[532,25,251,64,"ExponentAV"],[532,45,251,75,"startAudioRecording"],[532,64,251,64],[532,66,251,58],[533,0,251,58],[533,17,251,15],[533,18],[549,50,254,15],[549,55,254,20,"_performOperationAndHandleStatusAsync"],[549,92,254,15],[549,93,254,58],[550,0,254,58],[550,25,254,64,"ExponentAV"],[550,45,254,75,"pauseAudioRecording"],[550,64,254,64],[550,66,254,58],[551,0,254,58],[551,17,254,15],[551,18],[568,20,257,13],[568,25,257,18,"_canRecord"],[568,35],[573,21,258,16],[573,26,258,21,"_isDoneRecording"],[573,42],[578,22,259,22],[578,26,259,26,"Error"],[578,31,259,22],[578,32,259,32],[578,91,259,22],[578,92],[581,22,262,22],[581,26,262,26,"Error"],[581,31,262,22],[581,32,262,32],[581,87,262,22],[581,88],[586,50,270,31,"ExponentAV"],[586,70,270,42,"stopAudioRecording"],[586,88,270,31],[586,90],[589,0,270,12,"stopResult"],[589,16,270,12,"stopResult"],[589,26],[596,0,273,12,"stopError"],[596,16,273,12,"stopError"],[596,25,273,21],[596,41,273,12],[600,50,276,14,"ExponentAV"],[600,70,276,25,"unloadAudioRecorder"],[600,89,276,14],[600,91],[604,50,277,29],[604,55,277,34,"_cleanupForUnloadedRecorder"],[604,82,277,29],[604,83,277,62,"stopResult"],[604,93,277,29],[604,94],[607,0,277,14,"status"],[607,16,277,14,"status"],[607,22],[608,51,278,15,"stopError"],[608,60,278,24],[608,63,278,27,"Promise"],[608,70,278,34],[608,71,278,35,"reject"],[608,77,278,27],[608,78,278,42,"stopError"],[608,87,278,27],[608,88,278,24],[608,91,278,55,"status"],[608,97],[619,31,281,13],[620,0,282,8],[620,15,282,15],[620,20,282,20,"_uri"],[620,24,282,8],[621,0,283,5],[632,0,285,31,"initialStatus"],[632,16,285,31,"initialStatus"],[632,29],[632,94,285,47],[632,96],[633,0,285,51,"onPlaybackStatusUpdate"],[633,16,285,51,"onPlaybackStatusUpdate"],[633,38],[633,103,285,76],[633,107],[634,0,286,8,"console"],[634,16,286,8,"console"],[634,23,286,15],[634,24,286,16,"warn"],[634,28,286,8],[635,51,287,15],[635,56,287,20,"createNewLoadedSoundAsync"],[635,81,287,15],[635,82,287,46,"initialStatus"],[635,95,287,15],[635,97,287,61,"onPlaybackStatusUpdate"],[635,119,287,15],[635,120],[654,0,289,36,"initialStatus"],[654,16,289,36,"initialStatus"],[654,29],[654,94,289,52],[654,96],[655,0,289,56,"onPlaybackStatusUpdate"],[655,16,289,56,"onPlaybackStatusUpdate"],[655,38],[655,103,289,81],[655,107],[657,22,290,12],[657,27,290,17,"_uri"],[657,31,290,12],[657,35,290,25],[657,39,290,12],[657,43,290,33],[657,44,290,34],[657,49,290,39,"_isDoneRecording"],[657,65],[662,22,291,18],[662,26,291,22,"Error"],[662,31,291,18],[662,32,291,28],[662,90,291,18],[662,91],[665,51,293,15,"Sound"],[665,64,293,21,"createAsync"],[665,75,293,15],[665,76,295,8],[666,0,295,10,"uri"],[666,18,295,10,"uri"],[666,21,295,13],[666,23,295,15],[666,28,295,20,"_uri"],[667,0,295,8],[667,17,293,15],[667,19,295,28,"initialStatus"],[667,32,293,15],[667,34,295,43,"onPlaybackStatusUpdate"],[667,56,293,15],[667,58,295,67],[667,63,293,15],[667,64]],"functionMap":{"names":["<global>","getPermissionsAsync","requestPermissionsAsync","Recording","constructor","_cleanupForUnloadedRecorder","_pollingLoop","getStatusAsync","_performOperationAndHandleStatusAsync$argument_0","_disablePolling","_enablePollingIfNecessaryAndPossible","_callOnRecordingStatusUpdateForNewStatus","_performOperationAndHandleStatusAsync","setOnRecordingStatusUpdate","setProgressUpdateInterval","prepareToRecordAsync","startAsync","pauseAsync","stopAndUnloadAsync","getURI","createNewLoadedSound","createNewLoadedSoundAsync"],"mappings":"AAA;OCgH;CDE;OEC;CFE;OGC;ICC;2CCW;SDW;4BEC;SFU;8BGG;kECG,0CD;SHU;KDC;IMC;KNK;IOC;KPK;IQC;KRI;ISC;KTU;IUC;KVS;IWC;KXG;IYE;KZmC;IaC;0DRC,sCQ;KbC;IcC;0DTC,sCS;KdC;IeC;KfuB;IgBE;KhBE;IiBE;KjBG;IkBC;KlBO;CHC"}},"type":"js/module"}]}