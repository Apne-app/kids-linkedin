{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"react-native-reanimated","data":{"isAsync":false}},{"name":"./Vectors","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.scaleTranslation = exports.rotateTranslation = exports.transformOrigin = exports.translate = exports.translateZ = void 0;\n\n  var _reactNativeReanimated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"react-native-reanimated\"));\n\n  var _Vectors = _$$_REQUIRE(_dependencyMap[2], \"./Vectors\");\n\n  var divide = _reactNativeReanimated.default.divide,\n      sub = _reactNativeReanimated.default.sub,\n      multiply = _reactNativeReanimated.default.multiply,\n      add = _reactNativeReanimated.default.add,\n      cos = _reactNativeReanimated.default.cos,\n      sin = _reactNativeReanimated.default.sin;\n\n  var translateZ = function translateZ(perspective, z) {\n    return {\n      scale: divide(perspective, sub(perspective, z))\n    };\n  };\n\n  exports.translateZ = translateZ;\n\n  var translate = function translate(_ref) {\n    var translateX = _ref.x,\n        translateY = _ref.y;\n    return [{\n      translateX: translateX\n    }, {\n      translateY: translateY\n    }];\n  };\n\n  exports.translate = translate;\n\n  var transformOrigin = function transformOrigin(_ref2) {\n    var x = _ref2.x,\n        y = _ref2.y;\n\n    for (var _len = arguments.length, transformations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      transformations[_key - 1] = arguments[_key];\n    }\n\n    return [{\n      translateX: x\n    }, {\n      translateY: y\n    }].concat(transformations, [{\n      translateX: multiply(x, -1)\n    }, {\n      translateY: multiply(y, -1)\n    }]);\n  };\n\n  exports.transformOrigin = transformOrigin;\n\n  var rotateTranslation = function rotateTranslation(tr, rotate) {\n    return {\n      x: sub(multiply(tr.x, cos(rotate)), multiply(tr.y, sin(rotate))),\n      y: add(multiply(tr.x, sin(rotate)), multiply(tr.y, cos(rotate)))\n    };\n  };\n\n  exports.rotateTranslation = rotateTranslation;\n\n  var scaleTranslation = function scaleTranslation(tr, scale) {\n    return _Vectors.vec.multiply(tr, scale);\n  };\n\n  exports.scaleTranslation = scaleTranslation;\n});","lineCount":75,"map":[[9,0,1,0],[11,0,1,46],[13,0,1,73],[13,6,1,77,"divide"],[13,12,1,83],[13,15,1,84,"Animated"],[13,46,1,93,"divide"],[13,52,1,73],[14,0,1,73],[14,6,1,100,"sub"],[14,9,1,103],[14,12,1,104,"Animated"],[14,43,1,113,"sub"],[14,46,1,73],[15,0,1,73],[15,6,1,117,"multiply"],[15,14,1,125],[15,17,1,126,"Animated"],[15,48,1,135,"multiply"],[15,56,1,73],[16,0,1,73],[16,6,1,144,"add"],[16,9,1,147],[16,12,1,148,"Animated"],[16,43,1,157,"add"],[16,46,1,73],[17,0,1,73],[17,6,1,161,"cos"],[17,9,1,164],[17,12,1,165,"Animated"],[17,43,1,174,"cos"],[17,46,1,73],[18,0,1,73],[18,6,1,178,"sin"],[18,9,1,181],[18,12,1,182,"Animated"],[18,43,1,191,"sin"],[18,46,1,73],[20,0,1,202],[20,6,1,206,"translateZ"],[20,16,1,216],[20,19,1,217],[20,28,1,226,"translateZ"],[20,38,1,217],[20,39,1,237,"perspective"],[20,50,1,217],[20,52,1,249,"z"],[20,53,1,217],[20,55,1,251],[21,0,1,252],[21,11,1,258],[22,0,1,259,"scale"],[22,6,1,259,"scale"],[22,11,1,264],[22,13,1,265,"divide"],[22,19,1,271],[22,20,1,272,"perspective"],[22,31,1,271],[22,33,1,284,"sub"],[22,36,1,287],[22,37,1,288,"perspective"],[22,48,1,287],[22,50,1,300,"z"],[22,51,1,287],[22,52,1,271],[23,0,1,258],[23,5,1,252],[24,0,1,306],[24,3,1,202],[28,0,1,314],[28,6,1,318,"translate"],[28,15,1,327],[28,18,1,328],[28,27,1,337,"translate"],[28,36,1,328],[28,37,1,347,"_ref"],[28,41,1,328],[28,43,1,352],[29,0,1,353],[29,8,1,357,"translateX"],[29,18,1,367],[29,21,1,368,"_ref"],[29,25,1,372],[29,26,1,373,"x"],[29,27,1,353],[30,0,1,353],[30,8,1,375,"translateY"],[30,18,1,385],[30,21,1,386,"_ref"],[30,25,1,390],[30,26,1,391,"y"],[30,27,1,353],[31,0,1,393],[31,11,1,399],[31,12,1,400],[32,0,1,401,"translateX"],[32,6,1,401,"translateX"],[32,16,1,411],[32,18,1,412,"translateX"],[33,0,1,400],[33,5,1,399],[33,7,1,424],[34,0,1,425,"translateY"],[34,6,1,425,"translateY"],[34,16,1,435],[34,18,1,436,"translateY"],[35,0,1,424],[35,5,1,399],[35,6,1,393],[36,0,1,450],[36,3,1,314],[40,0,1,458],[40,6,1,462,"transformOrigin"],[40,21,1,477],[40,24,1,478],[40,33,1,487,"transformOrigin"],[40,48,1,478],[40,49,1,503,"_ref2"],[40,54,1,478],[40,56,1,509],[41,0,1,510],[41,8,1,514,"x"],[41,9,1,515],[41,12,1,516,"_ref2"],[41,17,1,521],[41,18,1,522,"x"],[41,19,1,510],[42,0,1,510],[42,8,1,524,"y"],[42,9,1,525],[42,12,1,526,"_ref2"],[42,17,1,531],[42,18,1,532,"y"],[42,19,1,510],[44,0,1,534],[44,9,1,538],[44,13,1,542,"_len"],[44,17,1,546],[44,20,1,547,"arguments"],[44,29,1,556],[44,30,1,557,"length"],[44,36,1,538],[44,38,1,564,"transformations"],[44,53,1,579],[44,56,1,580],[44,60,1,584,"Array"],[44,65,1,580],[44,66,1,590,"_len"],[44,70,1,594],[44,73,1,595],[44,74,1,590],[44,77,1,597,"_len"],[44,81,1,601],[44,84,1,602],[44,85,1,590],[44,88,1,604],[44,89,1,580],[44,90,1,538],[44,92,1,607,"_key"],[44,96,1,611],[44,99,1,612],[44,100,1,534],[44,102,1,614,"_key"],[44,106,1,618],[44,109,1,619,"_len"],[44,113,1,534],[44,115,1,624,"_key"],[44,119,1,628],[44,121,1,534],[44,123,1,631],[45,0,1,632,"transformations"],[45,6,1,632,"transformations"],[45,21,1,647],[45,22,1,648,"_key"],[45,26,1,652],[45,29,1,653],[45,30,1,647],[45,31,1,632],[45,34,1,656,"arguments"],[45,43,1,665],[45,44,1,666,"_key"],[45,48,1,665],[45,49,1,632],[46,0,1,673],[48,0,1,673],[48,11,1,679],[48,12,1,680],[49,0,1,681,"translateX"],[49,6,1,681,"translateX"],[49,16,1,691],[49,18,1,692,"x"],[50,0,1,680],[50,5,1,679],[50,7,1,695],[51,0,1,696,"translateY"],[51,6,1,696,"translateY"],[51,16,1,706],[51,18,1,707,"y"],[52,0,1,695],[52,5,1,679],[52,7,1,711,"concat"],[52,13,1,679],[52,14,1,718,"transformations"],[52,29,1,679],[52,31,1,734],[52,32,1,735],[53,0,1,736,"translateX"],[53,6,1,736,"translateX"],[53,16,1,746],[53,18,1,747,"multiply"],[53,26,1,755],[53,27,1,756,"x"],[53,28,1,755],[53,30,1,758],[53,31,1,759],[53,32,1,755],[54,0,1,735],[54,5,1,734],[54,7,1,763],[55,0,1,764,"translateY"],[55,6,1,764,"translateY"],[55,16,1,774],[55,18,1,775,"multiply"],[55,26,1,783],[55,27,1,784,"y"],[55,28,1,783],[55,30,1,786],[55,31,1,787],[55,32,1,783],[56,0,1,763],[56,5,1,734],[56,6,1,679],[56,7,1,673],[57,0,1,794],[57,3,1,458],[61,0,1,802],[61,6,1,806,"rotateTranslation"],[61,23,1,823],[61,26,1,824],[61,35,1,833,"rotateTranslation"],[61,52,1,824],[61,53,1,851,"tr"],[61,55,1,824],[61,57,1,854,"rotate"],[61,63,1,824],[61,65,1,861],[62,0,1,862],[62,11,1,868],[63,0,1,869,"x"],[63,6,1,869,"x"],[63,7,1,870],[63,9,1,871,"sub"],[63,12,1,874],[63,13,1,875,"multiply"],[63,21,1,883],[63,22,1,884,"tr"],[63,24,1,886],[63,25,1,887,"x"],[63,26,1,883],[63,28,1,889,"cos"],[63,31,1,892],[63,32,1,893,"rotate"],[63,38,1,892],[63,39,1,883],[63,40,1,874],[63,42,1,902,"multiply"],[63,50,1,910],[63,51,1,911,"tr"],[63,53,1,913],[63,54,1,914,"y"],[63,55,1,910],[63,57,1,916,"sin"],[63,60,1,919],[63,61,1,920,"rotate"],[63,67,1,919],[63,68,1,910],[63,69,1,874],[63,70,1,868],[64,0,1,930,"y"],[64,6,1,930,"y"],[64,7,1,931],[64,9,1,932,"add"],[64,12,1,935],[64,13,1,936,"multiply"],[64,21,1,944],[64,22,1,945,"tr"],[64,24,1,947],[64,25,1,948,"x"],[64,26,1,944],[64,28,1,950,"sin"],[64,31,1,953],[64,32,1,954,"rotate"],[64,38,1,953],[64,39,1,944],[64,40,1,935],[64,42,1,963,"multiply"],[64,50,1,971],[64,51,1,972,"tr"],[64,53,1,974],[64,54,1,975,"y"],[64,55,1,971],[64,57,1,977,"cos"],[64,60,1,980],[64,61,1,981,"rotate"],[64,67,1,980],[64,68,1,971],[64,69,1,935],[65,0,1,868],[65,5,1,862],[66,0,1,993],[66,3,1,802],[70,0,1,1001],[70,6,1,1005,"scaleTranslation"],[70,22,1,1021],[70,25,1,1022],[70,34,1,1031,"scaleTranslation"],[70,50,1,1022],[70,51,1,1048,"tr"],[70,53,1,1022],[70,55,1,1051,"scale"],[70,60,1,1022],[70,62,1,1057],[71,0,1,1058],[71,11,1,1065,"vec"],[71,24,1,1069,"multiply"],[71,32,1,1065],[71,33,1,1078,"tr"],[71,35,1,1065],[71,37,1,1081,"scale"],[71,42,1,1065],[71,43,1,1058],[72,0,1,1089],[72,3,1,1001]],"functionMap":{"names":["<global>","translateZ","translate","transformOrigin","rotateTranslation","scaleTranslation"],"mappings":"AAA,yNC,yFD,sBE,0HF,4BG,4TH,8BI,yKJ,6BK,mEL"}},"type":"js/module"}]}