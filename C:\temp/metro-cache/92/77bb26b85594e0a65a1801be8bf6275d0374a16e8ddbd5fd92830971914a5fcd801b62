{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"color","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"./DarkTheme","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = overlay;\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"color\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _DarkTheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DarkTheme\"));\n\n  var isAnimatedValue = function isAnimatedValue(it) {\n    return it instanceof _reactNative.Animated.Value;\n  };\n\n  function overlay(elevation) {\n    var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DarkTheme.default.colors.surface;\n\n    if (isAnimatedValue(elevation)) {\n      var inputRange = [0, 1, 2, 3, 8, 24];\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          return calculateColor(surfaceColor, elevation);\n        })\n      });\n    }\n\n    return calculateColor(surfaceColor, elevation);\n  }\n\n  function calculateColor(surfaceColor) {\n    var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var overlayTransparency;\n\n    if (elevation >= 1 && elevation <= 24) {\n      overlayTransparency = elevationOverlayTransparency[elevation];\n    } else if (elevation > 24) {\n      overlayTransparency = elevationOverlayTransparency[24];\n    } else {\n      overlayTransparency = elevationOverlayTransparency[1];\n    }\n\n    return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();\n  }\n\n  var elevationOverlayTransparency = {\n    1: 5,\n    2: 7,\n    3: 8,\n    4: 9,\n    5: 10,\n    6: 11,\n    7: 11.5,\n    8: 12,\n    9: 12.5,\n    10: 13,\n    11: 13.5,\n    12: 14,\n    13: 14.25,\n    14: 14.5,\n    15: 14.75,\n    16: 15,\n    17: 15.12,\n    18: 15.24,\n    19: 15.36,\n    20: 15.48,\n    21: 15.6,\n    22: 15.72,\n    23: 15.84,\n    24: 16\n  };\n});","lineCount":76,"map":[[9,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,5,0],[15,6,5,6,"isAnimatedValue"],[15,21,5,21],[15,24,5,24],[15,33,5,6,"isAnimatedValue"],[15,48,5,24],[15,49,6,2,"it"],[15,51,5,24],[16,0,5,24],[16,11,7,27,"it"],[16,13,7,29],[16,25,7,41,"Animated"],[16,47,7,50,"Value"],[16,52,5,24],[17,0,5,24],[17,3,5,0],[19,0,9,15],[19,11,9,24,"overlay"],[19,18,9,15],[19,19,10,2,"elevation"],[19,28,9,15],[19,30,12,62],[20,0,12,62],[20,8,11,2,"surfaceColor"],[20,20,12,62],[20,91,11,25,"DarkTheme"],[20,110,11,35,"colors"],[20,116,11,25],[20,117,11,42,"surface"],[20,124,12,62],[22,0,13,2],[22,8,13,6,"isAnimatedValue"],[22,23,13,21],[22,24,13,22,"elevation"],[22,33,13,21],[22,34,13,2],[22,36,13,34],[23,0,14,4],[23,10,14,10,"inputRange"],[23,20,14,20],[23,23,14,23],[23,24,14,24],[23,25,14,23],[23,27,14,27],[23,28,14,23],[23,30,14,30],[23,31,14,23],[23,33,14,33],[23,34,14,23],[23,36,14,36],[23,37,14,23],[23,39,14,39],[23,41,14,23],[23,42,14,4],[24,0,17,4],[24,13,17,11,"elevation"],[24,22,17,20],[24,23,17,21,"interpolate"],[24,34,17,11],[24,35,17,33],[25,0,18,6,"inputRange"],[25,8,18,6,"inputRange"],[25,18,18,16],[25,20,18,6,"inputRange"],[25,30,17,33],[26,0,19,6,"outputRange"],[26,8,19,6,"outputRange"],[26,19,19,17],[26,21,19,19,"inputRange"],[26,31,19,29],[26,32,19,30,"map"],[26,35,19,19],[26,36,19,34],[26,46,19,35,"elevation"],[26,55,19,34],[26,57,19,49],[27,0,20,8],[27,17,20,15,"calculateColor"],[27,31,20,29],[27,32,20,30,"surfaceColor"],[27,44,20,29],[27,46,20,44,"elevation"],[27,55,20,29],[27,56,20,8],[28,0,21,7],[28,9,19,19],[29,0,17,33],[29,7,17,11],[29,8,17,4],[30,0,23,3],[32,0,26,2],[32,11,26,9,"calculateColor"],[32,25,26,23],[32,26,26,24,"surfaceColor"],[32,38,26,23],[32,40,26,38,"elevation"],[32,49,26,23],[32,50,26,2],[33,0,27,1],[35,0,29,0],[35,11,29,9,"calculateColor"],[35,25,29,0],[35,26,29,24,"surfaceColor"],[35,38,29,0],[35,40,29,69],[36,0,29,69],[36,8,29,46,"elevation"],[36,17,29,69],[36,88,29,66],[36,89,29,69],[37,0,30,2],[37,8,30,6,"overlayTransparency"],[37,27,30,2],[39,0,31,2],[39,8,31,6,"elevation"],[39,17,31,15],[39,21,31,19],[39,22,31,6],[39,26,31,24,"elevation"],[39,35,31,33],[39,39,31,37],[39,41,31,2],[39,43,31,41],[40,0,32,4,"overlayTransparency"],[40,6,32,4,"overlayTransparency"],[40,25,32,23],[40,28,32,26,"elevationOverlayTransparency"],[40,56,32,54],[40,57,32,55,"elevation"],[40,66,32,54],[40,67,32,4],[41,0,33,3],[41,5,31,2],[41,11,33,9],[41,15,33,13,"elevation"],[41,24,33,22],[41,27,33,25],[41,29,33,9],[41,31,33,29],[42,0,34,4,"overlayTransparency"],[42,6,34,4,"overlayTransparency"],[42,25,34,23],[42,28,34,26,"elevationOverlayTransparency"],[42,56,34,54],[42,57,34,55],[42,59,34,54],[42,60,34,4],[43,0,35,3],[43,5,33,9],[43,11,35,9],[44,0,36,4,"overlayTransparency"],[44,6,36,4,"overlayTransparency"],[44,25,36,23],[44,28,36,26,"elevationOverlayTransparency"],[44,56,36,54],[44,57,36,55],[44,58,36,54],[44,59,36,4],[45,0,37,3],[47,0,38,2],[47,11,38,9],[47,31,38,15,"surfaceColor"],[47,43,38,9],[47,45,39,5,"mix"],[47,48,38,9],[47,49,39,9],[47,69,39,15],[47,76,39,9],[47,77,38,9],[47,79,39,25,"overlayTransparency"],[47,98,39,44],[47,101,39,47],[47,105,38,9],[47,107,40,5,"hex"],[47,110,38,9],[47,112,38,2],[48,0,41,1],[50,0,43,0],[50,6,43,6,"elevationOverlayTransparency"],[50,34,43,58],[50,37,43,61],[51,0,44,2],[51,7,44,5],[51,8,43,61],[52,0,45,2],[52,7,45,5],[52,8,43,61],[53,0,46,2],[53,7,46,5],[53,8,43,61],[54,0,47,2],[54,7,47,5],[54,8,43,61],[55,0,48,2],[55,7,48,5],[55,9,43,61],[56,0,49,2],[56,7,49,5],[56,9,43,61],[57,0,50,2],[57,7,50,5],[57,11,43,61],[58,0,51,2],[58,7,51,5],[58,9,43,61],[59,0,52,2],[59,7,52,5],[59,11,43,61],[60,0,53,2],[60,8,53,6],[60,10,43,61],[61,0,54,2],[61,8,54,6],[61,12,43,61],[62,0,55,2],[62,8,55,6],[62,10,43,61],[63,0,56,2],[63,8,56,6],[63,13,43,61],[64,0,57,2],[64,8,57,6],[64,12,43,61],[65,0,58,2],[65,8,58,6],[65,13,43,61],[66,0,59,2],[66,8,59,6],[66,10,43,61],[67,0,60,2],[67,8,60,6],[67,13,43,61],[68,0,61,2],[68,8,61,6],[68,13,43,61],[69,0,62,2],[69,8,62,6],[69,13,43,61],[70,0,63,2],[70,8,63,6],[70,13,43,61],[71,0,64,2],[71,8,64,6],[71,12,43,61],[72,0,65,2],[72,8,65,6],[72,13,43,61],[73,0,66,2],[73,8,66,6],[73,13,43,61],[74,0,67,2],[74,8,67,6],[75,0,43,61],[75,3,43,0]],"functionMap":{"names":["<global>","isAnimatedValue","overlay","inputRange.map$argument_0","calculateColor"],"mappings":"AAA;wBCI;uDDE;eEE;kCCU;ODE;CFM;AIE;CJY"}},"type":"js/module"}]}