{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"./useNavigation","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var n=r(d[0]),o=r(d[1]);Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=function(n){var o=(0,t.default)();if(void 0!==arguments[1]){console.error(\"You passed a second argument to 'useFocusEffect', but it only accepts one argument. If you want to pass a dependency array, you can use 'React.useCallback':\\n\\nuseFocusEffect(\\n  React.useCallback(() => {\\n    // Your code here\\n  }, [depA, depB])\\n);\\n\\nSee usage guide: https://reactnavigation.org/docs/use-focus-effect\")}u.useEffect(function(){var u,t=!1,c=function(){var o=n();if(void 0===o||'function'==typeof o)return o};o.isFocused()&&(u=c(),t=!0);var s=o.addListener('focus',function(){t||(void 0!==u&&u(),u=c(),t=!0)}),f=o.addListener('blur',function(){void 0!==u&&u(),u=void 0,t=!1});return function(){void 0!==u&&u(),s(),f()}},[n,o])};var u=o(r(d[2])),t=n(r(d[3]))});","lineCount":1,"map":[[1,111,13,15],[1,120,13,39,"effect"],[1,123,14,2],[1,127,14,8,"navigation"],[1,130,14,21],[1,132,14,21,"_useNavigation"],[1,134,14,21,"default"],[1,145,16,2],[1,153,16,23,"undefined"],[1,157,16,6,"arguments"],[1,167,16,16],[1,170,16,34],[1,171,27,4,"console"],[1,179,27,12,"error"],[1,185,17,17],[1,510,30,2,"React"],[1,512,30,8,"useEffect"],[1,522,30,18],[1,533,31,4],[1,537,32,8,"cleanup"],[1,539,31,8,"isFocused"],[1,542,31,20],[1,544,34,10,"callback"],[1,546,34,21],[1,557,35,6],[1,561,35,12,"destroy"],[1,563,35,22,"effect"],[1,567,37,6],[1,575,37,22,"undefined"],[1,579,37,10,"destroy"],[1,582,37,54],[1,601,37,42,"destroy"],[1,603,38,8],[1,610,38,15,"destroy"],[1,613,73,8,"navigation"],[1,615,73,19,"isFocused"],[1,629,74,6,"cleanup"],[1,631,74,16,"callback"],[1,635,75,6,"isFocused"],[1,638,75,18],[1,641,78,4],[1,645,78,10,"unsubscribeFocus"],[1,647,78,29,"navigation"],[1,649,78,40,"addListener"],[1,661,78,52],[1,669,78,61],[1,680,81,10,"isFocused"],[1,689,85,22,"undefined"],[1,693,85,10,"cleanup"],[1,696,86,8,"cleanup"],[1,700,89,6,"cleanup"],[1,702,89,16,"callback"],[1,706,90,6,"isFocused"],[1,709,90,18],[1,714,93,10,"unsubscribeBlur"],[1,716,93,28,"navigation"],[1,718,93,39,"addListener"],[1,730,93,51],[1,737,93,59],[1,753,94,22,"undefined"],[1,757,94,10,"cleanup"],[1,760,95,8,"cleanup"],[1,764,98,6,"cleanup"],[1,771,98,16,"undefined"],[1,773,99,6,"isFocused"],[1,776,99,18],[1,780,102,4],[1,787,102,11],[1,803,103,22,"undefined"],[1,807,103,10,"cleanup"],[1,810,104,8,"cleanup"],[1,814,107,6,"unsubscribeFocus"],[1,818,108,6,"unsubscribeBlur"],[1,825,110,6,"effect"],[1,827,110,14,"navigation"],[1,832,1,0],[1,836,1,0,"React"],[1,838,1,0,"_interopRequireWildcard"],[1,840,1,0,"r"],[1,842,1,0,"d"],[1,844,1,0],[1,849,2,0,"_useNavigation"],[1,851,2,0,"_interopRequireDefault"],[1,853,2,0,"r"],[1,855,2,0,"d"],[1,857,2,0]],"functionMap":{"names":["<global>","useFocusEffect","React.useEffect$argument_0","callback","navigation.addListener$argument_1","<anonymous>"],"mappings":"AAA;eCY;kBCiB;qBCI;KDoC;6DEQ;KFa;2DEE;KFO;WGE;KHO;GDC;CDC"}},"type":"js/module"}]}