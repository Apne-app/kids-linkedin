{"dependencies":[{"name":"./_isArray","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":21}}]}},{"name":"./_isTransformer","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":27}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _isArray = _$$_REQUIRE(_dependencyMap[0], \"./_isArray\");\n\n  var _isTransformer = _$$_REQUIRE(_dependencyMap[1], \"./_isTransformer\");\n\n  function _dispatchable(methodNames, xf, fn) {\n    return function () {\n      if (arguments.length === 0) {\n        return fn();\n      }\n\n      var args = Array.prototype.slice.call(arguments, 0);\n      var obj = args.pop();\n\n      if (!_isArray(obj)) {\n        var idx = 0;\n\n        while (idx < methodNames.length) {\n          if (typeof obj[methodNames[idx]] === 'function') {\n            return obj[methodNames[idx]].apply(obj, args);\n          }\n\n          idx += 1;\n        }\n\n        if (_isTransformer(obj)) {\n          var transducer = xf.apply(null, args);\n          return transducer(obj);\n        }\n      }\n\n      return fn.apply(this, arguments);\n    };\n  }\n\n  module.exports = _dispatchable;\n});","lineCount":37,"map":[[2,0,1,0],[2,6,1,4,"_isArray"],[2,14,1,12],[2,17,3,0,"require"],[2,28,3,7],[2,61,1,0],[4,0,5,0],[4,6,5,4,"_isTransformer"],[4,20,5,18],[4,23,7,0,"require"],[4,34,7,7],[4,73,5,0],[6,0,24,0],[6,11,24,9,"_dispatchable"],[6,24,24,0],[6,25,24,23,"methodNames"],[6,36,24,0],[6,38,24,36,"xf"],[6,40,24,0],[6,42,24,40,"fn"],[6,44,24,0],[6,46,24,44],[7,0,25,2],[7,11,25,9],[7,23,25,21],[8,0,26,4],[8,10,26,8,"arguments"],[8,19,26,17],[8,20,26,18,"length"],[8,26,26,8],[8,31,26,29],[8,32,26,4],[8,34,26,32],[9,0,27,6],[9,15,27,13,"fn"],[9,17,27,15],[9,19,27,6],[10,0,28,5],[12,0,30,4],[12,10,30,8,"args"],[12,14,30,12],[12,17,30,15,"Array"],[12,22,30,20],[12,23,30,21,"prototype"],[12,32,30,15],[12,33,30,31,"slice"],[12,38,30,15],[12,39,30,37,"call"],[12,43,30,15],[12,44,30,42,"arguments"],[12,53,30,15],[12,55,30,53],[12,56,30,15],[12,57,30,4],[13,0,31,4],[13,10,31,8,"obj"],[13,13,31,11],[13,16,31,14,"args"],[13,20,31,18],[13,21,31,19,"pop"],[13,24,31,14],[13,26,31,4],[15,0,33,4],[15,10,33,8],[15,11,33,9,"_isArray"],[15,19,33,17],[15,20,33,18,"obj"],[15,23,33,17],[15,24,33,4],[15,26,33,24],[16,0,34,6],[16,12,34,10,"idx"],[16,15,34,13],[16,18,34,16],[16,19,34,6],[18,0,36,6],[18,15,36,13,"idx"],[18,18,36,16],[18,21,36,19,"methodNames"],[18,32,36,30],[18,33,36,31,"length"],[18,39,36,6],[18,41,36,39],[19,0,37,8],[19,14,37,12],[19,21,37,19,"obj"],[19,24,37,22],[19,25,37,23,"methodNames"],[19,36,37,34],[19,37,37,35,"idx"],[19,40,37,34],[19,41,37,22],[19,42,37,12],[19,47,37,45],[19,57,37,8],[19,59,37,57],[20,0,38,10],[20,19,38,17,"obj"],[20,22,38,20],[20,23,38,21,"methodNames"],[20,34,38,32],[20,35,38,33,"idx"],[20,38,38,32],[20,39,38,20],[20,40,38,17],[20,41,38,39,"apply"],[20,46,38,17],[20,47,38,45,"obj"],[20,50,38,17],[20,52,38,50,"args"],[20,56,38,17],[20,57,38,10],[21,0,39,9],[23,0,41,8,"idx"],[23,10,41,8,"idx"],[23,13,41,11],[23,17,41,15],[23,18,41,8],[24,0,42,7],[26,0,44,6],[26,12,44,10,"_isTransformer"],[26,26,44,24],[26,27,44,25,"obj"],[26,30,44,24],[26,31,44,6],[26,33,44,31],[27,0,45,8],[27,14,45,12,"transducer"],[27,24,45,22],[27,27,45,25,"xf"],[27,29,45,27],[27,30,45,28,"apply"],[27,35,45,25],[27,36,45,34],[27,40,45,25],[27,42,45,40,"args"],[27,46,45,25],[27,47,45,8],[28,0,46,8],[28,17,46,15,"transducer"],[28,27,46,25],[28,28,46,26,"obj"],[28,31,46,25],[28,32,46,8],[29,0,47,7],[30,0,48,5],[32,0,50,4],[32,13,50,11,"fn"],[32,15,50,13],[32,16,50,14,"apply"],[32,21,50,11],[32,22,50,20],[32,26,50,11],[32,28,50,26,"arguments"],[32,37,50,11],[32,38,50,4],[33,0,51,3],[33,5,25,2],[34,0,52,1],[36,0,54,0,"module"],[36,2,54,0,"module"],[36,8,54,6],[36,9,54,7,"exports"],[36,16,54,0],[36,19,54,17,"_dispatchable"],[36,32,54,0]],"functionMap":{"names":["<global>","_dispatchable","<anonymous>"],"mappings":"AAA;ACuB;SCC;GD0B;CDC"}},"type":"js/module"}]}