{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], \"./_xfBase\");\n\n  var XFindLast = function () {\n    function XFindLast(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFindLast.prototype['@@transducer/result'] = function (result) {\n      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n    };\n\n    XFindLast.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f(input)) {\n        this.last = input;\n      }\n\n      return result;\n    };\n\n    return XFindLast;\n  }();\n\n  var _xfindLast = _curry2(function _xfindLast(f, xf) {\n    return new XFindLast(f, xf);\n  });\n\n  module.exports = _xfindLast;\n});","lineCount":34,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_xfBase"],[4,13,5,11],[4,16,7,0,"require"],[4,27,7,7],[4,59,5,0],[6,0,9,0],[6,6,9,4,"XFindLast"],[6,15,9,13],[6,18,11,0],[6,30,11,12],[7,0,12,2],[7,13,12,11,"XFindLast"],[7,22,12,2],[7,23,12,21,"f"],[7,24,12,2],[7,26,12,24,"xf"],[7,28,12,2],[7,30,12,28],[8,0,13,4],[8,11,13,9,"xf"],[8,13,13,4],[8,16,13,14,"xf"],[8,18,13,4],[9,0,14,4],[9,11,14,9,"f"],[9,12,14,4],[9,15,14,13,"f"],[9,16,14,4],[10,0,15,3],[12,0,17,2,"XFindLast"],[12,4,17,2,"XFindLast"],[12,13,17,11],[12,14,17,12,"prototype"],[12,23,17,2],[12,24,17,22],[12,43,17,2],[12,47,17,45,"_xfBase"],[12,54,17,52],[12,55,17,53,"init"],[12,59,17,2],[14,0,19,2,"XFindLast"],[14,4,19,2,"XFindLast"],[14,13,19,11],[14,14,19,12,"prototype"],[14,23,19,2],[14,24,19,22],[14,45,19,2],[14,49,19,47],[14,59,19,57,"result"],[14,65,19,47],[14,67,19,65],[15,0,20,4],[15,13,20,11],[15,18,20,16,"xf"],[15,20,20,11],[15,21,20,19],[15,42,20,11],[15,44,20,42],[15,49,20,47,"xf"],[15,51,20,42],[15,52,20,50],[15,71,20,42],[15,73,20,71,"result"],[15,79,20,42],[15,81,20,79],[15,86,20,84,"last"],[15,90,20,42],[15,91,20,11],[15,92,20,4],[16,0,21,3],[16,5,19,2],[18,0,23,2,"XFindLast"],[18,4,23,2,"XFindLast"],[18,13,23,11],[18,14,23,12,"prototype"],[18,23,23,2],[18,24,23,22],[18,43,23,2],[18,47,23,45],[18,57,23,55,"result"],[18,63,23,45],[18,65,23,63,"input"],[18,70,23,45],[18,72,23,70],[19,0,24,4],[19,10,24,8],[19,15,24,13,"f"],[19,16,24,8],[19,17,24,15,"input"],[19,22,24,8],[19,23,24,4],[19,25,24,23],[20,0,25,6],[20,13,25,11,"last"],[20,17,25,6],[20,20,25,18,"input"],[20,25,25,6],[21,0,26,5],[23,0,28,4],[23,13,28,11,"result"],[23,19,28,4],[24,0,29,3],[24,5,23,2],[26,0,31,2],[26,11,31,9,"XFindLast"],[26,20,31,2],[27,0,32,1],[27,3,11,0],[27,5,9,0],[29,0,34,0],[29,6,34,4,"_xfindLast"],[29,16,34,14],[29,19,36,0,"_curry2"],[29,26,36,7],[29,27,36,8],[29,36,36,17,"_xfindLast"],[29,46,36,8],[29,47,36,28,"f"],[29,48,36,8],[29,50,36,31,"xf"],[29,52,36,8],[29,54,36,35],[30,0,37,2],[30,11,37,9],[30,15,37,13,"XFindLast"],[30,24,37,9],[30,25,37,23,"f"],[30,26,37,9],[30,28,37,26,"xf"],[30,30,37,9],[30,31,37,2],[31,0,38,1],[31,3,36,7],[31,4,34,0],[33,0,40,0,"module"],[33,2,40,0,"module"],[33,8,40,6],[33,9,40,7,"exports"],[33,16,40,0],[33,19,40,17,"_xfindLast"],[33,29,40,0]],"functionMap":{"names":["<global>","<anonymous>","XFindLast","XFindLast.prototype.transducerResult","XFindLast.prototype.transducerStep","_xfindLast"],"mappings":"AAA;ACU;ECC;GDG;+CEI;GFE;6CGE;GHM;CDG;QKI;CLE"}},"type":"js/module"}]}