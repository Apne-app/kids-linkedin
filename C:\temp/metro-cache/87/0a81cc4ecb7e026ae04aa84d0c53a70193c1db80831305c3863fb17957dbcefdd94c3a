{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], \"./_xfBase\");\n\n  var XFindLast = function () {\n    function XFindLast(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFindLast.prototype['@@transducer/result'] = function (result) {\n      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n    };\n\n    XFindLast.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f(input)) {\n        this.last = input;\n      }\n\n      return result;\n    };\n\n    return XFindLast;\n  }();\n\n  var _xfindLast = _curry2(function _xfindLast(f, xf) {\n    return new XFindLast(f, xf);\n  });\n\n  module.exports = _xfindLast;\n});","lineCount":34,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_xfBase"],[4,13,3,11],[4,16,3,27,"require"],[4,27,3,34],[4,59,3,0],[6,0,5,0],[6,6,5,4,"XFindLast"],[6,15,5,13],[6,18,5,29],[6,30,5,41],[7,0,7,2],[7,13,7,11,"XFindLast"],[7,22,7,2],[7,23,7,21,"f"],[7,24,7,2],[7,26,7,24,"xf"],[7,28,7,2],[7,30,7,28],[8,0,8,4],[8,11,8,9,"xf"],[8,13,8,4],[8,16,8,14,"xf"],[8,18,8,4],[9,0,9,4],[9,11,9,9,"f"],[9,12,9,4],[9,15,9,13,"f"],[9,16,9,4],[10,0,10,3],[12,0,11,2,"XFindLast"],[12,4,11,2,"XFindLast"],[12,13,11,11],[12,14,11,12,"prototype"],[12,23,11,2],[12,24,11,22],[12,43,11,2],[12,47,11,45,"_xfBase"],[12,54,11,52],[12,55,11,53,"init"],[12,59,11,2],[14,0,12,2,"XFindLast"],[14,4,12,2,"XFindLast"],[14,13,12,11],[14,14,12,12,"prototype"],[14,23,12,2],[14,24,12,22],[14,45,12,2],[14,49,12,47],[14,59,12,57,"result"],[14,65,12,47],[14,67,12,65],[15,0,13,4],[15,13,13,11],[15,18,13,16,"xf"],[15,20,13,11],[15,21,13,19],[15,42,13,11],[15,44,13,42],[15,49,13,47,"xf"],[15,51,13,42],[15,52,13,50],[15,71,13,42],[15,73,13,71,"result"],[15,79,13,42],[15,81,13,79],[15,86,13,84,"last"],[15,90,13,42],[15,91,13,11],[15,92,13,4],[16,0,14,3],[16,5,12,2],[18,0,15,2,"XFindLast"],[18,4,15,2,"XFindLast"],[18,13,15,11],[18,14,15,12,"prototype"],[18,23,15,2],[18,24,15,22],[18,43,15,2],[18,47,15,45],[18,57,15,55,"result"],[18,63,15,45],[18,65,15,63,"input"],[18,70,15,45],[18,72,15,70],[19,0,16,4],[19,10,16,8],[19,15,16,13,"f"],[19,16,16,8],[19,17,16,15,"input"],[19,22,16,8],[19,23,16,4],[19,25,16,23],[20,0,17,6],[20,13,17,11,"last"],[20,17,17,6],[20,20,17,18,"input"],[20,25,17,6],[21,0,18,5],[23,0,19,4],[23,13,19,11,"result"],[23,19,19,4],[24,0,20,3],[24,5,15,2],[26,0,22,2],[26,11,22,9,"XFindLast"],[26,20,22,2],[27,0,23,1],[27,3,5,29],[27,5,5,0],[29,0,25,0],[29,6,25,4,"_xfindLast"],[29,16,25,14],[29,19,25,30,"_curry2"],[29,26,25,37],[29,27,25,38],[29,36,25,47,"_xfindLast"],[29,46,25,38],[29,47,25,58,"f"],[29,48,25,38],[29,50,25,61,"xf"],[29,52,25,38],[29,54,25,65],[30,0,26,2],[30,11,26,9],[30,15,26,13,"XFindLast"],[30,24,26,9],[30,25,26,23,"f"],[30,26,26,9],[30,28,26,26,"xf"],[30,30,26,9],[30,31,26,2],[31,0,27,1],[31,3,25,37],[31,4,25,0],[33,0,28,0,"module"],[33,2,28,0,"module"],[33,8,28,6],[33,9,28,7,"exports"],[33,16,28,0],[33,19,28,17,"_xfindLast"],[33,29,28,0]],"functionMap":{"names":["<global>","<anonymous>","XFindLast","XFindLast.prototype.transducerResult","XFindLast.prototype.transducerStep","_xfindLast"],"mappings":"AAA;6BCI;ECE;GDG;+CEE;GFE;6CGC;GHK;CDG;sCKE;CLE"}},"type":"js/module"}]}