{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), customGHEventsConfig);\n\n  if (UIManager.getConstants) {\n    UIManager.getConstants().genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.getConstants().genericDirectEventTypes), customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      var _super = _createSuper(Handler);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          if (_reactNative.Platform.OS === 'web') {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag, _this._propsRef);\n          } else {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n          }\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n        _this._propsRef = _react.default.createRef(props);\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes || propTypes), customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes || propTypes), customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread(_objectSpread({}, this.constructor.propTypes || propTypes), customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var events = {\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          };\n          this._propsRef.current = events;\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, _objectSpread({\n            ref: this._refHandler,\n            collapsable: false\n          }, events), grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    return Handler;\n  }\n});","lineCount":371,"map":[[21,0,1,0],[23,0,2,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[41,0,12,0],[41,11,12,9,"findNodeHandle"],[41,25,12,0],[41,26,12,24,"node"],[41,30,12,0],[41,32,12,30],[42,0,13,2],[42,8,13,6,"Platform"],[42,30,13,15,"OS"],[42,32,13,6],[42,37,13,22],[42,42,13,2],[42,44,13,29],[42,51,13,36,"node"],[42,55,13,29],[43,0,14,2],[43,11,14,9],[43,44,14,26,"node"],[43,48,14,9],[43,49,14,2],[44,0,15,1],[46,30,17,27,"NativeModules"],[46,56],[46,57,17,8,"UIManager"],[46,66],[47,6,17,8,"UIManager"],[47,15],[47,53,17,20],[47,55],[48,0,19,0],[48,6,19,6,"customGHEventsConfig"],[48,26,19,26],[48,29,19,29],[49,0,20,2,"onGestureHandlerEvent"],[49,4,20,2,"onGestureHandlerEvent"],[49,25,20,23],[49,27,20,25],[50,0,20,27,"registrationName"],[50,6,20,27,"registrationName"],[50,22,20,43],[50,24,20,45],[51,0,20,25],[51,5,19,29],[52,0,21,2,"onGestureHandlerStateChange"],[52,4,21,2,"onGestureHandlerStateChange"],[52,31,21,29],[52,33,21,31],[53,0,22,4,"registrationName"],[53,6,22,4,"registrationName"],[53,22,22,20],[53,24,22,22],[54,0,21,31],[55,0,19,29],[55,3,19,0],[56,0,30,0,"UIManager"],[56,2,30,0,"UIManager"],[56,11,30,9],[56,12,30,10,"genericDirectEventTypes"],[56,35,30,0],[56,70,31,5,"UIManager"],[56,79,31,14],[56,80,31,15,"genericDirectEventTypes"],[56,103,30,0],[56,106,32,5,"customGHEventsConfig"],[56,126,30,0],[58,0,37,0],[58,6,37,4,"UIManager"],[58,15,37,13],[58,16,37,14,"getConstants"],[58,28,37,0],[58,30,37,28],[59,0,38,2,"UIManager"],[59,4,38,2,"UIManager"],[59,13,38,11],[59,14,38,12,"getConstants"],[59,26,38,2],[59,29,38,27,"genericDirectEventTypes"],[59,52,38,2],[59,87,39,7,"UIManager"],[59,96,39,16],[59,97,39,17,"getConstants"],[59,109,39,7],[59,112,39,32,"genericDirectEventTypes"],[59,135,38,2],[59,138,40,7,"customGHEventsConfig"],[59,158,38,2],[60,0,42,1],[62,30,48,4,"UIManager"],[62,39],[62,40,46,2,"setJSResponder"],[62,54],[63,6,46,18,"oldSetJSResponder"],[63,23],[63,61,46,38],[63,73,46,44],[63,74,46,46],[63,75],[64,30,48,4,"UIManager"],[64,39],[64,40,47,2,"clearJSResponder"],[64,56],[65,6,47,20,"oldClearJSResponder"],[65,25],[65,63,47,42],[65,75,47,48],[65,76,47,50],[65,77],[67,0,49,0,"UIManager"],[67,2,49,0,"UIManager"],[67,11,49,9],[67,12,49,10,"setJSResponder"],[67,26,49,0],[67,29,49,27],[67,39,49,28,"tag"],[67,42,49,27],[67,44,49,33,"blockNativeResponder"],[67,64,49,27],[67,66,49,58],[68,0,50,2,"RNGestureHandlerModule"],[68,36,50,25,"handleSetJSResponder"],[68,56,50,2],[68,57,50,46,"tag"],[68,60,50,2],[68,62,50,51,"blockNativeResponder"],[68,82,50,2],[70,0,51,2,"oldSetJSResponder"],[70,4,51,2,"oldSetJSResponder"],[70,21,51,19],[70,22,51,20,"tag"],[70,25,51,19],[70,27,51,25,"blockNativeResponder"],[70,47,51,19],[70,48,51,2],[71,0,52,1],[71,3,49,0],[73,0,53,0,"UIManager"],[73,2,53,0,"UIManager"],[73,11,53,9],[73,12,53,10,"clearJSResponder"],[73,28,53,0],[73,31,53,29],[73,43,53,35],[74,0,54,2,"RNGestureHandlerModule"],[74,36,54,25,"handleClearJSResponder"],[74,58,54,2],[76,0,55,2,"oldClearJSResponder"],[76,4,55,2,"oldClearJSResponder"],[76,23,55,21],[77,0,56,1],[77,3,53,0],[79,0,58,0],[79,6,58,4,"handlerTag"],[79,16,58,14],[79,19,58,17],[79,20,58,0],[80,0,59,0],[80,6,59,6,"handlerIDToTag"],[80,20,59,20],[80,23,59,23],[80,25,59,0],[82,0,61,0],[82,11,61,9,"isConfigParam"],[82,24,61,0],[82,25,61,23,"param"],[82,30,61,0],[82,32,61,30,"name"],[82,36,61,0],[82,38,61,36],[83,0,64,2],[83,11,65,4,"param"],[83,16,65,9],[83,21,65,14,"undefined"],[83,30,65,4],[83,35,66,5,"param"],[83,40,66,10],[83,45,66,15,"Object"],[83,51,66,21],[83,52,66,22,"param"],[83,57,66,21],[83,58,66,5],[83,62,66,32],[83,64,66,34],[83,80,66,50,"param"],[83,85,66,32],[83,86,65,4],[83,91,67,4,"name"],[83,95,67,8],[83,100,67,13],[83,122,65,4],[83,126,68,4,"name"],[83,130,68,8],[83,135,68,13],[83,151,64,2],[84,0,70,1],[86,0,72,0],[86,11,72,9,"filterConfig"],[86,23,72,0],[86,24,72,22,"props"],[86,29,72,0],[86,31,72,29,"validProps"],[86,41,72,0],[86,43,72,56],[87,0,72,56],[87,8,72,41,"defaults"],[87,16,72,56],[87,87,72,52],[87,89,72,56],[89,0,73,2],[89,8,73,8,"res"],[89,11,73,11],[89,32,73,19,"defaults"],[89,40,73,11],[89,41,73,2],[91,0,74,2,"Object"],[91,4,74,2,"Object"],[91,10,74,8],[91,11,74,9,"keys"],[91,15,74,2],[91,16,74,14,"validProps"],[91,26,74,2],[91,28,74,26,"forEach"],[91,35,74,2],[91,36,74,34],[91,46,74,34,"key"],[91,49,74,37],[91,51,74,41],[92,0,75,4],[92,10,75,10,"value"],[92,15,75,15],[92,18,75,18,"props"],[92,23,75,23],[92,24,75,24,"key"],[92,27,75,23],[92,28,75,4],[94,0,76,4],[94,10,76,8,"isConfigParam"],[94,23,76,21],[94,24,76,22,"value"],[94,29,76,21],[94,31,76,29,"key"],[94,34,76,21],[94,35,76,4],[94,37,76,35],[95,0,77,6],[95,12,77,10,"value"],[95,18,77,15],[95,21,77,18,"props"],[95,26,77,23],[95,27,77,24,"key"],[95,30,77,23],[95,31,77,6],[97,0,78,6],[97,12,78,10,"key"],[97,15,78,13],[97,20,78,18],[97,42,78,10],[97,46,78,44,"key"],[97,49,78,47],[97,54,78,52],[97,63,78,6],[97,65,78,63],[98,0,79,8,"value"],[98,10,79,8,"value"],[98,16,79,13],[98,19,79,16,"transformIntoHandlerTags"],[98,43,79,40],[98,44,79,41,"props"],[98,49,79,46],[98,50,79,47,"key"],[98,53,79,46],[98,54,79,40],[98,55,79,8],[99,0,80,7],[99,9,78,6],[99,15,80,13],[99,19,80,17,"key"],[99,22,80,20],[99,27,80,25],[99,36,80,13],[99,38,80,36],[100,0,81,8],[100,14,81,12],[100,21,81,19,"value"],[100,27,81,12],[100,32,81,29],[100,40,81,8],[100,42,81,39],[101,0,82,10,"value"],[101,12,82,10,"value"],[101,18,82,15],[101,21,82,18],[102,0,82,20,"top"],[102,14,82,20,"top"],[102,17,82,23],[102,19,82,25,"value"],[102,25,82,18],[103,0,82,32,"left"],[103,14,82,32,"left"],[103,18,82,36],[103,20,82,38,"value"],[103,26,82,18],[104,0,82,45,"bottom"],[104,14,82,45,"bottom"],[104,20,82,51],[104,22,82,53,"value"],[104,28,82,18],[105,0,82,60,"right"],[105,14,82,60,"right"],[105,19,82,65],[105,21,82,67,"value"],[106,0,82,18],[106,13,82,10],[107,0,83,9],[108,0,84,7],[110,0,85,6,"res"],[110,8,85,6,"res"],[110,11,85,9],[110,12,85,10,"key"],[110,15,85,9],[110,16,85,6],[110,19,85,17,"value"],[110,25,85,6],[111,0,86,5],[112,0,87,3],[112,5,74,2],[113,0,88,2],[113,11,88,9,"res"],[113,14,88,2],[114,0,89,1],[116,0,91,0],[116,11,91,9,"transformIntoHandlerTags"],[116,35,91,0],[116,36,91,34,"handlerIDs"],[116,46,91,0],[116,48,91,46],[117,0,92,2],[117,8,92,6],[117,9,92,7,"Array"],[117,14,92,12],[117,15,92,13,"isArray"],[117,22,92,7],[117,23,92,21,"handlerIDs"],[117,33,92,7],[117,34,92,2],[117,36,92,34],[118,0,93,4,"handlerIDs"],[118,6,93,4,"handlerIDs"],[118,16,93,14],[118,19,93,17],[118,20,93,18,"handlerIDs"],[118,30,93,17],[118,31,93,4],[119,0,94,3],[121,0,96,2],[121,8,96,6,"Platform"],[121,30,96,15,"OS"],[121,32,96,6],[121,37,96,22],[121,42,96,2],[121,44,96,29],[122,0,97,4],[122,13,97,11,"handlerIDs"],[122,23,97,21],[122,24,97,22,"map"],[122,27,97,11],[122,28,97,26],[123,0,97,26],[123,12,97,29,"current"],[123,19,97,26],[123,27,97,29,"current"],[123,34,97,26],[124,0,97,26],[124,15,97,43,"current"],[124,22,97,26],[125,0,97,26],[125,7,97,11],[125,9,97,52,"filter"],[125,15,97,11],[125,16,97,59],[125,26,97,59,"handle"],[125,32,97,65],[126,0,97,65],[126,15,97,69,"handle"],[126,21,97,65],[127,0,97,65],[127,7,97,11],[127,8,97,4],[128,0,98,3],[130,0,100,2],[130,11,100,9,"handlerIDs"],[130,21,100,19],[130,22,101,5,"map"],[130,25,100,9],[130,26,102,6],[130,36,102,6,"handlerID"],[130,45,102,15],[131,0,102,15],[131,13,103,8,"handlerIDToTag"],[131,27,103,22],[131,28,103,23,"handlerID"],[131,37,103,22],[131,38,103,8],[131,42,104,9,"handlerID"],[131,51,104,18],[131,52,104,19,"current"],[131,59,104,9],[131,63,104,30,"handlerID"],[131,72,104,39],[131,73,104,40,"current"],[131,80,104,30],[131,81,104,48,"_handlerTag"],[131,92,103,8],[131,96,105,8],[131,97,105,9],[131,98,102,15],[132,0,102,15],[132,5,100,9],[132,7,107,5,"filter"],[132,13,100,9],[132,14,107,12],[132,24,107,12,"handlerTag"],[132,34,107,22],[133,0,107,22],[133,13,107,26,"handlerTag"],[133,23,107,36],[133,26,107,39],[133,27,107,22],[134,0,107,22],[134,5,100,9],[134,6,100,2],[135,0,108,1],[137,0,110,0],[137,11,110,9,"hasUnresolvedRefs"],[137,28,110,0],[137,29,110,27,"props"],[137,34,110,0],[137,36,110,34],[138,0,111,2],[138,8,111,8,"extract"],[138,15,111,15],[138,18,111,18],[138,27,111,8,"extract"],[138,34,111,18],[138,35,111,18,"refs"],[138,39,111,22],[138,41,111,26],[139,0,112,4],[139,10,112,8],[139,11,112,9,"Array"],[139,16,112,14],[139,17,112,15,"isArray"],[139,24,112,9],[139,25,112,23,"refs"],[139,29,112,9],[139,30,112,4],[139,32,112,30],[140,0,113,6],[140,15,113,13,"refs"],[140,19,113,17],[140,23,113,21,"refs"],[140,27,113,25],[140,28,113,26,"current"],[140,35,113,21],[140,40,113,38],[140,44,113,6],[141,0,114,5],[143,0,115,4],[143,13,115,11,"refs"],[143,17,115,15],[143,18,115,16,"some"],[143,22,115,11],[143,23,115,21],[143,33,115,21,"r"],[143,34,115,22],[144,0,115,22],[144,15,115,26,"r"],[144,16,115,27],[144,20,115,31,"r"],[144,21,115,32],[144,22,115,33,"current"],[144,29,115,31],[144,34,115,45],[144,38,115,22],[145,0,115,22],[145,7,115,11],[145,8,115,4],[146,0,116,3],[146,5,111,2],[148,0,117,2],[148,11,117,9,"extract"],[148,18,117,16],[148,19,117,17,"props"],[148,24,117,22],[148,25,117,23],[148,47,117,22],[148,48,117,16],[148,49,117,9],[148,53,117,51,"extract"],[148,60,117,58],[148,61,117,59,"props"],[148,66,117,64],[148,67,117,65],[148,76,117,64],[148,77,117,58],[148,78,117,2],[149,0,118,1],[151,0,120,0],[151,6,120,6,"stateToPropMappings"],[151,25,120,25],[151,108,121,3,"State"],[151,123,121,9,"BEGAN"],[151,128,120,25],[151,130,121,17],[151,139,120,25],[151,194,122,3,"State"],[151,209,122,9,"FAILED"],[151,215,120,25],[151,217,122,18],[151,227,120,25],[151,282,123,3,"State"],[151,297,123,9,"CANCELLED"],[151,306,120,25],[151,308,123,21],[151,321,120,25],[151,376,124,3,"State"],[151,391,124,9,"ACTIVE"],[151,397,120,25],[151,399,124,18],[151,412,120,25],[151,467,125,3,"State"],[151,482,125,9,"END"],[151,485,120,25],[151,487,125,15],[151,496,120,25],[151,520,120,0],[153,0,128,15],[153,11,128,24,"createHandler"],[153,24,128,15],[153,25,129,2,"handlerName"],[153,36,128,15],[153,38,134,2],[154,0,134,2],[154,8,130,2,"propTypes"],[154,17,134,2],[154,88,130,14],[154,90,134,2],[155,0,134,2],[155,8,131,2,"config"],[155,14,134,2],[155,85,131,11],[155,87,134,2],[156,0,134,2],[156,8,132,2,"transformProps"],[156,22,134,2],[157,0,134,2],[157,8,133,2,"customNativeProps"],[157,25,134,2],[157,96,133,22],[157,98,134,2],[159,0,134,2],[159,8,135,8,"Handler"],[159,15,134,2],[160,0,134,2],[162,0,134,2],[164,0,140,4],[164,23,140,16,"props"],[164,28,140,4],[164,30,140,23],[165,0,140,23],[167,0,140,23],[168,0,141,6],[168,34,141,12,"props"],[168,39,141,6],[170,0,140,23],[170,14,154,4,"_onGestureHandlerEvent"],[170,36,140,23],[170,39,154,29],[170,49,154,29,"event"],[170,54,154,34],[170,56,154,38],[171,0,155,6],[171,14,155,10,"event"],[171,19,155,15],[171,20,155,16,"nativeEvent"],[171,31,155,10],[171,32,155,28,"handlerTag"],[171,42,155,10],[171,47,155,43],[171,53,155,48,"_handlerTag"],[171,64,155,6],[171,66,155,61],[172,0,156,8],[172,18,156,13,"props"],[172,23,156,8],[172,24,156,19,"onGestureEvent"],[172,38,156,8],[172,42,156,37],[172,48,156,42,"props"],[172,53,156,37],[172,54,156,48,"onGestureEvent"],[172,68,156,37],[172,69,156,63,"event"],[172,74,156,37],[172,75,156,8],[173,0,157,7],[173,11,155,6],[173,17,157,13],[174,0,158,8],[174,18,158,13,"props"],[174,23,158,8],[174,24,158,19,"onGestureHandlerEvent"],[174,45,158,8],[174,49,159,10],[174,55,159,15,"props"],[174,60,159,10],[174,61,159,21,"onGestureHandlerEvent"],[174,82,159,10],[174,83,159,43,"event"],[174,88,159,10],[174,89,158,8],[175,0,160,7],[176,0,161,5],[176,9,140,23],[178,0,140,23],[178,14,163,4,"_onGestureHandlerStateChange"],[178,42,140,23],[178,45,163,35],[178,55,163,35,"event"],[178,60,163,40],[178,62,163,44],[179,0,164,6],[179,14,164,10,"event"],[179,19,164,15],[179,20,164,16,"nativeEvent"],[179,31,164,10],[179,32,164,28,"handlerTag"],[179,42,164,10],[179,47,164,43],[179,53,164,48,"_handlerTag"],[179,64,164,6],[179,66,164,61],[180,0,165,8],[180,18,165,13,"props"],[180,23,165,8],[180,24,165,19,"onHandlerStateChange"],[180,44,165,8],[180,48,166,10],[180,54,166,15,"props"],[180,59,166,10],[180,60,166,21,"onHandlerStateChange"],[180,80,166,10],[180,81,166,42,"event"],[180,86,166,10],[180,87,165,8],[181,0,168,8],[181,16,168,14,"stateEventName"],[181,30,168,28],[181,33,168,31,"stateToPropMappings"],[181,52,168,50],[181,53,168,51,"event"],[181,58,168,56],[181,59,168,57,"nativeEvent"],[181,70,168,51],[181,71,168,69,"state"],[181,76,168,50],[181,77,168,8],[183,0,169,8],[183,16,169,12],[183,23,169,19],[183,29,169,24,"props"],[183,34,169,19],[183,35,169,30,"stateEventName"],[183,49,169,19],[183,50,169,12],[183,55,169,50],[183,65,169,8],[183,67,169,62],[184,0,170,10],[184,20,170,15,"props"],[184,25,170,10],[184,26,170,21,"stateEventName"],[184,40,170,10],[184,42,170,37,"event"],[184,47,170,10],[185,0,171,9],[186,0,172,7],[186,11,164,6],[186,17,172,13],[187,0,173,8],[187,18,173,13,"props"],[187,23,173,8],[187,24,173,19,"onGestureHandlerStateChange"],[187,51,173,8],[187,55,174,10],[187,61,174,15,"props"],[187,66,174,10],[187,67,174,21,"onGestureHandlerStateChange"],[187,94,174,10],[187,95,174,49,"event"],[187,100,174,10],[187,101,173,8],[188,0,175,7],[189,0,176,5],[189,9,140,23],[191,0,140,23],[191,14,178,4,"_refHandler"],[191,25,140,23],[191,28,178,18],[191,38,178,18,"node"],[191,42,178,22],[191,44,178,26],[192,0,179,6],[192,16,179,11,"_viewNode"],[192,25,179,6],[192,28,179,23,"node"],[192,32,179,6],[194,0,181,6],[194,14,181,12,"child"],[194,19,181,17],[194,22,181,20,"React"],[194,37,181,26,"Children"],[194,45,181,20],[194,46,181,35,"only"],[194,50,181,20],[194,51,181,40],[194,57,181,45,"props"],[194,62,181,40],[194,63,181,51,"children"],[194,71,181,20],[194,72,181,6],[196,0,178,26],[196,14,182,14,"ref"],[196,17,178,26],[196,20,182,22,"child"],[196,25,178,26],[196,26,182,14,"ref"],[196,29,178,26],[198,0,183,6],[198,14,183,10,"ref"],[198,17,183,13],[198,22,183,18],[198,26,183,6],[198,28,183,24],[199,0,184,8],[199,16,184,12],[199,23,184,19,"ref"],[199,26,184,12],[199,31,184,27],[199,41,184,8],[199,43,184,39],[200,0,185,10,"ref"],[200,14,185,10,"ref"],[200,17,185,13],[200,18,185,14,"node"],[200,22,185,13],[200,23,185,10],[201,0,186,9],[201,13,184,8],[201,19,186,15],[202,0,187,10,"ref"],[202,14,187,10,"ref"],[202,17,187,13],[202,18,187,14,"current"],[202,25,187,10],[202,28,187,24,"node"],[202,32,187,10],[203,0,188,9],[204,0,189,7],[205,0,190,5],[205,9,140,23],[207,0,140,23],[207,14,192,4,"_createGestureHandler"],[207,35,140,23],[207,38,192,28],[207,48,192,28,"newConfig"],[207,57,192,37],[207,59,192,41],[208,0,193,6],[208,16,193,11,"_config"],[208,23,193,6],[208,26,193,21,"newConfig"],[208,35,193,6],[210,0,195,6,"RNGestureHandlerModule"],[210,42,195,29,"createGestureHandler"],[210,62,195,6],[210,63,196,8,"handlerName"],[210,74,195,6],[210,76,197,8],[210,82,197,13,"_handlerTag"],[210,93,195,6],[210,95,198,8,"newConfig"],[210,104,195,6],[211,0,200,5],[211,9,140,23],[213,0,140,23],[213,14,202,4,"_attachGestureHandler"],[213,35,140,23],[213,38,202,28],[213,48,202,28,"newViewTag"],[213,58,202,38],[213,60,202,42],[214,0,203,6],[214,16,203,11,"_viewTag"],[214,24,203,6],[214,27,203,22,"newViewTag"],[214,37,203,6],[216,0,205,6],[216,14,205,10,"Platform"],[216,36,205,19,"OS"],[216,38,205,10],[216,43,205,26],[216,48,205,6],[216,50,205,33],[217,0,206,8,"RNGestureHandlerModule"],[217,44,206,31,"attachGestureHandler"],[217,64,206,8],[217,65,207,10],[217,71,207,15,"_handlerTag"],[217,82,206,8],[217,84,208,10,"newViewTag"],[217,94,206,8],[217,96,209,10],[217,102,209,15,"_propsRef"],[217,111,206,8],[218,0,211,7],[218,11,205,6],[218,17,211,13],[219,0,212,8,"RNGestureHandlerModule"],[219,44,212,31,"attachGestureHandler"],[219,64,212,8],[219,65,213,10],[219,71,213,15,"_handlerTag"],[219,82,212,8],[219,84,214,10,"newViewTag"],[219,94,212,8],[220,0,216,7],[221,0,217,5],[221,9,140,23],[223,0,140,23],[223,14,219,4,"_updateGestureHandler"],[223,35,140,23],[223,38,219,28],[223,48,219,28,"newConfig"],[223,57,219,37],[223,59,219,41],[224,0,220,6],[224,16,220,11,"_config"],[224,23,220,6],[224,26,220,21,"newConfig"],[224,35,220,6],[226,0,222,6,"RNGestureHandlerModule"],[226,42,222,29,"updateGestureHandler"],[226,62,222,6],[226,63,222,50],[226,69,222,55,"_handlerTag"],[226,80,222,6],[226,82,222,68,"newConfig"],[226,91,222,6],[227,0,223,5],[227,9,140,23],[229,0,142,6],[229,14,142,11,"_handlerTag"],[229,25,142,6],[229,28,142,25,"handlerTag"],[229,38,142,35],[229,40,142,6],[230,0,143,6],[230,14,143,11,"_config"],[230,21,143,6],[230,24,143,21],[230,26,143,6],[231,0,144,6],[231,14,144,11,"_propsRef"],[231,23,144,6],[231,26,144,23,"React"],[231,41,144,29,"createRef"],[231,50,144,23],[231,51,144,39,"props"],[231,56,144,23],[231,57,144,6],[233,0,146,6],[233,12,146,10,"props"],[233,17,146,15],[233,18,146,16,"id"],[233,20,146,6],[233,22,146,20],[234,0,147,8],[234,14,147,12,"handlerIDToTag"],[234,28,147,26],[234,29,147,27,"props"],[234,34,147,32],[234,35,147,33,"id"],[234,37,147,26],[234,38,147,12],[234,43,147,41,"undefined"],[234,52,147,8],[234,54,147,52],[235,0,148,10],[235,18,148,16],[235,22,148,20,"Error"],[235,27,148,16],[235,51,148,46,"props"],[235,56,148,51],[235,57,148,52,"id"],[235,59,148,16],[235,86,148,10],[236,0,149,9],[238,0,150,8,"handlerIDToTag"],[238,10,150,8,"handlerIDToTag"],[238,24,150,22],[238,25,150,23,"props"],[238,30,150,28],[238,31,150,29,"id"],[238,33,150,22],[238,34,150,8],[238,37,150,35],[238,43,150,40,"_handlerTag"],[238,54,150,8],[239,0,151,7],[241,0,140,23],[242,0,152,5],[244,0,134,2],[245,0,134,2],[246,0,134,2],[246,47,225,27],[247,0,226,6,"RNGestureHandlerModule"],[247,42,226,29,"dropGestureHandler"],[247,60,226,6],[247,61,226,48],[247,66,226,53,"_handlerTag"],[247,77,226,6],[249,0,227,6],[249,14,227,10],[249,19,227,15,"_updateEnqueued"],[249,34,227,6],[249,36,227,32],[250,0,228,8,"clearImmediate"],[250,12,228,8,"clearImmediate"],[250,26,228,22],[250,27,228,23],[250,32,228,28,"_updateEnqueued"],[250,47,228,22],[250,48,228,8],[251,0,229,7],[253,0,230,6],[253,14,230,10],[253,19,230,15,"props"],[253,24,230,10],[253,25,230,21,"id"],[253,27,230,6],[253,29,230,25],[254,0,231,8],[254,19,231,15,"handlerIDToTag"],[254,33,231,29],[254,34,231,30],[254,39,231,35,"props"],[254,44,231,30],[254,45,231,41,"id"],[254,47,231,29],[254,48,231,8],[255,0,232,7],[256,0,233,5],[257,0,134,2],[258,0,134,2],[259,0,134,2],[259,44,235,24],[260,0,235,24],[262,0,236,6],[262,14,236,10,"hasUnresolvedRefs"],[262,31,236,27],[262,32,236,28],[262,37,236,33,"props"],[262,42,236,27],[262,43,236,6],[262,45,236,41],[263,0,243,8],[263,17,243,13,"_updateEnqueued"],[263,32,243,8],[263,35,243,31,"setImmediate"],[263,47,243,43],[263,48,243,44],[263,60,243,50],[264,0,244,10],[264,14,244,10],[264,20,244,14],[264,21,244,15,"_updateEnqueued"],[264,36,244,10],[264,39,244,33],[264,43,244,10],[266,0,245,10],[266,14,245,10],[266,20,245,14],[266,21,245,15,"_update"],[266,28,245,10],[267,0,246,9],[267,13,243,43],[267,14,243,8],[268,0,247,7],[270,0,249,6],[270,15,249,11,"_createGestureHandler"],[270,36,249,6],[270,37,250,8,"filterConfig"],[270,49,250,20],[270,50,251,10,"transformProps"],[270,64,251,24],[270,67,251,27,"transformProps"],[270,81,251,41],[270,82,251,42],[270,87,251,47,"props"],[270,92,251,41],[270,93,251,24],[270,96,251,56],[270,101,251,61,"props"],[270,106,250,20],[270,140,253,16],[270,145,253,21,"constructor"],[270,156,253,16],[270,157,253,33,"propTypes"],[270,166,253,16],[270,170,253,46,"propTypes"],[270,179,250,20],[270,182,254,15,"customNativeProps"],[270,199,250,20],[270,202,256,10,"config"],[270,208,250,20],[270,209,249,6],[272,0,260,6],[272,15,260,11,"_attachGestureHandler"],[272,36,260,6],[272,37,260,33,"findNodeHandle"],[272,51,260,47],[272,52,260,48],[272,57,260,53,"_viewNode"],[272,66,260,47],[272,67,260,6],[273,0,261,5],[274,0,134,2],[275,0,134,2],[276,0,134,2],[276,45,263,25],[277,0,264,6],[277,14,264,12,"viewTag"],[277,21,264,19],[277,24,264,22,"findNodeHandle"],[277,38,264,36],[277,39,264,37],[277,44,264,42,"_viewNode"],[277,53,264,36],[277,54,264,6],[279,0,265,6],[279,14,265,10],[279,19,265,15,"_viewTag"],[279,27,265,10],[279,32,265,28,"viewTag"],[279,39,265,6],[279,41,265,37],[280,0,266,8],[280,17,266,13,"_attachGestureHandler"],[280,38,266,8],[280,39,266,35,"viewTag"],[280,46,266,8],[281,0,267,7],[283,0,268,6],[283,15,268,11,"_update"],[283,22,268,6],[284,0,269,5],[285,0,134,2],[286,0,134,2],[287,0,134,2],[287,34,271,14],[288,0,272,6],[288,14,272,12,"newConfig"],[288,23,272,21],[288,26,272,24,"filterConfig"],[288,38,272,36],[288,39,273,8,"transformProps"],[288,53,273,22],[288,56,273,25,"transformProps"],[288,70,273,39],[288,71,273,40],[288,76,273,45,"props"],[288,81,273,39],[288,82,273,22],[288,85,273,54],[288,90,273,59,"props"],[288,95,272,36],[288,129,274,14],[288,134,274,19,"constructor"],[288,145,274,14],[288,146,274,31,"propTypes"],[288,155,274,14],[288,159,274,44,"propTypes"],[288,168,272,36],[288,171,274,59,"customNativeProps"],[288,188,272,36],[288,191,275,8,"config"],[288,197,272,36],[288,198,272,6],[290,0,277,6],[290,14,277,10],[290,15,277,11],[290,38,277,21],[290,43,277,26,"_config"],[290,50,277,11],[290,52,277,35,"newConfig"],[290,61,277,11],[290,62,277,6],[290,64,277,47],[291,0,278,8],[291,17,278,13,"_updateGestureHandler"],[291,38,278,8],[291,39,278,35,"newConfig"],[291,48,278,8],[292,0,279,7],[293,0,280,5],[294,0,134,2],[295,0,134,2],[296,0,134,2],[296,39,282,19,"updates"],[296,46,134,2],[296,48,282,28],[297,0,283,6],[297,14,283,12,"mergedProps"],[297,25,283,23],[297,60,283,31],[297,65,283,36,"props"],[297,70,283,23],[297,73,283,46,"updates"],[297,80,283,23],[297,81,283,6],[299,0,284,6],[299,14,284,12,"newConfig"],[299,23,284,21],[299,26,284,24,"filterConfig"],[299,38,284,36],[299,39,285,8,"transformProps"],[299,53,285,22],[299,56,285,25,"transformProps"],[299,70,285,39],[299,71,285,40,"mergedProps"],[299,82,285,39],[299,83,285,22],[299,86,285,55,"mergedProps"],[299,97,284,36],[299,131,286,14],[299,136,286,19,"constructor"],[299,147,286,14],[299,148,286,31,"propTypes"],[299,157,286,14],[299,161,286,44,"propTypes"],[299,170,284,36],[299,173,286,59,"customNativeProps"],[299,190,284,36],[299,193,287,8,"config"],[299,199,284,36],[299,200,284,6],[301,0,289,6],[301,15,289,11,"_updateGestureHandler"],[301,36,289,6],[301,37,289,33,"newConfig"],[301,46,289,6],[302,0,290,5],[303,0,134,2],[304,0,134,2],[305,0,134,2],[305,33,292,13],[306,0,293,6],[306,14,293,10,"gestureEventHandler"],[306,33,293,29],[306,36,293,32],[306,41,293,37,"_onGestureHandlerEvent"],[306,63,293,6],[307,0,292,13],[307,28,294,56],[307,33,294,61,"props"],[307,38,292,13],[308,0,292,13],[308,14,294,14,"onGestureEvent"],[308,28,292,13],[308,43,294,14,"onGestureEvent"],[308,57,292,13],[309,0,292,13],[309,14,294,30,"onGestureHandlerEvent"],[309,35,292,13],[309,50,294,30,"onGestureHandlerEvent"],[309,71,292,13],[311,0,295,6],[311,14,295,10,"onGestureEvent"],[311,28,295,24],[311,32,295,28],[311,39,295,35,"onGestureEvent"],[311,53,295,28],[311,58,295,54],[311,68,295,6],[311,70,295,66],[312,0,299,8],[312,16,299,12,"onGestureHandlerEvent"],[312,37,299,8],[312,39,299,35],[313,0,300,10],[313,20,300,16],[313,24,300,20,"Error"],[313,29,300,16],[313,30,301,12],[313,103,300,16],[313,104,300,10],[314,0,303,9],[316,0,304,8,"gestureEventHandler"],[316,12,304,8,"gestureEventHandler"],[316,31,304,27],[316,34,304,30],[316,39,304,35,"props"],[316,44,304,30],[316,45,304,41,"onGestureEvent"],[316,59,304,8],[317,0,305,7],[317,11,295,6],[317,17,305,13],[318,0,306,8],[318,16,307,10,"onGestureHandlerEvent"],[318,37,307,31],[318,41,308,10],[318,48,308,17,"onGestureHandlerEvent"],[318,69,308,10],[318,74,308,43],[318,84,306,8],[318,86,309,10],[319,0,310,10],[319,20,310,16],[319,24,310,20,"Error"],[319,29,310,16],[319,30,311,12],[319,103,310,16],[319,104,310,10],[320,0,313,9],[321,0,314,7],[323,0,316,6],[323,14,316,10,"gestureStateEventHandler"],[323,38,316,34],[323,41,316,37],[323,46,316,42,"_onGestureHandlerStateChange"],[323,74,316,6],[324,0,292,13],[324,29,317,68],[324,34,317,73,"props"],[324,39,292,13],[325,0,292,13],[325,14,317,14,"onHandlerStateChange"],[325,34,292,13],[325,50,317,14,"onHandlerStateChange"],[325,70,292,13],[326,0,292,13],[326,14,317,36,"onGestureHandlerStateChange"],[326,41,292,13],[326,57,317,36,"onGestureHandlerStateChange"],[326,84,292,13],[328,0,318,6],[328,14,318,10,"onHandlerStateChange"],[328,34,318,30],[328,38,318,34],[328,45,318,41,"onHandlerStateChange"],[328,65,318,34],[328,70,318,66],[328,80,318,6],[328,82,318,78],[329,0,322,8],[329,16,322,12,"onGestureHandlerStateChange"],[329,43,322,8],[329,45,322,41],[330,0,323,10],[330,20,323,16],[330,24,323,20,"Error"],[330,29,323,16],[330,30,324,12],[330,103,323,16],[330,104,323,10],[331,0,326,9],[333,0,327,8,"gestureStateEventHandler"],[333,12,327,8,"gestureStateEventHandler"],[333,36,327,32],[333,39,327,35],[333,44,327,40,"props"],[333,49,327,35],[333,50,327,46,"onHandlerStateChange"],[333,70,327,8],[334,0,328,7],[334,11,318,6],[334,17,328,13],[335,0,329,8],[335,16,330,10,"onGestureHandlerStateChange"],[335,43,330,37],[335,47,331,10],[335,54,331,17,"onGestureHandlerStateChange"],[335,81,331,10],[335,86,331,49],[335,96,329,8],[335,98,332,10],[336,0,333,10],[336,20,333,16],[336,24,333,20,"Error"],[336,29,333,16],[336,30,334,12],[336,103,333,16],[336,104,333,10],[337,0,336,9],[338,0,337,7],[340,0,338,6],[340,14,338,12,"events"],[340,20,338,18],[340,23,338,21],[341,0,339,8,"onGestureHandlerEvent"],[341,12,339,8,"onGestureHandlerEvent"],[341,33,339,29],[341,35,339,31,"gestureEventHandler"],[341,54,338,21],[342,0,340,8,"onGestureHandlerStateChange"],[342,12,340,8,"onGestureHandlerStateChange"],[342,39,340,35],[342,41,340,37,"gestureStateEventHandler"],[343,0,338,21],[343,11,338,6],[344,0,343,6],[344,15,343,11,"_propsRef"],[344,24,343,6],[344,25,343,21,"current"],[344,32,343,6],[344,35,343,31,"events"],[344,41,343,6],[346,0,345,6],[346,14,345,12,"child"],[346,19,345,17],[346,22,345,20,"React"],[346,37,345,26,"Children"],[346,45,345,20],[346,46,345,35,"only"],[346,50,345,20],[346,51,345,40],[346,56,345,45,"props"],[346,61,345,40],[346,62,345,51,"children"],[346,70,345,20],[346,71,345,6],[348,0,346,6],[348,14,346,10,"grandChildren"],[348,27,346,23],[348,30,346,26,"child"],[348,35,346,31],[348,36,346,32,"props"],[348,41,346,26],[348,42,346,38,"children"],[348,50,346,6],[350,0,347,6],[350,14,348,8,"Touchable"],[350,37,348,18,"TOUCH_TARGET_DEBUG"],[350,55,348,8],[350,59,349,8,"child"],[350,64,349,13],[350,65,349,14,"type"],[350,69,348,8],[350,74,350,9,"child"],[350,79,350,14],[350,80,350,15,"type"],[350,84,350,9],[350,89,350,24],[350,113,350,9],[350,117,351,10,"child"],[350,122,351,15],[350,123,351,16,"type"],[350,127,351,10],[350,128,351,21,"name"],[350,132,351,10],[350,137,351,30],[350,143,350,9],[350,147,352,10,"child"],[350,152,352,15],[350,153,352,16,"type"],[350,157,352,10],[350,158,352,21,"displayName"],[350,169,352,10],[350,174,352,37],[350,180,348,8],[350,181,347,6],[350,183,353,8],[351,0,354,8,"grandChildren"],[351,12,354,8,"grandChildren"],[351,25,354,21],[351,28,354,24,"React"],[351,43,354,30,"Children"],[351,51,354,24],[351,52,354,39,"toArray"],[351,59,354,24],[351,60,354,47,"grandChildren"],[351,73,354,24],[351,74,354,8],[352,0,355,8,"grandChildren"],[352,12,355,8,"grandChildren"],[352,25,355,21],[352,26,355,22,"push"],[352,30,355,8],[352,31,356,10,"Touchable"],[352,54,356,20,"renderDebugView"],[352,69,356,10],[352,70,356,36],[353,0,357,12,"color"],[353,14,357,12,"color"],[353,19,357,17],[353,21,357,19],[353,40,356,36],[354,0,358,12,"hitSlop"],[354,14,358,12,"hitSlop"],[354,21,358,19],[354,23,358,21,"child"],[354,28,358,26],[354,29,358,27,"props"],[354,34,358,21],[354,35,358,33,"hitSlop"],[355,0,356,36],[355,13,356,10],[355,14,355,8],[356,0,361,7],[358,0,363,6],[358,17,363,13,"React"],[358,32,363,19,"cloneElement"],[358,44,363,13],[358,45,364,8,"child"],[358,50,363,13],[359,0,366,10,"ref"],[359,12,366,10,"ref"],[359,15,366,13],[359,17,366,15],[359,22,366,20,"_refHandler"],[359,33,363,13],[360,0,367,10,"collapsable"],[360,12,367,10,"collapsable"],[360,23,367,21],[360,25,367,23],[361,0,363,13],[361,13,368,13,"events"],[361,19,363,13],[361,22,370,8,"grandChildren"],[361,35,363,13],[361,36,363,6],[362,0,372,5],[363,0,134,2],[364,0,134,2],[365,0,134,2],[365,6,135,24,"React"],[365,21,135,30,"Component"],[365,30,134,2],[367,0,135,8,"Handler"],[367,4,135,8,"Handler"],[367,11,134,2],[367,12,136,11,"displayName"],[367,23,134,2],[367,26,136,25,"handlerName"],[367,37,134,2],[368,0,135,8,"Handler"],[368,4,135,8,"Handler"],[368,11,134,2],[368,12,138,11,"propTypes"],[368,21,134,2],[368,24,138,23,"propTypes"],[368,33,134,2],[369,0,374,2],[369,11,374,9,"Handler"],[369,18,374,2],[370,0,375,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","Object.keys.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#_onGestureHandlerEvent","Handler#_onGestureHandlerStateChange","Handler#_refHandler","Handler#_createGestureHandler","Handler#_attachGestureHandler","Handler#_updateGestureHandler","Handler#componentWillUnmount","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#_update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACW;CDG;sCE+B,QF;0CEC,QF;2BGE;CHG;6BIC;CJG;AKK;CLS;AME;kCCE;GDa;CNE;AQE;0BCM,wBD,SE,gBF;MCK;UDG;YEE,4BF;CRC;AWE;kBCC;qBCI,4BD;GDC;CXE;ecU;ECO;ICK;KDY;6BEE;KFO;mCGE;KHa;kBIE;KJY;4BKE;KLQ;4BME;KNe;4BOE;KPI;IQE;KRQ;ISE;4CCQ;SDG;KTe;IWE;KXM;IYE;KZS;IaE;KbQ;IcE;KdgF;GDC;CdE"}},"type":"js/module"}]}