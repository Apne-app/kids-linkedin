{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false,"locs":[]}},{"name":"../RNGestureHandlerModule","data":{"isAsync":false,"locs":[]}},{"name":"../State","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/defineProperty\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../RNGestureHandlerModule\"));\n\n  var _State = _$$_REQUIRE(_dependencyMap[13], \"../State\");\n\n  var _UIManager$getViewMan, _stateToPropMappings;\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), customGHEventsConfig);\n  var UIManagerConstants = (_UIManager$getViewMan = UIManager.getViewManagerConfig == null ? void 0 : UIManager.getViewManagerConfig('getConstants')) != null ? _UIManager$getViewMan : UIManager.getConstants == null ? void 0 : UIManager.getConstants();\n\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManagerConstants.genericDirectEventTypes), customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    validProps.forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n\n      return handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.State.UNDETERMINED, undefined), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(_ref2) {\n    var name = _ref2.name,\n        _ref2$allowedProps = _ref2.allowedProps,\n        allowedProps = _ref2$allowedProps === void 0 ? [] : _ref2$allowedProps,\n        _ref2$config = _ref2.config,\n        config = _ref2$config === void 0 ? {} : _ref2$config,\n        transformProps = _ref2.transformProps,\n        _ref2$customNativePro = _ref2.customNativeProps,\n        customNativeProps = _ref2$customNativePro === void 0 ? [] : _ref2$customNativePro;\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      var _super = _createSuper(Handler);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n        _this.updateEnqueued = null;\n\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent == null ? void 0 : _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(event);\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null ? void 0 : _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n\n          if (_reactNative.Platform.OS === 'web') {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _this.propsRef);\n          } else {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag);\n          }\n        };\n\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n        };\n\n        _this.handlerTag = handlerTag++;\n        _this.config = {};\n        _this.propsRef = React.createRef();\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this.handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          var props = this.props;\n\n          if (hasUnresolvedRefs(props)) {\n            this.updateEnqueued = setImmediate(function () {\n              _this2.updateEnqueued = null;\n\n              _this2.update();\n            });\n          }\n\n          this.createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler(findNodeHandle(this.viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this.viewNode);\n\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag);\n          }\n\n          this.update();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n\n          if (this.updateEnqueued) {\n            clearImmediate(this.updateEnqueued);\n          }\n\n          var handlerID = this.props.id;\n\n          if (handlerID) {\n            delete handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n\n          if (!(0, _areEqual.default)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var events = {\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          };\n          this.propsRef.current = events;\n          var child = React.Children.only(this.props.children);\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return React.cloneElement(child, _objectSpread({\n            ref: this.refHandler,\n            collapsable: false\n          }, events), grandChildren);\n        }\n      }]);\n      return Handler;\n    }(React.Component);\n\n    Handler.displayName = name;\n    return Handler;\n  }\n});","lineCount":382,"map":[[25,0,1,0],[27,0,2,0],[29,0,9,0],[31,0,10,0],[33,0,12,0],[45,0,21,0],[45,11,21,9,"findNodeHandle"],[45,25,21,0],[45,26,22,2,"node"],[45,30,21,0],[45,32,23,73],[46,0,24,2],[46,8,24,6,"Platform"],[46,30,24,15,"OS"],[46,32,24,6],[46,37,24,22],[46,42,24,2],[46,44,24,29],[46,51,24,36,"node"],[46,55,24,29],[47,0,25,2],[47,11,25,9],[47,44,25,26,"node"],[47,48,25,9],[47,49,25,2],[48,0,26,1],[50,30,28,27,"NativeModules"],[50,56],[50,57,28,8,"UIManager"],[50,66],[51,6,28,8,"UIManager"],[51,15],[51,53,28,20],[51,55],[52,0,30,0],[52,6,30,6,"customGHEventsConfig"],[52,26,30,26],[52,29,30,29],[53,0,31,2,"onGestureHandlerEvent"],[53,4,31,2,"onGestureHandlerEvent"],[53,25,31,23],[53,27,31,25],[54,0,31,27,"registrationName"],[54,6,31,27,"registrationName"],[54,22,31,43],[54,24,31,45],[55,0,31,25],[55,5,30,29],[56,0,32,2,"onGestureHandlerStateChange"],[56,4,32,2,"onGestureHandlerStateChange"],[56,31,32,29],[56,33,32,31],[57,0,33,4,"registrationName"],[57,6,33,4,"registrationName"],[57,22,33,20],[57,24,33,22],[58,0,32,31],[59,0,30,29],[59,3,30,0],[60,0,41,0,"UIManager"],[60,2,41,0,"UIManager"],[60,11,41,9],[60,12,41,10,"genericDirectEventTypes"],[60,35,41,0],[60,70,42,5,"UIManager"],[60,79,42,14],[60,80,42,15,"genericDirectEventTypes"],[60,103,41,0],[60,106,43,5,"customGHEventsConfig"],[60,126,41,0],[61,0,48,0],[61,6,48,6,"UIManagerConstants"],[61,24,48,24],[61,52,49,2,"UIManager"],[61,61,49,11],[61,62,49,12,"getViewManagerConfig"],[61,82,48,24],[61,102,49,2,"UIManager"],[61,111,49,11],[61,112,49,12,"getViewManagerConfig"],[61,132,49,2],[61,133,49,35],[61,147,49,2],[61,148,48,24],[61,184,50,2,"UIManager"],[61,193,50,11],[61,194,50,12,"getConstants"],[61,206,48,24],[61,226,50,2,"UIManager"],[61,235,50,11],[61,236,50,12,"getConstants"],[61,248,50,2],[61,250,48,0],[63,0,52,0],[63,6,52,4,"UIManagerConstants"],[63,24,52,0],[63,26,52,24],[64,0,53,2,"UIManagerConstants"],[64,4,53,2,"UIManagerConstants"],[64,22,53,20],[64,23,53,21,"genericDirectEventTypes"],[64,46,53,2],[64,81,54,7,"UIManagerConstants"],[64,99,54,25],[64,100,54,26,"genericDirectEventTypes"],[64,123,53,2],[64,126,55,7,"customGHEventsConfig"],[64,146,53,2],[65,0,57,1],[67,30,67,4,"UIManager"],[67,39],[67,40,61,2,"setJSResponder"],[67,54],[68,6,61,18,"oldSetJSResponder"],[68,23],[68,61,61,38],[68,73,61,44],[68,74,63,3],[68,75],[69,30,67,4,"UIManager"],[69,39],[69,40,64,2,"clearJSResponder"],[69,56],[70,6,64,20,"oldClearJSResponder"],[70,25],[70,63,64,42],[70,75,64,48],[70,76,66,3],[70,77],[72,0,68,0,"UIManager"],[72,2,68,0,"UIManager"],[72,11,68,9],[72,12,68,10,"setJSResponder"],[72,26,68,0],[72,29,68,27],[72,39,68,28,"tag"],[72,42,68,27],[72,44,68,41,"blockNativeResponder"],[72,64,68,27],[72,66,68,75],[73,0,69,2,"RNGestureHandlerModule"],[73,36,69,25,"handleSetJSResponder"],[73,56,69,2],[73,57,69,46,"tag"],[73,60,69,2],[73,62,69,51,"blockNativeResponder"],[73,82,69,2],[75,0,70,2,"oldSetJSResponder"],[75,4,70,2,"oldSetJSResponder"],[75,21,70,19],[75,22,70,20,"tag"],[75,25,70,19],[75,27,70,25,"blockNativeResponder"],[75,47,70,19],[75,48,70,2],[76,0,71,1],[76,3,68,0],[78,0,72,0,"UIManager"],[78,2,72,0,"UIManager"],[78,11,72,9],[78,12,72,10,"clearJSResponder"],[78,28,72,0],[78,31,72,29],[78,43,72,35],[79,0,73,2,"RNGestureHandlerModule"],[79,36,73,25,"handleClearJSResponder"],[79,58,73,2],[81,0,74,2,"oldClearJSResponder"],[81,4,74,2,"oldClearJSResponder"],[81,23,74,21],[82,0,75,1],[82,3,72,0],[84,0,77,0],[84,6,77,4,"handlerTag"],[84,16,77,14],[84,19,77,17],[84,20,77,0],[85,0,78,0],[85,6,78,6,"handlerIDToTag"],[85,20,78,44],[85,23,78,47],[85,25,78,0],[87,0,80,0],[87,11,80,9,"isConfigParam"],[87,24,80,0],[87,25,80,23,"param"],[87,30,80,0],[87,32,80,39,"name"],[87,36,80,0],[87,38,80,53],[88,0,83,2],[88,11,84,4,"param"],[88,16,84,9],[88,21,84,14,"undefined"],[88,30,84,4],[88,35,85,5,"param"],[88,40,85,10],[88,45,85,15,"Object"],[88,51,85,21],[88,52,85,22,"param"],[88,57,85,21],[88,58,85,5],[88,62,86,6],[88,64,86,8],[88,80,86,25,"param"],[88,85,86,6],[88,86,84,4],[88,91,87,4,"name"],[88,95,87,8],[88,100,87,13],[88,122,84,4],[88,126,88,4,"name"],[88,130,88,8],[88,135,88,13],[88,151,83,2],[89,0,90,1],[91,0,92,0],[91,11,92,9,"filterConfig"],[91,23,92,0],[91,24,93,2,"props"],[91,29,92,0],[91,31,94,2,"validProps"],[91,41,92,0],[91,43,96,2],[92,0,96,2],[92,8,95,2,"defaults"],[92,16,96,2],[92,87,95,38],[92,89,96,2],[94,0,97,2],[94,8,97,8,"res"],[94,11,97,11],[94,32,97,19,"defaults"],[94,40,97,11],[94,41,97,2],[96,0,98,2,"validProps"],[96,4,98,2,"validProps"],[96,14,98,12],[96,15,98,13,"forEach"],[96,22,98,2],[96,23,98,21],[96,33,98,22,"key"],[96,36,98,21],[96,38,98,30],[97,0,99,4],[97,10,99,10,"value"],[97,15,99,15],[97,18,99,18,"props"],[97,23,99,23],[97,24,99,24,"key"],[97,27,99,23],[97,28,99,4],[99,0,100,4],[99,10,100,8,"isConfigParam"],[99,23,100,21],[99,24,100,22,"value"],[99,29,100,21],[99,31,100,29,"key"],[99,34,100,21],[99,35,100,4],[99,37,100,35],[100,0,101,6],[100,12,101,10,"value"],[100,18,101,15],[100,21,101,18,"props"],[100,26,101,23],[100,27,101,24,"key"],[100,30,101,23],[100,31,101,6],[102,0,102,6],[102,12,102,10,"key"],[102,15,102,13],[102,20,102,18],[102,42,102,10],[102,46,102,44,"key"],[102,49,102,47],[102,54,102,52],[102,63,102,6],[102,65,102,63],[103,0,103,8,"value"],[103,10,103,8,"value"],[103,16,103,13],[103,19,103,16,"transformIntoHandlerTags"],[103,43,103,40],[103,44,103,41,"props"],[103,49,103,46],[103,50,103,47,"key"],[103,53,103,46],[103,54,103,40],[103,55,103,8],[104,0,104,7],[104,9,102,6],[104,15,104,13],[104,19,104,17,"key"],[104,22,104,20],[104,27,104,25],[104,36,104,13],[104,38,104,36],[105,0,105,8],[105,14,105,12],[105,21,105,19,"value"],[105,27,105,12],[105,32,105,29],[105,40,105,8],[105,42,105,39],[106,0,106,10,"value"],[106,12,106,10,"value"],[106,18,106,15],[106,21,106,18],[107,0,106,20,"top"],[107,14,106,20,"top"],[107,17,106,23],[107,19,106,25,"value"],[107,25,106,18],[108,0,106,32,"left"],[108,14,106,32,"left"],[108,18,106,36],[108,20,106,38,"value"],[108,26,106,18],[109,0,106,45,"bottom"],[109,14,106,45,"bottom"],[109,20,106,51],[109,22,106,53,"value"],[109,28,106,18],[110,0,106,60,"right"],[110,14,106,60,"right"],[110,19,106,65],[110,21,106,67,"value"],[111,0,106,18],[111,13,106,10],[112,0,107,9],[113,0,108,7],[115,0,109,6,"res"],[115,8,109,6,"res"],[115,11,109,9],[115,12,109,10,"key"],[115,15,109,9],[115,16,109,6],[115,19,109,17,"value"],[115,25,109,6],[116,0,110,5],[117,0,111,3],[117,5,98,2],[118,0,112,2],[118,11,112,9,"res"],[118,14,112,2],[119,0,113,1],[121,0,115,0],[121,11,115,9,"transformIntoHandlerTags"],[121,35,115,0],[121,36,115,34,"handlerIDs"],[121,46,115,0],[121,48,115,51],[122,0,116,2],[122,8,116,6],[122,9,116,7,"Array"],[122,14,116,12],[122,15,116,13,"isArray"],[122,22,116,7],[122,23,116,21,"handlerIDs"],[122,33,116,7],[122,34,116,2],[122,36,116,34],[123,0,117,4,"handlerIDs"],[123,6,117,4,"handlerIDs"],[123,16,117,14],[123,19,117,17],[123,20,117,18,"handlerIDs"],[123,30,117,17],[123,31,117,4],[124,0,118,3],[126,0,120,2],[126,8,120,6,"Platform"],[126,30,120,15,"OS"],[126,32,120,6],[126,37,120,22],[126,42,120,2],[126,44,120,29],[127,0,121,4],[127,13,121,11,"handlerIDs"],[127,23,121,21],[127,24,122,7,"map"],[127,27,121,11],[127,28,122,11],[128,0,122,11],[128,12,122,14,"current"],[128,19,122,11],[128,27,122,14,"current"],[128,34,122,11],[129,0,122,11],[129,15,122,46,"current"],[129,22,122,11],[130,0,122,11],[130,7,121,11],[130,9,123,7,"filter"],[130,15,121,11],[130,16,123,14],[130,26,123,15,"handle"],[130,32,123,14],[131,0,123,14],[131,15,123,31,"handle"],[131,21,123,14],[132,0,123,14],[132,7,121,11],[132,8,121,4],[133,0,124,3],[135,0,126,2],[135,11,126,9,"handlerIDs"],[135,21,126,19],[135,22,127,5,"map"],[135,25,126,9],[135,26,128,6],[135,36,128,7,"handlerID"],[135,45,128,6],[136,0,128,6],[138,0,128,6],[138,13,129,8,"handlerIDToTag"],[138,27,129,22],[138,28,129,23,"handlerID"],[138,37,129,22],[138,38,129,8],[138,65,129,37,"handlerID"],[138,74,129,46],[138,75,129,47,"current"],[138,82,129,8],[138,103,129,37],[138,122,129,56,"handlerTag"],[138,132,129,8],[138,137,129,70],[138,138,129,71],[138,139,128,6],[139,0,128,6],[139,5,126,9],[139,7,131,5,"filter"],[139,13,126,9],[139,14,131,12],[139,24,131,13,"handlerTag"],[139,34,131,12],[140,0,131,12],[140,13,131,36,"handlerTag"],[140,23,131,46],[140,26,131,49],[140,27,131,12],[141,0,131,12],[141,5,126,9],[141,6,126,2],[142,0,132,1],[144,0,137,0],[144,11,137,9,"hasUnresolvedRefs"],[144,28,137,0],[144,29,138,2,"props"],[144,34,137,0],[144,36,139,2],[145,0,141,2],[145,8,141,8,"extract"],[145,15,141,15],[145,18,141,18],[145,27,141,8,"extract"],[145,34,141,18],[145,35,141,19,"refs"],[145,39,141,18],[145,41,141,41],[146,0,142,4],[146,10,142,8],[146,11,142,9,"Array"],[146,16,142,14],[146,17,142,15,"isArray"],[146,24,142,9],[146,25,142,23,"refs"],[146,29,142,9],[146,30,142,4],[146,32,142,30],[147,0,143,6],[147,15,143,13,"refs"],[147,19,143,17],[147,23,143,21,"refs"],[147,27,143,25],[147,28,143,26,"current"],[147,35,143,21],[147,40,143,38],[147,44,143,6],[148,0,144,5],[150,0,145,4],[150,13,145,11,"refs"],[150,17,145,15],[150,18,145,16,"some"],[150,22,145,11],[150,23,145,21],[150,33,145,22,"r"],[150,34,145,21],[151,0,145,21],[151,15,145,28,"r"],[151,16,145,29],[151,20,145,33,"r"],[151,21,145,34],[151,22,145,35,"current"],[151,29,145,33],[151,34,145,47],[151,38,145,21],[152,0,145,21],[152,7,145,11],[152,8,145,4],[153,0,146,3],[153,5,141,2],[155,0,147,2],[155,11,147,9,"extract"],[155,18,147,16],[155,19,147,17,"props"],[155,24,147,22],[155,25,147,23],[155,47,147,22],[155,48,147,16],[155,49,147,9],[155,53,147,51,"extract"],[155,60,147,58],[155,61,147,59,"props"],[155,66,147,64],[155,67,147,65],[155,76,147,64],[155,77,147,58],[155,78,147,2],[156,0,148,1],[158,0,150,0],[158,6,150,6,"stateToPropMappings"],[158,25,150,25],[158,108,151,3,"State"],[158,121,151,9,"UNDETERMINED"],[158,133,150,25],[158,135,151,24,"undefined"],[158,144,150,25],[158,199,152,3,"State"],[158,212,152,9,"BEGAN"],[158,217,150,25],[158,219,152,17],[158,228,150,25],[158,283,153,3,"State"],[158,296,153,9,"FAILED"],[158,302,150,25],[158,304,153,18],[158,314,150,25],[158,369,154,3,"State"],[158,382,154,9,"CANCELLED"],[158,391,150,25],[158,393,154,21],[158,406,150,25],[158,461,155,3,"State"],[158,474,155,9,"ACTIVE"],[158,480,150,25],[158,482,155,18],[158,495,150,25],[158,550,156,3,"State"],[158,563,156,9,"END"],[158,566,150,25],[158,568,156,15],[158,577,150,25],[158,601,150,0],[160,0,176,15],[160,11,176,24,"createHandler"],[160,24,176,15],[160,32,185,76],[161,0,185,76],[161,8,180,2,"name"],[161,12,185,76],[161,21,180,2,"name"],[161,25,185,76],[162,0,185,76],[162,35,181,2,"allowedProps"],[162,47,185,76],[163,0,185,76],[163,8,181,2,"allowedProps"],[163,20,185,76],[163,55,181,17],[163,57,185,76],[164,0,185,76],[164,29,182,2,"config"],[164,35,185,76],[165,0,185,76],[165,8,182,2,"config"],[165,14,185,76],[165,43,182,11],[165,45,185,76],[166,0,185,76],[166,8,183,2,"transformProps"],[166,22,185,76],[166,31,183,2,"transformProps"],[166,45,185,76],[167,0,185,76],[167,38,184,2,"customNativeProps"],[167,55,185,76],[168,0,185,76],[168,8,184,2,"customNativeProps"],[168,25,185,76],[168,63,184,22],[168,65,185,76],[170,0,185,76],[170,8,186,8,"Handler"],[170,15,185,76],[171,0,185,76],[173,0,185,76],[175,0,196,4],[175,23,196,16,"props"],[175,28,196,4],[175,30,196,50],[176,0,196,50],[178,0,196,50],[179,0,197,6],[179,34,197,12,"props"],[179,39,197,6],[180,0,196,50],[180,14,194,12,"updateEnqueued"],[180,28,196,50],[180,31,194,69],[180,35,196,50],[182,0,196,50],[182,14,256,12,"onGestureHandlerEvent"],[182,35,196,50],[182,38,256,36],[182,48,256,37,"event"],[182,53,256,36],[182,55,256,64],[183,0,257,6],[183,14,257,10,"event"],[183,19,257,15],[183,20,257,16,"nativeEvent"],[183,31,257,10],[183,32,257,28,"handlerTag"],[183,42,257,10],[183,47,257,43],[183,53,257,48,"handlerTag"],[183,63,257,6],[183,65,257,60],[184,0,258,8],[184,18,258,13,"props"],[184,23,258,8],[184,24,258,19,"onGestureEvent"],[184,38,258,8],[184,64,258,13,"props"],[184,69,258,8],[184,70,258,19,"onGestureEvent"],[184,84,258,8],[184,85,258,36,"event"],[184,90,258,8],[185,0,259,7],[185,11,257,6],[185,17,259,13],[186,0,260,8],[186,18,260,13,"props"],[186,23,260,8],[186,24,260,19,"onGestureHandlerEvent"],[186,45,260,8],[186,71,260,13,"props"],[186,76,260,8],[186,77,260,19,"onGestureHandlerEvent"],[186,98,260,8],[186,99,260,43,"event"],[186,104,260,8],[187,0,261,7],[188,0,262,5],[188,9,196,50],[190,0,196,50],[190,14,265,12,"onGestureHandlerStateChange"],[190,41,196,50],[190,44,265,42],[190,54,266,6,"event"],[190,59,265,42],[190,61,267,9],[191,0,268,6],[191,14,268,10,"event"],[191,19,268,15],[191,20,268,16,"nativeEvent"],[191,31,268,10],[191,32,268,28,"handlerTag"],[191,42,268,10],[191,47,268,43],[191,53,268,48,"handlerTag"],[191,63,268,6],[191,65,268,60],[192,0,269,8],[192,18,269,13,"props"],[192,23,269,8],[192,24,269,19,"onHandlerStateChange"],[192,44,269,8],[192,70,269,13,"props"],[192,75,269,8],[192,76,269,19,"onHandlerStateChange"],[192,96,269,8],[192,97,269,42,"event"],[192,102,269,8],[193,0,271,8],[193,16,271,14,"state"],[193,21,271,42],[193,24,271,45,"event"],[193,29,271,50],[193,30,271,51,"nativeEvent"],[193,41,271,45],[193,42,271,63,"state"],[193,47,271,8],[194,0,272,8],[194,16,272,14,"stateEventName"],[194,30,272,28],[194,33,272,31,"stateToPropMappings"],[194,52,272,50],[194,53,272,51,"state"],[194,58,272,50],[194,59,272,8],[195,0,273,8],[195,16,273,14,"eventHandler"],[195,28,273,26],[195,31,273,29,"stateEventName"],[195,45,273,43],[195,49,273,47],[195,55,273,52,"props"],[195,60,273,47],[195,61,273,58,"stateEventName"],[195,75,273,47],[195,76,273,8],[197,0,274,8],[197,16,274,12,"eventHandler"],[197,28,274,24],[197,32,274,28],[197,39,274,35,"eventHandler"],[197,51,274,28],[197,56,274,52],[197,66,274,8],[197,68,274,64],[198,0,275,10,"eventHandler"],[198,14,275,10,"eventHandler"],[198,26,275,22],[198,27,275,23,"event"],[198,32,275,22],[198,33,275,10],[199,0,276,9],[200,0,277,7],[200,11,268,6],[200,17,277,13],[201,0,278,8],[201,18,278,13,"props"],[201,23,278,8],[201,24,278,19,"onGestureHandlerStateChange"],[201,51,278,8],[201,77,278,13,"props"],[201,82,278,8],[201,83,278,19,"onGestureHandlerStateChange"],[201,110,278,8],[201,111,278,49,"event"],[201,116,278,8],[202,0,279,7],[203,0,280,5],[203,9,196,50],[205,0,196,50],[205,14,282,12,"refHandler"],[205,24,196,50],[205,27,282,25],[205,37,282,26,"node"],[205,41,282,25],[205,43,282,40],[206,0,283,6],[206,16,283,11,"viewNode"],[206,24,283,6],[206,27,283,22,"node"],[206,31,283,6],[207,0,285,6],[207,14,285,12,"child"],[207,19,285,17],[207,22,285,20,"React"],[207,27,285,25],[207,28,285,26,"Children"],[207,36,285,20],[207,37,285,35,"only"],[207,41,285,20],[207,42,285,40],[207,48,285,45,"props"],[207,53,285,40],[207,54,285,51,"children"],[207,62,285,20],[207,63,285,6],[208,0,282,40],[208,14,287,14,"ref"],[208,17,282,40],[208,20,287,27,"child"],[208,25,282,40],[208,26,287,14,"ref"],[208,29,282,40],[210,0,288,6],[210,14,288,10,"ref"],[210,17,288,13],[210,22,288,18],[210,26,288,6],[210,28,288,24],[211,0,289,8],[211,16,289,12],[211,23,289,19,"ref"],[211,26,289,12],[211,31,289,27],[211,41,289,8],[211,43,289,39],[212,0,290,10,"ref"],[212,14,290,10,"ref"],[212,17,290,13],[212,18,290,14,"node"],[212,22,290,13],[212,23,290,10],[213,0,291,9],[213,13,289,8],[213,19,291,15],[214,0,292,10,"ref"],[214,14,292,10,"ref"],[214,17,292,13],[214,18,292,14,"current"],[214,25,292,10],[214,28,292,24,"node"],[214,32,292,10],[215,0,293,9],[216,0,294,7],[217,0,295,5],[217,9,196,50],[219,0,196,50],[219,14,297,12,"createGestureHandler"],[219,34,196,50],[219,37,297,35],[219,47,298,6,"newConfig"],[219,56,297,35],[219,58,299,9],[220,0,300,6],[220,16,300,11,"config"],[220,22,300,6],[220,25,300,20,"newConfig"],[220,34,300,6],[222,0,302,6,"RNGestureHandlerModule"],[222,42,302,29,"createGestureHandler"],[222,62,302,6],[222,63,303,8,"name"],[222,67,302,6],[222,69,304,8],[222,75,304,13,"handlerTag"],[222,85,302,6],[222,87,305,8,"newConfig"],[222,96,302,6],[223,0,307,5],[223,9,196,50],[225,0,196,50],[225,14,309,12,"attachGestureHandler"],[225,34,196,50],[225,37,309,35],[225,47,309,36,"newViewTag"],[225,57,309,35],[225,59,309,59],[226,0,310,6],[226,16,310,11,"viewTag"],[226,23,310,6],[226,26,310,21,"newViewTag"],[226,36,310,6],[228,0,312,6],[228,14,312,10,"Platform"],[228,36,312,19,"OS"],[228,38,312,10],[228,43,312,26],[228,48,312,6],[228,50,312,33],[229,0,314,9,"RNGestureHandlerModule"],[229,44,314,32,"attachGestureHandler"],[229,64,314,8],[229,65,315,10],[229,71,315,15,"handlerTag"],[229,81,314,8],[229,83,316,10,"newViewTag"],[229,93,314,8],[229,95,317,10],[229,101,317,15,"propsRef"],[229,109,314,8],[230,0,319,7],[230,11,312,6],[230,17,319,13],[231,0,320,8,"RNGestureHandlerModule"],[231,44,320,31,"attachGestureHandler"],[231,64,320,8],[231,65,321,10],[231,71,321,15,"handlerTag"],[231,81,320,8],[231,83,322,10,"newViewTag"],[231,93,320,8],[232,0,324,7],[233,0,325,5],[233,9,196,50],[235,0,196,50],[235,14,327,12,"updateGestureHandler"],[235,34,196,50],[235,37,327,35],[235,47,328,6,"newConfig"],[235,56,327,35],[235,58,329,9],[236,0,330,6],[236,16,330,11,"config"],[236,22,330,6],[236,25,330,20,"newConfig"],[236,34,330,6],[238,0,332,6,"RNGestureHandlerModule"],[238,42,332,29,"updateGestureHandler"],[238,62,332,6],[238,63,332,50],[238,69,332,55,"handlerTag"],[238,79,332,6],[238,81,332,67,"newConfig"],[238,90,332,6],[239,0,333,5],[239,9,196,50],[241,0,198,6],[241,14,198,11,"handlerTag"],[241,24,198,6],[241,27,198,24,"handlerTag"],[241,37,198,34],[241,39,198,6],[242,0,199,6],[242,14,199,11,"config"],[242,20,199,6],[242,23,199,20],[242,25,199,6],[243,0,200,6],[243,14,200,11,"propsRef"],[243,22,200,6],[243,25,200,22,"React"],[243,30,200,27],[243,31,200,28,"createRef"],[243,40,200,22],[243,42,200,6],[245,0,201,6],[245,12,201,10,"props"],[245,17,201,15],[245,18,201,16,"id"],[245,20,201,6],[245,22,201,20],[246,0,202,8],[246,14,202,12,"handlerIDToTag"],[246,28,202,26],[246,29,202,27,"props"],[246,34,202,32],[246,35,202,33,"id"],[246,37,202,26],[246,38,202,12],[246,43,202,41,"undefined"],[246,52,202,8],[246,54,202,52],[247,0,203,10],[247,18,203,16],[247,22,203,20,"Error"],[247,27,203,16],[247,51,203,46,"props"],[247,56,203,51],[247,57,203,52,"id"],[247,59,203,16],[247,86,203,10],[248,0,204,9],[250,0,205,8,"handlerIDToTag"],[250,10,205,8,"handlerIDToTag"],[250,24,205,22],[250,25,205,23,"props"],[250,30,205,28],[250,31,205,29,"id"],[250,33,205,22],[250,34,205,8],[250,37,205,35],[250,43,205,40,"handlerTag"],[250,53,205,8],[251,0,206,7],[253,0,196,50],[254,0,207,5],[256,0,185,76],[257,0,185,76],[258,0,185,76],[258,15,209,4],[258,44,209,24],[259,0,209,24],[261,0,210,6],[261,14,210,12,"props"],[261,19,210,34],[261,22,210,37],[261,27,210,42,"props"],[261,32,210,6],[263,0,211,6],[263,14,211,10,"hasUnresolvedRefs"],[263,31,211,27],[263,32,211,28,"props"],[263,37,211,27],[263,38,211,6],[263,40,211,36],[264,0,218,8],[264,17,218,13,"updateEnqueued"],[264,31,218,8],[264,34,218,30,"setImmediate"],[264,46,218,42],[264,47,218,43],[264,59,218,49],[265,0,219,10],[265,14,219,10],[265,20,219,14],[265,21,219,15,"updateEnqueued"],[265,35,219,10],[265,38,219,32],[265,42,219,10],[267,0,220,10],[267,14,220,10],[267,20,220,14],[267,21,220,15,"update"],[267,27,220,10],[268,0,221,9],[268,13,218,42],[268,14,218,8],[269,0,222,7],[271,0,224,6],[271,15,224,11,"createGestureHandler"],[271,35,224,6],[271,36,225,8,"filterConfig"],[271,48,225,20],[271,49,226,10,"transformProps"],[271,63,226,24],[271,66,226,27,"transformProps"],[271,80,226,41],[271,81,226,42],[271,86,226,47,"props"],[271,91,226,41],[271,92,226,24],[271,95,226,56],[271,100,226,61,"props"],[271,105,225,20],[271,150,227,14,"allowedProps"],[271,162,225,20],[271,198,227,31,"customNativeProps"],[271,215,225,20],[271,219,228,10,"config"],[271,225,225,20],[271,226,224,6],[272,0,232,6],[272,15,232,11,"attachGestureHandler"],[272,35,232,6],[272,36,232,32,"findNodeHandle"],[272,50,232,46],[272,51,232,47],[272,56,232,52,"viewNode"],[272,64,232,46],[272,65,232,6],[273,0,233,5],[274,0,185,76],[275,0,185,76],[276,0,185,76],[276,15,235,4],[276,45,235,25],[277,0,236,6],[277,14,236,12,"viewTag"],[277,21,236,19],[277,24,236,22,"findNodeHandle"],[277,38,236,36],[277,39,236,37],[277,44,236,42,"viewNode"],[277,52,236,36],[277,53,236,6],[279,0,237,6],[279,14,237,10],[279,19,237,15,"viewTag"],[279,26,237,10],[279,31,237,27,"viewTag"],[279,38,237,6],[279,40,237,36],[280,0,238,8],[280,17,238,13,"attachGestureHandler"],[280,37,238,8],[280,38,238,34,"viewTag"],[280,45,238,8],[281,0,239,7],[283,0,240,6],[283,15,240,11,"update"],[283,21,240,6],[284,0,241,5],[285,0,185,76],[286,0,185,76],[287,0,185,76],[287,15,243,4],[287,47,243,27],[288,0,244,6,"RNGestureHandlerModule"],[288,42,244,29,"dropGestureHandler"],[288,60,244,6],[288,61,244,48],[288,66,244,53,"handlerTag"],[288,76,244,6],[290,0,245,6],[290,14,245,10],[290,19,245,15,"updateEnqueued"],[290,33,245,6],[290,35,245,31],[291,0,246,8,"clearImmediate"],[291,12,246,8,"clearImmediate"],[291,26,246,22],[291,27,246,23],[291,32,246,28,"updateEnqueued"],[291,46,246,22],[291,47,246,8],[292,0,247,7],[294,0,249,6],[294,14,249,12,"handlerID"],[294,23,249,41],[294,26,249,44],[294,31,249,49,"props"],[294,36,249,44],[294,37,249,55,"id"],[294,39,249,6],[296,0,250,6],[296,14,250,10,"handlerID"],[296,23,250,6],[296,25,250,21],[297,0,252,8],[297,19,252,15,"handlerIDToTag"],[297,33,252,29],[297,34,252,30,"handlerID"],[297,43,252,29],[297,44,252,8],[298,0,253,7],[299,0,254,5],[300,0,185,76],[301,0,185,76],[302,0,185,76],[302,15,335,4],[302,33,335,21],[303,0,336,6],[303,14,336,12,"newConfig"],[303,23,336,21],[303,26,336,24,"filterConfig"],[303,38,336,36],[303,39,337,8,"transformProps"],[303,53,337,22],[303,56,337,25,"transformProps"],[303,70,337,39],[303,71,337,40],[303,76,337,45,"props"],[303,81,337,39],[303,82,337,22],[303,85,337,54],[303,90,337,59,"props"],[303,95,336,36],[303,140,338,12,"allowedProps"],[303,152,336,36],[303,188,338,29,"customNativeProps"],[303,205,336,36],[303,209,339,8,"config"],[303,215,336,36],[303,216,336,6],[305,0,341,6],[305,14,341,10],[305,15,341,11],[305,38,341,21],[305,43,341,26,"config"],[305,49,341,11],[305,51,341,34,"newConfig"],[305,60,341,11],[305,61,341,6],[305,63,341,46],[306,0,342,8],[306,17,342,13,"updateGestureHandler"],[306,37,342,8],[306,38,342,34,"newConfig"],[306,47,342,8],[307,0,343,7],[308,0,344,5],[309,0,185,76],[310,0,185,76],[311,0,185,76],[311,15,346,4],[311,39,346,19,"updates"],[311,46,346,4],[311,48,346,33],[312,0,347,6],[312,14,347,12,"mergedProps"],[312,25,347,23],[312,60,347,31],[312,65,347,36,"props"],[312,70,347,23],[312,73,347,46,"updates"],[312,80,347,23],[312,81,347,6],[314,0,348,6],[314,14,348,12,"newConfig"],[314,23,348,21],[314,26,348,24,"filterConfig"],[314,38,348,36],[314,39,349,8,"transformProps"],[314,53,349,22],[314,56,349,25,"transformProps"],[314,70,349,39],[314,71,349,40,"mergedProps"],[314,82,349,39],[314,83,349,22],[314,86,349,55,"mergedProps"],[314,97,348,36],[314,142,350,12,"allowedProps"],[314,154,348,36],[314,190,350,29,"customNativeProps"],[314,207,348,36],[314,211,351,8,"config"],[314,217,348,36],[314,218,348,6],[315,0,353,6],[315,15,353,11,"updateGestureHandler"],[315,35,353,6],[315,36,353,32,"newConfig"],[315,45,353,6],[316,0,354,5],[317,0,185,76],[318,0,185,76],[319,0,185,76],[319,15,356,4],[319,33,356,13],[320,0,357,6],[320,14,357,10,"gestureEventHandler"],[320,33,357,29],[320,36,357,32],[320,41,357,37,"onGestureHandlerEvent"],[320,62,357,6],[321,0,356,13],[321,28,366,34],[321,33,366,39,"props"],[321,38,356,13],[322,0,356,13],[322,14,364,8,"onGestureEvent"],[322,28,356,13],[322,43,364,8,"onGestureEvent"],[322,57,356,13],[323,0,356,13],[323,14,365,8,"onGestureHandlerEvent"],[323,35,356,13],[323,50,365,8,"onGestureHandlerEvent"],[323,71,356,13],[325,0,367,6],[325,14,367,10,"onGestureEvent"],[325,28,367,24],[325,32,367,28],[325,39,367,35,"onGestureEvent"],[325,53,367,28],[325,58,367,54],[325,68,367,6],[325,70,367,66],[326,0,371,8],[326,16,371,12,"onGestureHandlerEvent"],[326,37,371,8],[326,39,371,35],[327,0,372,10],[327,20,372,16],[327,24,372,20,"Error"],[327,29,372,16],[327,30,373,12],[327,103,372,16],[327,104,372,10],[328,0,375,9],[330,0,376,8,"gestureEventHandler"],[330,12,376,8,"gestureEventHandler"],[330,31,376,27],[330,34,376,30,"onGestureEvent"],[330,48,376,8],[331,0,377,7],[331,11,367,6],[331,17,377,13],[332,0,378,8],[332,16,379,10,"onGestureHandlerEvent"],[332,37,379,31],[332,41,380,10],[332,48,380,17,"onGestureHandlerEvent"],[332,69,380,10],[332,74,380,43],[332,84,378,8],[332,86,381,10],[333,0,382,10],[333,20,382,16],[333,24,382,20,"Error"],[333,29,382,16],[333,30,383,12],[333,103,382,16],[333,104,382,10],[334,0,385,9],[335,0,386,7],[337,0,388,6],[337,14,388,10,"gestureStateEventHandler"],[337,38,388,34],[337,41,388,37],[337,46,388,42,"onGestureHandlerStateChange"],[337,73,388,6],[338,0,356,13],[338,29,397,40],[338,34,397,45,"props"],[338,39,356,13],[339,0,356,13],[339,14,395,8,"onHandlerStateChange"],[339,34,356,13],[339,50,395,8,"onHandlerStateChange"],[339,70,356,13],[340,0,356,13],[340,14,396,8,"onGestureHandlerStateChange"],[340,41,356,13],[340,57,396,8,"onGestureHandlerStateChange"],[340,84,356,13],[342,0,398,6],[342,14,398,10,"onHandlerStateChange"],[342,34,398,30],[342,38,398,34],[342,45,398,41,"onHandlerStateChange"],[342,65,398,34],[342,70,398,66],[342,80,398,6],[342,82,398,78],[343,0,402,8],[343,16,402,12,"onGestureHandlerStateChange"],[343,43,402,8],[343,45,402,41],[344,0,403,10],[344,20,403,16],[344,24,403,20,"Error"],[344,29,403,16],[344,30,404,12],[344,103,403,16],[344,104,403,10],[345,0,406,9],[347,0,407,8,"gestureStateEventHandler"],[347,12,407,8,"gestureStateEventHandler"],[347,36,407,32],[347,39,407,35,"onHandlerStateChange"],[347,59,407,8],[348,0,408,7],[348,11,398,6],[348,17,408,13],[349,0,409,8],[349,16,410,10,"onGestureHandlerStateChange"],[349,43,410,37],[349,47,411,10],[349,54,411,17,"onGestureHandlerStateChange"],[349,81,411,10],[349,86,411,49],[349,96,409,8],[349,98,412,10],[350,0,413,10],[350,20,413,16],[350,24,413,20,"Error"],[350,29,413,16],[350,30,414,12],[350,103,413,16],[350,104,413,10],[351,0,416,9],[352,0,417,7],[354,0,418,6],[354,14,418,12,"events"],[354,20,418,18],[354,23,418,21],[355,0,419,8,"onGestureHandlerEvent"],[355,12,419,8,"onGestureHandlerEvent"],[355,33,419,29],[355,35,419,31,"gestureEventHandler"],[355,54,418,21],[356,0,420,8,"onGestureHandlerStateChange"],[356,12,420,8,"onGestureHandlerStateChange"],[356,39,420,35],[356,41,420,37,"gestureStateEventHandler"],[357,0,418,21],[357,11,418,6],[358,0,423,6],[358,15,423,11,"propsRef"],[358,23,423,6],[358,24,423,20,"current"],[358,31,423,6],[358,34,423,30,"events"],[358,40,423,6],[359,0,425,6],[359,14,425,12,"child"],[359,19,425,22],[359,22,425,25,"React"],[359,27,425,30],[359,28,425,31,"Children"],[359,36,425,25],[359,37,425,40,"only"],[359,41,425,25],[359,42,425,45],[359,47,425,50,"props"],[359,52,425,45],[359,53,425,56,"children"],[359,61,425,25],[359,62,425,6],[360,0,426,6],[360,14,426,10,"grandChildren"],[360,27,426,23],[360,30,426,26,"child"],[360,35,426,31],[360,36,426,32,"props"],[360,41,426,26],[360,42,426,38,"children"],[360,50,426,6],[362,0,427,6],[362,14,428,8,"Touchable"],[362,37,428,18,"TOUCH_TARGET_DEBUG"],[362,55,428,8],[362,59,429,8,"child"],[362,64,429,13],[362,65,429,14,"type"],[362,69,428,8],[362,74,430,9,"child"],[362,79,430,14],[362,80,430,15,"type"],[362,84,430,9],[362,89,430,24],[362,113,430,9],[362,117,431,10,"child"],[362,122,431,15],[362,123,431,16,"type"],[362,127,431,10],[362,128,431,21,"name"],[362,132,431,10],[362,137,431,30],[362,143,430,9],[362,147,432,10,"child"],[362,152,432,15],[362,153,432,16,"type"],[362,157,432,10],[362,158,432,21,"displayName"],[362,169,432,10],[362,174,432,37],[362,180,428,8],[362,181,427,6],[362,183,433,8],[363,0,434,8,"grandChildren"],[363,12,434,8,"grandChildren"],[363,25,434,21],[363,28,434,24,"React"],[363,33,434,29],[363,34,434,30,"Children"],[363,42,434,24],[363,43,434,39,"toArray"],[363,50,434,24],[363,51,434,47,"grandChildren"],[363,64,434,24],[363,65,434,8],[364,0,435,8,"grandChildren"],[364,12,435,8,"grandChildren"],[364,25,435,21],[364,26,435,22,"push"],[364,30,435,8],[364,31,436,10,"Touchable"],[364,54,436,20,"renderDebugView"],[364,69,436,10],[364,70,436,36],[365,0,437,12,"color"],[365,14,437,12,"color"],[365,19,437,17],[365,21,437,19],[365,40,436,36],[366,0,438,12,"hitSlop"],[366,14,438,12,"hitSlop"],[366,21,438,19],[366,23,438,21,"child"],[366,28,438,26],[366,29,438,27,"props"],[366,34,438,21],[366,35,438,33,"hitSlop"],[367,0,436,36],[367,13,436,10],[367,14,435,8],[368,0,441,7],[370,0,443,6],[370,17,443,13,"React"],[370,22,443,18],[370,23,443,19,"cloneElement"],[370,35,443,13],[370,36,444,8,"child"],[370,41,443,13],[371,0,446,10,"ref"],[371,12,446,10,"ref"],[371,15,446,13],[371,17,446,15],[371,22,446,20,"refHandler"],[371,32,443,13],[372,0,447,10,"collapsable"],[372,12,447,10,"collapsable"],[372,23,447,21],[372,25,447,23],[373,0,443,13],[373,13,448,13,"events"],[373,19,443,13],[373,22,450,8,"grandChildren"],[373,35,443,13],[373,36,443,6],[374,0,452,5],[375,0,185,76],[376,0,185,76],[377,0,185,76],[377,6,186,24,"React"],[377,11,186,29],[377,12,186,30,"Component"],[377,21,185,76],[379,0,186,8,"Handler"],[379,4,186,8,"Handler"],[379,11,185,76],[379,12,187,11,"displayName"],[379,23,185,76],[379,26,187,25,"name"],[379,30,185,76],[380,0,454,2],[380,11,454,9,"Handler"],[380,18,454,2],[381,0,455,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","validProps.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACoB;CDK;sCEmC;GFE;0CEC;GFE;2BGE;CHG;6BIC;CJG;AKK;CLU;AME;qBCM;GDa;CNE;AQE;WCO,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CRC;AWK;kBCI;qBCI,8BD;GDC;CXE;ec4B;ECU;ICU;KDW;IEE;2CCS;SDG;KFY;IIE;KJM;IKE;KLW;oCME;KNM;0COG;KPe;yBQE;KRa;mCSE;KTU;mCUE;KVgB;mCWE;KXM;IYE;KZS;IaE;KbQ;IcE;KdgG;GDC;CdE"}},"type":"js/module"}]}