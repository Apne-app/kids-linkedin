{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function deepMerge(target) {\n    var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var extended = _extends({}, target);\n\n    Object.keys(source).forEach(function (key) {\n      if (_typeof(source[key]) !== 'object' || !source[key]) {\n        extended[key] = source[key];\n      } else {\n        if (!target[key]) {\n          extended[key] = source[key];\n        } else {\n          extended[key] = deepMerge(target[key], source[key]);\n        }\n      }\n    });\n    return extended;\n  }\n\n  exports.default = deepMerge;\n});","lineCount":48,"map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,1,"value"],[5,4,4,1,"value"],[5,9,4,6],[5,11,4,8],[6,0,3,45],[6,3,3,0],[8,0,7,0],[8,6,7,4,"_typeof"],[8,13,7,11],[8,16,7,14],[8,23,7,21,"Symbol"],[8,29,7,14],[8,34,7,32],[8,44,7,14],[8,48,7,46],[8,55,7,53,"Symbol"],[8,61,7,59],[8,62,7,60,"iterator"],[8,70,7,46],[8,75,7,73],[8,83,7,14],[8,86,7,84],[8,96,7,94,"obj"],[8,99,7,84],[8,101,7,99],[9,0,7,101],[9,11,7,108],[9,18,7,115,"obj"],[9,21,7,101],[10,0,7,121],[10,3,7,14],[10,6,7,124],[10,16,7,134,"obj"],[10,19,7,124],[10,21,7,139],[11,0,7,141],[11,11,7,148,"obj"],[11,14,7,151],[11,18,7,155],[11,25,7,162,"Symbol"],[11,31,7,155],[11,36,7,173],[11,46,7,148],[11,50,7,187,"obj"],[11,53,7,190],[11,54,7,191,"constructor"],[11,65,7,187],[11,70,7,207,"Symbol"],[11,76,7,148],[11,80,7,217,"obj"],[11,83,7,220],[11,88,7,225,"Symbol"],[11,94,7,231],[11,95,7,232,"prototype"],[11,104,7,148],[11,107,7,244],[11,115,7,148],[11,118,7,255],[11,125,7,262,"obj"],[11,128,7,141],[12,0,7,268],[12,3,7,0],[14,0,9,0],[14,6,9,4,"_extends"],[14,14,9,12],[14,17,9,15,"Object"],[14,23,9,21],[14,24,9,22,"assign"],[14,30,9,15],[14,34,9,32],[14,44,9,42,"target"],[14,50,9,32],[14,52,9,50],[15,0,9,52],[15,9,9,57],[15,13,9,61,"i"],[15,14,9,62],[15,17,9,65],[15,18,9,52],[15,20,9,68,"i"],[15,21,9,69],[15,24,9,72,"arguments"],[15,33,9,81],[15,34,9,82,"length"],[15,40,9,52],[15,42,9,90,"i"],[15,43,9,91],[15,45,9,52],[15,47,9,95],[16,0,9,97],[16,10,9,101,"source"],[16,16,9,107],[16,19,9,110,"arguments"],[16,28,9,119],[16,29,9,120,"i"],[16,30,9,119],[16,31,9,97],[18,0,9,124],[18,11,9,129],[18,15,9,133,"key"],[18,18,9,124],[18,22,9,140,"source"],[18,28,9,124],[18,30,9,148],[19,0,9,150],[19,12,9,154,"Object"],[19,18,9,160],[19,19,9,161,"prototype"],[19,28,9,154],[19,29,9,171,"hasOwnProperty"],[19,43,9,154],[19,44,9,186,"call"],[19,48,9,154],[19,49,9,191,"source"],[19,55,9,154],[19,57,9,199,"key"],[19,60,9,154],[19,61,9,150],[19,63,9,205],[20,0,9,207,"target"],[20,10,9,207,"target"],[20,16,9,213],[20,17,9,214,"key"],[20,20,9,213],[20,21,9,207],[20,24,9,221,"source"],[20,30,9,227],[20,31,9,228,"key"],[20,34,9,227],[20,35,9,207],[21,0,9,235],[22,0,9,237],[23,0,9,239],[25,0,9,240],[25,11,9,247,"target"],[25,17,9,240],[26,0,9,256],[26,3,9,0],[28,0,11,0],[28,11,11,9,"deepMerge"],[28,20,11,0],[28,21,11,19,"target"],[28,27,11,0],[28,29,11,27],[29,0,12,1],[29,8,12,5,"source"],[29,14,12,11],[29,17,12,14,"arguments"],[29,26,12,23],[29,27,12,24,"length"],[29,33,12,14],[29,36,12,33],[29,37,12,14],[29,41,12,38,"arguments"],[29,50,12,47],[29,51,12,48],[29,52,12,47],[29,53,12,38],[29,58,12,55,"undefined"],[29,67,12,14],[29,70,12,67,"arguments"],[29,79,12,76],[29,80,12,77],[29,81,12,76],[29,82,12,14],[29,85,12,82],[29,87,12,1],[31,0,14,1],[31,8,14,5,"extended"],[31,16,14,13],[31,19,14,16,"_extends"],[31,27,14,24],[31,28,14,25],[31,30,14,24],[31,32,14,29,"target"],[31,38,14,24],[31,39,14,1],[33,0,16,1,"Object"],[33,4,16,1,"Object"],[33,10,16,7],[33,11,16,8,"keys"],[33,15,16,1],[33,16,16,13,"source"],[33,22,16,1],[33,24,16,21,"forEach"],[33,31,16,1],[33,32,16,29],[33,42,16,39,"key"],[33,45,16,29],[33,47,16,44],[34,0,17,2],[34,10,17,6,"_typeof"],[34,17,17,13],[34,18,17,14,"source"],[34,24,17,20],[34,25,17,21,"key"],[34,28,17,20],[34,29,17,13],[34,30,17,6],[34,35,17,31],[34,43,17,6],[34,47,17,43],[34,48,17,44,"source"],[34,54,17,50],[34,55,17,51,"key"],[34,58,17,50],[34,59,17,2],[34,61,17,57],[35,0,18,3,"extended"],[35,8,18,3,"extended"],[35,16,18,11],[35,17,18,12,"key"],[35,20,18,11],[35,21,18,3],[35,24,18,19,"source"],[35,30,18,25],[35,31,18,26,"key"],[35,34,18,25],[35,35,18,3],[36,0,19,3],[36,7,17,2],[36,13,19,9],[37,0,20,3],[37,12,20,7],[37,13,20,8,"target"],[37,19,20,14],[37,20,20,15,"key"],[37,23,20,14],[37,24,20,3],[37,26,20,21],[38,0,21,4,"extended"],[38,10,21,4,"extended"],[38,18,21,12],[38,19,21,13,"key"],[38,22,21,12],[38,23,21,4],[38,26,21,20,"source"],[38,32,21,26],[38,33,21,27,"key"],[38,36,21,26],[38,37,21,4],[39,0,22,4],[39,9,20,3],[39,15,22,10],[40,0,23,4,"extended"],[40,10,23,4,"extended"],[40,18,23,12],[40,19,23,13,"key"],[40,22,23,12],[40,23,23,4],[40,26,23,20,"deepMerge"],[40,35,23,29],[40,36,23,30,"target"],[40,42,23,36],[40,43,23,37,"key"],[40,46,23,36],[40,47,23,29],[40,49,23,43,"source"],[40,55,23,49],[40,56,23,50,"key"],[40,59,23,49],[40,60,23,29],[40,61,23,4],[41,0,24,4],[42,0,25,3],[43,0,26,2],[43,5,16,1],[44,0,28,1],[44,11,28,8,"extended"],[44,19,28,1],[45,0,29,1],[47,0,31,0,"exports"],[47,2,31,0,"exports"],[47,9,31,7],[47,10,31,8,"default"],[47,17,31,0],[47,20,31,18,"deepMerge"],[47,29,31,0]],"functionMap":{"names":["<global>","<anonymous>","deepMerge","Object.keys.forEach$argument_0"],"mappings":"AAA;oFCM,qCD,GC,gJD;gCCE,gOD;AEE;6BCK;EDU;CFG"}},"type":"js/module"}]}