{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../../core/theming","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"../IconButton","data":{"isAsync":false}},{"name":"./ToggleButtonGroup","data":{"isAsync":false}},{"name":"./ToggleButtonRow","data":{"isAsync":false}},{"name":"../../styles/colors","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _theming = _$$_REQUIRE(_dependencyMap[11], \"../../core/theming\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"color\"));\n\n  var _IconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../IconButton\"));\n\n  var _ToggleButtonGroup = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14], \"./ToggleButtonGroup\"));\n\n  var _ToggleButtonRow = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./ToggleButtonRow\"));\n\n  var _colors = _$$_REQUIRE(_dependencyMap[16], \"../../styles/colors\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kidsLinkedin/kids-linkedin/node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.tsx\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var ToggleButton = function (_React$Component) {\n    (0, _inherits2.default)(ToggleButton, _React$Component);\n\n    var _super = _createSuper(ToggleButton);\n\n    function ToggleButton() {\n      (0, _classCallCheck2.default)(this, ToggleButton);\n      return _super.apply(this, arguments);\n    }\n\n    (0, _createClass2.default)(ToggleButton, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var _this$props = this.props,\n            icon = _this$props.icon,\n            size = _this$props.size,\n            theme = _this$props.theme,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            disabled = _this$props.disabled,\n            style = _this$props.style,\n            value = _this$props.value,\n            status = _this$props.status,\n            _onPress = _this$props.onPress,\n            rest = (0, _objectWithoutProperties2.default)(_this$props, [\"icon\", \"size\", \"theme\", \"accessibilityLabel\", \"disabled\", \"style\", \"value\", \"status\", \"onPress\"]);\n        var borderRadius = theme.roundness;\n        return React.createElement(_ToggleButtonGroup.ToggleButtonGroupContext.Consumer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }\n        }, function (context) {\n          var backgroundColor;\n          var checked = context && context.value === value || status === 'checked';\n\n          if (checked) {\n            backgroundColor = theme.dark ? 'rgba(255, 255, 255, .12)' : 'rgba(0, 0, 0, .08)';\n          } else {\n            backgroundColor = 'transparent';\n          }\n\n          return React.createElement(_IconButton.default, (0, _extends2.default)({\n            borderless: false,\n            icon: icon,\n            onPress: function onPress(e) {\n              if (_onPress) {\n                _onPress(e);\n              }\n\n              if (context) {\n                context.onValueChange(!checked ? value : null);\n              }\n            },\n            size: size,\n            accessibilityLabel: accessibilityLabel,\n            disabled: disabled,\n            style: [styles.content, {\n              backgroundColor: backgroundColor,\n              borderRadius: borderRadius,\n              borderColor: (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.29).rgb().string()\n            }, style]\n          }, rest, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }\n          }));\n        });\n      }\n    }]);\n    return ToggleButton;\n  }(React.Component);\n\n  ToggleButton.Group = _ToggleButtonGroup.default;\n  ToggleButton.Row = _ToggleButtonRow.default;\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      width: 42,\n      height: 42,\n      margin: 0\n    }\n  });\n\n  var _default = (0, _theming.withTheme)(ToggleButton);\n\n  exports.default = _default;\n});","lineCount":139,"map":[[25,0,1,0],[27,0,2,0],[29,0,8,0],[31,0,9,0],[33,0,10,0],[35,0,11,0],[37,0,14,0],[39,0,15,0],[47,6,92,6,"ToggleButton"],[47,18],[59,31,99,11],[60,0,99,11],[62,0,99,11],[62,26,111,8],[62,31,111,13,"props"],[62,36,99,11],[63,0,99,11],[63,12,101,6,"icon"],[63,16,99,11],[63,31,101,6,"icon"],[63,35,99,11],[64,0,99,11],[64,12,102,6,"size"],[64,16,99,11],[64,31,102,6,"size"],[64,35,99,11],[65,0,99,11],[65,12,103,6,"theme"],[65,17,99,11],[65,32,103,6,"theme"],[65,37,99,11],[66,0,99,11],[66,12,104,6,"accessibilityLabel"],[66,30,99,11],[66,45,104,6,"accessibilityLabel"],[66,63,99,11],[67,0,99,11],[67,12,105,6,"disabled"],[67,20,99,11],[67,35,105,6,"disabled"],[67,43,99,11],[68,0,99,11],[68,12,106,6,"style"],[68,17,99,11],[68,32,106,6,"style"],[68,37,99,11],[69,0,99,11],[69,12,107,6,"value"],[69,17,99,11],[69,32,107,6,"value"],[69,37,99,11],[70,0,99,11],[70,12,108,6,"status"],[70,18,99,11],[70,33,108,6,"status"],[70,39,99,11],[71,0,99,11],[71,12,109,6,"onPress"],[71,20,99,11],[71,35,109,6,"onPress"],[71,42,99,11],[72,0,99,11],[72,12,110,9,"rest"],[72,16,99,11],[73,0,112,4],[73,12,112,10,"borderRadius"],[73,24,112,22],[73,27,112,25,"theme"],[73,32,112,30],[73,33,112,31,"roundness"],[73,42,112,4],[74,0,114,4],[74,15,115,6],[74,35,115,7],[74,78,115,6],[74,79,115,32],[74,87,115,6],[75,0,115,6],[76,0,115,6],[77,0,115,6],[78,0,115,6],[79,0,115,6],[80,0,115,6],[81,0,115,6],[81,11,116,9],[81,21,116,10,"context"],[81,28,116,9],[81,30,116,73],[82,0,117,10],[82,14,117,14,"backgroundColor"],[82,29,117,10],[83,0,119,10],[83,14,119,16,"checked"],[83,21,119,39],[83,24,120,13,"context"],[83,31,120,20],[83,35,120,24,"context"],[83,42,120,31],[83,43,120,32,"value"],[83,48,120,24],[83,53,120,42,"value"],[83,58,120,12],[83,62,120,52,"status"],[83,68,120,58],[83,73,120,63],[83,82,119,10],[85,0,122,10],[85,14,122,14,"checked"],[85,21,122,10],[85,23,122,23],[86,0,123,12,"backgroundColor"],[86,12,123,12,"backgroundColor"],[86,27,123,27],[86,30,123,30,"theme"],[86,35,123,35],[86,36,123,36,"dark"],[86,40,123,30],[86,43,124,16],[86,69,123,30],[86,72,125,16],[86,92,123,12],[87,0,126,11],[87,11,122,10],[87,17,126,17],[88,0,127,12,"backgroundColor"],[88,12,127,12,"backgroundColor"],[88,27,127,27],[88,30,127,30],[88,43,127,12],[89,0,128,11],[91,0,130,10],[91,17,131,12],[91,37,131,13],[91,56,131,12],[92,0,132,14],[92,12,132,14],[92,22,132,24],[92,24,132,26],[92,29,131,12],[93,0,133,14],[93,12,133,14],[93,16,133,18],[93,18,133,20,"icon"],[93,22,131,12],[94,0,134,14],[94,12,134,14],[94,19,134,21],[94,21,134,23],[94,38,134,24,"e"],[94,39,134,23],[94,41,134,63],[95,0,135,16],[95,18,135,20,"onPress"],[95,26,135,16],[95,28,135,29],[96,0,136,18,"onPress"],[96,16,136,18,"onPress"],[96,24,136,25],[96,25,136,26,"e"],[96,26,136,25],[96,27,136,18],[97,0,137,17],[99,0,139,16],[99,18,139,20,"context"],[99,25,139,16],[99,27,139,29],[100,0,140,18,"context"],[100,16,140,18,"context"],[100,23,140,25],[100,24,140,26,"onValueChange"],[100,37,140,18],[100,38,140,40],[100,39,140,41,"checked"],[100,46,140,40],[100,49,140,51,"value"],[100,54,140,40],[100,57,140,59],[100,61,140,18],[101,0,141,17],[102,0,142,15],[102,13,131,12],[103,0,143,14],[103,12,143,14],[103,16,143,18],[103,18,143,20,"size"],[103,22,131,12],[104,0,144,14],[104,12,144,14],[104,30,144,32],[104,32,144,34,"accessibilityLabel"],[104,50,131,12],[105,0,145,14],[105,12,145,14],[105,20,145,22],[105,22,145,24,"disabled"],[105,30,131,12],[106,0,146,14],[106,12,146,14],[106,17,146,19],[106,19,146,21],[106,20,147,16,"styles"],[106,26,147,22],[106,27,147,23,"content"],[106,34,146,21],[106,36,148,16],[107,0,149,18,"backgroundColor"],[107,14,149,18,"backgroundColor"],[107,29,149,33],[107,31,149,18,"backgroundColor"],[107,46,148,16],[108,0,150,18,"borderRadius"],[108,14,150,18,"borderRadius"],[108,26,150,30],[108,28,150,18,"borderRadius"],[108,40,148,16],[109,0,151,18,"borderColor"],[109,14,151,18,"borderColor"],[109,25,151,29],[109,27,151,31],[109,47,151,37,"theme"],[109,52,151,42],[109,53,151,43,"dark"],[109,57,151,37],[109,60,151,50,"white"],[109,73,151,37],[109,76,151,58,"black"],[109,89,151,31],[109,91,152,21,"alpha"],[109,96,151,31],[109,97,152,27],[109,101,151,31],[109,103,153,21,"rgb"],[109,106,151,31],[109,109,154,21,"string"],[109,115,151,31],[110,0,148,16],[110,13,146,21],[110,15,156,16,"style"],[110,20,146,21],[111,0,131,12],[111,13,158,18,"rest"],[111,17,131,12],[112,0,131,12],[113,0,131,12],[114,0,131,12],[115,0,131,12],[116,0,131,12],[117,0,131,12],[118,0,131,12],[118,13,130,10],[119,0,161,9],[119,9,115,6],[119,10,114,4],[120,0,164,3],[123,4,92,27,"React"],[123,9,92,32],[123,10,92,33,"Component"],[123,19],[125,0,92,6,"ToggleButton"],[125,2,92,6,"ToggleButton"],[125,14],[125,15,94,9,"Group"],[125,20],[125,23,94,17,"ToggleButtonGroup"],[125,49],[126,0,92,6,"ToggleButton"],[126,2,92,6,"ToggleButton"],[126,14],[126,15,97,9,"Row"],[126,18],[126,21,97,15,"ToggleButtonRow"],[126,45],[128,0,167,0],[128,6,167,6,"styles"],[128,12,167,12],[128,15,167,15,"StyleSheet"],[128,39,167,26,"create"],[128,45,167,15],[128,46,167,33],[129,0,168,2,"content"],[129,4,168,2,"content"],[129,11,168,9],[129,13,168,11],[130,0,169,4,"width"],[130,6,169,4,"width"],[130,11,169,9],[130,13,169,11],[130,15,168,11],[131,0,170,4,"height"],[131,6,170,4,"height"],[131,12,170,10],[131,14,170,12],[131,16,168,11],[132,0,171,4,"margin"],[132,6,171,4,"margin"],[132,12,171,10],[132,14,171,12],[133,0,168,11],[134,0,167,33],[134,3,167,15],[134,4,167,0],[136,17,175,15],[136,41,175,25,"ToggleButton"],[136,53,175,15],[136,54]],"functionMap":{"names":["<global>","ToggleButton","render","ToggleButtonGroupContext.Consumer.props.children","IconButton.props.onPress"],"mappings":"AAA;AC2F;ECO;SCiB;uBCkB;eDQ;SDmB;GDG;CDC"}},"type":"js/module"}]}