{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var KeyboardManager = function (_React$Component) {\n    (0, _inherits2.default)(KeyboardManager, _React$Component);\n\n    var _super = _createSuper(KeyboardManager);\n\n    function KeyboardManager() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, KeyboardManager);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.previouslyFocusedTextInput = null;\n      _this.startTimestamp = 0;\n\n      _this.clearKeyboardTimeout = function () {\n        if (_this.keyboardTimeout !== undefined) {\n          clearTimeout(_this.keyboardTimeout);\n          _this.keyboardTimeout = undefined;\n        }\n      };\n\n      _this.handlePageChangeStart = function () {\n        if (!_this.props.enabled) {\n          return;\n        }\n\n        _this.clearKeyboardTimeout();\n\n        var input = _reactNative.TextInput.State.currentlyFocusedInput ? _reactNative.TextInput.State.currentlyFocusedInput() : _reactNative.TextInput.State.currentlyFocusedField();\n\n        _reactNative.TextInput.State.blurTextInput(input);\n\n        _this.previouslyFocusedTextInput = input;\n        _this.startTimestamp = Date.now();\n      };\n\n      _this.handlePageChangeConfirm = function () {\n        if (!_this.props.enabled) {\n          return;\n        }\n\n        _this.clearKeyboardTimeout();\n\n        var input = _this.previouslyFocusedTextInput;\n\n        if (_reactNative.Platform.OS === 'android') {\n          _reactNative.Keyboard.dismiss();\n        } else if (input) {\n          _reactNative.TextInput.State.blurTextInput(input);\n        }\n\n        _this.previouslyFocusedTextInput = null;\n      };\n\n      _this.handlePageChangeCancel = function () {\n        if (!_this.props.enabled) {\n          return;\n        }\n\n        _this.clearKeyboardTimeout();\n\n        var input = _this.previouslyFocusedTextInput;\n\n        if (input) {\n          if (Date.now() - _this.startTimestamp < 100) {\n            _this.keyboardTimeout = setTimeout(function () {\n              _reactNative.TextInput.State.focusTextInput(input);\n\n              _this.previouslyFocusedTextInput = null;\n            }, 100);\n          } else {\n            _reactNative.TextInput.State.focusTextInput(input);\n\n            _this.previouslyFocusedTextInput = null;\n          }\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(KeyboardManager, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.clearKeyboardTimeout();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return this.props.children({\n          onPageChangeStart: this.handlePageChangeStart,\n          onPageChangeConfirm: this.handlePageChangeConfirm,\n          onPageChangeCancel: this.handlePageChangeCancel\n        });\n      }\n    }]);\n    return KeyboardManager;\n  }(React.Component);\n\n  exports.default = KeyboardManager;\n});","lineCount":133,"map":[[21,0,1,0],[23,0,2,0],[29,6,13,21,"KeyboardManager"],[29,21],[44,12,20,10,"previouslyFocusedTextInput"],[44,38],[44,41,20,54],[44,45],[45,12,21,10,"startTimestamp"],[45,26],[45,29,21,35],[45,30],[47,12,24,10,"clearKeyboardTimeout"],[47,32],[47,35,24,33],[47,47,24,39],[48,0,25,4],[48,12,25,8],[48,18,25,13,"keyboardTimeout"],[48,33,25,8],[48,38,25,33,"undefined"],[48,47,25,4],[48,49,25,44],[49,0,26,6,"clearTimeout"],[49,10,26,6,"clearTimeout"],[49,22,26,18],[49,23,26,19],[49,29,26,24,"keyboardTimeout"],[49,44,26,18],[49,45,26,6],[50,0,27,6],[50,16,27,11,"keyboardTimeout"],[50,31,27,6],[50,34,27,29,"undefined"],[50,43,27,6],[51,0,28,5],[52,0,29,3],[52,7],[54,12,31,10,"handlePageChangeStart"],[54,33],[54,36,31,34],[54,48,31,40],[55,0,32,4],[55,12,32,8],[55,13,32,9],[55,19,32,14,"props"],[55,24,32,9],[55,25,32,20,"enabled"],[55,32,32,4],[55,34,32,29],[56,0,33,6],[57,0,34,5],[59,0,36,4],[59,14,36,9,"clearKeyboardTimeout"],[59,34,36,4],[61,0,39,4],[61,12,39,10,"input"],[61,17,39,15],[61,20,39,18,"TextInput"],[61,43,39,28,"State"],[61,48,39,18],[61,49,39,34,"currentlyFocusedInput"],[61,70,39,18],[61,73,41,8,"TextInput"],[61,96,41,18,"State"],[61,101,41,8],[61,102,41,24,"currentlyFocusedInput"],[61,123,41,8],[61,125,39,18],[61,128,42,8,"TextInput"],[61,151,42,18,"State"],[61,156,42,8],[61,157,42,24,"currentlyFocusedField"],[61,178,42,8],[61,180,39,4],[63,0,45,4,"TextInput"],[63,31,45,14,"State"],[63,36,45,4],[63,37,45,20,"blurTextInput"],[63,50,45,4],[63,51,45,34,"input"],[63,56,45,4],[65,0,48,4],[65,14,48,9,"previouslyFocusedTextInput"],[65,40,48,4],[65,43,48,38,"input"],[65,48,48,4],[66,0,51,4],[66,14,51,9,"startTimestamp"],[66,28,51,4],[66,31,51,26,"Date"],[66,35,51,30],[66,36,51,31,"now"],[66,39,51,26],[66,41,51,4],[67,0,52,3],[67,7],[69,12,54,10,"handlePageChangeConfirm"],[69,35],[69,38,54,36],[69,50,54,42],[70,0,55,4],[70,12,55,8],[70,13,55,9],[70,19,55,14,"props"],[70,24,55,9],[70,25,55,20,"enabled"],[70,32,55,4],[70,34,55,29],[71,0,56,6],[72,0,57,5],[74,0,59,4],[74,14,59,9,"clearKeyboardTimeout"],[74,34,59,4],[76,0,61,4],[76,12,61,10,"input"],[76,17,61,15],[76,20,61,18],[76,26,61,23,"previouslyFocusedTextInput"],[76,52,61,4],[78,0,63,4],[78,12,63,8,"Platform"],[78,34,63,17,"OS"],[78,36,63,8],[78,41,63,24],[78,50,63,4],[78,52,63,35],[79,0,64,6,"Keyboard"],[79,32,64,15,"dismiss"],[79,39,64,6],[80,0,65,5],[80,9,63,4],[80,15,65,11],[80,19,65,15,"input"],[80,24,65,11],[80,26,65,22],[81,0,66,6,"TextInput"],[81,33,66,16,"State"],[81,38,66,6],[81,39,66,22,"blurTextInput"],[81,52,66,6],[81,53,66,36,"input"],[81,58,66,6],[82,0,67,5],[84,0,70,4],[84,14,70,9,"previouslyFocusedTextInput"],[84,40,70,4],[84,43,70,38],[84,47,70,4],[85,0,71,3],[85,7],[87,12,73,10,"handlePageChangeCancel"],[87,34],[87,37,73,35],[87,49,73,41],[88,0,74,4],[88,12,74,8],[88,13,74,9],[88,19,74,14,"props"],[88,24,74,9],[88,25,74,20,"enabled"],[88,32,74,4],[88,34,74,29],[89,0,75,6],[90,0,76,5],[92,0,78,4],[92,14,78,9,"clearKeyboardTimeout"],[92,34,78,4],[94,0,81,4],[94,12,81,10,"input"],[94,17,81,15],[94,20,81,18],[94,26,81,23,"previouslyFocusedTextInput"],[94,52,81,4],[96,0,83,4],[96,12,83,8,"input"],[96,17,83,4],[96,19,83,15],[97,0,91,6],[97,14,91,10,"Date"],[97,18,91,14],[97,19,91,15,"now"],[97,22,91,10],[97,27,91,23],[97,33,91,28,"startTimestamp"],[97,47,91,10],[97,50,91,45],[97,53,91,6],[97,55,91,50],[98,0,92,8],[98,18,92,13,"keyboardTimeout"],[98,33,92,8],[98,36,92,31,"setTimeout"],[98,46,92,41],[98,47,92,42],[98,59,92,48],[99,0,93,10,"TextInput"],[99,37,93,20,"State"],[99,42,93,10],[99,43,93,26,"focusTextInput"],[99,57,93,10],[99,58,93,41,"input"],[99,63,93,10],[101,0,94,10],[101,20,94,15,"previouslyFocusedTextInput"],[101,46,94,10],[101,49,94,44],[101,53,94,10],[102,0,95,9],[102,13,92,41],[102,15,95,11],[102,18,92,41],[102,19,92,8],[103,0,96,7],[103,11,91,6],[103,17,96,13],[104,0,97,8,"TextInput"],[104,35,97,18,"State"],[104,40,97,8],[104,41,97,24,"focusTextInput"],[104,55,97,8],[104,56,97,39,"input"],[104,61,97,8],[106,0,98,8],[106,18,98,13,"previouslyFocusedTextInput"],[106,44,98,8],[106,47,98,42],[106,51,98,8],[107,0,99,7],[108,0,100,5],[109,0,101,3],[109,7],[116,45,14,25],[117,0,15,4],[117,13,15,9,"clearKeyboardTimeout"],[117,33,15,4],[118,0,16,3],[121,31,103,11],[122,0,104,4],[122,15,104,11],[122,20,104,16,"props"],[122,25,104,11],[122,26,104,22,"children"],[122,34,104,11],[122,35,104,31],[123,0,105,6,"onPageChangeStart"],[123,10,105,6,"onPageChangeStart"],[123,27,105,23],[123,29,105,25],[123,34,105,30,"handlePageChangeStart"],[123,55,104,31],[124,0,106,6,"onPageChangeConfirm"],[124,10,106,6,"onPageChangeConfirm"],[124,29,106,25],[124,31,106,27],[124,36,106,32,"handlePageChangeConfirm"],[124,59,104,31],[125,0,107,6,"onPageChangeCancel"],[125,10,107,6,"onPageChangeCancel"],[125,28,107,24],[125,30,107,26],[125,35,107,31,"handlePageChangeCancel"],[126,0,104,31],[126,9,104,11],[126,10,104,4],[127,0,109,3],[130,4,13,45,"React"],[130,9,13,50],[130,10,13,51,"Component"],[130,19]],"functionMap":{"names":["<global>","KeyboardManager","componentWillUnmount","clearKeyboardTimeout","handlePageChangeStart","handlePageChangeConfirm","handlePageChangeCancel","setTimeout$argument_0","render"],"mappings":"AAA;eCY;ECC;GDE;iCEQ;GFK;kCGE;GHqB;oCIE;GJiB;mCKE;0CCmB;SDG;GLM;EOE;GPM;CDC"}},"type":"js/module"}]}