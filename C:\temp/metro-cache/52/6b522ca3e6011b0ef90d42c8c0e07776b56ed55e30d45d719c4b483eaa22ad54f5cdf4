{"dependencies":[{"name":"./_isArrayLike","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":25}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _isArrayLike = _$$_REQUIRE(_dependencyMap[0], \"./_isArrayLike\");\n\n  function _makeFlat(recursive) {\n    return function flatt(list) {\n      var value, jlen, j;\n      var result = [];\n      var idx = 0;\n      var ilen = list.length;\n\n      while (idx < ilen) {\n        if (_isArrayLike(list[idx])) {\n          value = recursive ? flatt(list[idx]) : list[idx];\n          j = 0;\n          jlen = value.length;\n\n          while (j < jlen) {\n            result[result.length] = value[j];\n            j += 1;\n          }\n        } else {\n          result[result.length] = list[idx];\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    };\n  }\n\n  module.exports = _makeFlat;\n});","lineCount":33,"map":[[2,0,1,0],[2,6,1,4,"_isArrayLike"],[2,18,1,16],[2,21,3,0,"require"],[2,32,3,7],[2,69,1,0],[4,0,12,0],[4,11,12,9,"_makeFlat"],[4,20,12,0],[4,21,12,19,"recursive"],[4,30,12,0],[4,32,12,30],[5,0,13,2],[5,11,13,9],[5,20,13,18,"flatt"],[5,25,13,9],[5,26,13,24,"list"],[5,30,13,9],[5,32,13,30],[6,0,14,4],[6,10,14,8,"value"],[6,15,14,4],[6,17,14,15,"jlen"],[6,21,14,4],[6,23,14,21,"j"],[6,24,14,4],[7,0,15,4],[7,10,15,8,"result"],[7,16,15,14],[7,19,15,17],[7,21,15,4],[8,0,16,4],[8,10,16,8,"idx"],[8,13,16,11],[8,16,16,14],[8,17,16,4],[9,0,17,4],[9,10,17,8,"ilen"],[9,14,17,12],[9,17,17,15,"list"],[9,21,17,19],[9,22,17,20,"length"],[9,28,17,4],[11,0,19,4],[11,13,19,11,"idx"],[11,16,19,14],[11,19,19,17,"ilen"],[11,23,19,4],[11,25,19,23],[12,0,20,6],[12,12,20,10,"_isArrayLike"],[12,24,20,22],[12,25,20,23,"list"],[12,29,20,27],[12,30,20,28,"idx"],[12,33,20,27],[12,34,20,22],[12,35,20,6],[12,37,20,35],[13,0,21,8,"value"],[13,10,21,8,"value"],[13,15,21,13],[13,18,21,16,"recursive"],[13,27,21,25],[13,30,21,28,"flatt"],[13,35,21,33],[13,36,21,34,"list"],[13,40,21,38],[13,41,21,39,"idx"],[13,44,21,38],[13,45,21,33],[13,46,21,25],[13,49,21,47,"list"],[13,53,21,51],[13,54,21,52,"idx"],[13,57,21,51],[13,58,21,8],[14,0,22,8,"j"],[14,10,22,8,"j"],[14,11,22,9],[14,14,22,12],[14,15,22,8],[15,0,23,8,"jlen"],[15,10,23,8,"jlen"],[15,14,23,12],[15,17,23,15,"value"],[15,22,23,20],[15,23,23,21,"length"],[15,29,23,8],[17,0,25,8],[17,17,25,15,"j"],[17,18,25,16],[17,21,25,19,"jlen"],[17,25,25,8],[17,27,25,25],[18,0,26,10,"result"],[18,12,26,10,"result"],[18,18,26,16],[18,19,26,17,"result"],[18,25,26,23],[18,26,26,24,"length"],[18,32,26,16],[18,33,26,10],[18,36,26,34,"value"],[18,41,26,39],[18,42,26,40,"j"],[18,43,26,39],[18,44,26,10],[19,0,27,10,"j"],[19,12,27,10,"j"],[19,13,27,11],[19,17,27,15],[19,18,27,10],[20,0,28,9],[21,0,29,7],[21,9,20,6],[21,15,29,13],[22,0,30,8,"result"],[22,10,30,8,"result"],[22,16,30,14],[22,17,30,15,"result"],[22,23,30,21],[22,24,30,22,"length"],[22,30,30,14],[22,31,30,8],[22,34,30,32,"list"],[22,38,30,36],[22,39,30,37,"idx"],[22,42,30,36],[22,43,30,8],[23,0,31,7],[25,0,33,6,"idx"],[25,8,33,6,"idx"],[25,11,33,9],[25,15,33,13],[25,16,33,6],[26,0,34,5],[28,0,36,4],[28,13,36,11,"result"],[28,19,36,4],[29,0,37,3],[29,5,13,2],[30,0,38,1],[32,0,40,0,"module"],[32,2,40,0,"module"],[32,8,40,6],[32,9,40,7,"exports"],[32,16,40,0],[32,19,40,17,"_makeFlat"],[32,28,40,0]],"functionMap":{"names":["<global>","_makeFlat","flatt"],"mappings":"AAA;ACW;SCC;GDwB;CDC"}},"type":"js/module"}]}