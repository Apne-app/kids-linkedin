{"dependencies":[{"name":"./_concat","data":{"isAsync":false}},{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _concat = _$$_REQUIRE(_dependencyMap[0], \"./_concat\");\n\n  var _curry2 = _$$_REQUIRE(_dependencyMap[1], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XAperture = function () {\n    function XAperture(n, xf) {\n      this.xf = xf;\n      this.pos = 0;\n      this.full = false;\n      this.acc = new Array(n);\n    }\n\n    XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n    XAperture.prototype['@@transducer/result'] = function (result) {\n      this.acc = null;\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XAperture.prototype['@@transducer/step'] = function (result, input) {\n      this.store(input);\n      return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n    };\n\n    XAperture.prototype.store = function (input) {\n      this.acc[this.pos] = input;\n      this.pos += 1;\n\n      if (this.pos === this.acc.length) {\n        this.pos = 0;\n        this.full = true;\n      }\n    };\n\n    XAperture.prototype.getCopy = function () {\n      return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n    };\n\n    return XAperture;\n  }();\n\n  var _xaperture = _curry2(function _xaperture(n, xf) {\n    return new XAperture(n, xf);\n  });\n\n  module.exports = _xaperture;\n});","lineCount":50,"map":[[2,0,1,0],[2,6,1,4,"_concat"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_curry2"],[4,13,3,11],[4,16,3,27,"require"],[4,27,3,34],[4,59,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XAperture"],[8,15,7,13],[8,18,7,29],[8,30,7,41],[9,0,9,2],[9,13,9,11,"XAperture"],[9,22,9,2],[9,23,9,21,"n"],[9,24,9,2],[9,26,9,24,"xf"],[9,28,9,2],[9,30,9,28],[10,0,10,4],[10,11,10,9,"xf"],[10,13,10,4],[10,16,10,14,"xf"],[10,18,10,4],[11,0,11,4],[11,11,11,9,"pos"],[11,14,11,4],[11,17,11,15],[11,18,11,4],[12,0,12,4],[12,11,12,9,"full"],[12,15,12,4],[12,18,12,16],[12,23,12,4],[13,0,13,4],[13,11,13,9,"acc"],[13,14,13,4],[13,17,13,15],[13,21,13,19,"Array"],[13,26,13,15],[13,27,13,25,"n"],[13,28,13,15],[13,29,13,4],[14,0,14,3],[16,0,15,2,"XAperture"],[16,4,15,2,"XAperture"],[16,13,15,11],[16,14,15,12,"prototype"],[16,23,15,2],[16,24,15,22],[16,43,15,2],[16,47,15,45,"_xfBase"],[16,54,15,52],[16,55,15,53,"init"],[16,59,15,2],[18,0,16,2,"XAperture"],[18,4,16,2,"XAperture"],[18,13,16,11],[18,14,16,12,"prototype"],[18,23,16,2],[18,24,16,22],[18,45,16,2],[18,49,16,47],[18,59,16,57,"result"],[18,65,16,47],[18,67,16,65],[19,0,17,4],[19,11,17,9,"acc"],[19,14,17,4],[19,17,17,15],[19,21,17,4],[20,0,18,4],[20,13,18,11],[20,18,18,16,"xf"],[20,20,18,11],[20,21,18,19],[20,42,18,11],[20,44,18,42,"result"],[20,50,18,11],[20,51,18,4],[21,0,19,3],[21,5,16,2],[23,0,20,2,"XAperture"],[23,4,20,2,"XAperture"],[23,13,20,11],[23,14,20,12,"prototype"],[23,23,20,2],[23,24,20,22],[23,43,20,2],[23,47,20,45],[23,57,20,55,"result"],[23,63,20,45],[23,65,20,63,"input"],[23,70,20,45],[23,72,20,70],[24,0,21,4],[24,11,21,9,"store"],[24,16,21,4],[24,17,21,15,"input"],[24,22,21,4],[25,0,22,4],[25,13,22,11],[25,18,22,16,"full"],[25,22,22,11],[25,25,22,23],[25,30,22,28,"xf"],[25,32,22,23],[25,33,22,31],[25,52,22,23],[25,54,22,52,"result"],[25,60,22,23],[25,62,22,60],[25,67,22,65,"getCopy"],[25,74,22,60],[25,76,22,23],[25,77,22,11],[25,80,22,78,"result"],[25,86,22,4],[26,0,23,3],[26,5,20,2],[28,0,24,2,"XAperture"],[28,4,24,2,"XAperture"],[28,13,24,11],[28,14,24,12,"prototype"],[28,23,24,2],[28,24,24,22,"store"],[28,29,24,2],[28,32,24,30],[28,42,24,40,"input"],[28,47,24,30],[28,49,24,47],[29,0,25,4],[29,11,25,9,"acc"],[29,14,25,4],[29,15,25,13],[29,20,25,18,"pos"],[29,23,25,4],[29,27,25,25,"input"],[29,32,25,4],[30,0,26,4],[30,11,26,9,"pos"],[30,14,26,4],[30,18,26,16],[30,19,26,4],[32,0,27,4],[32,10,27,8],[32,15,27,13,"pos"],[32,18,27,8],[32,23,27,21],[32,28,27,26,"acc"],[32,31,27,21],[32,32,27,30,"length"],[32,38,27,4],[32,40,27,38],[33,0,28,6],[33,13,28,11,"pos"],[33,16,28,6],[33,19,28,17],[33,20,28,6],[34,0,29,6],[34,13,29,11,"full"],[34,17,29,6],[34,20,29,18],[34,24,29,6],[35,0,30,5],[36,0,31,3],[36,5,24,2],[38,0,32,2,"XAperture"],[38,4,32,2,"XAperture"],[38,13,32,11],[38,14,32,12,"prototype"],[38,23,32,2],[38,24,32,22,"getCopy"],[38,31,32,2],[38,34,32,32],[38,46,32,44],[39,0,33,4],[39,13,33,11,"_concat"],[39,20,33,18],[39,21,33,19,"Array"],[39,26,33,24],[39,27,33,25,"prototype"],[39,36,33,19],[39,37,33,35,"slice"],[39,42,33,19],[39,43,33,41,"call"],[39,47,33,19],[39,48,33,46],[39,53,33,51,"acc"],[39,56,33,19],[39,58,33,56],[39,63,33,61,"pos"],[39,66,33,19],[39,67,33,18],[39,69,33,67,"Array"],[39,74,33,72],[39,75,33,73,"prototype"],[39,84,33,67],[39,85,33,83,"slice"],[39,90,33,67],[39,91,33,89,"call"],[39,95,33,67],[39,96,33,94],[39,101,33,99,"acc"],[39,104,33,67],[39,106,33,104],[39,107,33,67],[39,109,33,107],[39,114,33,112,"pos"],[39,117,33,67],[39,118,33,18],[39,119,33,4],[40,0,34,3],[40,5,32,2],[42,0,36,2],[42,11,36,9,"XAperture"],[42,20,36,2],[43,0,37,1],[43,3,7,29],[43,5,7,0],[45,0,39,0],[45,6,39,4,"_xaperture"],[45,16,39,14],[45,19,39,30,"_curry2"],[45,26,39,37],[45,27,39,38],[45,36,39,47,"_xaperture"],[45,46,39,38],[45,47,39,58,"n"],[45,48,39,38],[45,50,39,61,"xf"],[45,52,39,38],[45,54,39,65],[46,0,40,2],[46,11,40,9],[46,15,40,13,"XAperture"],[46,24,40,9],[46,25,40,23,"n"],[46,26,40,9],[46,28,40,26,"xf"],[46,30,40,9],[46,31,40,2],[47,0,41,1],[47,3,39,37],[47,4,39,0],[49,0,42,0,"module"],[49,2,42,0,"module"],[49,8,42,6],[49,9,42,7,"exports"],[49,16,42,0],[49,19,42,17,"_xaperture"],[49,29,42,0]],"functionMap":{"names":["<global>","<anonymous>","XAperture","XAperture.prototype.transducerResult","XAperture.prototype.transducerStep","XAperture.prototype.store","XAperture.prototype.getCopy","_xaperture"],"mappings":"AAA;6BCM;ECE;GDK;+CEE;GFG;6CGC;GHG;8BIC;GJO;gCKC;GLE;CDG;sCOE;CPE"}},"type":"js/module"}]}