{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"query-string","data":{"isAsync":false}},{"name":"./checkLegacyPathConfig","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _queryString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"query-string\"));\n\n  var _checkLegacyPathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./checkLegacyPathConfig\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n\n    return route;\n  };\n\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n\n    var _checkLegacyPathConfi = (0, _checkLegacyPathConfig.default)(options),\n        _checkLegacyPathConfi2 = (0, _slicedToArray2.default)(_checkLegacyPathConfi, 2),\n        legacy = _checkLegacyPathConfi2[0],\n        compatOptions = _checkLegacyPathConfi2[1];\n\n    var configs = compatOptions ? createNormalizedConfigs(legacy, compatOptions.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern = void 0;\n      var focusedParams = void 0;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n      var nestedRouteNames = [];\n      var hasNext = true;\n\n      while (route.name in currentOptions && hasNext) {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n\n        if (route.params) {\n          (function () {\n            var _currentOptions$route;\n\n            var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n            var currentParams = fromEntries(Object.entries(route.params).map(function (_ref) {\n              var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n                  key = _ref2[0],\n                  value = _ref2[1];\n\n              return [key, (stringify == null ? void 0 : stringify[key]) ? stringify[key](value) : String(value)];\n            }));\n\n            if (pattern) {\n              (0, _extends2.default)(allParams, currentParams);\n            }\n\n            if (focusedRoute === route) {\n              var _pattern;\n\n              focusedParams = _objectSpread({}, currentParams);\n              (_pattern = pattern) == null ? void 0 : _pattern.split('/').filter(function (p) {\n                return p.startsWith(':');\n              }).forEach(function (p) {\n                var name = getParamName(p);\n\n                if (focusedParams) {\n                  delete focusedParams[name];\n                }\n              });\n            }\n          })();\n        }\n\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            hasNext = false;\n          }\n        }\n      }\n\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n\n          if (p === '*') {\n            if (legacy) {\n              throw new Error(\"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/configuring-links/#updating-config\");\n            }\n\n            return route.name;\n          }\n\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n\n            if (_value === undefined && p.endsWith('?')) {\n              return '';\n            }\n\n            return encodeURIComponent(_value);\n          }\n\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            delete focusedParams[param];\n          }\n        }\n\n        var query = _queryString.default.stringify(focusedParams);\n\n        if (query) {\n          path += \"?\" + query;\n        }\n      }\n\n      current = route.state;\n    };\n\n    while (current) {\n      _loop();\n    }\n\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n\n  var fromEntries = function fromEntries(entries) {\n    return entries.reduce(function (acc, _ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          k = _ref4[0],\n          v = _ref4[1];\n\n      acc[k] = v;\n      return acc;\n    }, {});\n  };\n\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n\n  var joinPaths = function joinPaths() {\n    var _ref5;\n\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return (_ref5 = []).concat.apply(_ref5, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n\n  var createConfigItem = function createConfigItem(legacy, config, parentPattern) {\n    var _pattern3;\n\n    if (typeof config === 'string') {\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n\n      return {\n        pattern: _pattern2\n      };\n    }\n\n    var pattern;\n\n    if (legacy) {\n      pattern = config.exact !== true && parentPattern && config.path ? joinPaths(parentPattern, config.path) : config.path;\n    } else {\n      if (config.exact && config.path === undefined) {\n        throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n      }\n\n      pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    }\n\n    var screens = config.screens ? createNormalizedConfigs(legacy, config.screens, pattern) : undefined;\n    return {\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n\n  var createNormalizedConfigs = function createNormalizedConfigs(legacy, options, pattern) {\n    return fromEntries(Object.entries(options).map(function (_ref6) {\n      var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n          name = _ref7[0],\n          c = _ref7[1];\n\n      var result = createConfigItem(legacy, c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":246,"map":[[17,0,1,0],[19,0,7,0],[25,0,22,0],[25,6,22,6,"getActiveRoute"],[25,20,22,20],[25,23,22,23],[25,32,22,6,"getActiveRoute"],[25,46,22,23],[25,47,22,24,"state"],[25,52,22,23],[25,54,22,76],[26,0,23,2],[26,8,23,8,"route"],[26,13,23,13],[26,16,24,4],[26,23,24,11,"state"],[26,28,24,16],[26,29,24,17,"index"],[26,34,24,4],[26,39,24,27],[26,47,24,4],[26,50,25,8,"state"],[26,55,25,13],[26,56,25,14,"routes"],[26,62,25,8],[26,63,25,21,"state"],[26,68,25,26],[26,69,25,27,"index"],[26,74,25,8],[26,75,24,4],[26,78,26,8,"state"],[26,83,26,13],[26,84,26,14,"routes"],[26,90,26,8],[26,91,26,21,"state"],[26,96,26,26],[26,97,26,27,"routes"],[26,103,26,21],[26,104,26,34,"length"],[26,110,26,21],[26,113,26,43],[26,114,26,8],[26,115,23,2],[28,0,28,2],[28,8,28,6,"route"],[28,13,28,11],[28,14,28,12,"state"],[28,19,28,2],[28,21,28,19],[29,0,29,4],[29,13,29,11,"getActiveRoute"],[29,27,29,25],[29,28,29,26,"route"],[29,33,29,31],[29,34,29,32,"state"],[29,39,29,25],[29,40,29,4],[30,0,30,3],[32,0,32,2],[32,11,32,9,"route"],[32,16,32,2],[33,0,33,1],[33,3,22,0],[35,0,64,15],[35,11,64,24,"getPathFromState"],[35,27,64,15],[35,28,65,2,"state"],[35,33,64,15],[35,35,66,2,"options"],[35,42,64,15],[35,44,67,10],[36,0,68,2],[36,8,68,6,"state"],[36,13,68,11],[36,17,68,15],[36,21,68,2],[36,23,68,21],[37,0,69,4],[37,12,69,10,"Error"],[37,17,69,15],[37,18,70,6],[37,97,69,15],[37,98,69,4],[38,0,72,3],[40,0,67,10],[40,32,74,34],[40,68,74,56,"options"],[40,75,74,34],[40,76,67,10],[41,0,67,10],[42,0,67,10],[42,8,74,9,"legacy"],[42,14,67,10],[43,0,67,10],[43,8,74,17,"compatOptions"],[43,21,67,10],[45,0,77,2],[45,8,77,8,"configs"],[45,15,77,43],[45,18,77,46,"compatOptions"],[45,31,77,59],[45,34,78,6,"createNormalizedConfigs"],[45,57,78,29],[45,58,78,30,"legacy"],[45,64,78,29],[45,66,78,38,"compatOptions"],[45,79,78,51],[45,80,78,52,"screens"],[45,87,78,29],[45,88,77,59],[45,91,79,6],[45,93,77,2],[46,0,81,2],[46,8,81,6,"path"],[46,12,81,10],[46,15,81,13],[46,18,81,2],[47,0,82,2],[47,8,82,6,"current"],[47,15,82,32],[47,18,82,35,"state"],[47,23,82,2],[48,0,84,2],[48,8,84,8,"allParams"],[48,17,84,38],[48,20,84,41],[48,22,84,2],[50,0,67,10],[51,0,87,4],[51,10,87,8,"index"],[51,15,87,13],[51,18,87,16],[51,25,87,23,"current"],[51,32,87,30],[51,33,87,31,"index"],[51,38,87,16],[51,43,87,41],[51,51,87,16],[51,54,87,52,"current"],[51,61,87,59],[51,62,87,60,"index"],[51,67,87,16],[51,70,87,68],[51,71,87,4],[52,0,88,4],[52,10,88,8,"route"],[52,15,88,13],[52,18,88,16,"current"],[52,25,88,23],[52,26,88,24,"routes"],[52,32,88,16],[52,33,88,31,"index"],[52,38,88,16],[52,39,88,4],[53,0,92,4],[53,10,92,8,"pattern"],[53,17,92,35],[53,26,92,4],[54,0,94,4],[54,10,94,8,"focusedParams"],[54,23,94,54],[54,32,94,4],[55,0,95,4],[55,10,95,8,"focusedRoute"],[55,22,95,20],[55,25,95,23,"getActiveRoute"],[55,39,95,37],[55,40,95,38,"state"],[55,45,95,37],[55,46,95,4],[56,0,96,4],[56,10,96,8,"currentOptions"],[56,24,96,22],[56,27,96,25,"configs"],[56,34,96,4],[57,0,99,4],[57,10,99,8,"nestedRouteNames"],[57,26,99,24],[57,29,99,27],[57,31,99,4],[58,0,101,4],[58,10,101,8,"hasNext"],[58,17,101,15],[58,20,101,18],[58,24,101,4],[60,0,103,4],[60,13,103,11,"route"],[60,18,103,16],[60,19,103,17,"name"],[60,23,103,11],[60,27,103,25,"currentOptions"],[60,41,103,11],[60,45,103,43,"hasNext"],[60,52,103,4],[60,54,103,52],[61,0,104,6,"pattern"],[61,8,104,6,"pattern"],[61,15,104,13],[61,18,104,16,"currentOptions"],[61,32,104,30],[61,33,104,31,"route"],[61,38,104,36],[61,39,104,37,"name"],[61,43,104,30],[61,44,104,16],[61,45,104,43,"pattern"],[61,52,104,6],[62,0,106,6,"nestedRouteNames"],[62,8,106,6,"nestedRouteNames"],[62,24,106,22],[62,25,106,23,"push"],[62,29,106,6],[62,30,106,28,"route"],[62,35,106,33],[62,36,106,34,"name"],[62,40,106,6],[64,0,108,6],[64,12,108,10,"route"],[64,17,108,15],[64,18,108,16,"params"],[64,24,108,6],[64,26,108,24],[65,0,108,24],[66,0,108,24],[68,0,109,8],[68,16,109,14,"stringify"],[68,25,109,23],[68,53,109,26,"currentOptions"],[68,67,109,40],[68,68,109,41,"route"],[68,73,109,46],[68,74,109,47,"name"],[68,78,109,40],[68,79,109,23],[68,100,109,26],[68,122,109,54,"stringify"],[68,131,109,8],[69,0,111,8],[69,16,111,14,"currentParams"],[69,29,111,27],[69,32,111,30,"fromEntries"],[69,43,111,41],[69,44,112,10,"Object"],[69,50,112,16],[69,51,112,17,"entries"],[69,58,112,10],[69,59,112,25,"route"],[69,64,112,30],[69,65,112,31,"params"],[69,71,112,10],[69,73,112,39,"map"],[69,76,112,10],[69,77,112,43],[70,0,112,43],[71,0,112,43],[71,18,112,45,"key"],[71,21,112,43],[72,0,112,43],[72,18,112,50,"value"],[72,23,112,43],[74,0,112,43],[74,21,112,61],[74,22,113,12,"key"],[74,25,112,61],[74,27,114,12],[74,28,114,12,"stringify"],[74,37,114,21],[74,45,114,12],[74,57,114,12,"stringify"],[74,66,114,21],[74,67,114,24,"key"],[74,70,114,21],[74,71,114,12],[74,75,114,31,"stringify"],[74,84,114,40],[74,85,114,41,"key"],[74,88,114,40],[74,89,114,31],[74,90,114,46,"value"],[74,95,114,31],[74,96,114,12],[74,99,114,55,"String"],[74,105,114,61],[74,106,114,62,"value"],[74,111,114,61],[74,112,112,61],[74,113,112,43],[75,0,112,43],[75,13,112,10],[75,14,111,41],[75,15,111,8],[77,0,118,8],[77,16,118,12,"pattern"],[77,23,118,8],[77,25,118,21],[78,0,119,10],[78,37,119,24,"allParams"],[78,46,119,10],[78,48,119,35,"currentParams"],[78,61,119,10],[79,0,120,9],[81,0,122,8],[81,16,122,12,"focusedRoute"],[81,28,122,24],[81,33,122,29,"route"],[81,38,122,8],[81,40,122,36],[82,0,122,36],[84,0,125,10,"focusedParams"],[84,14,125,10,"focusedParams"],[84,27,125,23],[84,48,125,31,"currentParams"],[84,61,125,23],[84,62,125,10],[85,0,127,10],[85,26,127,10,"pattern"],[85,33,127,17],[85,42,127,10],[85,63,128,14,"split"],[85,68,127,10],[85,69,128,20],[85,72,127,10],[85,74,129,13,"filter"],[85,80,127,10],[85,81,129,20],[85,91,129,21,"p"],[85,92,129,20],[86,0,129,20],[86,23,129,27,"p"],[86,24,129,28],[86,25,129,29,"startsWith"],[86,35,129,27],[86,36,129,40],[86,39,129,27],[86,40,129,20],[87,0,129,20],[87,15,127,10],[87,17,131,13,"forEach"],[87,24,127,10],[87,25,131,21],[87,35,131,22,"p"],[87,36,131,21],[87,38,131,28],[88,0,132,14],[88,20,132,20,"name"],[88,24,132,24],[88,27,132,27,"getParamName"],[88,39,132,39],[88,40,132,40,"p"],[88,41,132,39],[88,42,132,14],[90,0,135,14],[90,20,135,18,"focusedParams"],[90,33,135,14],[90,35,135,33],[91,0,137,16],[91,25,137,23,"focusedParams"],[91,38,137,36],[91,39,137,37,"name"],[91,43,137,36],[91,44,137,16],[92,0,138,15],[93,0,139,13],[93,15,127,10],[94,0,140,9],[95,0,108,24],[96,0,141,7],[98,0,144,6],[98,12,144,10],[98,13,144,11,"currentOptions"],[98,27,144,25],[98,28,144,26,"route"],[98,33,144,31],[98,34,144,32,"name"],[98,38,144,25],[98,39,144,11],[98,40,144,38,"screens"],[98,47,144,10],[98,51,144,49,"route"],[98,56,144,54],[98,57,144,55,"state"],[98,62,144,49],[98,67,144,65,"undefined"],[98,76,144,6],[98,78,144,76],[99,0,145,8,"hasNext"],[99,10,145,8,"hasNext"],[99,17,145,15],[99,20,145,18],[99,25,145,8],[100,0,146,7],[100,9,144,6],[100,15,146,13],[101,0,147,8,"index"],[101,10,147,8,"index"],[101,15,147,13],[101,18,148,10],[101,25,148,17,"route"],[101,30,148,22],[101,31,148,23,"state"],[101,36,148,17],[101,37,148,29,"index"],[101,42,148,10],[101,47,148,39],[101,55,148,10],[101,58,149,14,"route"],[101,63,149,19],[101,64,149,20,"state"],[101,69,149,14],[101,70,149,26,"index"],[101,75,148,10],[101,78,150,14,"route"],[101,83,150,19],[101,84,150,20,"state"],[101,89,150,14],[101,90,150,26,"routes"],[101,96,150,14],[101,97,150,33,"length"],[101,103,150,14],[101,106,150,42],[101,107,147,8],[102,0,152,8],[102,14,152,14,"nextRoute"],[102,23,152,23],[102,26,152,26,"route"],[102,31,152,31],[102,32,152,32,"state"],[102,37,152,26],[102,38,152,38,"routes"],[102,44,152,26],[102,45,152,45,"index"],[102,50,152,26],[102,51,152,8],[103,0,153,8],[103,14,153,14,"nestedConfig"],[103,26,153,26],[103,29,153,29,"currentOptions"],[103,43,153,43],[103,44,153,44,"route"],[103,49,153,49],[103,50,153,50,"name"],[103,54,153,43],[103,55,153,29],[103,56,153,56,"screens"],[103,63,153,8],[105,0,156,8],[105,14,156,12,"nestedConfig"],[105,26,156,24],[105,30,156,28,"nextRoute"],[105,39,156,37],[105,40,156,38,"name"],[105,44,156,28],[105,48,156,46,"nestedConfig"],[105,60,156,8],[105,62,156,60],[106,0,157,10,"route"],[106,12,157,10,"route"],[106,17,157,15],[106,20,157,18,"nextRoute"],[106,29,157,10],[107,0,158,10,"currentOptions"],[107,12,158,10,"currentOptions"],[107,26,158,24],[107,29,158,27,"nestedConfig"],[107,41,158,10],[108,0,159,9],[108,11,156,8],[108,17,159,15],[109,0,161,10,"hasNext"],[109,12,161,10,"hasNext"],[109,19,161,17],[109,22,161,20],[109,27,161,10],[110,0,162,9],[111,0,163,7],[112,0,164,5],[114,0,166,4],[114,10,166,8,"pattern"],[114,17,166,15],[114,22,166,20,"undefined"],[114,31,166,4],[114,33,166,31],[115,0,167,6,"pattern"],[115,8,167,6,"pattern"],[115,15,167,13],[115,18,167,16,"nestedRouteNames"],[115,34,167,32],[115,35,167,33,"join"],[115,39,167,16],[115,40,167,38],[115,43,167,16],[115,44,167,6],[116,0,168,5],[118,0,170,4],[118,10,170,8,"currentOptions"],[118,24,170,22],[118,25,170,23,"route"],[118,30,170,28],[118,31,170,29,"name"],[118,35,170,22],[118,36,170,8],[118,41,170,39,"undefined"],[118,50,170,4],[118,52,170,50],[119,0,171,6,"path"],[119,8,171,6,"path"],[119,12,171,10],[119,16,171,14,"pattern"],[119,23,171,21],[119,24,172,9,"split"],[119,29,171,14],[119,30,172,15],[119,33,171,14],[119,35,173,9,"map"],[119,38,171,14],[119,39,173,13],[119,49,173,14,"p"],[119,50,173,13],[119,52,173,20],[120,0,174,10],[120,14,174,16,"name"],[120,18,174,20],[120,21,174,23,"getParamName"],[120,33,174,35],[120,34,174,36,"p"],[120,35,174,35],[120,36,174,10],[122,0,179,10],[122,14,179,14,"p"],[122,15,179,15],[122,20,179,20],[122,23,179,10],[122,25,179,25],[123,0,180,12],[123,16,180,16,"legacy"],[123,22,180,12],[123,24,180,24],[124,0,181,14],[124,20,181,20],[124,24,181,24,"Error"],[124,29,181,20],[124,30,182,16],[124,174,181,20],[124,175,181,14],[125,0,184,13],[127,0,186,12],[127,19,186,19,"route"],[127,24,186,24],[127,25,186,25,"name"],[127,29,186,12],[128,0,187,11],[130,0,190,10],[130,14,190,14,"p"],[130,15,190,15],[130,16,190,16,"startsWith"],[130,26,190,14],[130,27,190,27],[130,30,190,14],[130,31,190,10],[130,33,190,33],[131,0,191,12],[131,16,191,18,"value"],[131,22,191,23],[131,25,191,26,"allParams"],[131,34,191,35],[131,35,191,36,"name"],[131,39,191,35],[131,40,191,12],[133,0,193,12],[133,16,193,16,"value"],[133,22,193,21],[133,27,193,26,"undefined"],[133,36,193,16],[133,40,193,39,"p"],[133,41,193,40],[133,42,193,41,"endsWith"],[133,50,193,39],[133,51,193,50],[133,54,193,39],[133,55,193,12],[133,57,193,56],[134,0,195,14],[134,21,195,21],[134,23,195,14],[135,0,196,13],[137,0,198,12],[137,19,198,19,"encodeURIComponent"],[137,37,198,37],[137,38,198,38,"value"],[137,44,198,37],[137,45,198,12],[138,0,199,11],[140,0,201,10],[140,17,201,17,"encodeURIComponent"],[140,35,201,35],[140,36,201,36,"p"],[140,37,201,35],[140,38,201,10],[141,0,202,9],[141,9,171,14],[141,11,203,9,"join"],[141,15,171,14],[141,16,203,14],[141,19,171,14],[141,20,171,6],[142,0,204,5],[142,7,170,4],[142,13,204,11],[143,0,205,6,"path"],[143,8,205,6,"path"],[143,12,205,10],[143,16,205,14,"encodeURIComponent"],[143,34,205,32],[143,35,205,33,"route"],[143,40,205,38],[143,41,205,39,"name"],[143,45,205,32],[143,46,205,6],[144,0,206,5],[146,0,208,4],[146,10,208,8],[146,11,208,9,"focusedParams"],[146,24,208,4],[146,26,208,24],[147,0,209,6,"focusedParams"],[147,8,209,6,"focusedParams"],[147,21,209,19],[147,24,209,22,"focusedRoute"],[147,36,209,34],[147,37,209,35,"params"],[147,43,209,6],[148,0,210,5],[150,0,212,4],[150,10,212,8,"route"],[150,15,212,13],[150,16,212,14,"state"],[150,21,212,4],[150,23,212,21],[151,0,213,6,"path"],[151,8,213,6,"path"],[151,12,213,10],[151,16,213,14],[151,19,213,6],[152,0,214,5],[152,7,212,4],[152,13,214,11],[152,17,214,15,"focusedParams"],[152,30,214,11],[152,32,214,30],[153,0,215,6],[153,13,215,11],[153,17,215,15,"param"],[153,22,215,6],[153,26,215,24,"focusedParams"],[153,39,215,6],[153,41,215,39],[154,0,216,8],[154,14,216,12,"focusedParams"],[154,27,216,25],[154,28,216,26,"param"],[154,33,216,25],[154,34,216,12],[154,39,216,37],[154,50,216,8],[154,52,216,50],[155,0,218,10],[155,19,218,17,"focusedParams"],[155,32,218,30],[155,33,218,31,"param"],[155,38,218,30],[155,39,218,10],[156,0,219,9],[157,0,220,7],[159,0,222,6],[159,12,222,12,"query"],[159,17,222,17],[159,20,222,20,"queryString"],[159,41,222,32,"stringify"],[159,50,222,20],[159,51,222,42,"focusedParams"],[159,64,222,20],[159,65,222,6],[161,0,224,6],[161,12,224,10,"query"],[161,17,224,6],[161,19,224,17],[162,0,225,8,"path"],[162,10,225,8,"path"],[162,14,225,12],[162,24,225,20,"query"],[162,29,225,8],[163,0,226,7],[164,0,227,5],[166,0,229,4,"current"],[166,6,229,4,"current"],[166,13,229,11],[166,16,229,14,"route"],[166,21,229,19],[166,22,229,20,"state"],[166,27,229,4],[167,0,67,10],[169,0,86,2],[169,11,86,9,"current"],[169,18,86,2],[169,20,86,18],[170,0,86,18],[171,0,230,3],[173,0,233,2,"path"],[173,4,233,2,"path"],[173,8,233,6],[173,11,233,9,"path"],[173,15,233,13],[173,16,233,14,"replace"],[173,23,233,9],[173,24,233,22],[173,30,233,9],[173,32,233,30],[173,35,233,9],[173,36,233,2],[174,0,234,2,"path"],[174,4,234,2,"path"],[174,8,234,6],[174,11,234,9,"path"],[174,15,234,13],[174,16,234,14,"length"],[174,22,234,9],[174,25,234,23],[174,26,234,9],[174,29,234,27,"path"],[174,33,234,31],[174,34,234,32,"replace"],[174,41,234,27],[174,42,234,40],[174,47,234,27],[174,49,234,47],[174,51,234,27],[174,52,234,9],[174,55,234,53,"path"],[174,59,234,2],[175,0,236,2],[175,11,236,9,"path"],[175,15,236,2],[176,0,237,1],[178,0,240,0],[178,6,240,6,"fromEntries"],[178,17,240,17],[178,20,240,20],[178,29,240,6,"fromEntries"],[178,40,240,20],[178,41,240,42,"entries"],[178,48,240,20],[179,0,240,20],[179,11,241,2,"entries"],[179,18,241,9],[179,19,241,10,"reduce"],[179,25,241,2],[179,26,241,17],[179,36,241,18,"acc"],[179,39,241,17],[179,48,241,34],[180,0,241,34],[181,0,241,34],[181,10,241,24,"k"],[181,11,241,34],[182,0,241,34],[182,10,241,27,"v"],[182,11,241,34],[184,0,242,4,"acc"],[184,6,242,4,"acc"],[184,9,242,7],[184,10,242,8,"k"],[184,11,242,7],[184,12,242,4],[184,15,242,13,"v"],[184,16,242,4],[185,0,243,4],[185,13,243,11,"acc"],[185,16,243,4],[186,0,244,3],[186,5,241,2],[186,7,244,5],[186,9,241,2],[186,10,240,20],[187,0,240,20],[187,3,240,0],[189,0,246,0],[189,6,246,6,"getParamName"],[189,18,246,18],[189,21,246,21],[189,30,246,6,"getParamName"],[189,42,246,21],[189,43,246,22,"pattern"],[189,50,246,21],[190,0,246,21],[190,11,247,2,"pattern"],[190,18,247,9],[190,19,247,10,"replace"],[190,26,247,2],[190,27,247,18],[190,31,247,2],[190,33,247,24],[190,35,247,2],[190,37,247,28,"replace"],[190,44,247,2],[190,45,247,36],[190,50,247,2],[190,52,247,43],[190,54,247,2],[190,55,246,21],[191,0,246,21],[191,3,246,0],[193,0,249,0],[193,6,249,6,"joinPaths"],[193,15,249,15],[193,18,249,18],[193,27,249,6,"joinPaths"],[193,36,249,18],[194,0,249,18],[196,0,249,18],[196,38,249,22,"paths"],[196,43,249,18],[197,0,249,22,"paths"],[197,6,249,22,"paths"],[197,11,249,18],[198,0,249,18],[200,0,249,18],[200,11,250,2],[200,20,250,3],[200,22,250,2],[200,24,251,5,"concat"],[200,30,250,2],[200,77,251,15,"paths"],[200,82,251,20],[200,83,251,21,"map"],[200,86,251,15],[200,87,251,25],[200,97,251,26,"p"],[200,98,251,25],[201,0,251,25],[201,13,251,32,"p"],[201,14,251,33],[201,15,251,34,"split"],[201,20,251,32],[201,21,251,40],[201,24,251,32],[201,25,251,25],[202,0,251,25],[202,5,251,15],[202,6,250,2],[202,9,252,5,"filter"],[202,15,250,2],[202,16,252,12,"Boolean"],[202,23,250,2],[202,25,253,5,"join"],[202,29,250,2],[202,30,253,10],[202,33,250,2],[202,34,249,18],[203,0,249,18],[203,3,249,0],[205,0,255,0],[205,6,255,6,"createConfigItem"],[205,22,255,22],[205,25,255,25],[205,34,255,6,"createConfigItem"],[205,50,255,25],[205,51,256,2,"legacy"],[205,57,255,25],[205,59,257,2,"config"],[205,65,255,25],[205,67,258,2,"parentPattern"],[205,80,255,25],[205,82,259,17],[206,0,259,17],[208,0,260,2],[208,8,260,6],[208,15,260,13,"config"],[208,21,260,6],[208,26,260,24],[208,34,260,2],[208,36,260,34],[209,0,262,4],[209,10,262,10,"pattern"],[209,19,262,17],[209,22,262,20,"parentPattern"],[209,35,262,33],[209,38,262,36,"joinPaths"],[209,47,262,45],[209,48,262,46,"parentPattern"],[209,61,262,45],[209,63,262,61,"config"],[209,69,262,45],[209,70,262,33],[209,73,262,71,"config"],[209,79,262,4],[211,0,264,4],[211,13,264,11],[212,0,264,13,"pattern"],[212,8,264,13,"pattern"],[212,15,264,20],[212,17,264,13,"pattern"],[213,0,264,11],[213,7,264,4],[214,0,265,3],[216,0,269,2],[216,8,269,6,"pattern"],[216,15,269,2],[218,0,271,2],[218,8,271,6,"legacy"],[218,14,271,2],[218,16,271,14],[219,0,272,4,"pattern"],[219,6,272,4,"pattern"],[219,13,272,11],[219,16,273,6,"config"],[219,22,273,12],[219,23,273,13,"exact"],[219,28,273,6],[219,33,273,23],[219,37,273,6],[219,41,273,31,"parentPattern"],[219,54,273,6],[219,58,273,48,"config"],[219,64,273,54],[219,65,273,55,"path"],[219,69,273,6],[219,72,274,10,"joinPaths"],[219,81,274,19],[219,82,274,20,"parentPattern"],[219,95,274,19],[219,97,274,35,"config"],[219,103,274,41],[219,104,274,42,"path"],[219,108,274,19],[219,109,273,6],[219,112,275,10,"config"],[219,118,275,16],[219,119,275,17,"path"],[219,123,272,4],[220,0,276,3],[220,5,271,2],[220,11,276,9],[221,0,277,4],[221,10,277,8,"config"],[221,16,277,14],[221,17,277,15,"exact"],[221,22,277,8],[221,26,277,24,"config"],[221,32,277,30],[221,33,277,31,"path"],[221,37,277,24],[221,42,277,40,"undefined"],[221,51,277,4],[221,53,277,51],[222,0,278,6],[222,14,278,12],[222,18,278,16,"Error"],[222,23,278,12],[222,24,279,8],[222,174,278,12],[222,175,278,6],[223,0,281,5],[225,0,283,4,"pattern"],[225,6,283,4,"pattern"],[225,13,283,11],[225,16,284,6,"config"],[225,22,284,12],[225,23,284,13,"exact"],[225,28,284,6],[225,33,284,23],[225,37,284,6],[225,40,285,10,"joinPaths"],[225,49,285,19],[225,50,285,20,"parentPattern"],[225,63,285,33],[225,67,285,37],[225,69,285,19],[225,71,285,41,"config"],[225,77,285,47],[225,78,285,48,"path"],[225,82,285,41],[225,86,285,56],[225,88,285,19],[225,89,284,6],[225,92,286,10,"config"],[225,98,286,16],[225,99,286,17,"path"],[225,103,286,10],[225,107,286,25],[225,109,283,4],[226,0,287,3],[228,0,289,2],[228,8,289,8,"screens"],[228,15,289,15],[228,18,289,18,"config"],[228,24,289,24],[228,25,289,25,"screens"],[228,32,289,18],[228,35,290,6,"createNormalizedConfigs"],[228,58,290,29],[228,59,290,30,"legacy"],[228,65,290,29],[228,67,290,38,"config"],[228,73,290,44],[228,74,290,45,"screens"],[228,81,290,29],[228,83,290,54,"pattern"],[228,90,290,29],[228,91,289,18],[228,94,291,6,"undefined"],[228,103,289,2],[229,0,293,2],[229,11,293,9],[230,0,295,4,"pattern"],[230,6,295,4,"pattern"],[230,13,295,11],[230,28,295,13,"pattern"],[230,35,295,11],[230,56,295,13],[230,66,295,22,"split"],[230,71,295,13],[230,72,295,28],[230,75,295,13],[230,77,295,33,"filter"],[230,83,295,13],[230,84,295,40,"Boolean"],[230,91,295,13],[230,93,295,49,"join"],[230,97,295,13],[230,98,295,54],[230,101,295,13],[230,102,293,9],[231,0,296,4,"stringify"],[231,6,296,4,"stringify"],[231,15,296,13],[231,17,296,15,"config"],[231,23,296,21],[231,24,296,22,"stringify"],[231,33,293,9],[232,0,297,4,"screens"],[232,6,297,4,"screens"],[232,13,297,11],[232,15,297,4,"screens"],[233,0,293,9],[233,5,293,2],[234,0,299,1],[234,3,255,0],[236,0,301,0],[236,6,301,6,"createNormalizedConfigs"],[236,29,301,29],[236,32,301,32],[236,41,301,6,"createNormalizedConfigs"],[236,64,301,32],[236,65,302,2,"legacy"],[236,71,301,32],[236,73,303,2,"options"],[236,80,301,32],[236,82,304,2,"pattern"],[236,89,301,32],[237,0,301,32],[237,11,306,2,"fromEntries"],[237,22,306,13],[237,23,307,4,"Object"],[237,29,307,10],[237,30,307,11,"entries"],[237,37,307,4],[237,38,307,19,"options"],[237,45,307,4],[237,47,307,28,"map"],[237,50,307,4],[237,51,307,32],[237,68,307,47],[238,0,307,47],[239,0,307,47],[239,10,307,34,"name"],[239,14,307,47],[240,0,307,47],[240,10,307,40,"c"],[240,11,307,47],[242,0,308,6],[242,10,308,12,"result"],[242,16,308,18],[242,19,308,21,"createConfigItem"],[242,35,308,37],[242,36,308,38,"legacy"],[242,42,308,37],[242,44,308,46,"c"],[242,45,308,37],[242,47,308,49,"pattern"],[242,54,308,37],[242,55,308,6],[243,0,310,6],[243,13,310,13],[243,14,310,14,"name"],[243,18,310,13],[243,20,310,20,"result"],[243,26,310,13],[243,27,310,6],[244,0,311,5],[244,5,307,4],[244,6,306,13],[244,7,301,32],[245,0,301,32],[245,3,301,0]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","<anonymous>","pattern.split.map$argument_0","fromEntries","entries.reduce$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCqB;CDW;eE+B;2CCgD;WDG;oBEc,wBF;qBEE;aFQ;aGkC;SH6B;CFmC;oBMG;iBCC;GDG,qBN;qBQE;8CRC;kBSE;yBCE,mBD;cTE;yBWE;CX4C;gCYE;gCTM;KSI;GZC"}},"type":"js/module"}]}