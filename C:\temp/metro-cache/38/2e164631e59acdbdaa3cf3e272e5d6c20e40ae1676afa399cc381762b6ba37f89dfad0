{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"fs","data":{"isAsync":false}},{"name":"dotenv","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"fs\"),\n      readFileSync = _require.readFileSync;\n\n  var dotenv = _$$_REQUIRE(_dependencyMap[3], \"dotenv\");\n\n  function parseDotenvFile(path) {\n    var verbose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var content;\n\n    try {\n      content = readFileSync(path);\n    } catch (error) {\n      if (verbose) {\n        console.error('react-native-dotenv', error);\n      }\n\n      return {};\n    }\n\n    return dotenv.parse(content);\n  }\n\n  module.exports = function (_ref) {\n    var t = _ref.types;\n    return {\n      name: 'dotenv-import',\n      pre: function pre() {\n        this.opts = _objectSpread({\n          moduleName: '@env',\n          path: '.env',\n          whitelist: null,\n          blacklist: null,\n          safe: false,\n          allowUndefined: true\n        }, this.opts);\n        var babelMode = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';\n\n        if (this.opts.safe) {\n          var parsed = parseDotenvFile(this.opts.path, this.opts.verbose);\n          var modeParsed = parseDotenvFile(this.opts.path + '.' + babelMode);\n          this.env = _extends(parsed, modeParsed);\n        } else {\n          dotenv.config({\n            path: this.opts.path + '.' + babelMode,\n            silent: true\n          });\n          dotenv.config({\n            path: this.opts.path\n          });\n          this.env = process.env;\n        }\n      },\n      visitor: {\n        ImportDeclaration: function ImportDeclaration(path, _ref2) {\n          var _this = this;\n\n          var opts = _ref2.opts;\n\n          if (path.node.source.value === opts.moduleName) {\n            path.node.specifiers.forEach(function (specifier, idx) {\n              if (specifier.type === 'ImportDefaultSpecifier') {\n                throw path.get('specifiers')[idx].buildCodeFrameError('Default import is not supported');\n              }\n\n              if (specifier.type === 'ImportNamespaceSpecifier') {\n                throw path.get('specifiers')[idx].buildCodeFrameError('Wildcard import is not supported');\n              }\n\n              var importedId = specifier.imported.name;\n              var localId = specifier.local.name;\n\n              if (Array.isArray(opts.whitelist) && !opts.whitelist.includes(importedId)) {\n                throw path.get('specifiers')[idx].buildCodeFrameError(\"\\\"\" + importedId + \"\\\" was not whitelisted\");\n              }\n\n              if (Array.isArray(opts.blacklist) && opts.blacklist.includes(importedId)) {\n                throw path.get('specifiers')[idx].buildCodeFrameError(\"\\\"\" + importedId + \"\\\" was blacklisted\");\n              }\n\n              if (!opts.allowUndefined && !Object.prototype.hasOwnProperty.call(_this.env, importedId)) {\n                throw path.get('specifiers')[idx].buildCodeFrameError(\"\\\"\" + importedId + \"\\\" is not defined in \" + opts.path);\n              }\n\n              var binding = path.scope.getBinding(localId);\n              binding.referencePaths.forEach(function (refPath) {\n                refPath.replaceWith(t.valueToNode(_this.env[importedId]));\n              });\n            });\n            path.remove();\n          }\n        }\n      }\n    };\n  };\n});","lineCount":104,"map":[[10,17,1,23,"require"],[10,28,1,30],[10,53],[11,6,1,7,"readFileSync"],[11,18],[11,30,1,7,"readFileSync"],[11,42],[13,0,2,0],[13,6,2,6,"dotenv"],[13,12,2,12],[13,15,2,15,"require"],[13,26,2,22],[13,55,2,0],[15,0,4,0],[15,11,4,9,"parseDotenvFile"],[15,26,4,0],[15,27,4,25,"path"],[15,31,4,0],[15,33,4,48],[16,0,4,48],[16,8,4,31,"verbose"],[16,15,4,48],[16,86,4,41],[16,91,4,48],[17,0,5,2],[17,8,5,6,"content"],[17,15,5,2],[19,0,7,2],[19,8,7,6],[20,0,8,4,"content"],[20,6,8,4,"content"],[20,13,8,11],[20,16,8,14,"readFileSync"],[20,28,8,26],[20,29,8,27,"path"],[20,33,8,26],[20,34,8,4],[21,0,9,3],[21,5,7,2],[21,6,9,4],[21,13,9,11,"error"],[21,18,9,4],[21,20,9,18],[22,0,11,4],[22,10,11,8,"verbose"],[22,17,11,4],[22,19,11,17],[23,0,12,6,"console"],[23,8,12,6,"console"],[23,15,12,13],[23,16,12,14,"error"],[23,21,12,6],[23,22,12,20],[23,43,12,6],[23,45,12,43,"error"],[23,50,12,6],[24,0,13,5],[26,0,15,4],[26,13,15,11],[26,15,15,4],[27,0,16,3],[29,0,18,2],[29,11,18,9,"dotenv"],[29,17,18,15],[29,18,18,16,"parse"],[29,23,18,9],[29,24,18,22,"content"],[29,31,18,9],[29,32,18,2],[30,0,19,1],[32,0,21,0,"module"],[32,2,21,0,"module"],[32,8,21,6],[32,9,21,7,"exports"],[32,16,21,0],[32,19,21,17],[33,0,21,17],[33,8,21,26,"t"],[33,9,21,17],[33,17,21,19,"types"],[33,22,21,17],[34,0,21,17],[34,11,21,34],[35,0,22,2,"name"],[35,6,22,2,"name"],[35,10,22,6],[35,12,22,8],[35,27,21,34],[36,0,24,2,"pre"],[36,6,24,2,"pre"],[36,9,21,34],[36,26,24,8],[37,0,25,4],[37,13,25,9,"opts"],[37,17,25,4],[38,0,26,6,"moduleName"],[38,10,26,6,"moduleName"],[38,20,26,16],[38,22,26,18],[38,28,25,4],[39,0,27,6,"path"],[39,10,27,6,"path"],[39,14,27,10],[39,16,27,12],[39,22,25,4],[40,0,28,6,"whitelist"],[40,10,28,6,"whitelist"],[40,19,28,15],[40,21,28,17],[40,25,25,4],[41,0,29,6,"blacklist"],[41,10,29,6,"blacklist"],[41,19,29,15],[41,21,29,17],[41,25,25,4],[42,0,30,6,"safe"],[42,10,30,6,"safe"],[42,14,30,10],[42,16,30,12],[42,21,25,4],[43,0,31,6,"allowUndefined"],[43,10,31,6,"allowUndefined"],[43,24,31,20],[43,26,31,22],[44,0,25,4],[44,11,32,9],[44,16,32,14,"opts"],[44,20,25,4],[45,0,35,4],[45,12,35,10,"babelMode"],[45,21,35,19],[45,24,35,22,"process"],[45,31,35,29],[45,32,35,30,"env"],[45,35,35,22],[45,36,35,34,"BABEL_ENV"],[45,45,35,22],[45,49,35,47,"process"],[45,56,35,54],[45,57,35,55,"env"],[45,60,35,47],[45,61,35,59,"NODE_ENV"],[45,69,35,22],[45,73,35,71],[45,86,35,4],[47,0,36,4],[47,12,36,8],[47,17,36,13,"opts"],[47,21,36,8],[47,22,36,18,"safe"],[47,26,36,4],[47,28,36,24],[48,0,37,6],[48,14,37,12,"parsed"],[48,20,37,18],[48,23,37,21,"parseDotenvFile"],[48,38,37,36],[48,39,37,37],[48,44,37,42,"opts"],[48,48,37,37],[48,49,37,47,"path"],[48,53,37,36],[48,55,37,53],[48,60,37,58,"opts"],[48,64,37,53],[48,65,37,63,"verbose"],[48,72,37,36],[48,73,37,6],[49,0,38,6],[49,14,38,12,"modeParsed"],[49,24,38,22],[49,27,38,25,"parseDotenvFile"],[49,42,38,40],[49,43,38,41],[49,48,38,46,"opts"],[49,52,38,41],[49,53,38,51,"path"],[49,57,38,41],[49,60,38,58],[49,63,38,41],[49,66,38,64,"babelMode"],[49,75,38,40],[49,76,38,6],[50,0,39,6],[50,15,39,11,"env"],[50,18,39,6],[50,21,39,17],[50,30,39,31,"parsed"],[50,36,39,17],[50,38,39,39,"modeParsed"],[50,48,39,17],[50,49,39,6],[51,0,40,5],[51,9,36,4],[51,15,40,11],[52,0,41,6,"dotenv"],[52,10,41,6,"dotenv"],[52,16,41,12],[52,17,41,13,"config"],[52,23,41,6],[52,24,41,20],[53,0,42,8,"path"],[53,12,42,8,"path"],[53,16,42,12],[53,18,42,14],[53,23,42,19,"opts"],[53,27,42,14],[53,28,42,24,"path"],[53,32,42,14],[53,35,42,31],[53,38,42,14],[53,41,42,37,"babelMode"],[53,50,41,20],[54,0,43,8,"silent"],[54,12,43,8,"silent"],[54,18,43,14],[54,20,43,16],[55,0,41,20],[55,11,41,6],[56,0,45,6,"dotenv"],[56,10,45,6,"dotenv"],[56,16,45,12],[56,17,45,13,"config"],[56,23,45,6],[56,24,45,20],[57,0,46,8,"path"],[57,12,46,8,"path"],[57,16,46,12],[57,18,46,14],[57,23,46,19,"opts"],[57,27,46,14],[57,28,46,24,"path"],[58,0,45,20],[58,11,45,6],[59,0,48,6],[59,15,48,11,"env"],[59,18,48,6],[59,21,48,17,"process"],[59,28,48,24],[59,29,48,25,"env"],[59,32,48,6],[60,0,49,5],[61,0,50,3],[61,7,21,34],[62,0,52,2,"visitor"],[62,6,52,2,"visitor"],[62,13,52,9],[62,15,52,11],[63,0,53,4,"ImportDeclaration"],[63,8,53,4,"ImportDeclaration"],[63,25,52,11],[63,54,53,22,"path"],[63,58,52,11],[63,67,53,36],[64,0,53,36],[66,0,53,36],[66,14,53,29,"opts"],[66,18,53,36],[66,27,53,29,"opts"],[66,31,53,36],[68,0,54,6],[68,14,54,10,"path"],[68,18,54,14],[68,19,54,15,"node"],[68,23,54,10],[68,24,54,20,"source"],[68,30,54,10],[68,31,54,27,"value"],[68,36,54,10],[68,41,54,37,"opts"],[68,45,54,41],[68,46,54,42,"moduleName"],[68,56,54,6],[68,58,54,54],[69,0,55,8,"path"],[69,12,55,8,"path"],[69,16,55,12],[69,17,55,13,"node"],[69,21,55,8],[69,22,55,18,"specifiers"],[69,32,55,8],[69,33,55,29,"forEach"],[69,40,55,8],[69,41,55,37],[69,51,55,38,"specifier"],[69,60,55,37],[69,62,55,49,"idx"],[69,65,55,37],[69,67,55,57],[70,0,56,10],[70,18,56,14,"specifier"],[70,27,56,23],[70,28,56,24,"type"],[70,32,56,14],[70,37,56,33],[70,61,56,10],[70,63,56,59],[71,0,57,12],[71,22,57,18,"path"],[71,26,57,22],[71,27,57,23,"get"],[71,30,57,18],[71,31,57,27],[71,43,57,18],[71,45,57,41,"idx"],[71,48,57,18],[71,50,57,46,"buildCodeFrameError"],[71,69,57,18],[71,70,57,66],[71,103,57,18],[71,104,57,12],[72,0,58,11],[74,0,60,10],[74,18,60,14,"specifier"],[74,27,60,23],[74,28,60,24,"type"],[74,32,60,14],[74,37,60,33],[74,63,60,10],[74,65,60,61],[75,0,61,12],[75,22,61,18,"path"],[75,26,61,22],[75,27,61,23,"get"],[75,30,61,18],[75,31,61,27],[75,43,61,18],[75,45,61,41,"idx"],[75,48,61,18],[75,50,61,46,"buildCodeFrameError"],[75,69,61,18],[75,70,61,66],[75,104,61,18],[75,105,61,12],[76,0,62,11],[78,0,64,10],[78,18,64,16,"importedId"],[78,28,64,26],[78,31,64,29,"specifier"],[78,40,64,38],[78,41,64,39,"imported"],[78,49,64,29],[78,50,64,48,"name"],[78,54,64,10],[79,0,65,10],[79,18,65,16,"localId"],[79,25,65,23],[79,28,65,26,"specifier"],[79,37,65,35],[79,38,65,36,"local"],[79,43,65,26],[79,44,65,42,"name"],[79,48,65,10],[81,0,67,10],[81,18,67,14,"Array"],[81,23,67,19],[81,24,67,20,"isArray"],[81,31,67,14],[81,32,67,28,"opts"],[81,36,67,32],[81,37,67,33,"whitelist"],[81,46,67,14],[81,51,67,47],[81,52,67,48,"opts"],[81,56,67,52],[81,57,67,53,"whitelist"],[81,66,67,48],[81,67,67,63,"includes"],[81,75,67,48],[81,76,67,72,"importedId"],[81,86,67,48],[81,87,67,10],[81,89,67,85],[82,0,68,12],[82,22,68,18,"path"],[82,26,68,22],[82,27,68,23,"get"],[82,30,68,18],[82,31,68,27],[82,43,68,18],[82,45,68,41,"idx"],[82,48,68,18],[82,50,68,46,"buildCodeFrameError"],[82,69,68,18],[82,77,68,70,"importedId"],[82,87,68,18],[82,115,68,12],[83,0,69,11],[85,0,71,10],[85,18,71,14,"Array"],[85,23,71,19],[85,24,71,20,"isArray"],[85,31,71,14],[85,32,71,28,"opts"],[85,36,71,32],[85,37,71,33,"blacklist"],[85,46,71,14],[85,51,71,47,"opts"],[85,55,71,51],[85,56,71,52,"blacklist"],[85,65,71,47],[85,66,71,62,"includes"],[85,74,71,47],[85,75,71,71,"importedId"],[85,85,71,47],[85,86,71,10],[85,88,71,84],[86,0,72,12],[86,22,72,18,"path"],[86,26,72,22],[86,27,72,23,"get"],[86,30,72,18],[86,31,72,27],[86,43,72,18],[86,45,72,41,"idx"],[86,48,72,18],[86,50,72,46,"buildCodeFrameError"],[86,69,72,18],[86,77,72,70,"importedId"],[86,87,72,18],[86,111,72,12],[87,0,73,11],[89,0,75,10],[89,18,75,14],[89,19,75,15,"opts"],[89,23,75,19],[89,24,75,20,"allowUndefined"],[89,38,75,14],[89,42,75,38],[89,43,75,39,"Object"],[89,49,75,45],[89,50,75,46,"prototype"],[89,59,75,39],[89,60,75,56,"hasOwnProperty"],[89,74,75,39],[89,75,75,71,"call"],[89,79,75,39],[89,80,75,76],[89,85,75,80],[89,86,75,81,"env"],[89,89,75,39],[89,91,75,86,"importedId"],[89,101,75,39],[89,102,75,10],[89,104,75,99],[90,0,76,12],[90,22,76,18,"path"],[90,26,76,22],[90,27,76,23,"get"],[90,30,76,18],[90,31,76,27],[90,43,76,18],[90,45,76,41,"idx"],[90,48,76,18],[90,50,76,46,"buildCodeFrameError"],[90,69,76,18],[90,77,76,70,"importedId"],[90,87,76,18],[90,116,76,103,"opts"],[90,120,76,107],[90,121,76,108,"path"],[90,125,76,18],[90,126,76,12],[91,0,77,11],[93,0,79,10],[93,18,79,16,"binding"],[93,25,79,23],[93,28,79,26,"path"],[93,32,79,30],[93,33,79,31,"scope"],[93,38,79,26],[93,39,79,37,"getBinding"],[93,49,79,26],[93,50,79,48,"localId"],[93,57,79,26],[93,58,79,10],[94,0,80,10,"binding"],[94,14,80,10,"binding"],[94,21,80,17],[94,22,80,18,"referencePaths"],[94,36,80,10],[94,37,80,33,"forEach"],[94,44,80,10],[94,45,80,41],[94,55,80,41,"refPath"],[94,62,80,48],[94,64,80,52],[95,0,81,12,"refPath"],[95,16,81,12,"refPath"],[95,23,81,19],[95,24,81,20,"replaceWith"],[95,35,81,12],[95,36,81,32,"t"],[95,37,81,33],[95,38,81,34,"valueToNode"],[95,49,81,32],[95,50,81,46],[95,55,81,50],[95,56,81,51,"env"],[95,59,81,46],[95,60,81,55,"importedId"],[95,70,81,46],[95,71,81,32],[95,72,81,12],[96,0,82,11],[96,15,80,10],[97,0,83,9],[97,13,55,8],[98,0,85,8,"path"],[98,12,85,8,"path"],[98,16,85,12],[98,17,85,13,"remove"],[98,23,85,8],[99,0,86,7],[100,0,87,5],[101,0,52,11],[102,0,21,34],[102,5,21,17],[103,0,21,17],[103,3,21,0]],"functionMap":{"names":["<global>","parseDotenvFile","module.exports","pre","visitor.ImportDeclaration","path.node.specifiers.forEach$argument_0","binding.referencePaths.forEach$argument_0"],"mappings":"AAA;ACG;CDe;iBEE;ECG;GD0B;IEG;qCCE;yCCyB;WDE;SDC;KFI;EFE"}},"type":"js/module"}]}