{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"./RCTAsyncStorage","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _RCTAsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./RCTAsyncStorage\"));\n\n  if (!_RCTAsyncStorage.default) {\n    throw new Error(\"[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\\n\\nTo fix this issue try these steps:\\n\\n  \\u2022 Run `react-native link @react-native-community/async-storage` in the project root.\\n\\n  \\u2022 Rebuild and restart the app.\\n\\n  \\u2022 Run the packager with `--reset-cache` flag.\\n\\n  \\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app.\\n\\n  \\u2022 If this happens while testing with Jest, check out docs how to integrate AsyncStorage with it: https://react-native-community.github.io/async-storage/docs/advanced/jest\\n\\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-community/react-native-async-storage/issues \\n\");\n  }\n\n  function checkValidInput(usedKey, value) {\n    var isValuePassed = arguments.length > 1;\n\n    if (typeof usedKey !== 'string') {\n      console.warn(\"[AsyncStorage] Using \" + typeof usedKey + \" type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: \" + usedKey + \"\\n\");\n    }\n\n    if (isValuePassed && typeof value !== 'string') {\n      if (value == null) {\n        throw new Error(\"[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .remove method instead.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      } else {\n        console.warn(\"[AsyncStorage] The value for key \\\"\" + usedKey + \"\\\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      }\n    }\n  }\n\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n\n        _RCTAsyncStorage.default.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n\n        _RCTAsyncStorage.default.multiSet([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n\n        _RCTAsyncStorage.default.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n\n        _RCTAsyncStorage.default.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.clear(function (error) {\n          var err = convertError(error);\n          callback && callback(err);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.getAllKeys(function (error, keys) {\n          var err = convertError(error);\n          callback && callback(err, keys);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n\n      _RCTAsyncStorage.default.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        keyValuePairs.forEach(function (_ref3) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n              key = _ref4[0],\n              value = _ref4[1];\n\n          checkValidInput(key, value);\n        });\n\n        _RCTAsyncStorage.default.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      return new Promise(function (resolve, reject) {\n        keys.forEach(function (key) {\n          return checkValidInput(key);\n        });\n\n        _RCTAsyncStorage.default.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!_RCTAsyncStorage.default.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs || Array.isArray(errs) && errs.length === 0) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  var _default = AsyncStorage;\n  exports.default = _default;\n});","lineCount":276,"map":[[2,0,12,0],[13,0,14,0],[15,0,16,0],[15,6,16,4],[15,7,16,5,"RCTAsyncStorage"],[15,31,16,0],[15,33,16,22],[16,0,17,2],[16,10,17,8],[16,14,17,12,"Error"],[16,19,17,8],[16,776,17,2],[17,0,33,1],[19,0,50,0],[19,11,50,9,"checkValidInput"],[19,26,50,0],[19,27,50,25,"usedKey"],[19,34,50,0],[19,36,50,42,"value"],[19,41,50,0],[19,43,50,54],[20,0,51,2],[20,8,51,8,"isValuePassed"],[20,21,51,21],[20,24,51,24,"arguments"],[20,33,51,33],[20,34,51,34,"length"],[20,40,51,24],[20,43,51,43],[20,44,51,2],[22,0,53,2],[22,8,53,6],[22,15,53,13,"usedKey"],[22,22,53,6],[22,27,53,25],[22,35,53,2],[22,37,53,35],[23,0,54,4,"console"],[23,6,54,4,"console"],[23,13,54,11],[23,14,54,12,"warn"],[23,18,54,4],[23,45,55,30],[23,52,55,37,"usedKey"],[23,59,54,4],[23,177,55,157,"usedKey"],[23,184,54,4],[24,0,57,3],[26,0,59,2],[26,8,59,6,"isValuePassed"],[26,21,59,19],[26,25,59,23],[26,32,59,30,"value"],[26,37,59,23],[26,42,59,40],[26,50,59,2],[26,52,59,50],[27,0,60,4],[27,10,60,8,"value"],[27,15,60,13],[27,19,60,17],[27,23,60,4],[27,25,60,23],[28,0,61,6],[28,14,61,12],[28,18,61,16,"Error"],[28,23,61,12],[28,166,62,148,"value"],[28,171,61,12],[28,193,62,170,"usedKey"],[28,200,61,12],[28,208,61,6],[29,0,64,5],[29,7,60,4],[29,13,64,11],[30,0,65,6,"console"],[30,8,65,6,"console"],[30,15,65,13],[30,16,65,14,"warn"],[30,20,65,6],[30,61,66,45,"usedKey"],[30,68,65,6],[30,182,66,160,"value"],[30,187,65,6],[30,209,66,182,"usedKey"],[30,216,65,6],[31,0,68,5],[32,0,69,3],[33,0,70,1],[35,0,79,0],[35,6,79,6,"AsyncStorage"],[35,18,79,18],[35,21,79,21],[36,0,80,2,"_getRequests"],[36,4,80,2,"_getRequests"],[36,16,80,14],[36,18,80,17],[36,20,79,21],[37,0,81,2,"_getKeys"],[37,4,81,2,"_getKeys"],[37,12,81,10],[37,14,81,13],[37,16,79,21],[38,0,82,2,"_immediate"],[38,4,82,2,"_immediate"],[38,14,82,12],[38,16,82,15],[38,20,79,21],[39,0,89,2,"getItem"],[39,4,89,2,"getItem"],[39,11,89,9],[39,13,89,11],[39,30,90,4,"key"],[39,33,89,11],[39,35,91,4,"callback"],[39,43,89,11],[39,45,92,28],[40,0,93,4],[40,13,93,11],[40,17,93,15,"Promise"],[40,24,93,11],[40,25,93,23],[40,35,93,24,"resolve"],[40,42,93,23],[40,44,93,33,"reject"],[40,50,93,23],[40,52,93,44],[41,0,94,6,"checkValidInput"],[41,8,94,6,"checkValidInput"],[41,23,94,21],[41,24,94,22,"key"],[41,27,94,21],[41,28,94,6],[43,0,95,6,"RCTAsyncStorage"],[43,33,95,22,"multiGet"],[43,41,95,6],[43,42,95,31],[43,43,95,32,"key"],[43,46,95,31],[43,47,95,6],[43,49,95,38],[43,59,95,47,"errors"],[43,65,95,38],[43,67,95,55,"result"],[43,73,95,38],[43,75,95,63],[44,0,97,8],[44,14,97,14,"value"],[44,19,97,19],[44,22,97,22,"result"],[44,28,97,28],[44,32,97,32,"result"],[44,38,97,38],[44,39,97,39],[44,40,97,38],[44,41,97,22],[44,45,97,45,"result"],[44,51,97,51],[44,52,97,52],[44,53,97,51],[44,54,97,45],[44,55,97,55],[44,56,97,45],[44,57,97,22],[44,60,97,60,"result"],[44,66,97,66],[44,67,97,67],[44,68,97,66],[44,69,97,60],[44,70,97,70],[44,71,97,60],[44,72,97,22],[44,75,97,75],[44,79,97,8],[45,0,98,8],[45,14,98,14,"errs"],[45,18,98,18],[45,21,98,21,"convertErrors"],[45,34,98,34],[45,35,98,35,"errors"],[45,41,98,34],[45,42,98,8],[46,0,99,8,"callback"],[46,10,99,8,"callback"],[46,18,99,16],[46,22,99,20,"callback"],[46,30,99,28],[46,31,99,29,"errs"],[46,35,99,33],[46,39,99,37,"errs"],[46,43,99,41],[46,44,99,42],[46,45,99,41],[46,46,99,28],[46,48,99,46,"value"],[46,53,99,28],[46,54,99,8],[48,0,100,8],[48,14,100,12,"errs"],[48,18,100,8],[48,20,100,18],[49,0,101,10,"reject"],[49,12,101,10,"reject"],[49,18,101,16],[49,19,101,17,"errs"],[49,23,101,21],[49,24,101,22],[49,25,101,21],[49,26,101,16],[49,27,101,10],[50,0,102,9],[50,11,100,8],[50,17,102,15],[51,0,103,10,"resolve"],[51,12,103,10,"resolve"],[51,19,103,17],[51,20,103,18,"value"],[51,25,103,17],[51,26,103,10],[52,0,104,9],[53,0,105,7],[53,9,95,6],[54,0,106,5],[54,7,93,11],[54,8,93,4],[55,0,107,3],[55,5,79,21],[56,0,114,2,"setItem"],[56,4,114,2,"setItem"],[56,11,114,9],[56,13,114,11],[56,30,115,4,"key"],[56,33,114,11],[56,35,116,4,"value"],[56,40,114,11],[56,42,117,4,"callback"],[56,50,114,11],[56,52,118,19],[57,0,119,4],[57,13,119,11],[57,17,119,15,"Promise"],[57,24,119,11],[57,25,119,23],[57,35,119,24,"resolve"],[57,42,119,23],[57,44,119,33,"reject"],[57,50,119,23],[57,52,119,44],[58,0,120,6,"checkValidInput"],[58,8,120,6,"checkValidInput"],[58,23,120,21],[58,24,120,22,"key"],[58,27,120,21],[58,29,120,27,"value"],[58,34,120,21],[58,35,120,6],[60,0,121,6,"RCTAsyncStorage"],[60,33,121,22,"multiSet"],[60,41,121,6],[60,42,121,31],[60,43,121,32],[60,44,121,33,"key"],[60,47,121,32],[60,49,121,38,"value"],[60,54,121,32],[60,55,121,31],[60,56,121,6],[60,58,121,47],[60,68,121,56,"errors"],[60,74,121,47],[60,76,121,64],[61,0,122,8],[61,14,122,14,"errs"],[61,18,122,18],[61,21,122,21,"convertErrors"],[61,34,122,34],[61,35,122,35,"errors"],[61,41,122,34],[61,42,122,8],[62,0,123,8,"callback"],[62,10,123,8,"callback"],[62,18,123,16],[62,22,123,20,"callback"],[62,30,123,28],[62,31,123,29,"errs"],[62,35,123,33],[62,39,123,37,"errs"],[62,43,123,41],[62,44,123,42],[62,45,123,41],[62,46,123,28],[62,47,123,8],[64,0,124,8],[64,14,124,12,"errs"],[64,18,124,8],[64,20,124,18],[65,0,125,10,"reject"],[65,12,125,10,"reject"],[65,18,125,16],[65,19,125,17,"errs"],[65,23,125,21],[65,24,125,22],[65,25,125,21],[65,26,125,16],[65,27,125,10],[66,0,126,9],[66,11,124,8],[66,17,126,15],[67,0,127,10,"resolve"],[67,12,127,10,"resolve"],[67,19,127,17],[67,20,127,18],[67,24,127,17],[67,25,127,10],[68,0,128,9],[69,0,129,7],[69,9,121,6],[70,0,130,5],[70,7,119,11],[70,8,119,4],[71,0,131,3],[71,5,79,21],[72,0,138,2,"removeItem"],[72,4,138,2,"removeItem"],[72,14,138,12],[72,16,138,14],[72,36,139,4,"key"],[72,39,138,14],[72,41,140,4,"callback"],[72,49,138,14],[72,51,141,19],[73,0,142,4],[73,13,142,11],[73,17,142,15,"Promise"],[73,24,142,11],[73,25,142,23],[73,35,142,24,"resolve"],[73,42,142,23],[73,44,142,33,"reject"],[73,50,142,23],[73,52,142,44],[74,0,143,6,"checkValidInput"],[74,8,143,6,"checkValidInput"],[74,23,143,21],[74,24,143,22,"key"],[74,27,143,21],[74,28,143,6],[76,0,144,6,"RCTAsyncStorage"],[76,33,144,22,"multiRemove"],[76,44,144,6],[76,45,144,34],[76,46,144,35,"key"],[76,49,144,34],[76,50,144,6],[76,52,144,41],[76,62,144,50,"errors"],[76,68,144,41],[76,70,144,58],[77,0,145,8],[77,14,145,14,"errs"],[77,18,145,18],[77,21,145,21,"convertErrors"],[77,34,145,34],[77,35,145,35,"errors"],[77,41,145,34],[77,42,145,8],[78,0,146,8,"callback"],[78,10,146,8,"callback"],[78,18,146,16],[78,22,146,20,"callback"],[78,30,146,28],[78,31,146,29,"errs"],[78,35,146,33],[78,39,146,37,"errs"],[78,43,146,41],[78,44,146,42],[78,45,146,41],[78,46,146,28],[78,47,146,8],[80,0,147,8],[80,14,147,12,"errs"],[80,18,147,8],[80,20,147,18],[81,0,148,10,"reject"],[81,12,148,10,"reject"],[81,18,148,16],[81,19,148,17,"errs"],[81,23,148,21],[81,24,148,22],[81,25,148,21],[81,26,148,16],[81,27,148,10],[82,0,149,9],[82,11,147,8],[82,17,149,15],[83,0,150,10,"resolve"],[83,12,150,10,"resolve"],[83,19,150,17],[83,20,150,18],[83,24,150,17],[83,25,150,10],[84,0,151,9],[85,0,152,7],[85,9,144,6],[86,0,153,5],[86,7,142,11],[86,8,142,4],[87,0,154,3],[87,5,79,21],[88,0,164,2,"mergeItem"],[88,4,164,2,"mergeItem"],[88,13,164,11],[88,15,164,13],[88,34,165,4,"key"],[88,37,164,13],[88,39,166,4,"value"],[88,44,164,13],[88,46,167,4,"callback"],[88,54,164,13],[88,56,168,19],[89,0,169,4],[89,13,169,11],[89,17,169,15,"Promise"],[89,24,169,11],[89,25,169,23],[89,35,169,24,"resolve"],[89,42,169,23],[89,44,169,33,"reject"],[89,50,169,23],[89,52,169,44],[90,0,170,6,"checkValidInput"],[90,8,170,6,"checkValidInput"],[90,23,170,21],[90,24,170,22,"key"],[90,27,170,21],[90,29,170,27,"value"],[90,34,170,21],[90,35,170,6],[92,0,171,6,"RCTAsyncStorage"],[92,33,171,22,"multiMerge"],[92,43,171,6],[92,44,171,33],[92,45,171,34],[92,46,171,35,"key"],[92,49,171,34],[92,51,171,40,"value"],[92,56,171,34],[92,57,171,33],[92,58,171,6],[92,60,171,49],[92,70,171,58,"errors"],[92,76,171,49],[92,78,171,66],[93,0,172,8],[93,14,172,14,"errs"],[93,18,172,18],[93,21,172,21,"convertErrors"],[93,34,172,34],[93,35,172,35,"errors"],[93,41,172,34],[93,42,172,8],[94,0,173,8,"callback"],[94,10,173,8,"callback"],[94,18,173,16],[94,22,173,20,"callback"],[94,30,173,28],[94,31,173,29,"errs"],[94,35,173,33],[94,39,173,37,"errs"],[94,43,173,41],[94,44,173,42],[94,45,173,41],[94,46,173,28],[94,47,173,8],[96,0,174,8],[96,14,174,12,"errs"],[96,18,174,8],[96,20,174,18],[97,0,175,10,"reject"],[97,12,175,10,"reject"],[97,18,175,16],[97,19,175,17,"errs"],[97,23,175,21],[97,24,175,22],[97,25,175,21],[97,26,175,16],[97,27,175,10],[98,0,176,9],[98,11,174,8],[98,17,176,15],[99,0,177,10,"resolve"],[99,12,177,10,"resolve"],[99,19,177,17],[99,20,177,18],[99,24,177,17],[99,25,177,10],[100,0,178,9],[101,0,179,7],[101,9,171,6],[102,0,180,5],[102,7,169,11],[102,8,169,4],[103,0,181,3],[103,5,79,21],[104,0,190,2,"clear"],[104,4,190,2,"clear"],[104,9,190,7],[104,11,190,9],[104,26,190,18,"callback"],[104,34,190,9],[104,36,190,70],[105,0,191,4],[105,13,191,11],[105,17,191,15,"Promise"],[105,24,191,11],[105,25,191,23],[105,35,191,24,"resolve"],[105,42,191,23],[105,44,191,33,"reject"],[105,50,191,23],[105,52,191,44],[106,0,192,6,"RCTAsyncStorage"],[106,33,192,22,"clear"],[106,38,192,6],[106,39,192,28],[106,49,192,37,"error"],[106,54,192,28],[106,56,192,44],[107,0,193,8],[107,14,193,14,"err"],[107,17,193,17],[107,20,193,20,"convertError"],[107,32,193,32],[107,33,193,33,"error"],[107,38,193,32],[107,39,193,8],[108,0,194,8,"callback"],[108,10,194,8,"callback"],[108,18,194,16],[108,22,194,20,"callback"],[108,30,194,28],[108,31,194,29,"err"],[108,34,194,28],[108,35,194,8],[110,0,195,8],[110,14,195,12,"err"],[110,17,195,8],[110,19,195,17],[111,0,196,10,"reject"],[111,12,196,10,"reject"],[111,18,196,16],[111,19,196,17,"err"],[111,22,196,16],[111,23,196,10],[112,0,197,9],[112,11,195,8],[112,17,197,15],[113,0,198,10,"resolve"],[113,12,198,10,"resolve"],[113,19,198,17],[113,20,198,18],[113,24,198,17],[113,25,198,10],[114,0,199,9],[115,0,200,7],[115,9,192,6],[116,0,201,5],[116,7,191,11],[116,8,191,4],[117,0,202,3],[117,5,79,21],[118,0,209,2,"getAllKeys"],[118,4,209,2,"getAllKeys"],[118,14,209,12],[118,16,209,14],[118,36,210,4,"callback"],[118,44,209,14],[118,46,211,34],[119,0,212,4],[119,13,212,11],[119,17,212,15,"Promise"],[119,24,212,11],[119,25,212,23],[119,35,212,24,"resolve"],[119,42,212,23],[119,44,212,33,"reject"],[119,50,212,23],[119,52,212,44],[120,0,213,6,"RCTAsyncStorage"],[120,33,213,22,"getAllKeys"],[120,43,213,6],[120,44,213,33],[120,54,213,42,"error"],[120,59,213,33],[120,61,213,49,"keys"],[120,65,213,33],[120,67,213,55],[121,0,214,8],[121,14,214,14,"err"],[121,17,214,17],[121,20,214,20,"convertError"],[121,32,214,32],[121,33,214,33,"error"],[121,38,214,32],[121,39,214,8],[122,0,215,8,"callback"],[122,10,215,8,"callback"],[122,18,215,16],[122,22,215,20,"callback"],[122,30,215,28],[122,31,215,29,"err"],[122,34,215,28],[122,36,215,34,"keys"],[122,40,215,28],[122,41,215,8],[124,0,216,8],[124,14,216,12,"err"],[124,17,216,8],[124,19,216,17],[125,0,217,10,"reject"],[125,12,217,10,"reject"],[125,18,217,16],[125,19,217,17,"err"],[125,22,217,16],[125,23,217,10],[126,0,218,9],[126,11,216,8],[126,17,218,15],[127,0,219,10,"resolve"],[127,12,219,10,"resolve"],[127,19,219,17],[127,20,219,18,"keys"],[127,24,219,17],[127,25,219,10],[128,0,220,9],[129,0,221,7],[129,9,213,6],[130,0,222,5],[130,7,212,11],[130,8,212,4],[131,0,223,3],[131,5,79,21],[132,0,240,2,"flushGetRequests"],[132,4,240,2,"flushGetRequests"],[132,20,240,18],[132,22,240,20],[132,50,240,37],[133,0,241,4],[133,10,241,10,"getRequests"],[133,21,241,21],[133,24,241,24],[133,29,241,29,"_getRequests"],[133,41,241,4],[134,0,242,4],[134,10,242,10,"getKeys"],[134,17,242,17],[134,20,242,20],[134,25,242,25,"_getKeys"],[134,33,242,4],[135,0,244,4],[135,11,244,9,"_getRequests"],[135,23,244,4],[135,26,244,24],[135,28,244,4],[136,0,245,4],[136,11,245,9,"_getKeys"],[136,19,245,4],[136,22,245,20],[136,24,245,4],[138,0,247,4,"RCTAsyncStorage"],[138,31,247,20,"multiGet"],[138,39,247,4],[138,40,247,29,"getKeys"],[138,47,247,4],[138,49,247,38],[138,59,247,47,"errors"],[138,65,247,38],[138,67,247,55,"result"],[138,73,247,38],[138,75,247,63],[139,0,254,6],[139,12,254,12,"map"],[139,15,254,15],[139,18,254,18],[139,20,254,6],[140,0,255,6,"result"],[140,8,255,6,"result"],[140,14,255,12],[140,18,256,8,"result"],[140,24,256,14],[140,25,256,15,"forEach"],[140,32,256,8],[140,33,256,23],[140,49,256,41],[141,0,256,41],[142,0,256,41],[142,14,256,25,"key"],[142,17,256,41],[143,0,256,41],[143,14,256,30,"value"],[143,19,256,41],[145,0,257,10,"map"],[145,10,257,10,"map"],[145,13,257,13],[145,14,257,14,"key"],[145,17,257,13],[145,18,257,10],[145,21,257,21,"value"],[145,26,257,10],[146,0,258,10],[146,17,258,17,"value"],[146,22,258,10],[147,0,259,9],[147,9,256,8],[147,10,255,6],[148,0,260,6],[148,12,260,12,"reqLength"],[148,21,260,21],[148,24,260,24,"getRequests"],[148,35,260,35],[148,36,260,36,"length"],[148,42,260,6],[150,0,261,6],[150,13,261,11],[150,17,261,15,"i"],[150,18,261,16],[150,21,261,19],[150,22,261,6],[150,24,261,22,"i"],[150,25,261,23],[150,28,261,26,"reqLength"],[150,37,261,6],[150,39,261,37,"i"],[150,40,261,38],[150,42,261,6],[150,44,261,42],[151,0,262,8],[151,14,262,14,"request"],[151,21,262,21],[151,24,262,24,"getRequests"],[151,35,262,35],[151,36,262,36,"i"],[151,37,262,35],[151,38,262,8],[152,0,263,8],[152,14,263,14,"requestKeys"],[152,25,263,25],[152,28,263,28,"request"],[152,35,263,35],[152,36,263,36,"keys"],[152,40,263,8],[153,0,264,8],[153,14,264,14,"requestResult"],[153,27,264,27],[153,30,264,30,"requestKeys"],[153,41,264,41],[153,42,264,42,"map"],[153,45,264,30],[153,46,264,46],[153,56,264,46,"key"],[153,59,264,49],[154,0,264,49],[154,19,264,53],[154,20,264,54,"key"],[154,23,264,53],[154,25,264,59,"map"],[154,28,264,62],[154,29,264,63,"key"],[154,32,264,62],[154,33,264,53],[154,34,264,49],[155,0,264,49],[155,11,264,30],[155,12,264,8],[156,0,265,8,"request"],[156,10,265,8,"request"],[156,17,265,15],[156,18,265,16,"callback"],[156,26,265,8],[156,30,265,28,"request"],[156,37,265,35],[156,38,265,36,"callback"],[156,46,265,28],[156,47,265,45],[156,51,265,28],[156,53,265,51,"requestResult"],[156,66,265,28],[156,67,265,8],[157,0,266,8,"request"],[157,10,266,8,"request"],[157,17,266,15],[157,18,266,16,"resolve"],[157,25,266,8],[157,29,266,27,"request"],[157,36,266,34],[157,37,266,35,"resolve"],[157,44,266,27],[157,45,266,43,"requestResult"],[157,58,266,27],[157,59,266,8],[158,0,267,7],[159,0,268,5],[159,7,247,4],[160,0,269,3],[160,5,79,21],[161,0,278,2,"multiGet"],[161,4,278,2,"multiGet"],[161,12,278,10],[161,14,278,12],[161,32,279,4,"keys"],[161,36,278,12],[161,38,280,4,"callback"],[161,46,278,12],[161,48,281,51],[162,0,281,51],[164,0,282,4],[164,10,282,8],[164,11,282,9],[164,16,282,14,"_immediate"],[164,26,282,4],[164,28,282,26],[165,0,283,6],[165,13,283,11,"_immediate"],[165,23,283,6],[165,26,283,24,"setImmediate"],[165,38,283,36],[165,39,283,37],[165,51,283,43],[166,0,284,8],[166,10,284,8],[166,15,284,12],[166,16,284,13,"_immediate"],[166,26,284,8],[166,29,284,26],[166,33,284,8],[168,0,285,8],[168,10,285,8],[168,15,285,12],[168,16,285,13,"flushGetRequests"],[168,32,285,8],[169,0,286,7],[169,9,283,36],[169,10,283,6],[170,0,287,5],[172,0,289,4],[172,10,289,10,"getRequest"],[172,20,289,34],[172,23,289,37],[173,0,290,6,"keys"],[173,8,290,6,"keys"],[173,12,290,10],[173,14,290,12,"keys"],[173,18,289,37],[174,0,291,6,"callback"],[174,8,291,6,"callback"],[174,16,291,14],[174,18,291,16,"callback"],[174,26,289,37],[175,0,293,6,"keyIndex"],[175,8,293,6,"keyIndex"],[175,16,293,14],[175,18,293,16],[175,23,293,21,"_getKeys"],[175,31,293,16],[175,32,293,30,"length"],[175,38,289,37],[176,0,294,6,"resolve"],[176,8,294,6,"resolve"],[176,15,294,13],[176,17,294,15],[176,21,289,37],[177,0,295,6,"reject"],[177,8,295,6,"reject"],[177,14,295,12],[177,16,295,14],[178,0,289,37],[178,7,289,4],[179,0,298,4],[179,10,298,10,"promiseResult"],[179,23,298,23],[179,26,298,26],[179,30,298,30,"Promise"],[179,37,298,26],[179,38,298,38],[179,48,298,39,"resolve"],[179,55,298,38],[179,57,298,48,"reject"],[179,63,298,38],[179,65,298,59],[180,0,299,6,"getRequest"],[180,8,299,6,"getRequest"],[180,18,299,16],[180,19,299,17,"resolve"],[180,26,299,6],[180,29,299,27,"resolve"],[180,36,299,6],[181,0,300,6,"getRequest"],[181,8,300,6,"getRequest"],[181,18,300,16],[181,19,300,17,"reject"],[181,25,300,6],[181,28,300,26,"reject"],[181,34,300,6],[182,0,301,5],[182,7,298,26],[182,8,298,4],[184,0,303,4],[184,11,303,9,"_getRequests"],[184,23,303,4],[184,24,303,22,"push"],[184,28,303,4],[184,29,303,27,"getRequest"],[184,39,303,4],[186,0,305,4,"keys"],[186,6,305,4,"keys"],[186,10,305,8],[186,11,305,9,"forEach"],[186,18,305,4],[186,19,305,17],[186,29,305,17,"key"],[186,32,305,20],[186,34,305,24],[187,0,306,6],[187,12,306,10],[187,17,306,14],[187,18,306,15,"_getKeys"],[187,26,306,10],[187,27,306,24,"indexOf"],[187,34,306,10],[187,35,306,32,"key"],[187,38,306,10],[187,44,306,41],[187,45,306,42],[187,46,306,6],[187,48,306,45],[188,0,307,8],[188,10,307,8],[188,15,307,12],[188,16,307,13,"_getKeys"],[188,24,307,8],[188,25,307,22,"push"],[188,29,307,8],[188,30,307,27,"key"],[188,33,307,8],[189,0,308,7],[190,0,309,5],[190,7,305,4],[191,0,311,4],[191,13,311,11,"promiseResult"],[191,26,311,4],[192,0,312,3],[192,5,79,21],[193,0,320,2,"multiSet"],[193,4,320,2,"multiSet"],[193,12,320,10],[193,14,320,12],[193,32,321,4,"keyValuePairs"],[193,45,320,12],[193,47,322,4,"callback"],[193,55,320,12],[193,57,323,19],[194,0,324,4],[194,13,324,11],[194,17,324,15,"Promise"],[194,24,324,11],[194,25,324,23],[194,35,324,24,"resolve"],[194,42,324,23],[194,44,324,33,"reject"],[194,50,324,23],[194,52,324,44],[195,0,325,6,"keyValuePairs"],[195,8,325,6,"keyValuePairs"],[195,21,325,19],[195,22,325,20,"forEach"],[195,29,325,6],[195,30,325,28],[195,47,325,46],[196,0,325,46],[197,0,325,46],[197,14,325,30,"key"],[197,17,325,46],[198,0,325,46],[198,14,325,35,"value"],[198,19,325,46],[200,0,326,8,"checkValidInput"],[200,10,326,8,"checkValidInput"],[200,25,326,23],[200,26,326,24,"key"],[200,29,326,23],[200,31,326,29,"value"],[200,36,326,23],[200,37,326,8],[201,0,327,7],[201,9,325,6],[203,0,329,6,"RCTAsyncStorage"],[203,33,329,22,"multiSet"],[203,41,329,6],[203,42,329,31,"keyValuePairs"],[203,55,329,6],[203,57,329,46],[203,67,329,55,"errors"],[203,73,329,46],[203,75,329,63],[204,0,330,8],[204,14,330,14,"error"],[204,19,330,19],[204,22,330,22,"convertErrors"],[204,35,330,35],[204,36,330,36,"errors"],[204,42,330,35],[204,43,330,8],[205,0,331,8,"callback"],[205,10,331,8,"callback"],[205,18,331,16],[205,22,331,20,"callback"],[205,30,331,28],[205,31,331,29,"error"],[205,36,331,28],[205,37,331,8],[207,0,332,8],[207,14,332,12,"error"],[207,19,332,8],[207,21,332,19],[208,0,333,10,"reject"],[208,12,333,10,"reject"],[208,18,333,16],[208,19,333,17,"error"],[208,24,333,16],[208,25,333,10],[209,0,334,9],[209,11,332,8],[209,17,334,15],[210,0,335,10,"resolve"],[210,12,335,10,"resolve"],[210,19,335,17],[210,20,335,18],[210,24,335,17],[210,25,335,10],[211,0,336,9],[212,0,337,7],[212,9,329,6],[213,0,338,5],[213,7,324,11],[213,8,324,4],[214,0,339,3],[214,5,79,21],[215,0,346,2,"multiRemove"],[215,4,346,2,"multiRemove"],[215,15,346,13],[215,17,346,15],[215,38,347,4,"keys"],[215,42,346,15],[215,44,348,4,"callback"],[215,52,346,15],[215,54,349,19],[216,0,350,4],[216,13,350,11],[216,17,350,15,"Promise"],[216,24,350,11],[216,25,350,23],[216,35,350,24,"resolve"],[216,42,350,23],[216,44,350,33,"reject"],[216,50,350,23],[216,52,350,44],[217,0,351,6,"keys"],[217,8,351,6,"keys"],[217,12,351,10],[217,13,351,11,"forEach"],[217,20,351,6],[217,21,351,19],[217,31,351,19,"key"],[217,34,351,22],[218,0,351,22],[218,17,351,26,"checkValidInput"],[218,32,351,41],[218,33,351,42,"key"],[218,36,351,41],[218,37,351,22],[219,0,351,22],[219,9,351,6],[221,0,353,6,"RCTAsyncStorage"],[221,33,353,22,"multiRemove"],[221,44,353,6],[221,45,353,34,"keys"],[221,49,353,6],[221,51,353,40],[221,61,353,49,"errors"],[221,67,353,40],[221,69,353,57],[222,0,354,8],[222,14,354,14,"error"],[222,19,354,19],[222,22,354,22,"convertErrors"],[222,35,354,35],[222,36,354,36,"errors"],[222,42,354,35],[222,43,354,8],[223,0,355,8,"callback"],[223,10,355,8,"callback"],[223,18,355,16],[223,22,355,20,"callback"],[223,30,355,28],[223,31,355,29,"error"],[223,36,355,28],[223,37,355,8],[225,0,356,8],[225,14,356,12,"error"],[225,19,356,8],[225,21,356,19],[226,0,357,10,"reject"],[226,12,357,10,"reject"],[226,18,357,16],[226,19,357,17,"error"],[226,24,357,16],[226,25,357,10],[227,0,358,9],[227,11,356,8],[227,17,358,15],[228,0,359,10,"resolve"],[228,12,359,10,"resolve"],[228,19,359,17],[228,20,359,18],[228,24,359,17],[228,25,359,10],[229,0,360,9],[230,0,361,7],[230,9,353,6],[231,0,362,5],[231,7,350,11],[231,8,350,4],[232,0,363,3],[232,5,79,21],[233,0,373,2,"multiMerge"],[233,4,373,2,"multiMerge"],[233,14,373,12],[233,16,373,14],[233,36,374,4,"keyValuePairs"],[233,49,373,14],[233,51,375,4,"callback"],[233,59,373,14],[233,61,376,19],[234,0,377,4],[234,13,377,11],[234,17,377,15,"Promise"],[234,24,377,11],[234,25,377,23],[234,35,377,24,"resolve"],[234,42,377,23],[234,44,377,33,"reject"],[234,50,377,23],[234,52,377,44],[235,0,378,6,"RCTAsyncStorage"],[235,33,378,22,"multiMerge"],[235,43,378,6],[235,44,378,33,"keyValuePairs"],[235,57,378,6],[235,59,378,48],[235,69,378,57,"errors"],[235,75,378,48],[235,77,378,65],[236,0,379,8],[236,14,379,14,"error"],[236,19,379,19],[236,22,379,22,"convertErrors"],[236,35,379,35],[236,36,379,36,"errors"],[236,42,379,35],[236,43,379,8],[237,0,380,8,"callback"],[237,10,380,8,"callback"],[237,18,380,16],[237,22,380,20,"callback"],[237,30,380,28],[237,31,380,29,"error"],[237,36,380,28],[237,37,380,8],[239,0,381,8],[239,14,381,12,"error"],[239,19,381,8],[239,21,381,19],[240,0,382,10,"reject"],[240,12,382,10,"reject"],[240,18,382,16],[240,19,382,17,"error"],[240,24,382,16],[240,25,382,10],[241,0,383,9],[241,11,381,8],[241,17,383,15],[242,0,384,10,"resolve"],[242,12,384,10,"resolve"],[242,19,384,17],[242,20,384,18],[242,24,384,17],[242,25,384,10],[243,0,385,9],[244,0,386,7],[244,9,378,6],[245,0,387,5],[245,7,377,11],[245,8,377,4],[246,0,388,3],[247,0,79,21],[247,3,79,0],[249,0,392,0],[249,6,392,4],[249,7,392,5,"RCTAsyncStorage"],[249,32,392,21,"multiMerge"],[249,42,392,0],[249,44,392,33],[250,0,393,2],[250,11,393,9,"AsyncStorage"],[250,23,393,21],[250,24,393,22,"mergeItem"],[250,33,393,2],[251,0,394,2],[251,11,394,9,"AsyncStorage"],[251,23,394,21],[251,24,394,22,"multiMerge"],[251,34,394,2],[252,0,395,1],[254,0,397,0],[254,11,397,9,"convertErrors"],[254,24,397,0],[254,25,397,23,"errs"],[254,29,397,0],[254,31,397,54],[255,0,398,2],[255,8,398,6],[255,9,398,7,"errs"],[255,13,398,6],[255,17,398,16,"Array"],[255,22,398,21],[255,23,398,22,"isArray"],[255,30,398,16],[255,31,398,30,"errs"],[255,35,398,16],[255,40,398,39,"errs"],[255,44,398,43],[255,45,398,44,"length"],[255,51,398,39],[255,56,398,55],[255,57,398,2],[255,59,398,59],[256,0,399,4],[256,13,399,11],[256,17,399,4],[257,0,400,3],[259,0,401,2],[259,11,401,9],[259,12,401,10,"Array"],[259,17,401,15],[259,18,401,16,"isArray"],[259,25,401,10],[259,26,401,24,"errs"],[259,30,401,10],[259,34,401,32,"errs"],[259,38,401,10],[259,41,401,39],[259,42,401,40,"errs"],[259,46,401,39],[259,47,401,9],[259,49,401,47,"map"],[259,52,401,9],[259,53,401,51],[259,63,401,51,"e"],[259,64,401,52],[260,0,401,52],[260,13,401,56,"convertError"],[260,25,401,68],[260,26,401,69,"e"],[260,27,401,68],[260,28,401,52],[261,0,401,52],[261,5,401,9],[261,6,401,2],[262,0,402,1],[264,0,404,0],[264,11,404,9,"convertError"],[264,23,404,0],[264,24,404,22,"error"],[264,29,404,0],[264,31,404,37],[265,0,405,2],[265,8,405,6],[265,9,405,7,"error"],[265,14,405,2],[265,16,405,14],[266,0,406,4],[266,13,406,11],[266,17,406,4],[267,0,407,3],[269,0,408,2],[269,8,408,8,"out"],[269,11,408,11],[269,14,408,14],[269,18,408,18,"Error"],[269,23,408,14],[269,24,408,24,"error"],[269,29,408,29],[269,30,408,30,"message"],[269,37,408,14],[269,38,408,2],[270,0,410,2,"out"],[270,4,410,2,"out"],[270,7,410,5],[270,8,410,6,"key"],[270,11,410,2],[270,14,410,12,"error"],[270,19,410,17],[270,20,410,18,"key"],[270,23,410,2],[271,0,411,2],[271,11,411,9,"out"],[271,14,411,2],[272,0,412,1],[274,17,414,15,"AsyncStorage"],[274,29]],"functionMap":{"names":["<global>","checkValidInput","getItem","Promise$argument_0","RCTAsyncStorage.multiGet$argument_1","setItem","RCTAsyncStorage.multiSet$argument_1","removeItem","RCTAsyncStorage.multiRemove$argument_1","mergeItem","RCTAsyncStorage.multiMerge$argument_1","clear","RCTAsyncStorage.clear$argument_0","getAllKeys","RCTAsyncStorage.getAllKeys$argument_0","flushGetRequests","result.forEach$argument_0","requestKeys.map$argument_0","multiGet","setImmediate$argument_0","keys.forEach$argument_0","multiSet","keyValuePairs.forEach$argument_0","multiRemove","multiMerge","convertErrors","map$argument_0","convertError"],"mappings":"AAA;ACiD;CDoB;WEmB;uBCI;sCCE;ODU;KDC;GFC;WKO;uBFK;+CGE;OHQ;KEC;GLC;cOO;uBJI;yCKE;OLQ;KIC;GPC;aSU;uBNK;iDOE;OPQ;KMC;GTC;SWS;uBRC;4BSC;OTQ;KQC;GXC;caO;uBVG;iCWC;OXQ;KUC;GbC;oBeiB;sCXO;uBYS;SZG;8CaK,sBb;KWI;GfC;YkBS;qCCK;ODG;sCfY;KeG;iBEI;KFI;GlBG;YqBQ;uBlBI;4BmBC;OnBE;8CGE;OHQ;KkBC;GrBC;euBO;uBpBI;mBiBC,2BjB;wCKE;OLQ;KoBC;GvBC;cwBU;uBrBI;gDOC;OPQ;KqBC;GxBC;AyBS;mDCI,oBD;CzBC;A2BE;C3BQ"}},"type":"js/module"}]}