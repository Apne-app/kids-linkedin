{"dependencies":[{"name":"./_forceReduced","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":26}}]}},{"name":"./_isArrayLike","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":25}}]}},{"name":"./_reduce","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":20}}]}},{"name":"./_xfBase","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":20}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _forceReduced = _$$_REQUIRE(_dependencyMap[0], \"./_forceReduced\");\n\n  var _isArrayLike = _$$_REQUIRE(_dependencyMap[1], \"./_isArrayLike\");\n\n  var _reduce = _$$_REQUIRE(_dependencyMap[2], \"./_reduce\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[3], \"./_xfBase\");\n\n  var preservingReduced = function preservingReduced(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  var _flatCat = function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n\n  module.exports = _flatCat;\n});","lineCount":37,"map":[[2,0,1,0],[2,6,1,4,"_forceReduced"],[2,19,1,17],[2,22,3,0,"require"],[2,33,3,7],[2,71,1,0],[4,0,5,0],[4,6,5,4,"_isArrayLike"],[4,18,5,16],[4,21,7,0,"require"],[4,32,7,7],[4,69,5,0],[6,0,9,0],[6,6,9,4,"_reduce"],[6,13,9,11],[6,16,11,0,"require"],[6,27,11,7],[6,59,9,0],[8,0,13,0],[8,6,13,4,"_xfBase"],[8,13,13,11],[8,16,15,0,"require"],[8,27,15,7],[8,59,13,0],[10,0,17,0],[10,6,17,4,"preservingReduced"],[10,23,17,21],[10,26,17,24],[10,35,17,4,"preservingReduced"],[10,52,17,24],[10,53,17,34,"xf"],[10,55,17,24],[10,57,17,38],[11,0,18,2],[11,11,18,9],[12,0,19,4],[12,27,19,25,"_xfBase"],[12,34,19,32],[12,35,19,33,"init"],[12,39,18,9],[13,0,20,4],[13,29,20,27],[13,55,20,37,"result"],[13,61,20,27],[13,63,20,45],[14,0,21,6],[14,15,21,13,"xf"],[14,17,21,15],[14,18,21,16],[14,39,21,15],[14,40,21,13],[14,41,21,39,"result"],[14,47,21,13],[14,48,21,6],[15,0,22,5],[15,7,18,9],[16,0,23,4],[16,27,23,25],[16,51,23,35,"result"],[16,57,23,25],[16,59,23,43,"input"],[16,64,23,25],[16,66,23,50],[17,0,24,6],[17,12,24,10,"ret"],[17,15,24,13],[17,18,24,16,"xf"],[17,20,24,18],[17,21,24,19],[17,40,24,18],[17,41,24,16],[17,42,24,40,"result"],[17,48,24,16],[17,50,24,48,"input"],[17,55,24,16],[17,56,24,6],[18,0,25,6],[18,15,25,13,"ret"],[18,18,25,16],[18,19,25,17],[18,41,25,16],[18,42,25,13],[18,45,25,43,"_forceReduced"],[18,58,25,56],[18,59,25,57,"ret"],[18,62,25,56],[18,63,25,13],[18,66,25,64,"ret"],[18,69,25,6],[19,0,26,5],[20,0,18,9],[20,5,18,2],[21,0,28,1],[21,3,17,0],[23,0,30,0],[23,6,30,4,"_flatCat"],[23,14,30,12],[23,17,30,15],[23,26,30,24,"_xcat"],[23,31,30,15],[23,32,30,30,"xf"],[23,34,30,15],[23,36,30,34],[24,0,31,2],[24,8,31,6,"rxf"],[24,11,31,9],[24,14,31,12,"preservingReduced"],[24,31,31,29],[24,32,31,30,"xf"],[24,34,31,29],[24,35,31,2],[25,0,32,2],[25,11,32,9],[26,0,33,4],[26,27,33,25,"_xfBase"],[26,34,33,32],[26,35,33,33,"init"],[26,39,32,9],[27,0,34,4],[27,29,34,27],[27,55,34,37,"result"],[27,61,34,27],[27,63,34,45],[28,0,35,6],[28,15,35,13,"rxf"],[28,18,35,16],[28,19,35,17],[28,40,35,16],[28,41,35,13],[28,42,35,40,"result"],[28,48,35,13],[28,49,35,6],[29,0,36,5],[29,7,32,9],[30,0,37,4],[30,27,37,25],[30,51,37,35,"result"],[30,57,37,25],[30,59,37,43,"input"],[30,64,37,25],[30,66,37,50],[31,0,38,6],[31,15,38,13],[31,16,38,14,"_isArrayLike"],[31,28,38,26],[31,29,38,27,"input"],[31,34,38,26],[31,35,38,13],[31,38,38,36,"_reduce"],[31,45,38,43],[31,46,38,44,"rxf"],[31,49,38,43],[31,51,38,49,"result"],[31,57,38,43],[31,59,38,57],[31,60,38,58,"input"],[31,65,38,57],[31,66,38,43],[31,67,38,13],[31,70,38,68,"_reduce"],[31,77,38,75],[31,78,38,76,"rxf"],[31,81,38,75],[31,83,38,81,"result"],[31,89,38,75],[31,91,38,89,"input"],[31,96,38,75],[31,97,38,6],[32,0,39,5],[33,0,32,9],[33,5,32,2],[34,0,41,1],[34,3,30,0],[36,0,43,0,"module"],[36,2,43,0,"module"],[36,8,43,6],[36,9,43,7,"exports"],[36,16,43,0],[36,19,43,17,"_flatCat"],[36,27,43,0]],"functionMap":{"names":["<global>","preservingReduced","transducerResult","transducerStep","_xcat"],"mappings":"AAA;wBCgB;2BCG;KDE;yBEC;KFG;CDE;eIE;2BFI;KEE;yBDC;KCE;CJE"}},"type":"js/module"}]}