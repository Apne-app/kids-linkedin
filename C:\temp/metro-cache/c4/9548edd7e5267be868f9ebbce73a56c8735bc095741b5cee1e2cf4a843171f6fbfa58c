{"dependencies":[{"name":"./_includes","data":{"isAsync":false}},{"name":"./_map","data":{"isAsync":false}},{"name":"./_quote","data":{"isAsync":false}},{"name":"./_toISOString","data":{"isAsync":false}},{"name":"../keys","data":{"isAsync":false}},{"name":"../reject","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _includes = _$$_REQUIRE(_dependencyMap[0], \"./_includes\");\n\n  var _map = _$$_REQUIRE(_dependencyMap[1], \"./_map\");\n\n  var _quote = _$$_REQUIRE(_dependencyMap[2], \"./_quote\");\n\n  var _toISOString = _$$_REQUIRE(_dependencyMap[3], \"./_toISOString\");\n\n  var keys = _$$_REQUIRE(_dependencyMap[4], \"../keys\");\n\n  var reject = _$$_REQUIRE(_dependencyMap[5], \"../reject\");\n\n  function _toString(x, seen) {\n    var recur = function recur(y) {\n      var xs = seen.concat([x]);\n      return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n    };\n\n    var mapPairs = function mapPairs(obj, keys) {\n      return _map(function (k) {\n        return _quote(k) + ': ' + recur(obj[k]);\n      }, keys.slice().sort());\n    };\n\n    switch (Object.prototype.toString.call(x)) {\n      case '[object Arguments]':\n        return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n      case '[object Array]':\n        return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n          return /^\\d+$/.test(k);\n        }, keys(x)))).join(', ') + ']';\n\n      case '[object Boolean]':\n        return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n      case '[object Date]':\n        return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n      case '[object Null]':\n        return 'null';\n\n      case '[object Number]':\n        return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n      case '[object String]':\n        return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n      case '[object Undefined]':\n        return 'undefined';\n\n      default:\n        if (typeof x.toString === 'function') {\n          var repr = x.toString();\n\n          if (repr !== '[object Object]') {\n            return repr;\n          }\n        }\n\n        return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n    }\n  }\n\n  module.exports = _toString;\n});","lineCount":67,"map":[[2,0,1,0],[2,6,1,4,"_includes"],[2,15,1,13],[2,18,1,29,"require"],[2,29,1,36],[2,63,1,0],[4,0,3,0],[4,6,3,4,"_map"],[4,10,3,8],[4,13,3,24,"require"],[4,24,3,31],[4,53,3,0],[6,0,5,0],[6,6,5,4,"_quote"],[6,12,5,10],[6,15,5,26,"require"],[6,26,5,33],[6,57,5,0],[8,0,7,0],[8,6,7,4,"_toISOString"],[8,18,7,16],[8,21,7,32,"require"],[8,32,7,39],[8,69,7,0],[10,0,9,0],[10,6,9,4,"keys"],[10,10,9,8],[10,13,9,24,"require"],[10,24,9,31],[10,54,9,0],[12,0,11,0],[12,6,11,4,"reject"],[12,12,11,10],[12,15,11,26,"require"],[12,26,11,33],[12,58,11,0],[14,0,13,0],[14,11,13,9,"_toString"],[14,20,13,0],[14,21,13,19,"x"],[14,22,13,0],[14,24,13,22,"seen"],[14,28,13,0],[14,30,13,28],[15,0,14,2],[15,8,14,6,"recur"],[15,13,14,11],[15,16,14,14],[15,25,14,23,"recur"],[15,30,14,14],[15,31,14,29,"y"],[15,32,14,14],[15,34,14,32],[16,0,15,4],[16,10,15,8,"xs"],[16,12,15,10],[16,15,15,13,"seen"],[16,19,15,17],[16,20,15,18,"concat"],[16,26,15,13],[16,27,15,25],[16,28,15,26,"x"],[16,29,15,25],[16,30,15,13],[16,31,15,4],[17,0,16,4],[17,13,16,11,"_includes"],[17,22,16,20],[17,23,16,21,"y"],[17,24,16,20],[17,26,16,24,"xs"],[17,28,16,20],[17,29,16,11],[17,32,16,30],[17,44,16,11],[17,47,16,45,"_toString"],[17,56,16,54],[17,57,16,55,"y"],[17,58,16,54],[17,60,16,58,"xs"],[17,62,16,54],[17,63,16,4],[18,0,17,3],[18,5,14,2],[20,0,20,2],[20,8,20,6,"mapPairs"],[20,16,20,14],[20,19,20,17],[20,28,20,6,"mapPairs"],[20,36,20,17],[20,37,20,27,"obj"],[20,40,20,17],[20,42,20,32,"keys"],[20,46,20,17],[20,48,20,38],[21,0,21,4],[21,13,21,11,"_map"],[21,17,21,15],[21,18,21,16],[21,28,21,26,"k"],[21,29,21,16],[21,31,21,29],[22,0,22,6],[22,15,22,13,"_quote"],[22,21,22,19],[22,22,22,20,"k"],[22,23,22,19],[22,24,22,13],[22,27,22,25],[22,31,22,13],[22,34,22,32,"recur"],[22,39,22,37],[22,40,22,38,"obj"],[22,43,22,41],[22,44,22,42,"k"],[22,45,22,41],[22,46,22,37],[22,47,22,6],[23,0,23,5],[23,7,21,15],[23,9,23,7,"keys"],[23,13,23,11],[23,14,23,12,"slice"],[23,19,23,7],[23,22,23,20,"sort"],[23,26,23,7],[23,28,21,15],[23,29,21,4],[24,0,24,3],[24,5,20,2],[26,0,26,2],[26,12,26,10,"Object"],[26,18,26,16],[26,19,26,17,"prototype"],[26,28,26,10],[26,29,26,27,"toString"],[26,37,26,10],[26,38,26,36,"call"],[26,42,26,10],[26,43,26,41,"x"],[26,44,26,10],[26,45,26,2],[27,0,27,4],[27,11,27,9],[27,31,27,4],[28,0,28,6],[28,15,28,13],[28,54,28,52,"_map"],[28,58,28,56],[28,59,28,57,"recur"],[28,64,28,56],[28,66,28,64,"x"],[28,67,28,56],[28,68,28,52],[28,69,28,67,"join"],[28,73,28,52],[28,74,28,72],[28,78,28,52],[28,79,28,13],[28,82,28,80],[28,86,28,6],[30,0,29,4],[30,11,29,9],[30,27,29,4],[31,0,30,6],[31,15,30,13],[31,21,30,19,"_map"],[31,25,30,23],[31,26,30,24,"recur"],[31,31,30,23],[31,33,30,31,"x"],[31,34,30,23],[31,35,30,19],[31,36,30,34,"concat"],[31,42,30,19],[31,43,30,41,"mapPairs"],[31,51,30,49],[31,52,30,50,"x"],[31,53,30,49],[31,55,30,53,"reject"],[31,61,30,59],[31,62,30,60],[31,72,30,70,"k"],[31,73,30,60],[31,75,30,73],[32,0,31,8],[32,17,31,16],[32,25,31,24,"test"],[32,29,31,16],[32,30,31,29,"k"],[32,31,31,16],[32,32,31,8],[33,0,33,7],[33,9,30,59],[33,11,33,9,"keys"],[33,15,33,13],[33,16,33,14,"x"],[33,17,33,13],[33,18,30,59],[33,19,30,49],[33,20,30,19],[33,22,33,20,"join"],[33,26,30,19],[33,27,33,25],[33,31,30,19],[33,32,30,13],[33,35,33,33],[33,38,30,6],[35,0,34,4],[35,11,34,9],[35,29,34,4],[36,0,35,6],[36,15,35,13],[36,22,35,20,"x"],[36,23,35,13],[36,28,35,26],[36,36,35,13],[36,39,35,37],[36,56,35,54,"recur"],[36,61,35,59],[36,62,35,60,"x"],[36,63,35,61],[36,64,35,62,"valueOf"],[36,71,35,60],[36,73,35,59],[36,74,35,37],[36,77,35,75],[36,80,35,13],[36,83,35,81,"x"],[36,84,35,82],[36,85,35,83,"toString"],[36,93,35,81],[36,95,35,6],[38,0,36,4],[38,11,36,9],[38,26,36,4],[39,0,37,6],[39,15,37,13],[39,30,37,28,"isNaN"],[39,35,37,33],[39,36,37,34,"x"],[39,37,37,35],[39,38,37,36,"valueOf"],[39,45,37,34],[39,47,37,33],[39,48,37,28],[39,51,37,49,"recur"],[39,56,37,54],[39,57,37,55,"NaN"],[39,60,37,54],[39,61,37,28],[39,64,37,62,"_quote"],[39,70,37,68],[39,71,37,69,"_toISOString"],[39,83,37,81],[39,84,37,82,"x"],[39,85,37,81],[39,86,37,68],[39,87,37,13],[39,91,37,89],[39,94,37,6],[41,0,38,4],[41,11,38,9],[41,26,38,4],[42,0,39,6],[42,15,39,13],[42,21,39,6],[44,0,40,4],[44,11,40,9],[44,28,40,4],[45,0,41,6],[45,15,41,13],[45,22,41,20,"x"],[45,23,41,13],[45,28,41,26],[45,36,41,13],[45,39,41,37],[45,55,41,53,"recur"],[45,60,41,58],[45,61,41,59,"x"],[45,62,41,60],[45,63,41,61,"valueOf"],[45,70,41,59],[45,72,41,58],[45,73,41,37],[45,76,41,74],[45,79,41,13],[45,82,41,80],[45,86,41,84,"x"],[45,87,41,80],[45,92,41,90],[45,93,41,91,"Infinity"],[45,101,41,80],[45,104,41,102],[45,108,41,80],[45,111,41,109,"x"],[45,112,41,110],[45,113,41,111,"toString"],[45,121,41,109],[45,122,41,120],[45,124,41,109],[45,125,41,6],[47,0,42,4],[47,11,42,9],[47,28,42,4],[48,0,43,6],[48,15,43,13],[48,22,43,20,"x"],[48,23,43,13],[48,28,43,26],[48,36,43,13],[48,39,43,37],[48,55,43,53,"recur"],[48,60,43,58],[48,61,43,59,"x"],[48,62,43,60],[48,63,43,61,"valueOf"],[48,70,43,59],[48,72,43,58],[48,73,43,37],[48,76,43,74],[48,79,43,13],[48,82,43,80,"_quote"],[48,88,43,86],[48,89,43,87,"x"],[48,90,43,86],[48,91,43,6],[50,0,44,4],[50,11,44,9],[50,31,44,4],[51,0,45,6],[51,15,45,13],[51,26,45,6],[53,0,46,4],[54,0,47,6],[54,12,47,10],[54,19,47,17,"x"],[54,20,47,18],[54,21,47,19,"toString"],[54,29,47,10],[54,34,47,32],[54,44,47,6],[54,46,47,44],[55,0,48,8],[55,14,48,12,"repr"],[55,18,48,16],[55,21,48,19,"x"],[55,22,48,20],[55,23,48,21,"toString"],[55,31,48,19],[55,33,48,8],[57,0,49,8],[57,14,49,12,"repr"],[57,18,49,16],[57,23,49,21],[57,40,49,8],[57,42,49,40],[58,0,50,10],[58,19,50,17,"repr"],[58,23,50,10],[59,0,51,9],[60,0,52,7],[62,0,53,6],[62,15,53,13],[62,21,53,19,"mapPairs"],[62,29,53,27],[62,30,53,28,"x"],[62,31,53,27],[62,33,53,31,"keys"],[62,37,53,35],[62,38,53,36,"x"],[62,39,53,35],[62,40,53,27],[62,41,53,19],[62,42,53,40,"join"],[62,46,53,19],[62,47,53,45],[62,51,53,19],[62,52,53,13],[62,55,53,53],[62,58,53,6],[63,0,26,2],[64,0,55,1],[66,0,56,0,"module"],[66,2,56,0,"module"],[66,8,56,6],[66,9,56,7,"exports"],[66,16,56,0],[66,19,56,17,"_toString"],[66,28,56,0]],"functionMap":{"names":["<global>","_toString","recur","mapPairs","_map$argument_0","reject$argument_0"],"mappings":"AAA;ACY;cCC;GDG;iBEG;gBCC;KDE;GFC;4DIM;OJG;CDsB"}},"type":"js/module"}]}