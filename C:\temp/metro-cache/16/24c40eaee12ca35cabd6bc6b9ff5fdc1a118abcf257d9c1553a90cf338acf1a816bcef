{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../config","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.Slider = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/extends\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/createClass\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[13], \"react-native\");\n\n  var _config = _$$_REQUIRE(_dependencyMap[14], \"../config\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kids-linkedin/app/kids-linkedin/node_modules/react-native-elements/src/slider/Slider.js\",\n      _this2 = this;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var TRACK_SIZE = 4;\n  var THUMB_SIZE = 20;\n\n  var TRACK_STYLE = _reactNative.Platform.select({\n    web: 0,\n    default: -1\n  });\n\n  var DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n      friction: 7,\n      tension: 100\n    },\n    timing: {\n      duration: 150,\n      easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),\n      delay: 0\n    }\n  };\n\n  var getBoundedValue = function getBoundedValue(value, maximumValue, minimumValue) {\n    return Math.max(Math.min(value, maximumValue), minimumValue);\n  };\n\n  var Rect = function () {\n    function Rect(x, y, width, height) {\n      (0, _classCallCheck2.default)(this, Rect);\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n    }\n\n    (0, _createClass2.default)(Rect, [{\n      key: \"containsPoint\",\n      value: function containsPoint(x, y) {\n        return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n      }\n    }]);\n    return Rect;\n  }();\n\n  var Slider = function (_React$Component) {\n    (0, _inherits2.default)(Slider, _React$Component);\n\n    var _super = _createSuper(Slider);\n\n    function Slider(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Slider);\n      _this = _super.call(this, props);\n\n      _this.measureContainer = function (x) {\n        _this.handleMeasure('containerSize', x);\n      };\n\n      _this.measureTrack = function (x) {\n        _this.handleMeasure('trackSize', x);\n      };\n\n      _this.measureThumb = function (x) {\n        _this.handleMeasure('thumbSize', x);\n      };\n\n      _this.state = {\n        containerSize: {\n          width: 0,\n          height: 0\n        },\n        trackSize: {\n          width: 0,\n          height: 0\n        },\n        thumbSize: {\n          width: 0,\n          height: 0\n        },\n        allMeasured: false,\n        value: new _reactNative.Animated.Value(getBoundedValue(props.value, props.maximumValue, props.minimumValue))\n      };\n      _this.panResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: _this.handleStartShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),\n        onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderGrant: _this.handlePanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderMove: _this.handlePanResponderMove.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderRelease: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderTerminationRequest: _this.handlePanResponderRequestEnd.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderTerminate: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this))\n      });\n      _this.isVertical = props.orientation === 'vertical';\n      return _this;\n    }\n\n    (0, _createClass2.default)(Slider, [{\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var newValue = getBoundedValue(this.props.value, this.props.maximumValue, this.props.minimumValue);\n\n        if (prevProps.value !== newValue) {\n          if (this.props.animateTransitions) {\n            this.setCurrentValueAnimated(newValue);\n          } else {\n            this.setCurrentValue(newValue);\n          }\n        }\n      }\n    }, {\n      key: \"setCurrentValue\",\n      value: function setCurrentValue(value) {\n        this.state.value.setValue(value);\n      }\n    }, {\n      key: \"setCurrentValueAnimated\",\n      value: function setCurrentValueAnimated(value) {\n        var animationType = this.props.animationType;\n        var animationConfig = (0, _extends2.default)({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {\n          toValue: value\n        });\n\n        _reactNative.Animated[animationType](this.state.value, animationConfig).start();\n      }\n    }, {\n      key: \"handleMoveShouldSetPanResponder\",\n      value: function handleMoveShouldSetPanResponder() {\n        return false;\n      }\n    }, {\n      key: \"handlePanResponderGrant\",\n      value: function handlePanResponderGrant() {\n        this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n        this.fireChangeEvent('onSlidingStart');\n      }\n    }, {\n      key: \"handlePanResponderMove\",\n      value: function handlePanResponderMove(_, gestureState) {\n        if (this.props.disabled) {\n          return;\n        }\n\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onValueChange');\n      }\n    }, {\n      key: \"handlePanResponderRequestEnd\",\n      value: function handlePanResponderRequestEnd() {\n        return false;\n      }\n    }, {\n      key: \"handlePanResponderEnd\",\n      value: function handlePanResponderEnd(_, gestureState) {\n        if (this.props.disabled) {\n          return;\n        }\n\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onSlidingComplete');\n      }\n    }, {\n      key: \"thumbHitTest\",\n      value: function thumbHitTest(_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        var thumbTouchRect = this.getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n      }\n    }, {\n      key: \"handleStartShouldSetPanResponder\",\n      value: function handleStartShouldSetPanResponder(e) {\n        if (!this.props.allowTouchTrack) {\n          return this.thumbHitTest(e);\n        }\n\n        this.setCurrentValue(this.getOnTouchValue(e));\n        this.fireChangeEvent('onValueChange');\n        return true;\n      }\n    }, {\n      key: \"fireChangeEvent\",\n      value: function fireChangeEvent(event) {\n        if (this.props[event]) {\n          this.props[event](this.getCurrentValue());\n        }\n      }\n    }, {\n      key: \"getOnTouchValue\",\n      value: function getOnTouchValue(_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        var location = this.isVertical ? nativeEvent.locationY : nativeEvent.locationX;\n        return this.getValueForTouch(location);\n      }\n    }, {\n      key: \"getValueForTouch\",\n      value: function getValueForTouch(location) {\n        var length = this.state.containerSize.width - this.state.thumbSize.width;\n        var ratio = location / length;\n        var newValue = ratio * (this.props.maximumValue - this.props.minimumValue);\n\n        if (this.props.step) {\n          newValue = Math.round(newValue / this.props.step) * this.props.step;\n        }\n\n        return getBoundedValue(newValue + this.props.minimumValue, this.props.maximumValue, this.props.minimumValue);\n      }\n    }, {\n      key: \"getTouchOverflowSize\",\n      value: function getTouchOverflowSize() {\n        var _this$state = this.state,\n            thumbSize = _this$state.thumbSize,\n            allMeasured = _this$state.allMeasured,\n            containerSize = _this$state.containerSize;\n        var thumbTouchSize = this.props.thumbTouchSize;\n        var size = {};\n\n        if (allMeasured === true) {\n          size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n          size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n        }\n\n        return size;\n      }\n    }, {\n      key: \"getTouchOverflowStyle\",\n      value: function getTouchOverflowStyle() {\n        var _this$getTouchOverflo = this.getTouchOverflowSize(),\n            width = _this$getTouchOverflo.width,\n            height = _this$getTouchOverflo.height;\n\n        var touchOverflowStyle = {};\n\n        if (width !== undefined && height !== undefined) {\n          var verticalMargin = -height / 2;\n          touchOverflowStyle.marginTop = verticalMargin;\n          touchOverflowStyle.marginBottom = verticalMargin;\n          var horizontalMargin = -width / 2;\n          touchOverflowStyle.marginLeft = horizontalMargin;\n          touchOverflowStyle.marginRight = horizontalMargin;\n        }\n\n        if (this.props.debugTouchArea === true) {\n          touchOverflowStyle.backgroundColor = 'orange';\n          touchOverflowStyle.opacity = 0.5;\n        }\n\n        return touchOverflowStyle;\n      }\n    }, {\n      key: \"handleMeasure\",\n      value: function handleMeasure(name, x) {\n        var _x$nativeEvent$layout = x.nativeEvent.layout,\n            layoutWidth = _x$nativeEvent$layout.width,\n            layoutHeight = _x$nativeEvent$layout.height;\n        var width = this.isVertical ? layoutHeight : layoutWidth;\n        var height = this.isVertical ? layoutWidth : layoutHeight;\n        var size = {\n          width: width,\n          height: height\n        };\n        var storeName = \"_\" + name;\n        var currentSize = this[storeName];\n\n        if (currentSize && width === currentSize.width && height === currentSize.height) {\n          return;\n        }\n\n        this[storeName] = size;\n\n        if (this._containerSize && this._trackSize && this._thumbSize) {\n          this.setState({\n            containerSize: this._containerSize,\n            trackSize: this._trackSize,\n            thumbSize: this._thumbSize,\n            allMeasured: true\n          });\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(gestureState) {\n        var location = this._previousLeft + (this.isVertical ? gestureState.dy : gestureState.dx);\n        return this.getValueForTouch(location);\n      }\n    }, {\n      key: \"getCurrentValue\",\n      value: function getCurrentValue() {\n        return this.state.value.__getValue();\n      }\n    }, {\n      key: \"getRatio\",\n      value: function getRatio(value) {\n        return (value - this.props.minimumValue) / (this.props.maximumValue - this.props.minimumValue);\n      }\n    }, {\n      key: \"getThumbLeft\",\n      value: function getThumbLeft(value) {\n        var ratio = this.getRatio(value);\n        return ratio * (this.state.containerSize.width - this.state.thumbSize.width);\n      }\n    }, {\n      key: \"getThumbTouchRect\",\n      value: function getThumbTouchRect() {\n        var _this$state2 = this.state,\n            thumbSize = _this$state2.thumbSize,\n            containerSize = _this$state2.containerSize;\n        var thumbTouchSize = this.props.thumbTouchSize;\n        var touchOverflowSize = this.getTouchOverflowSize();\n        var height = touchOverflowSize.height / 2 + (containerSize.height - thumbTouchSize.height) / 2;\n        var width = touchOverflowSize.width / 2 + this.getThumbLeft(this.getCurrentValue()) + (thumbSize.width - thumbTouchSize.width) / 2;\n\n        if (this.isVertical) {\n          return new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height);\n        }\n\n        return new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n      }\n    }, {\n      key: \"renderDebugThumbTouchRect\",\n      value: function renderDebugThumbTouchRect(thumbLeft) {\n        var thumbTouchRect = this.getThumbTouchRect();\n        var positionStyle = {\n          left: thumbLeft,\n          top: thumbTouchRect.y,\n          width: thumbTouchRect.width,\n          height: thumbTouchRect.height\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: positionStyle,\n          pointerEvents: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 12\n          }\n        });\n      }\n    }, {\n      key: \"getMinimumTrackStyles\",\n      value: function getMinimumTrackStyles(thumbStart) {\n        var _this$state3 = this.state,\n            thumbSize = _this$state3.thumbSize,\n            trackSize = _this$state3.trackSize;\n        var minimumTrackStyle = {\n          position: 'absolute'\n        };\n\n        if (this.isVertical) {\n          minimumTrackStyle.height = _reactNative.Animated.add(thumbStart, thumbSize.height / 2);\n          minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n        } else {\n          minimumTrackStyle.width = _reactNative.Animated.add(thumbStart, thumbSize.width / 2);\n          minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n        }\n\n        return minimumTrackStyle;\n      }\n    }, {\n      key: \"getThumbPositionStyles\",\n      value: function getThumbPositionStyles(thumbStart) {\n        return [(0, _defineProperty2.default)({}, this.isVertical ? 'translateY' : 'translateX', thumbStart)];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            minimumValue = _this$props.minimumValue,\n            maximumValue = _this$props.maximumValue,\n            minimumTrackTintColor = _this$props.minimumTrackTintColor,\n            maximumTrackTintColor = _this$props.maximumTrackTintColor,\n            thumbTintColor = _this$props.thumbTintColor,\n            containerStyle = _this$props.containerStyle,\n            style = _this$props.style,\n            trackStyle = _this$props.trackStyle,\n            thumbStyle = _this$props.thumbStyle,\n            thumbProps = _this$props.thumbProps,\n            debugTouchArea = _this$props.debugTouchArea,\n            orientation = _this$props.orientation,\n            other = (0, _objectWithoutProperties2.default)(_this$props, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"thumbProps\", \"debugTouchArea\", \"orientation\"]);\n        var _this$state4 = this.state,\n            value = _this$state4.value,\n            containerSize = _this$state4.containerSize,\n            thumbSize = _this$state4.thumbSize,\n            allMeasured = _this$state4.allMeasured;\n        var mainStyles = containerStyle || styles;\n\n        var appliedTrackStyle = _reactNative.StyleSheet.flatten([styles.track, trackStyle]);\n\n        var thumbStart = value.interpolate({\n          inputRange: [minimumValue, maximumValue],\n          outputRange: [0, containerSize.width - thumbSize.width]\n        });\n        var valueVisibleStyle = {};\n\n        if (!allMeasured) {\n          valueVisibleStyle.height = 0;\n          valueVisibleStyle.width = 0;\n        }\n\n        var minimumTrackStyle = _objectSpread(_objectSpread({}, this.getMinimumTrackStyles(thumbStart)), {}, {\n          backgroundColor: minimumTrackTintColor\n        }, valueVisibleStyle);\n\n        var touchOverflowStyle = this.getTouchOverflowStyle();\n        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, other, {\n          style: _reactNative.StyleSheet.flatten([this.isVertical ? mainStyles.containerVertical : mainStyles.containerHorizontal, style]),\n          onLayout: this.measureContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 7\n          }\n        }), _react.default.createElement(_reactNative.View, {\n          style: _reactNative.StyleSheet.flatten([mainStyles.track, this.isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, {\n            backgroundColor: maximumTrackTintColor\n          }]),\n          onLayout: this.measureTrack,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 9\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: _reactNative.StyleSheet.flatten([mainStyles.track, this.isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, minimumTrackStyle]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 9\n          }\n        }), _react.default.createElement(SliderThumb, (0, _extends2.default)({\n          isVisible: allMeasured,\n          onLayout: this.measureThumb.bind(this),\n          style: thumbStyle,\n          color: thumbTintColor,\n          start: thumbStart,\n          vertical: this.isVertical\n        }, thumbProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 9\n          }\n        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n          style: _reactNative.StyleSheet.flatten([styles.touchArea, touchOverflowStyle])\n        }, this.panResponder.panHandlers, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 9\n          }\n        }), debugTouchArea === true && this.renderDebugThumbTouchRect(thumbStart)));\n      }\n    }]);\n    return Slider;\n  }(_react.default.Component);\n\n  exports.Slider = Slider;\n\n  var SliderThumb = function SliderThumb(_ref4) {\n    var Component = _ref4.Component,\n        isVisible = _ref4.isVisible,\n        onLayout = _ref4.onLayout,\n        style = _ref4.style,\n        start = _ref4.start,\n        color = _ref4.color,\n        vertical = _ref4.vertical,\n        props = (0, _objectWithoutProperties2.default)(_ref4, [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"]);\n    var ThumbComponent = Component || _reactNative.Animated.View;\n    var axis = vertical ? 'translateY' : 'translateX';\n    var thumbPosition = [(0, _defineProperty2.default)({}, axis, start)];\n    var styleTransform = style && style.transform || [];\n    var visibleStyle = isVisible ? {} : {\n      height: 0,\n      width: 0\n    };\n    return _react.default.createElement(ThumbComponent, (0, _extends2.default)({\n      testID: \"sliderThumb\",\n      onLayout: onLayout,\n      style: _reactNative.StyleSheet.flatten([_objectSpread({\n        backgroundColor: color,\n        transform: [].concat(thumbPosition, (0, _toConsumableArray2.default)(styleTransform))\n      }, visibleStyle), styles.thumb, style])\n    }, props, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  Slider.propTypes = {\n    value: _propTypes.default.number,\n    disabled: _propTypes.default.bool,\n    minimumValue: _propTypes.default.number,\n    maximumValue: _propTypes.default.number,\n    step: _propTypes.default.number,\n    minimumTrackTintColor: _propTypes.default.string,\n    maximumTrackTintColor: _propTypes.default.string,\n    allowTouchTrack: _propTypes.default.bool,\n    thumbTintColor: _propTypes.default.string,\n    thumbTouchSize: _propTypes.default.shape({\n      width: _propTypes.default.number,\n      height: _propTypes.default.number\n    }),\n    onValueChange: _propTypes.default.func,\n    onSlidingStart: _propTypes.default.func,\n    onSlidingComplete: _propTypes.default.func,\n    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n    trackStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n    thumbStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n    thumbProps: _propTypes.default.object,\n    debugTouchArea: _propTypes.default.bool,\n    animateTransitions: _propTypes.default.bool,\n    animationType: _propTypes.default.oneOf(['spring', 'timing']),\n    orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\n    animationConfig: _propTypes.default.object,\n    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])\n  };\n  Slider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    allowTouchTrack: false,\n    thumbTintColor: 'red',\n    thumbTouchSize: {\n      width: 40,\n      height: 40\n    },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    containerHorizontal: {\n      height: 40,\n      justifyContent: 'center'\n    },\n    containerVertical: {\n      width: 40,\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    track: {\n      borderRadius: TRACK_SIZE / 2\n    },\n    trackHorizontal: {\n      height: TRACK_SIZE\n    },\n    trackVertical: {\n      flex: 1,\n      width: TRACK_SIZE\n    },\n    thumb: {\n      position: 'absolute',\n      width: THUMB_SIZE,\n      height: THUMB_SIZE,\n      borderRadius: THUMB_SIZE / 2\n    },\n    touchArea: {\n      position: 'absolute',\n      backgroundColor: 'transparent',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    debugThumbTouchArea: {\n      position: 'absolute',\n      backgroundColor: 'green',\n      opacity: 0.5\n    }\n  });\n\n  var _default = (0, _config.withTheme)(Slider, 'Slider');\n\n  exports.default = _default;\n});","lineCount":633,"map":[[29,0,1,0],[31,0,2,0],[33,0,3,0],[35,0,12,0],[48,0,14,0],[48,6,14,6,"TRACK_SIZE"],[48,16,14,16],[48,19,14,19],[48,20,14,0],[49,0,15,0],[49,6,15,6,"THUMB_SIZE"],[49,16,15,16],[49,19,15,19],[49,21,15,0],[51,0,16,0],[51,6,16,6,"TRACK_STYLE"],[51,17,16,17],[51,20,16,20,"Platform"],[51,42,16,29,"select"],[51,48,16,20],[51,49,16,36],[52,0,16,38,"web"],[52,4,16,38,"web"],[52,7,16,41],[52,9,16,43],[52,10,16,36],[53,0,16,46,"default"],[53,4,16,46,"default"],[53,11,16,53],[53,13,16,55],[53,14,16,56],[54,0,16,36],[54,3,16,20],[54,4,16,0],[56,0,18,0],[56,6,18,6,"DEFAULT_ANIMATION_CONFIGS"],[56,31,18,31],[56,34,18,34],[57,0,19,2,"spring"],[57,4,19,2,"spring"],[57,10,19,8],[57,12,19,10],[58,0,20,4,"friction"],[58,6,20,4,"friction"],[58,14,20,12],[58,16,20,14],[58,17,19,10],[59,0,21,4,"tension"],[59,6,21,4,"tension"],[59,13,21,11],[59,15,21,13],[60,0,19,10],[60,5,18,34],[61,0,23,2,"timing"],[61,4,23,2,"timing"],[61,10,23,8],[61,12,23,10],[62,0,24,4,"duration"],[62,6,24,4,"duration"],[62,14,24,12],[62,16,24,14],[62,19,23,10],[63,0,25,4,"easing"],[63,6,25,4,"easing"],[63,12,25,10],[63,14,25,12,"Easing"],[63,34,25,19,"inOut"],[63,39,25,12],[63,40,25,25,"Easing"],[63,60,25,32,"ease"],[63,64,25,12],[63,65,23,10],[64,0,26,4,"delay"],[64,6,26,4,"delay"],[64,11,26,9],[64,13,26,11],[65,0,23,10],[66,0,18,34],[66,3,18,0],[68,0,30,0],[68,6,30,6,"getBoundedValue"],[68,21,30,21],[68,24,30,24],[68,33,30,6,"getBoundedValue"],[68,48,30,24],[68,49,30,25,"value"],[68,54,30,24],[68,56,30,32,"maximumValue"],[68,68,30,24],[68,70,30,46,"minimumValue"],[68,82,30,24],[69,0,30,24],[69,11,31,2,"Math"],[69,15,31,6],[69,16,31,7,"max"],[69,19,31,2],[69,20,31,11,"Math"],[69,24,31,15],[69,25,31,16,"min"],[69,28,31,11],[69,29,31,20,"value"],[69,34,31,11],[69,36,31,27,"maximumValue"],[69,48,31,11],[69,49,31,2],[69,51,31,42,"minimumValue"],[69,63,31,2],[69,64,30,24],[70,0,30,24],[70,3,30,0],[72,6,33,6,"Rect"],[72,10],[73,0,34,2],[73,18,34,14,"x"],[73,19,34,2],[73,21,34,17,"y"],[73,22,34,2],[73,24,34,20,"width"],[73,29,34,2],[73,31,34,27,"height"],[73,37,34,2],[73,39,34,35],[74,0,34,35],[75,0,35,4],[75,11,35,9,"x"],[75,12,35,4],[75,15,35,13,"x"],[75,16,35,4],[76,0,36,4],[76,11,36,9,"y"],[76,12,36,4],[76,15,36,13,"y"],[76,16,36,4],[77,0,37,4],[77,11,37,9,"width"],[77,16,37,4],[77,19,37,17,"width"],[77,24,37,4],[78,0,38,4],[78,11,38,9,"height"],[78,17,38,4],[78,20,38,18,"height"],[78,26,38,4],[79,0,39,3],[83,36,41,16,"x"],[83,37],[83,39,41,19,"y"],[83,40],[83,42,41,22],[84,0,42,4],[84,15,43,6,"x"],[84,16,43,7],[84,20,43,11],[84,25,43,16,"x"],[84,26,43,6],[84,30,44,6,"y"],[84,31,44,7],[84,35,44,11],[84,40,44,16,"y"],[84,41,43,6],[84,45,45,6,"x"],[84,46,45,7],[84,50,45,11],[84,55,45,16,"x"],[84,56,45,11],[84,59,45,20],[84,64,45,25,"width"],[84,69,43,6],[84,73,46,6,"y"],[84,74,46,7],[84,78,46,11],[84,83,46,16,"y"],[84,84,46,11],[84,87,46,20],[84,92,46,25,"height"],[84,98,42,4],[85,0,48,3],[90,6,51,6,"Slider"],[90,12],[95,0,52,2],[95,20,52,14,"props"],[95,25,52,2],[95,27,52,21],[96,0,52,21],[98,0,52,21],[99,0,53,4],[99,32,53,10,"props"],[99,37,53,4],[101,0,52,21],[101,12,258,2,"measureContainer"],[101,28,52,21],[101,31,258,21],[101,41,258,22,"x"],[101,42,258,21],[101,44,258,28],[102,0,259,4],[102,14,259,9,"handleMeasure"],[102,27,259,4],[102,28,259,23],[102,43,259,4],[102,45,259,40,"x"],[102,46,259,4],[103,0,260,3],[103,7,52,21],[105,0,52,21],[105,12,262,2,"measureTrack"],[105,24,52,21],[105,27,262,17],[105,37,262,18,"x"],[105,38,262,17],[105,40,262,24],[106,0,263,4],[106,14,263,9,"handleMeasure"],[106,27,263,4],[106,28,263,23],[106,39,263,4],[106,41,263,36,"x"],[106,42,263,4],[107,0,264,3],[107,7,52,21],[109,0,52,21],[109,12,266,2,"measureThumb"],[109,24,52,21],[109,27,266,17],[109,37,266,18,"x"],[109,38,266,17],[109,40,266,24],[110,0,267,4],[110,14,267,9,"handleMeasure"],[110,27,267,4],[110,28,267,23],[110,39,267,4],[110,41,267,36,"x"],[110,42,267,4],[111,0,268,3],[111,7,52,21],[113,0,54,4],[113,12,54,9,"state"],[113,17,54,4],[113,20,54,17],[114,0,55,6,"containerSize"],[114,8,55,6,"containerSize"],[114,21,55,19],[114,23,55,21],[115,0,55,23,"width"],[115,10,55,23,"width"],[115,15,55,28],[115,17,55,30],[115,18,55,21],[116,0,55,33,"height"],[116,10,55,33,"height"],[116,16,55,39],[116,18,55,41],[117,0,55,21],[117,9,54,17],[118,0,56,6,"trackSize"],[118,8,56,6,"trackSize"],[118,17,56,15],[118,19,56,17],[119,0,56,19,"width"],[119,10,56,19,"width"],[119,15,56,24],[119,17,56,26],[119,18,56,17],[120,0,56,29,"height"],[120,10,56,29,"height"],[120,16,56,35],[120,18,56,37],[121,0,56,17],[121,9,54,17],[122,0,57,6,"thumbSize"],[122,8,57,6,"thumbSize"],[122,17,57,15],[122,19,57,17],[123,0,57,19,"width"],[123,10,57,19,"width"],[123,15,57,24],[123,17,57,26],[123,18,57,17],[124,0,57,29,"height"],[124,10,57,29,"height"],[124,16,57,35],[124,18,57,37],[125,0,57,17],[125,9,54,17],[126,0,58,6,"allMeasured"],[126,8,58,6,"allMeasured"],[126,19,58,17],[126,21,58,19],[126,26,54,17],[127,0,59,6,"value"],[127,8,59,6,"value"],[127,13,59,11],[127,15,59,13],[127,19,59,17,"Animated"],[127,41,59,26,"Value"],[127,46,59,13],[127,47,60,8,"getBoundedValue"],[127,62,60,23],[127,63,60,24,"props"],[127,68,60,29],[127,69,60,30,"value"],[127,74,60,23],[127,76,60,37,"props"],[127,81,60,42],[127,82,60,43,"maximumValue"],[127,94,60,23],[127,96,60,57,"props"],[127,101,60,62],[127,102,60,63,"minimumValue"],[127,114,60,23],[127,115,59,13],[128,0,54,17],[128,7,54,4],[129,0,64,4],[129,12,64,9,"panResponder"],[129,24,64,4],[129,27,64,24,"PanResponder"],[129,53,64,37,"create"],[129,59,64,24],[129,60,64,44],[130,0,65,6,"onStartShouldSetPanResponder"],[130,8,65,6,"onStartShouldSetPanResponder"],[130,36,65,34],[130,38,65,36],[130,44,65,41,"handleStartShouldSetPanResponder"],[130,76,65,36],[130,77,65,74,"bind"],[130,81,65,36],[130,126,64,44],[131,0,68,6,"onMoveShouldSetPanResponder"],[131,8,68,6,"onMoveShouldSetPanResponder"],[131,35,68,33],[131,37,68,35],[131,43,68,40,"handleMoveShouldSetPanResponder"],[131,74,68,35],[131,75,68,72,"bind"],[131,79,68,35],[131,124,64,44],[132,0,71,6,"onPanResponderGrant"],[132,8,71,6,"onPanResponderGrant"],[132,27,71,25],[132,29,71,27],[132,35,71,32,"handlePanResponderGrant"],[132,58,71,27],[132,59,71,56,"bind"],[132,63,71,27],[132,108,64,44],[133,0,72,6,"onPanResponderMove"],[133,8,72,6,"onPanResponderMove"],[133,26,72,24],[133,28,72,26],[133,34,72,31,"handlePanResponderMove"],[133,56,72,26],[133,57,72,54,"bind"],[133,61,72,26],[133,106,64,44],[134,0,73,6,"onPanResponderRelease"],[134,8,73,6,"onPanResponderRelease"],[134,29,73,27],[134,31,73,29],[134,37,73,34,"handlePanResponderEnd"],[134,58,73,29],[134,59,73,56,"bind"],[134,63,73,29],[134,108,64,44],[135,0,74,6,"onPanResponderTerminationRequest"],[135,8,74,6,"onPanResponderTerminationRequest"],[135,40,74,38],[135,42,74,40],[135,48,74,45,"handlePanResponderRequestEnd"],[135,76,74,40],[135,77,74,74,"bind"],[135,81,74,40],[135,126,64,44],[136,0,77,6,"onPanResponderTerminate"],[136,8,77,6,"onPanResponderTerminate"],[136,31,77,29],[136,33,77,31],[136,39,77,36,"handlePanResponderEnd"],[136,60,77,31],[136,61,77,58,"bind"],[136,65,77,31],[137,0,64,44],[137,7,64,24],[137,8,64,4],[138,0,79,4],[138,12,79,9,"isVertical"],[138,22,79,4],[138,25,79,22,"props"],[138,30,79,27],[138,31,79,28,"orientation"],[138,42,79,22],[138,47,79,44],[138,57,79,4],[139,0,52,21],[140,0,80,3],[144,41,82,21,"prevProps"],[144,50],[144,52,82,32],[145,0,83,4],[145,12,83,10,"newValue"],[145,20,83,18],[145,23,83,21,"getBoundedValue"],[145,38,83,36],[145,39,84,6],[145,44,84,11,"props"],[145,49,84,6],[145,50,84,17,"value"],[145,55,83,36],[145,57,85,6],[145,62,85,11,"props"],[145,67,85,6],[145,68,85,17,"maximumValue"],[145,80,83,36],[145,82,86,6],[145,87,86,11,"props"],[145,92,86,6],[145,93,86,17,"minimumValue"],[145,105,83,36],[145,106,83,4],[147,0,89,4],[147,12,89,8,"prevProps"],[147,21,89,17],[147,22,89,18,"value"],[147,27,89,8],[147,32,89,28,"newValue"],[147,40,89,4],[147,42,89,38],[148,0,90,6],[148,14,90,10],[148,19,90,15,"props"],[148,24,90,10],[148,25,90,21,"animateTransitions"],[148,43,90,6],[148,45,90,41],[149,0,91,8],[149,17,91,13,"setCurrentValueAnimated"],[149,40,91,8],[149,41,91,37,"newValue"],[149,49,91,8],[150,0,92,7],[150,11,90,6],[150,17,92,13],[151,0,93,8],[151,17,93,13,"setCurrentValue"],[151,32,93,8],[151,33,93,29,"newValue"],[151,41,93,8],[152,0,94,7],[153,0,95,5],[154,0,96,3],[157,38,98,18,"value"],[157,43],[157,45,98,25],[158,0,99,4],[158,13,99,9,"state"],[158,18,99,4],[158,19,99,15,"value"],[158,24,99,4],[158,25,99,21,"setValue"],[158,33,99,4],[158,34,99,30,"value"],[158,39,99,4],[159,0,100,3],[162,46,102,26,"value"],[162,51],[162,53,102,33],[163,0,102,33],[163,12,103,12,"animationType"],[163,25,102,33],[163,28,103,30],[163,33,103,35,"props"],[163,38,102,33],[163,39,103,12,"animationType"],[163,52,102,33],[164,0,104,4],[164,12,104,10,"animationConfig"],[164,27,104,25],[164,30,104,28],[164,53,105,6],[164,55,104,28],[164,57,106,6,"DEFAULT_ANIMATION_CONFIGS"],[164,82,106,31],[164,83,106,32,"animationType"],[164,96,106,31],[164,97,104,28],[164,99,107,6],[164,104,107,11,"props"],[164,109,107,6],[164,110,107,17,"animationConfig"],[164,125,104,28],[164,127,108,6],[165,0,109,8,"toValue"],[165,10,109,8,"toValue"],[165,17,109,15],[165,19,109,17,"value"],[166,0,108,6],[166,9,104,28],[166,10,104,4],[168,0,113,4,"Animated"],[168,30,113,13,"animationType"],[168,43,113,4],[168,45,113,28],[168,50,113,33,"state"],[168,55,113,28],[168,56,113,39,"value"],[168,61,113,4],[168,63,113,46,"animationConfig"],[168,78,113,4],[168,80,113,63,"start"],[168,85,113,4],[169,0,114,3],[172,56,116,73],[173,0,118,4],[173,15,118,11],[173,20,118,4],[174,0,119,3],[177,48,121,65],[178,0,122,4],[178,13,122,9,"_previousLeft"],[178,26,122,4],[178,29,122,25],[178,34,122,30,"getThumbLeft"],[178,46,122,25],[178,47,122,43],[178,52,122,48,"getCurrentValue"],[178,67,122,43],[178,69,122,25],[178,70,122,4],[179,0,123,4],[179,13,123,9,"fireChangeEvent"],[179,28,123,4],[179,29,123,25],[179,45,123,4],[180,0,124,3],[183,45,126,25,"_"],[183,46],[183,48,126,28,"gestureState"],[183,60],[183,62,126,42],[184,0,127,4],[184,12,127,8],[184,17,127,13,"props"],[184,22,127,8],[184,23,127,19,"disabled"],[184,31,127,4],[184,33,127,29],[185,0,128,6],[186,0,129,5],[188,0,131,4],[188,13,131,9,"setCurrentValue"],[188,28,131,4],[188,29,131,25],[188,34,131,30,"getValue"],[188,42,131,25],[188,43,131,39,"gestureState"],[188,55,131,25],[188,56,131,4],[189,0,132,4],[189,13,132,9,"fireChangeEvent"],[189,28,132,4],[189,29,132,25],[189,44,132,4],[190,0,133,3],[193,53,135,33],[194,0,137,4],[194,15,137,11],[194,20,137,4],[195,0,138,3],[198,44,140,24,"_"],[198,45],[198,47,140,27,"gestureState"],[198,59],[198,61,140,41],[199,0,141,4],[199,12,141,8],[199,17,141,13,"props"],[199,22,141,8],[199,23,141,19,"disabled"],[199,31,141,4],[199,33,141,29],[200,0,142,6],[201,0,143,5],[203,0,145,4],[203,13,145,9,"setCurrentValue"],[203,28,145,4],[203,29,145,25],[203,34,145,30,"getValue"],[203,42,145,25],[203,43,145,39,"gestureState"],[203,55,145,25],[203,56,145,4],[204,0,146,4],[204,13,146,9,"fireChangeEvent"],[204,28,146,4],[204,29,146,25],[204,48,146,4],[205,0,147,3],[208,41,149,32],[209,0,149,32],[209,12,149,17,"nativeEvent"],[209,23,149,32],[209,31,149,17,"nativeEvent"],[209,42,149,32],[210,0,150,4],[210,12,150,10,"thumbTouchRect"],[210,26,150,24],[210,29,150,27],[210,34,150,32,"getThumbTouchRect"],[210,51,150,27],[210,53,150,4],[211,0,151,4],[211,15,151,11,"thumbTouchRect"],[211,29,151,25],[211,30,151,26,"containsPoint"],[211,43,151,11],[211,44,152,6,"nativeEvent"],[211,55,152,17],[211,56,152,18,"locationX"],[211,65,151,11],[211,67,153,6,"nativeEvent"],[211,78,153,17],[211,79,153,18,"locationY"],[211,88,151,11],[211,89,151,4],[212,0,155,3],[215,55,157,35,"e"],[215,56],[215,58,157,65],[216,0,159,4],[216,12,159,8],[216,13,159,9],[216,18,159,14,"props"],[216,23,159,9],[216,24,159,20,"allowTouchTrack"],[216,39,159,4],[216,41,159,37],[217,0,160,6],[217,17,160,13],[217,22,160,18,"thumbHitTest"],[217,34,160,13],[217,35,160,31,"e"],[217,36,160,13],[217,37,160,6],[218,0,161,5],[220,0,162,4],[220,13,162,9,"setCurrentValue"],[220,28,162,4],[220,29,162,25],[220,34,162,30,"getOnTouchValue"],[220,49,162,25],[220,50,162,46,"e"],[220,51,162,25],[220,52,162,4],[221,0,163,4],[221,13,163,9,"fireChangeEvent"],[221,28,163,4],[221,29,163,25],[221,44,163,4],[222,0,164,4],[222,15,164,11],[222,19,164,4],[223,0,165,3],[226,38,167,18,"event"],[226,43],[226,45,167,25],[227,0,168,4],[227,12,168,8],[227,17,168,13,"props"],[227,22,168,8],[227,23,168,19,"event"],[227,28,168,8],[227,29,168,4],[227,31,168,27],[228,0,169,6],[228,15,169,11,"props"],[228,20,169,6],[228,21,169,17,"event"],[228,26,169,6],[228,28,169,24],[228,33,169,29,"getCurrentValue"],[228,48,169,24],[228,50,169,6],[229,0,170,5],[230,0,171,3],[233,45,174,35],[234,0,174,35],[234,12,174,20,"nativeEvent"],[234,23,174,35],[234,32,174,20,"nativeEvent"],[234,43,174,35],[235,0,175,4],[235,12,175,10,"location"],[235,20,175,18],[235,23,175,21],[235,28,175,26,"isVertical"],[235,38,175,21],[235,41,176,8,"nativeEvent"],[235,52,176,19],[235,53,176,20,"locationY"],[235,62,175,21],[235,65,177,8,"nativeEvent"],[235,76,177,19],[235,77,177,20,"locationX"],[235,86,175,4],[236,0,179,4],[236,15,179,11],[236,20,179,16,"getValueForTouch"],[236,36,179,11],[236,37,179,33,"location"],[236,45,179,11],[236,46,179,4],[237,0,180,3],[240,39,182,19,"location"],[240,47],[240,49,182,29],[241,0,183,4],[241,12,183,10,"length"],[241,18,183,16],[241,21,183,19],[241,26,183,24,"state"],[241,31,183,19],[241,32,183,30,"containerSize"],[241,45,183,19],[241,46,183,44,"width"],[241,51,183,19],[241,54,183,52],[241,59,183,57,"state"],[241,64,183,52],[241,65,183,63,"thumbSize"],[241,74,183,52],[241,75,183,73,"width"],[241,80,183,4],[242,0,184,4],[242,12,184,10,"ratio"],[242,17,184,15],[242,20,184,18,"location"],[242,28,184,26],[242,31,184,29,"length"],[242,37,184,4],[243,0,185,4],[243,12,185,8,"newValue"],[243,20,185,16],[243,23,185,19,"ratio"],[243,28,185,24],[243,32,185,28],[243,37,185,33,"props"],[243,42,185,28],[243,43,185,39,"maximumValue"],[243,55,185,28],[243,58,185,54],[243,63,185,59,"props"],[243,68,185,54],[243,69,185,65,"minimumValue"],[243,81,185,24],[243,82,185,4],[245,0,187,4],[245,12,187,8],[245,17,187,13,"props"],[245,22,187,8],[245,23,187,19,"step"],[245,27,187,4],[245,29,187,25],[246,0,188,6,"newValue"],[246,10,188,6,"newValue"],[246,18,188,14],[246,21,188,17,"Math"],[246,25,188,21],[246,26,188,22,"round"],[246,31,188,17],[246,32,188,28,"newValue"],[246,40,188,36],[246,43,188,39],[246,48,188,44,"props"],[246,53,188,39],[246,54,188,50,"step"],[246,58,188,17],[246,62,188,58],[246,67,188,63,"props"],[246,72,188,58],[246,73,188,69,"step"],[246,77,188,6],[247,0,189,5],[249,0,190,4],[249,15,190,11,"getBoundedValue"],[249,30,190,26],[249,31,191,6,"newValue"],[249,39,191,14],[249,42,191,17],[249,47,191,22,"props"],[249,52,191,17],[249,53,191,28,"minimumValue"],[249,65,190,26],[249,67,192,6],[249,72,192,11,"props"],[249,77,192,6],[249,78,192,17,"maximumValue"],[249,90,190,26],[249,92,193,6],[249,97,193,11,"props"],[249,102,193,6],[249,103,193,17,"minimumValue"],[249,115,190,26],[249,116,190,4],[250,0,195,3],[253,45,197,25],[254,0,197,25],[254,26,198,54],[254,31,198,59,"state"],[254,36,197,25],[255,0,197,25],[255,12,198,12,"thumbSize"],[255,21,197,25],[255,36,198,12,"thumbSize"],[255,45,197,25],[256,0,197,25],[256,12,198,23,"allMeasured"],[256,23,197,25],[256,38,198,23,"allMeasured"],[256,49,197,25],[257,0,197,25],[257,12,198,36,"containerSize"],[257,25,197,25],[257,40,198,36,"containerSize"],[257,53,197,25],[258,0,197,25],[258,12,199,12,"thumbTouchSize"],[258,26,197,25],[258,29,199,31],[258,34,199,36,"props"],[258,39,197,25],[258,40,199,12,"thumbTouchSize"],[258,54,197,25],[259,0,201,4],[259,12,201,10,"size"],[259,16,201,14],[259,19,201,17],[259,21,201,4],[261,0,202,4],[261,12,202,8,"allMeasured"],[261,23,202,19],[261,28,202,24],[261,32,202,4],[261,34,202,30],[262,0,203,6,"size"],[262,10,203,6,"size"],[262,14,203,10],[262,15,203,11,"width"],[262,20,203,6],[262,23,203,19,"Math"],[262,27,203,23],[262,28,203,24,"max"],[262,31,203,19],[262,32,203,28],[262,33,203,19],[262,35,203,31,"thumbTouchSize"],[262,49,203,45],[262,50,203,46,"width"],[262,55,203,31],[262,58,203,54,"thumbSize"],[262,67,203,63],[262,68,203,64,"width"],[262,73,203,19],[262,74,203,6],[263,0,204,6,"size"],[263,10,204,6,"size"],[263,14,204,10],[263,15,204,11,"height"],[263,21,204,6],[263,24,204,20,"Math"],[263,28,204,24],[263,29,204,25,"max"],[263,32,204,20],[263,33,204,29],[263,34,204,20],[263,36,204,32,"thumbTouchSize"],[263,50,204,46],[263,51,204,47,"height"],[263,57,204,32],[263,60,204,56,"containerSize"],[263,73,204,69],[263,74,204,70,"height"],[263,80,204,20],[263,81,204,6],[264,0,205,5],[266,0,207,4],[266,15,207,11,"size"],[266,19,207,4],[267,0,208,3],[270,46,210,26],[271,0,210,26],[271,36,211,30],[271,41,211,35,"getTouchOverflowSize"],[271,61,211,30],[271,63,210,26],[272,0,210,26],[272,12,211,12,"width"],[272,17,210,26],[272,42,211,12,"width"],[272,47,210,26],[273,0,210,26],[273,12,211,19,"height"],[273,18,210,26],[273,43,211,19,"height"],[273,49,210,26],[275,0,213,4],[275,12,213,10,"touchOverflowStyle"],[275,30,213,28],[275,33,213,31],[275,35,213,4],[277,0,214,4],[277,12,214,8,"width"],[277,17,214,13],[277,22,214,18,"undefined"],[277,31,214,8],[277,35,214,31,"height"],[277,41,214,37],[277,46,214,42,"undefined"],[277,55,214,4],[277,57,214,53],[278,0,215,6],[278,14,215,12,"verticalMargin"],[278,28,215,26],[278,31,215,29],[278,32,215,30,"height"],[278,38,215,29],[278,41,215,39],[278,42,215,6],[279,0,216,6,"touchOverflowStyle"],[279,10,216,6,"touchOverflowStyle"],[279,28,216,24],[279,29,216,25,"marginTop"],[279,38,216,6],[279,41,216,37,"verticalMargin"],[279,55,216,6],[280,0,217,6,"touchOverflowStyle"],[280,10,217,6,"touchOverflowStyle"],[280,28,217,24],[280,29,217,25,"marginBottom"],[280,41,217,6],[280,44,217,40,"verticalMargin"],[280,58,217,6],[281,0,219,6],[281,14,219,12,"horizontalMargin"],[281,30,219,28],[281,33,219,31],[281,34,219,32,"width"],[281,39,219,31],[281,42,219,40],[281,43,219,6],[282,0,220,6,"touchOverflowStyle"],[282,10,220,6,"touchOverflowStyle"],[282,28,220,24],[282,29,220,25,"marginLeft"],[282,39,220,6],[282,42,220,38,"horizontalMargin"],[282,58,220,6],[283,0,221,6,"touchOverflowStyle"],[283,10,221,6,"touchOverflowStyle"],[283,28,221,24],[283,29,221,25,"marginRight"],[283,40,221,6],[283,43,221,39,"horizontalMargin"],[283,59,221,6],[284,0,222,5],[286,0,224,4],[286,12,224,8],[286,17,224,13,"props"],[286,22,224,8],[286,23,224,19,"debugTouchArea"],[286,37,224,8],[286,42,224,38],[286,46,224,4],[286,48,224,44],[287,0,225,6,"touchOverflowStyle"],[287,10,225,6,"touchOverflowStyle"],[287,28,225,24],[287,29,225,25,"backgroundColor"],[287,44,225,6],[287,47,225,43],[287,55,225,6],[288,0,226,6,"touchOverflowStyle"],[288,10,226,6,"touchOverflowStyle"],[288,28,226,24],[288,29,226,25,"opacity"],[288,36,226,6],[288,39,226,35],[288,42,226,6],[289,0,227,5],[291,0,229,4],[291,15,229,11,"touchOverflowStyle"],[291,33,229,4],[292,0,230,3],[295,36,232,16,"name"],[295,40],[295,42,232,22,"x"],[295,43],[295,45,232,25],[296,0,232,25],[296,36,233,57,"x"],[296,37,233,58],[296,38,233,59,"nativeEvent"],[296,49,233,57],[296,50,233,71,"layout"],[296,56,232,25],[297,0,232,25],[297,12,233,19,"layoutWidth"],[297,23,232,25],[297,48,233,12,"width"],[297,53,232,25],[298,0,232,25],[298,12,233,40,"layoutHeight"],[298,24,232,25],[298,49,233,32,"height"],[298,55,232,25],[299,0,234,4],[299,12,234,10,"width"],[299,17,234,15],[299,20,234,18],[299,25,234,23,"isVertical"],[299,35,234,18],[299,38,234,36,"layoutHeight"],[299,50,234,18],[299,53,234,51,"layoutWidth"],[299,64,234,4],[300,0,235,4],[300,12,235,10,"height"],[300,18,235,16],[300,21,235,19],[300,26,235,24,"isVertical"],[300,36,235,19],[300,39,235,37,"layoutWidth"],[300,50,235,19],[300,53,235,51,"layoutHeight"],[300,65,235,4],[301,0,236,4],[301,12,236,10,"size"],[301,16,236,14],[301,19,236,17],[302,0,236,19,"width"],[302,10,236,19,"width"],[302,15,236,24],[302,17,236,19,"width"],[302,22,236,17],[303,0,236,26,"height"],[303,10,236,26,"height"],[303,16,236,32],[303,18,236,26,"height"],[304,0,236,17],[304,9,236,4],[305,0,237,4],[305,12,237,10,"storeName"],[305,21,237,19],[305,30,237,26,"name"],[305,34,237,4],[306,0,238,4],[306,12,238,10,"currentSize"],[306,23,238,21],[306,26,238,24],[306,31,238,29,"storeName"],[306,40,238,24],[306,41,238,4],[308,0,239,4],[308,12,240,6,"currentSize"],[308,23,240,17],[308,27,241,6,"width"],[308,32,241,11],[308,37,241,16,"currentSize"],[308,48,241,27],[308,49,241,28,"width"],[308,54,240,6],[308,58,242,6,"height"],[308,64,242,12],[308,69,242,17,"currentSize"],[308,80,242,28],[308,81,242,29,"height"],[308,87,239,4],[308,89,243,6],[309,0,244,6],[310,0,245,5],[312,0,246,4],[312,13,246,9,"storeName"],[312,22,246,4],[312,26,246,22,"size"],[312,30,246,4],[314,0,248,4],[314,12,248,8],[314,17,248,13,"_containerSize"],[314,31,248,8],[314,35,248,31],[314,40,248,36,"_trackSize"],[314,50,248,8],[314,54,248,50],[314,59,248,55,"_thumbSize"],[314,69,248,4],[314,71,248,67],[315,0,249,6],[315,15,249,11,"setState"],[315,23,249,6],[315,24,249,20],[316,0,250,8,"containerSize"],[316,12,250,8,"containerSize"],[316,25,250,21],[316,27,250,23],[316,32,250,28,"_containerSize"],[316,46,249,20],[317,0,251,8,"trackSize"],[317,12,251,8,"trackSize"],[317,21,251,17],[317,23,251,19],[317,28,251,24,"_trackSize"],[317,38,249,20],[318,0,252,8,"thumbSize"],[318,12,252,8,"thumbSize"],[318,21,252,17],[318,23,252,19],[318,28,252,24,"_thumbSize"],[318,38,249,20],[319,0,253,8,"allMeasured"],[319,12,253,8,"allMeasured"],[319,23,253,19],[319,25,253,21],[320,0,249,20],[320,11,249,6],[321,0,255,5],[322,0,256,3],[325,31,270,11,"gestureState"],[325,43],[325,45,270,25],[326,0,271,4],[326,12,271,10,"location"],[326,20,271,18],[326,23,272,6],[326,28,272,11,"_previousLeft"],[326,41,272,6],[326,45,273,7],[326,50,273,12,"isVertical"],[326,60,273,7],[326,63,273,25,"gestureState"],[326,75,273,37],[326,76,273,38,"dy"],[326,78,273,7],[326,81,273,43,"gestureState"],[326,93,273,55],[326,94,273,56,"dx"],[326,96,272,6],[326,97,271,4],[327,0,275,4],[327,15,275,11],[327,20,275,16,"getValueForTouch"],[327,36,275,11],[327,37,275,33,"location"],[327,45,275,11],[327,46,275,4],[328,0,276,3],[331,40,278,20],[332,0,279,4],[332,15,279,11],[332,20,279,16,"state"],[332,25,279,11],[332,26,279,22,"value"],[332,31,279,11],[332,32,279,28,"__getValue"],[332,42,279,11],[332,44,279,4],[333,0,280,3],[336,31,282,11,"value"],[336,36],[336,38,282,18],[337,0,283,4],[337,15,284,6],[337,16,284,7,"value"],[337,21,284,12],[337,24,284,15],[337,29,284,20,"props"],[337,34,284,15],[337,35,284,26,"minimumValue"],[337,47,284,6],[337,52,285,7],[337,57,285,12,"props"],[337,62,285,7],[337,63,285,18,"maximumValue"],[337,75,285,7],[337,78,285,33],[337,83,285,38,"props"],[337,88,285,33],[337,89,285,44,"minimumValue"],[337,101,284,6],[337,102,283,4],[338,0,287,3],[341,35,289,15,"value"],[341,40],[341,42,289,22],[342,0,290,4],[342,12,290,10,"ratio"],[342,17,290,15],[342,20,290,18],[342,25,290,23,"getRatio"],[342,33,290,18],[342,34,290,32,"value"],[342,39,290,18],[342,40,290,4],[343,0,291,4],[343,15,292,6,"ratio"],[343,20,292,11],[343,24,292,15],[343,29,292,20,"state"],[343,34,292,15],[343,35,292,26,"containerSize"],[343,48,292,15],[343,49,292,40,"width"],[343,54,292,15],[343,57,292,48],[343,62,292,53,"state"],[343,67,292,48],[343,68,292,59,"thumbSize"],[343,77,292,48],[343,78,292,69,"width"],[343,83,292,11],[343,84,291,4],[344,0,294,3],[347,42,296,22],[348,0,296,22],[348,27,297,41],[348,32,297,46,"state"],[348,37,296,22],[349,0,296,22],[349,12,297,12,"thumbSize"],[349,21,296,22],[349,37,297,12,"thumbSize"],[349,46,296,22],[350,0,296,22],[350,12,297,23,"containerSize"],[350,25,296,22],[350,41,297,23,"containerSize"],[350,54,296,22],[351,0,296,22],[351,12,298,12,"thumbTouchSize"],[351,26,296,22],[351,29,298,31],[351,34,298,36,"props"],[351,39,296,22],[351,40,298,12,"thumbTouchSize"],[351,54,296,22],[352,0,299,4],[352,12,299,10,"touchOverflowSize"],[352,29,299,27],[352,32,299,30],[352,37,299,35,"getTouchOverflowSize"],[352,57,299,30],[352,59,299,4],[353,0,300,4],[353,12,300,10,"height"],[353,18,300,16],[353,21,301,6,"touchOverflowSize"],[353,38,301,23],[353,39,301,24,"height"],[353,45,301,6],[353,48,301,33],[353,49,301,6],[353,52,302,6],[353,53,302,7,"containerSize"],[353,66,302,20],[353,67,302,21,"height"],[353,73,302,7],[353,76,302,30,"thumbTouchSize"],[353,90,302,44],[353,91,302,45,"height"],[353,97,302,6],[353,101,302,55],[353,102,300,4],[354,0,303,4],[354,12,303,10,"width"],[354,17,303,15],[354,20,304,6,"touchOverflowSize"],[354,37,304,23],[354,38,304,24,"width"],[354,43,304,6],[354,46,304,32],[354,47,304,6],[354,50,305,6],[354,55,305,11,"getThumbLeft"],[354,67,305,6],[354,68,305,24],[354,73,305,29,"getCurrentValue"],[354,88,305,24],[354,90,305,6],[354,91,304,6],[354,94,306,6],[354,95,306,7,"thumbSize"],[354,104,306,16],[354,105,306,17,"width"],[354,110,306,7],[354,113,306,25,"thumbTouchSize"],[354,127,306,39],[354,128,306,40,"width"],[354,133,306,6],[354,137,306,49],[354,138,303,4],[356,0,308,4],[356,12,308,8],[356,17,308,13,"isVertical"],[356,27,308,4],[356,29,308,25],[357,0,309,6],[357,17,309,13],[357,21,309,17,"Rect"],[357,25,309,13],[357,26,310,8,"height"],[357,32,309,13],[357,34,311,8,"width"],[357,39,309,13],[357,41,312,8,"thumbTouchSize"],[357,55,312,22],[357,56,312,23,"width"],[357,61,309,13],[357,63,313,8,"thumbTouchSize"],[357,77,313,22],[357,78,313,23,"height"],[357,84,309,13],[357,85,309,6],[358,0,315,5],[360,0,316,4],[360,15,316,11],[360,19,316,15,"Rect"],[360,23,316,11],[360,24,316,20,"width"],[360,29,316,11],[360,31,316,27,"height"],[360,37,316,11],[360,39,316,35,"thumbTouchSize"],[360,53,316,49],[360,54,316,50,"width"],[360,59,316,11],[360,61,316,57,"thumbTouchSize"],[360,75,316,71],[360,76,316,72,"height"],[360,82,316,11],[360,83,316,4],[361,0,317,3],[364,48,319,28,"thumbLeft"],[364,57],[364,59,319,39],[365,0,320,4],[365,12,320,10,"thumbTouchRect"],[365,26,320,24],[365,29,320,27],[365,34,320,32,"getThumbTouchRect"],[365,51,320,27],[365,53,320,4],[366,0,321,4],[366,12,321,10,"positionStyle"],[366,25,321,23],[366,28,321,26],[367,0,322,6,"left"],[367,10,322,6,"left"],[367,14,322,10],[367,16,322,12,"thumbLeft"],[367,25,321,26],[368,0,323,6,"top"],[368,10,323,6,"top"],[368,13,323,9],[368,15,323,11,"thumbTouchRect"],[368,29,323,25],[368,30,323,26,"y"],[368,31,321,26],[369,0,324,6,"width"],[369,10,324,6,"width"],[369,15,324,11],[369,17,324,13,"thumbTouchRect"],[369,31,324,27],[369,32,324,28,"width"],[369,37,321,26],[370,0,325,6,"height"],[370,10,325,6,"height"],[370,16,325,12],[370,18,325,14,"thumbTouchRect"],[370,32,325,28],[370,33,325,29,"height"],[371,0,321,26],[371,9,321,4],[372,0,327,4],[372,15,327,11],[372,44,327,12],[372,65,327,11],[372,66,327,21],[372,70,327,11],[373,0,327,26],[373,10,327,26],[373,15,327,31],[373,17,327,33,"positionStyle"],[373,30,327,11],[374,0,327,48],[374,10,327,48],[374,23,327,61],[374,25,327,62],[374,31,327,11],[375,0,327,11],[376,0,327,11],[377,0,327,11],[378,0,327,11],[379,0,327,11],[380,0,327,11],[381,0,327,11],[381,10,327,4],[382,0,328,3],[385,44,330,24,"thumbStart"],[385,54],[385,56,330,36],[386,0,330,36],[386,27,331,37],[386,32,331,42,"state"],[386,37,330,36],[387,0,330,36],[387,12,331,12,"thumbSize"],[387,21,330,36],[387,37,331,12,"thumbSize"],[387,46,330,36],[388,0,330,36],[388,12,331,23,"trackSize"],[388,21,330,36],[388,37,331,23,"trackSize"],[388,46,330,36],[389,0,332,4],[389,12,332,10,"minimumTrackStyle"],[389,29,332,27],[389,32,332,30],[390,0,333,6,"position"],[390,10,333,6,"position"],[390,18,333,14],[390,20,333,16],[391,0,332,30],[391,9,332,4],[393,0,335,4],[393,12,335,8],[393,17,335,13,"isVertical"],[393,27,335,4],[393,29,335,25],[394,0,336,6,"minimumTrackStyle"],[394,10,336,6,"minimumTrackStyle"],[394,27,336,23],[394,28,336,24,"height"],[394,34,336,6],[394,37,336,33,"Animated"],[394,59,336,42,"add"],[394,62,336,33],[394,63,336,46,"thumbStart"],[394,73,336,33],[394,75,336,58,"thumbSize"],[394,84,336,67],[394,85,336,68,"height"],[394,91,336,58],[394,94,336,77],[394,95,336,33],[394,96,336,6],[395,0,337,6,"minimumTrackStyle"],[395,10,337,6,"minimumTrackStyle"],[395,27,337,23],[395,28,337,24,"marginLeft"],[395,38,337,6],[395,41,337,37,"trackSize"],[395,50,337,46],[395,51,337,47,"width"],[395,56,337,37],[395,59,337,55,"TRACK_STYLE"],[395,70,337,6],[396,0,338,5],[396,9,335,4],[396,15,338,11],[397,0,339,6,"minimumTrackStyle"],[397,10,339,6,"minimumTrackStyle"],[397,27,339,23],[397,28,339,24,"width"],[397,33,339,6],[397,36,339,32,"Animated"],[397,58,339,41,"add"],[397,61,339,32],[397,62,339,45,"thumbStart"],[397,72,339,32],[397,74,339,57,"thumbSize"],[397,83,339,66],[397,84,339,67,"width"],[397,89,339,57],[397,92,339,75],[397,93,339,32],[397,94,339,6],[398,0,340,6,"minimumTrackStyle"],[398,10,340,6,"minimumTrackStyle"],[398,27,340,23],[398,28,340,24,"marginTop"],[398,37,340,6],[398,40,340,36,"trackSize"],[398,49,340,45],[398,50,340,46,"height"],[398,56,340,36],[398,59,340,55,"TRACK_STYLE"],[398,70,340,6],[399,0,341,5],[401,0,342,4],[401,15,342,11,"minimumTrackStyle"],[401,32,342,4],[402,0,343,3],[405,45,345,25,"thumbStart"],[405,55],[405,57,345,37],[406,0,346,4],[406,15,346,11],[406,50,346,15],[406,55,346,20,"isVertical"],[406,65,346,15],[406,68,346,33],[406,80,346,15],[406,83,346,48],[406,95,346,11],[406,97,346,63,"thumbStart"],[406,107,346,11],[406,109,346,4],[407,0,347,3],[410,31,349,11],[411,0,349,11],[411,26,364,8],[411,31,364,13,"props"],[411,36,349,11],[412,0,349,11],[412,12,351,6,"minimumValue"],[412,24,349,11],[412,39,351,6,"minimumValue"],[412,51,349,11],[413,0,349,11],[413,12,352,6,"maximumValue"],[413,24,349,11],[413,39,352,6,"maximumValue"],[413,51,349,11],[414,0,349,11],[414,12,353,6,"minimumTrackTintColor"],[414,33,349,11],[414,48,353,6,"minimumTrackTintColor"],[414,69,349,11],[415,0,349,11],[415,12,354,6,"maximumTrackTintColor"],[415,33,349,11],[415,48,354,6,"maximumTrackTintColor"],[415,69,349,11],[416,0,349,11],[416,12,355,6,"thumbTintColor"],[416,26,349,11],[416,41,355,6,"thumbTintColor"],[416,55,349,11],[417,0,349,11],[417,12,356,6,"containerStyle"],[417,26,349,11],[417,41,356,6,"containerStyle"],[417,55,349,11],[418,0,349,11],[418,12,357,6,"style"],[418,17,349,11],[418,32,357,6,"style"],[418,37,349,11],[419,0,349,11],[419,12,358,6,"trackStyle"],[419,22,349,11],[419,37,358,6,"trackStyle"],[419,47,349,11],[420,0,349,11],[420,12,359,6,"thumbStyle"],[420,22,349,11],[420,37,359,6,"thumbStyle"],[420,47,349,11],[421,0,349,11],[421,12,360,6,"thumbProps"],[421,22,349,11],[421,37,360,6,"thumbProps"],[421,47,349,11],[422,0,349,11],[422,12,361,6,"debugTouchArea"],[422,26,349,11],[422,41,361,6,"debugTouchArea"],[422,55,349,11],[423,0,349,11],[423,12,362,6,"orientation"],[423,23,349,11],[423,38,362,6,"orientation"],[423,49,349,11],[424,0,349,11],[424,12,363,9,"other"],[424,17,349,11],[425,0,349,11],[425,27,366,61],[425,32,366,66,"state"],[425,37,349,11],[426,0,349,11],[426,12,366,12,"value"],[426,17,349,11],[426,33,366,12,"value"],[426,38,349,11],[427,0,349,11],[427,12,366,19,"containerSize"],[427,25,349,11],[427,41,366,19,"containerSize"],[427,54,349,11],[428,0,349,11],[428,12,366,34,"thumbSize"],[428,21,349,11],[428,37,366,34,"thumbSize"],[428,46,349,11],[429,0,349,11],[429,12,366,45,"allMeasured"],[429,23,349,11],[429,39,366,45,"allMeasured"],[429,50,349,11],[430,0,368,4],[430,12,368,10,"mainStyles"],[430,22,368,20],[430,25,368,23,"containerStyle"],[430,39,368,37],[430,43,368,41,"styles"],[430,49,368,4],[432,0,369,4],[432,12,369,10,"appliedTrackStyle"],[432,29,369,27],[432,32,369,30,"StyleSheet"],[432,56,369,41,"flatten"],[432,63,369,30],[432,64,369,49],[432,65,369,50,"styles"],[432,71,369,56],[432,72,369,57,"track"],[432,77,369,49],[432,79,369,64,"trackStyle"],[432,89,369,49],[432,90,369,30],[432,91,369,4],[434,0,370,4],[434,12,370,10,"thumbStart"],[434,22,370,20],[434,25,370,23,"value"],[434,30,370,28],[434,31,370,29,"interpolate"],[434,42,370,23],[434,43,370,41],[435,0,371,6,"inputRange"],[435,10,371,6,"inputRange"],[435,20,371,16],[435,22,371,18],[435,23,371,19,"minimumValue"],[435,35,371,18],[435,37,371,33,"maximumValue"],[435,49,371,18],[435,50,370,41],[436,0,372,6,"outputRange"],[436,10,372,6,"outputRange"],[436,21,372,17],[436,23,372,19],[436,24,372,20],[436,25,372,19],[436,27,372,23,"containerSize"],[436,40,372,36],[436,41,372,37,"width"],[436,46,372,23],[436,49,372,45,"thumbSize"],[436,58,372,54],[436,59,372,55,"width"],[436,64,372,19],[437,0,370,41],[437,9,370,23],[437,10,370,4],[438,0,376,4],[438,12,376,10,"valueVisibleStyle"],[438,29,376,27],[438,32,376,30],[438,34,376,4],[440,0,377,4],[440,12,377,8],[440,13,377,9,"allMeasured"],[440,24,377,4],[440,26,377,22],[441,0,378,6,"valueVisibleStyle"],[441,10,378,6,"valueVisibleStyle"],[441,27,378,23],[441,28,378,24,"height"],[441,34,378,6],[441,37,378,33],[441,38,378,6],[442,0,379,6,"valueVisibleStyle"],[442,10,379,6,"valueVisibleStyle"],[442,27,379,23],[442,28,379,24,"width"],[442,33,379,6],[442,36,379,32],[442,37,379,6],[443,0,380,5],[445,0,382,4],[445,12,382,10,"minimumTrackStyle"],[445,29,382,27],[445,64,383,9],[445,69,383,14,"getMinimumTrackStyles"],[445,90,383,9],[445,91,383,36,"thumbStart"],[445,101,383,9],[445,102,382,27],[446,0,384,6,"backgroundColor"],[446,10,384,6,"backgroundColor"],[446,25,384,21],[446,27,384,23,"minimumTrackTintColor"],[447,0,382,27],[447,11,385,9,"valueVisibleStyle"],[447,28,382,27],[447,29,382,4],[449,0,388,4],[449,12,388,10,"touchOverflowStyle"],[449,30,388,28],[449,33,388,31],[449,38,388,36,"getTouchOverflowStyle"],[449,59,388,31],[449,61,388,4],[450,0,389,4],[450,15,390,6],[450,44,390,7],[450,61,390,6],[450,90,391,12,"other"],[450,95,390,6],[451,0,392,8],[451,10,392,8],[451,15,392,13],[451,17,392,15,"StyleSheet"],[451,41,392,26,"flatten"],[451,48,392,15],[451,49,392,34],[451,50,393,10],[451,55,393,15,"isVertical"],[451,65,393,10],[451,68,394,14,"mainStyles"],[451,78,394,24],[451,79,394,25,"containerVertical"],[451,96,393,10],[451,99,395,14,"mainStyles"],[451,109,395,24],[451,110,395,25,"containerHorizontal"],[451,129,392,34],[451,131,396,10,"style"],[451,136,392,34],[451,137,392,15],[451,138,390,6],[452,0,398,8],[452,10,398,8],[452,18,398,16],[452,20,398,18],[452,25,398,23,"measureContainer"],[452,41,390,6],[453,0,390,6],[454,0,390,6],[455,0,390,6],[456,0,390,6],[457,0,390,6],[458,0,390,6],[459,0,390,6],[459,12,400,8],[459,41,400,9],[459,58,400,8],[460,0,401,10],[460,10,401,10],[460,15,401,15],[460,17,401,17,"StyleSheet"],[460,41,401,28,"flatten"],[460,48,401,17],[460,49,401,36],[460,50,402,12,"mainStyles"],[460,60,402,22],[460,61,402,23,"track"],[460,66,401,36],[460,68,403,12],[460,73,403,17,"isVertical"],[460,83,403,12],[460,86,404,16,"mainStyles"],[460,96,404,26],[460,97,404,27,"trackVertical"],[460,110,403,12],[460,113,405,16,"mainStyles"],[460,123,405,26],[460,124,405,27,"trackHorizontal"],[460,139,401,36],[460,141,406,12,"appliedTrackStyle"],[460,158,401,36],[460,160,407,12],[461,0,407,14,"backgroundColor"],[461,12,407,14,"backgroundColor"],[461,27,407,29],[461,29,407,31,"maximumTrackTintColor"],[462,0,407,12],[462,11,401,36],[462,12,401,17],[462,13,400,8],[463,0,409,10],[463,10,409,10],[463,18,409,18],[463,20,409,20],[463,25,409,25,"measureTrack"],[463,37,400,8],[464,0,400,8],[465,0,400,8],[466,0,400,8],[467,0,400,8],[468,0,400,8],[469,0,400,8],[470,0,400,8],[470,10,390,6],[470,12,411,8],[470,41,411,9],[470,62,411,8],[470,63,411,18],[470,67,411,8],[471,0,412,10],[471,10,412,10],[471,15,412,15],[471,17,412,17,"StyleSheet"],[471,41,412,28,"flatten"],[471,48,412,17],[471,49,412,36],[471,50,413,12,"mainStyles"],[471,60,413,22],[471,61,413,23,"track"],[471,66,412,36],[471,68,414,12],[471,73,414,17,"isVertical"],[471,83,414,12],[471,86,415,16,"mainStyles"],[471,96,415,26],[471,97,415,27,"trackVertical"],[471,110,414,12],[471,113,416,16,"mainStyles"],[471,123,416,26],[471,124,416,27,"trackHorizontal"],[471,139,412,36],[471,141,417,12,"appliedTrackStyle"],[471,158,412,36],[471,160,418,12,"minimumTrackStyle"],[471,177,412,36],[471,178,412,17],[471,179,411,8],[472,0,411,8],[473,0,411,8],[474,0,411,8],[475,0,411,8],[476,0,411,8],[477,0,411,8],[478,0,411,8],[478,10,390,6],[478,12,421,8],[478,41,421,9],[478,52,421,8],[479,0,422,10],[479,10,422,10],[479,19,422,19],[479,21,422,21,"allMeasured"],[479,32,421,8],[480,0,423,10],[480,10,423,10],[480,18,423,18],[480,20,423,20],[480,25,423,25,"measureThumb"],[480,37,423,20],[480,38,423,38,"bind"],[480,42,423,20],[480,43,423,43],[480,47,423,20],[480,48,421,8],[481,0,424,10],[481,10,424,10],[481,15,424,15],[481,17,424,17,"thumbStyle"],[481,27,421,8],[482,0,425,10],[482,10,425,10],[482,15,425,15],[482,17,425,17,"thumbTintColor"],[482,31,421,8],[483,0,426,10],[483,10,426,10],[483,15,426,15],[483,17,426,17,"thumbStart"],[483,27,421,8],[484,0,427,10],[484,10,427,10],[484,18,427,18],[484,20,427,20],[484,25,427,25,"isVertical"],[485,0,421,8],[485,11,428,14,"thumbProps"],[485,21,421,8],[486,0,421,8],[487,0,421,8],[488,0,421,8],[489,0,421,8],[490,0,421,8],[491,0,421,8],[492,0,421,8],[492,11,390,6],[492,13,430,8],[492,42,430,9],[492,59,430,8],[493,0,431,10],[493,10,431,10],[493,15,431,15],[493,17,431,17,"StyleSheet"],[493,41,431,28,"flatten"],[493,48,431,17],[493,49,431,36],[493,50,431,37,"styles"],[493,56,431,43],[493,57,431,44,"touchArea"],[493,66,431,36],[493,68,431,55,"touchOverflowStyle"],[493,86,431,36],[493,87,431,17],[494,0,430,8],[494,11,432,14],[494,16,432,19,"panResponder"],[494,28,432,14],[494,29,432,32,"panHandlers"],[494,40,430,8],[495,0,430,8],[496,0,430,8],[497,0,430,8],[498,0,430,8],[499,0,430,8],[500,0,430,8],[501,0,430,8],[501,12,434,11,"debugTouchArea"],[501,26,434,25],[501,31,434,30],[501,35,434,11],[501,39,435,12],[501,44,435,17,"renderDebugThumbTouchRect"],[501,69,435,12],[501,70,435,43,"thumbStart"],[501,80,435,12],[501,81,430,8],[501,82,390,6],[501,83,389,4],[502,0,439,3],[505,4,51,21,"React"],[505,19,51,27,"Component"],[505,28],[509,0,442,0],[509,6,442,6,"SliderThumb"],[509,17,442,17],[509,20,442,20],[509,29,442,6,"SliderThumb"],[509,40,442,20],[509,48,451,6],[510,0,451,6],[510,8,443,2,"Component"],[510,17,451,6],[510,26,443,2,"Component"],[510,35,451,6],[511,0,451,6],[511,8,444,2,"isVisible"],[511,17,451,6],[511,26,444,2,"isVisible"],[511,35,451,6],[512,0,451,6],[512,8,445,2,"onLayout"],[512,16,451,6],[512,25,445,2,"onLayout"],[512,33,451,6],[513,0,451,6],[513,8,446,2,"style"],[513,13,451,6],[513,22,446,2,"style"],[513,27,451,6],[514,0,451,6],[514,8,447,2,"start"],[514,13,451,6],[514,22,447,2,"start"],[514,27,451,6],[515,0,451,6],[515,8,448,2,"color"],[515,13,451,6],[515,22,448,2,"color"],[515,27,451,6],[516,0,451,6],[516,8,449,2,"vertical"],[516,16,451,6],[516,25,449,2,"vertical"],[516,33,451,6],[517,0,451,6],[517,8,450,5,"props"],[517,13,451,6],[518,0,452,2],[518,8,452,8,"ThumbComponent"],[518,22,452,22],[518,25,452,25,"Component"],[518,34,452,34],[518,38,452,38,"Animated"],[518,60,452,47,"View"],[518,64,452,2],[519,0,453,2],[519,8,453,8,"axis"],[519,12,453,12],[519,15,453,15,"vertical"],[519,23,453,23],[519,26,453,26],[519,38,453,23],[519,41,453,41],[519,53,453,2],[520,0,454,2],[520,8,454,8,"thumbPosition"],[520,21,454,21],[520,24,454,24],[520,59,454,28,"axis"],[520,63,454,24],[520,65,454,35,"start"],[520,70,454,24],[520,72,454,2],[521,0,455,2],[521,8,455,8,"styleTransform"],[521,22,455,22],[521,25,455,26,"style"],[521,30,455,31],[521,34,455,35,"style"],[521,39,455,40],[521,40,455,41,"transform"],[521,49,455,25],[521,53,455,55],[521,55,455,2],[522,0,456,2],[522,8,456,8,"visibleStyle"],[522,20,456,20],[522,23,456,23,"isVisible"],[522,32,456,32],[522,35,456,35],[522,37,456,32],[522,40,456,40],[523,0,456,42,"height"],[523,6,456,42,"height"],[523,12,456,48],[523,14,456,50],[523,15,456,40],[524,0,456,53,"width"],[524,6,456,53,"width"],[524,11,456,58],[524,13,456,60],[525,0,456,40],[525,5,456,2],[526,0,458,2],[526,11,459,4],[526,40,459,5],[526,54,459,4],[527,0,460,6],[527,6,460,6],[527,12,460,12],[527,14,460,13],[527,27,459,4],[528,0,461,6],[528,6,461,6],[528,14,461,14],[528,16,461,16,"onLayout"],[528,24,459,4],[529,0,462,6],[529,6,462,6],[529,11,462,11],[529,13,462,13,"StyleSheet"],[529,37,462,24,"flatten"],[529,44,462,13],[529,45,462,32],[530,0,464,10,"backgroundColor"],[530,8,464,10,"backgroundColor"],[530,23,464,25],[530,25,464,27,"color"],[530,30,462,32],[531,0,465,10,"transform"],[531,8,465,10,"transform"],[531,17,465,19],[531,29,465,25,"thumbPosition"],[531,42,465,19],[531,77,465,43,"styleTransform"],[531,91,465,19],[532,0,462,32],[532,9,466,13,"visibleStyle"],[532,21,462,32],[532,24,468,8,"styles"],[532,30,468,14],[532,31,468,15,"thumb"],[532,36,462,32],[532,38,469,8,"style"],[532,43,462,32],[532,44,462,13],[533,0,459,4],[533,7,471,10,"props"],[533,12,459,4],[534,0,459,4],[535,0,459,4],[536,0,459,4],[537,0,459,4],[538,0,459,4],[539,0,459,4],[540,0,459,4],[540,7,458,2],[541,0,474,1],[541,3,442,0],[543,0,476,0,"Slider"],[543,2,476,0,"Slider"],[543,8,476,6],[543,9,476,7,"propTypes"],[543,18,476,0],[543,21,476,19],[544,0,485,2,"value"],[544,4,485,2,"value"],[544,9,485,7],[544,11,485,9,"PropTypes"],[544,30,485,19,"number"],[544,36,476,19],[545,0,491,2,"disabled"],[545,4,491,2,"disabled"],[545,12,491,10],[545,14,491,12,"PropTypes"],[545,33,491,22,"bool"],[545,37,476,19],[546,0,496,2,"minimumValue"],[546,4,496,2,"minimumValue"],[546,16,496,14],[546,18,496,16,"PropTypes"],[546,37,496,26,"number"],[546,43,476,19],[547,0,501,2,"maximumValue"],[547,4,501,2,"maximumValue"],[547,16,501,14],[547,18,501,16,"PropTypes"],[547,37,501,26,"number"],[547,43,476,19],[548,0,507,2,"step"],[548,4,507,2,"step"],[548,8,507,6],[548,10,507,8,"PropTypes"],[548,29,507,18,"number"],[548,35,476,19],[549,0,513,2,"minimumTrackTintColor"],[549,4,513,2,"minimumTrackTintColor"],[549,25,513,23],[549,27,513,25,"PropTypes"],[549,46,513,35,"string"],[549,52,476,19],[550,0,519,2,"maximumTrackTintColor"],[550,4,519,2,"maximumTrackTintColor"],[550,25,519,23],[550,27,519,25,"PropTypes"],[550,46,519,35,"string"],[550,52,476,19],[551,0,524,2,"allowTouchTrack"],[551,4,524,2,"allowTouchTrack"],[551,19,524,17],[551,21,524,19,"PropTypes"],[551,40,524,29,"bool"],[551,44,476,19],[552,0,529,2,"thumbTintColor"],[552,4,529,2,"thumbTintColor"],[552,18,529,16],[552,20,529,18,"PropTypes"],[552,39,529,28,"string"],[552,45,476,19],[553,0,538,2,"thumbTouchSize"],[553,4,538,2,"thumbTouchSize"],[553,18,538,16],[553,20,538,18,"PropTypes"],[553,39,538,28,"shape"],[553,44,538,18],[553,45,538,34],[554,0,539,4,"width"],[554,6,539,4,"width"],[554,11,539,9],[554,13,539,11,"PropTypes"],[554,32,539,21,"number"],[554,38,538,34],[555,0,540,4,"height"],[555,6,540,4,"height"],[555,12,540,10],[555,14,540,12,"PropTypes"],[555,33,540,22,"number"],[556,0,538,34],[556,5,538,18],[556,6,476,19],[557,0,546,2,"onValueChange"],[557,4,546,2,"onValueChange"],[557,17,546,15],[557,19,546,17,"PropTypes"],[557,38,546,27,"func"],[557,42,476,19],[558,0,552,2,"onSlidingStart"],[558,4,552,2,"onSlidingStart"],[558,18,552,16],[558,20,552,18,"PropTypes"],[558,39,552,28,"func"],[558,43,476,19],[559,0,558,2,"onSlidingComplete"],[559,4,558,2,"onSlidingComplete"],[559,21,558,19],[559,23,558,21,"PropTypes"],[559,42,558,31,"func"],[559,46,476,19],[560,0,563,2,"style"],[560,4,563,2,"style"],[560,9,563,7],[560,11,563,9,"PropTypes"],[560,30,563,19,"oneOfType"],[560,39,563,9],[560,40,563,29],[560,41,563,30,"PropTypes"],[560,60,563,40,"object"],[560,66,563,29],[560,68,563,48,"PropTypes"],[560,87,563,58,"array"],[560,92,563,29],[560,93,563,9],[560,94,476,19],[561,0,568,2,"trackStyle"],[561,4,568,2,"trackStyle"],[561,14,568,12],[561,16,568,14,"PropTypes"],[561,35,568,24,"oneOfType"],[561,44,568,14],[561,45,568,34],[561,46,568,35,"PropTypes"],[561,65,568,45,"object"],[561,71,568,34],[561,73,568,53,"PropTypes"],[561,92,568,63,"array"],[561,97,568,34],[561,98,568,14],[561,99,476,19],[562,0,573,2,"thumbStyle"],[562,4,573,2,"thumbStyle"],[562,14,573,12],[562,16,573,14,"PropTypes"],[562,35,573,24,"oneOfType"],[562,44,573,14],[562,45,573,34],[562,46,573,35,"PropTypes"],[562,65,573,45,"object"],[562,71,573,34],[562,73,573,53,"PropTypes"],[562,92,573,63,"array"],[562,97,573,34],[562,98,573,14],[562,99,476,19],[563,0,578,2,"thumbProps"],[563,4,578,2,"thumbProps"],[563,14,578,12],[563,16,578,14,"PropTypes"],[563,35,578,24,"object"],[563,41,476,19],[564,0,583,2,"debugTouchArea"],[564,4,583,2,"debugTouchArea"],[564,18,583,16],[564,20,583,18,"PropTypes"],[564,39,583,28,"bool"],[564,43,476,19],[565,0,588,2,"animateTransitions"],[565,4,588,2,"animateTransitions"],[565,22,588,20],[565,24,588,22,"PropTypes"],[565,43,588,32,"bool"],[565,47,476,19],[566,0,593,2,"animationType"],[566,4,593,2,"animationType"],[566,17,593,15],[566,19,593,17,"PropTypes"],[566,38,593,27,"oneOf"],[566,43,593,17],[566,44,593,33],[566,45,593,34],[566,53,593,33],[566,55,593,44],[566,63,593,33],[566,64,593,17],[566,65,476,19],[567,0,598,2,"orientation"],[567,4,598,2,"orientation"],[567,15,598,13],[567,17,598,15,"PropTypes"],[567,36,598,25,"oneOf"],[567,41,598,15],[567,42,598,31],[567,43,598,32],[567,55,598,31],[567,57,598,46],[567,67,598,31],[567,68,598,15],[567,69,476,19],[568,0,603,2,"animationConfig"],[568,4,603,2,"animationConfig"],[568,19,603,17],[568,21,603,19,"PropTypes"],[568,40,603,29,"object"],[568,46,476,19],[569,0,604,2,"containerStyle"],[569,4,604,2,"containerStyle"],[569,18,604,16],[569,20,604,18,"PropTypes"],[569,39,604,28,"oneOfType"],[569,48,604,18],[569,49,604,38],[569,50,604,39,"PropTypes"],[569,69,604,49,"object"],[569,75,604,38],[569,77,604,57,"PropTypes"],[569,96,604,67,"array"],[569,101,604,38],[569,102,604,18],[570,0,476,19],[570,3,476,0],[571,0,607,0,"Slider"],[571,2,607,0,"Slider"],[571,8,607,6],[571,9,607,7,"defaultProps"],[571,21,607,0],[571,24,607,22],[572,0,608,2,"value"],[572,4,608,2,"value"],[572,9,608,7],[572,11,608,9],[572,12,607,22],[573,0,609,2,"minimumValue"],[573,4,609,2,"minimumValue"],[573,16,609,14],[573,18,609,16],[573,19,607,22],[574,0,610,2,"maximumValue"],[574,4,610,2,"maximumValue"],[574,16,610,14],[574,18,610,16],[574,19,607,22],[575,0,611,2,"step"],[575,4,611,2,"step"],[575,8,611,6],[575,10,611,8],[575,11,607,22],[576,0,612,2,"minimumTrackTintColor"],[576,4,612,2,"minimumTrackTintColor"],[576,25,612,23],[576,27,612,25],[576,36,607,22],[577,0,613,2,"maximumTrackTintColor"],[577,4,613,2,"maximumTrackTintColor"],[577,25,613,23],[577,27,613,25],[577,36,607,22],[578,0,614,2,"allowTouchTrack"],[578,4,614,2,"allowTouchTrack"],[578,19,614,17],[578,21,614,19],[578,26,607,22],[579,0,615,2,"thumbTintColor"],[579,4,615,2,"thumbTintColor"],[579,18,615,16],[579,20,615,18],[579,25,607,22],[580,0,616,2,"thumbTouchSize"],[580,4,616,2,"thumbTouchSize"],[580,18,616,16],[580,20,616,18],[581,0,616,20,"width"],[581,6,616,20,"width"],[581,11,616,25],[581,13,616,27],[581,15,616,18],[582,0,616,31,"height"],[582,6,616,31,"height"],[582,12,616,37],[582,14,616,39],[583,0,616,18],[583,5,607,22],[584,0,617,2,"debugTouchArea"],[584,4,617,2,"debugTouchArea"],[584,18,617,16],[584,20,617,18],[584,25,607,22],[585,0,618,2,"animationType"],[585,4,618,2,"animationType"],[585,17,618,15],[585,19,618,17],[585,27,607,22],[586,0,619,2,"orientation"],[586,4,619,2,"orientation"],[586,15,619,13],[586,17,619,15],[587,0,607,22],[587,3,607,0],[589,0,622,0],[589,6,622,6,"styles"],[589,12,622,12],[589,15,622,15,"StyleSheet"],[589,39,622,26,"create"],[589,45,622,15],[589,46,622,33],[590,0,623,2,"containerHorizontal"],[590,4,623,2,"containerHorizontal"],[590,23,623,21],[590,25,623,23],[591,0,624,4,"height"],[591,6,624,4,"height"],[591,12,624,10],[591,14,624,12],[591,16,623,23],[592,0,625,4,"justifyContent"],[592,6,625,4,"justifyContent"],[592,20,625,18],[592,22,625,20],[593,0,623,23],[593,5,622,33],[594,0,627,2,"containerVertical"],[594,4,627,2,"containerVertical"],[594,21,627,19],[594,23,627,21],[595,0,628,4,"width"],[595,6,628,4,"width"],[595,11,628,9],[595,13,628,11],[595,15,627,21],[596,0,629,4,"flexDirection"],[596,6,629,4,"flexDirection"],[596,19,629,17],[596,21,629,19],[596,29,627,21],[597,0,630,4,"alignItems"],[597,6,630,4,"alignItems"],[597,16,630,14],[597,18,630,16],[598,0,627,21],[598,5,622,33],[599,0,632,2,"track"],[599,4,632,2,"track"],[599,9,632,7],[599,11,632,9],[600,0,633,4,"borderRadius"],[600,6,633,4,"borderRadius"],[600,18,633,16],[600,20,633,18,"TRACK_SIZE"],[600,30,633,28],[600,33,633,31],[601,0,632,9],[601,5,622,33],[602,0,635,2,"trackHorizontal"],[602,4,635,2,"trackHorizontal"],[602,19,635,17],[602,21,635,19],[603,0,636,4,"height"],[603,6,636,4,"height"],[603,12,636,10],[603,14,636,12,"TRACK_SIZE"],[604,0,635,19],[604,5,622,33],[605,0,638,2,"trackVertical"],[605,4,638,2,"trackVertical"],[605,17,638,15],[605,19,638,17],[606,0,639,4,"flex"],[606,6,639,4,"flex"],[606,10,639,8],[606,12,639,10],[606,13,638,17],[607,0,640,4,"width"],[607,6,640,4,"width"],[607,11,640,9],[607,13,640,11,"TRACK_SIZE"],[608,0,638,17],[608,5,622,33],[609,0,642,2,"thumb"],[609,4,642,2,"thumb"],[609,9,642,7],[609,11,642,9],[610,0,643,4,"position"],[610,6,643,4,"position"],[610,14,643,12],[610,16,643,14],[610,26,642,9],[611,0,644,4,"width"],[611,6,644,4,"width"],[611,11,644,9],[611,13,644,11,"THUMB_SIZE"],[611,23,642,9],[612,0,645,4,"height"],[612,6,645,4,"height"],[612,12,645,10],[612,14,645,12,"THUMB_SIZE"],[612,24,642,9],[613,0,646,4,"borderRadius"],[613,6,646,4,"borderRadius"],[613,18,646,16],[613,20,646,18,"THUMB_SIZE"],[613,30,646,28],[613,33,646,31],[614,0,642,9],[614,5,622,33],[615,0,648,2,"touchArea"],[615,4,648,2,"touchArea"],[615,13,648,11],[615,15,648,13],[616,0,649,4,"position"],[616,6,649,4,"position"],[616,14,649,12],[616,16,649,14],[616,26,648,13],[617,0,650,4,"backgroundColor"],[617,6,650,4,"backgroundColor"],[617,21,650,19],[617,23,650,21],[617,36,648,13],[618,0,651,4,"top"],[618,6,651,4,"top"],[618,9,651,7],[618,11,651,9],[618,12,648,13],[619,0,652,4,"left"],[619,6,652,4,"left"],[619,10,652,8],[619,12,652,10],[619,13,648,13],[620,0,653,4,"right"],[620,6,653,4,"right"],[620,11,653,9],[620,13,653,11],[620,14,648,13],[621,0,654,4,"bottom"],[621,6,654,4,"bottom"],[621,12,654,10],[621,14,654,12],[622,0,648,13],[622,5,622,33],[623,0,656,2,"debugThumbTouchArea"],[623,4,656,2,"debugThumbTouchArea"],[623,23,656,21],[623,25,656,23],[624,0,657,4,"position"],[624,6,657,4,"position"],[624,14,657,12],[624,16,657,14],[624,26,656,23],[625,0,658,4,"backgroundColor"],[625,6,658,4,"backgroundColor"],[625,21,658,19],[625,23,658,21],[625,30,656,23],[626,0,659,4,"opacity"],[626,6,659,4,"opacity"],[626,13,659,11],[626,15,659,13],[627,0,656,23],[628,0,622,33],[628,3,622,15],[628,4,622,0],[630,17,664,15],[630,40,664,25,"Slider"],[630,46,664,15],[630,48,664,33],[630,56,664,15],[630,57]],"functionMap":{"names":["<global>","getBoundedValue","Rect","Rect#constructor","Rect#containsPoint","Slider","constructor","componentDidUpdate","setCurrentValue","setCurrentValueAnimated","handleMoveShouldSetPanResponder","handlePanResponderGrant","handlePanResponderMove","handlePanResponderRequestEnd","handlePanResponderEnd","thumbHitTest","handleStartShouldSetPanResponder","fireChangeEvent","getOnTouchValue","getValueForTouch","getTouchOverflowSize","getTouchOverflowStyle","handleMeasure","measureContainer","measureTrack","measureThumb","getValue","getCurrentValue","getRatio","getThumbLeft","getThumbTouchRect","renderDebugThumbTouchRect","getMinimumTrackStyles","getThumbPositionStyles","render","SliderThumb"],"mappings":"AAA;wBC6B;uDDC;AEE;ECC;GDK;EEE;GFO;CFC;AKE;ECC;GD4B;EEE;GFc;EGE;GHE;EIE;GJY;EKE;GLG;EME;GNG;EOE;GPO;EQE;GRG;ESE;GTO;EUE;GVM;EWE;GXQ;EYE;GZI;EaG;GbM;EcE;Gda;EeE;GfW;EgBE;GhBoB;EiBE;GjBwB;qBkBE;GlBE;iBmBE;GnBE;iBoBE;GpBE;EqBE;GrBM;EsBE;GtBE;EuBE;GvBK;EwBE;GxBK;EyBE;GzBqB;E0BE;G1BS;E2BE;G3Ba;E4BE;G5BE;E6BE;G7B0F;CLC;oBmCE;CnCgC"}},"type":"js/module"}]}