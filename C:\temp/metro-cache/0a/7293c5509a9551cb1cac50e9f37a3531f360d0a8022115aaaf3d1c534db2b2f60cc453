{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _$$_REQUIRE(_dependencyMap[2], \"react\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var findIndex = function findIndex(_ref, map) {\n    var locationX = _ref.locationX,\n        locationY = _ref.locationY;\n\n    for (var _i = 0, _Object$entries = Object.entries(map); _i < _Object$entries.length; _i++) {\n      var _ref2 = _Object$entries[_i];\n\n      var _ref3 = (0, _slicedToArray2.default)(_ref2, 2);\n\n      var index = _ref3[0];\n      var _ref3$ = _ref3[1];\n      var x = _ref3$.x;\n      var y = _ref3$.y;\n      var xEnd = _ref3$.xEnd;\n      var yEnd = _ref3$.yEnd;\n\n      if (x < locationX && locationX < xEnd && y < locationY && locationY < yEnd) {\n        return parseInt(index, 10);\n      }\n    }\n\n    return -1;\n  };\n\n  var useClearByFocusCell = function useClearByFocusCell(options) {\n    var valueRef = (0, _react.useRef)(options);\n    var cellsLayouts = (0, _react.useRef)({});\n    valueRef.current = options;\n\n    var clearCodeByCoords = function clearCodeByCoords(coords) {\n      var index = findIndex(coords, cellsLayouts.current);\n\n      if (index !== -1) {\n        var _valueRef$current = valueRef.current,\n            value = _valueRef$current.value,\n            setValue = _valueRef$current.setValue;\n        var text = (value || '').slice(0, index);\n        setValue(text);\n      }\n    };\n\n    var getCellOnLayoutHandler = function getCellOnLayoutHandler(index) {\n      return function (event) {\n        var _event$nativeEvent$la = event.nativeEvent.layout,\n            width = _event$nativeEvent$la.width,\n            height = _event$nativeEvent$la.height,\n            x = _event$nativeEvent$la.x,\n            y = _event$nativeEvent$la.y;\n        cellsLayouts.current[\"\" + index] = {\n          x: x,\n          xEnd: x + width,\n          y: y,\n          yEnd: y + height\n        };\n      };\n    };\n\n    var onPress = function onPress(event) {\n      return clearCodeByCoords(event.nativeEvent);\n    };\n\n    var onClick = function onClick(e) {\n      var offset = e.target.getClientRects()[0];\n      var locationX = e.clientX - offset.left;\n      var locationY = e.clientY - offset.top;\n      clearCodeByCoords({\n        locationX: locationX,\n        locationY: locationY\n      });\n    };\n\n    return [(0, _react.useMemo)(function () {\n      return _reactNative.Platform.OS === 'web' ? {\n        onClick: onClick\n      } : {\n        onPress: onPress\n      };\n    }, []), getCellOnLayoutHandler];\n  };\n\n  var _default = useClearByFocusCell;\n  exports.default = _default;\n});","lineCount":97,"map":[[11,0,1,0],[13,0,2,0],[15,0,3,0],[15,6,3,6,"findIndex"],[15,15,3,15],[15,18,3,18],[15,27,3,6,"findIndex"],[15,36,3,18],[15,43,3,43,"map"],[15,46,3,18],[15,48,3,51],[16,0,3,51],[16,8,3,20,"locationX"],[16,17,3,51],[16,25,3,20,"locationX"],[16,34,3,51],[17,0,3,51],[17,8,3,31,"locationY"],[17,17,3,51],[17,25,3,31,"locationY"],[17,34,3,51],[19,0,4,2],[19,39,4,44,"Object"],[19,45,4,50],[19,46,4,51,"entries"],[19,53,4,44],[19,54,4,59,"map"],[19,57,4,44],[19,58,4,2],[19,95,4,65],[20,0,4,65],[22,0,4,65],[24,0,4,65],[24,10,4,14,"index"],[24,15,4,65],[25,0,4,65],[26,0,4,65],[26,10,4,22,"x"],[26,11,4,65],[26,21,4,22,"x"],[26,22,4,65],[27,0,4,65],[27,10,4,25,"y"],[27,11,4,65],[27,21,4,25,"y"],[27,22,4,65],[28,0,4,65],[28,10,4,28,"xEnd"],[28,14,4,65],[28,24,4,28,"xEnd"],[28,28,4,65],[29,0,4,65],[29,10,4,34,"yEnd"],[29,14,4,65],[29,24,4,34,"yEnd"],[29,28,4,65],[31,0,5,4],[31,10,6,6,"x"],[31,11,6,7],[31,14,6,10,"locationX"],[31,23,6,6],[31,27,7,6,"locationX"],[31,36,7,15],[31,39,7,18,"xEnd"],[31,43,6,6],[31,47,8,6,"y"],[31,48,8,7],[31,51,8,10,"locationY"],[31,60,6,6],[31,64,9,6,"locationY"],[31,73,9,15],[31,76,9,18,"yEnd"],[31,80,5,4],[31,82,10,6],[32,0,11,6],[32,15,11,13,"parseInt"],[32,23,11,21],[32,24,11,22,"index"],[32,29,11,21],[32,31,11,29],[32,33,11,21],[32,34,11,6],[33,0,12,5],[34,0,13,3],[36,0,14,2],[36,11,14,9],[36,12,14,10],[36,13,14,2],[37,0,15,1],[37,3,3,0],[39,0,16,0],[39,6,16,6,"useClearByFocusCell"],[39,25,16,25],[39,28,16,28],[39,37,16,6,"useClearByFocusCell"],[39,56,16,28],[39,57,16,29,"options"],[39,64,16,28],[39,66,16,41],[40,0,17,2],[40,8,17,8,"valueRef"],[40,16,17,16],[40,19,17,19],[40,38,17,26,"options"],[40,45,17,19],[40,46,17,2],[41,0,18,2],[41,8,18,8,"cellsLayouts"],[41,20,18,20],[41,23,18,23],[41,42,18,30],[41,44,18,23],[41,45,18,2],[42,0,19,2,"valueRef"],[42,4,19,2,"valueRef"],[42,12,19,10],[42,13,19,11,"current"],[42,20,19,2],[42,23,19,21,"options"],[42,30,19,2],[44,0,20,2],[44,8,20,8,"clearCodeByCoords"],[44,25,20,25],[44,28,20,28],[44,37,20,8,"clearCodeByCoords"],[44,54,20,28],[44,55,20,29,"coords"],[44,61,20,28],[44,63,20,40],[45,0,21,4],[45,10,21,10,"index"],[45,15,21,15],[45,18,21,18,"findIndex"],[45,27,21,27],[45,28,21,28,"coords"],[45,34,21,27],[45,36,21,36,"cellsLayouts"],[45,48,21,48],[45,49,21,49,"current"],[45,56,21,27],[45,57,21,4],[47,0,22,4],[47,10,22,8,"index"],[47,15,22,13],[47,20,22,18],[47,21,22,19],[47,22,22,4],[47,24,22,22],[48,0,22,22],[48,32,23,32,"valueRef"],[48,40,23,40],[48,41,23,41,"current"],[48,48,22,22],[49,0,22,22],[49,12,23,13,"value"],[49,17,22,22],[49,38,23,13,"value"],[49,43,22,22],[50,0,22,22],[50,12,23,20,"setValue"],[50,20,22,22],[50,41,23,20,"setValue"],[50,49,22,22],[51,0,24,6],[51,12,24,12,"text"],[51,16,24,16],[51,19,24,19],[51,20,24,20,"value"],[51,25,24,25],[51,29,24,29],[51,31,24,19],[51,33,24,33,"slice"],[51,38,24,19],[51,39,24,39],[51,40,24,19],[51,42,24,42,"index"],[51,47,24,19],[51,48,24,6],[52,0,25,6,"setValue"],[52,8,25,6,"setValue"],[52,16,25,14],[52,17,25,15,"text"],[52,21,25,14],[52,22,25,6],[53,0,26,5],[54,0,27,3],[54,5,20,2],[56,0,28,2],[56,8,28,8,"getCellOnLayoutHandler"],[56,30,28,30],[56,33,28,33],[56,42,28,8,"getCellOnLayoutHandler"],[56,64,28,33],[56,65,28,34,"index"],[56,70,28,33],[57,0,28,33],[57,13,28,44],[57,23,28,45,"event"],[57,28,28,44],[57,30,28,55],[58,0,28,55],[58,36,29,34,"event"],[58,41,29,39],[58,42,29,40,"nativeEvent"],[58,53,29,34],[58,54,29,52,"layout"],[58,60,28,55],[59,0,28,55],[59,12,29,11,"width"],[59,17,28,55],[59,42,29,11,"width"],[59,47,28,55],[60,0,28,55],[60,12,29,18,"height"],[60,18,28,55],[60,43,29,18,"height"],[60,49,28,55],[61,0,28,55],[61,12,29,26,"x"],[61,13,28,55],[61,38,29,26,"x"],[61,39,28,55],[62,0,28,55],[62,12,29,29,"y"],[62,13,28,55],[62,38,29,29,"y"],[62,39,28,55],[63,0,30,4,"cellsLayouts"],[63,8,30,4,"cellsLayouts"],[63,20,30,16],[63,21,30,17,"current"],[63,28,30,4],[63,34,30,28,"index"],[63,39,30,4],[63,43,30,39],[64,0,31,6,"x"],[64,10,31,6,"x"],[64,11,31,7],[64,13,31,6,"x"],[64,14,30,39],[65,0,32,6,"xEnd"],[65,10,32,6,"xEnd"],[65,14,32,10],[65,16,32,12,"x"],[65,17,32,13],[65,20,32,16,"width"],[65,25,30,39],[66,0,33,6,"y"],[66,10,33,6,"y"],[66,11,33,7],[66,13,33,6,"y"],[66,14,30,39],[67,0,34,6,"yEnd"],[67,10,34,6,"yEnd"],[67,14,34,10],[67,16,34,12,"y"],[67,17,34,13],[67,20,34,16,"height"],[68,0,30,39],[68,9,30,4],[69,0,36,3],[69,7,28,33],[70,0,28,33],[70,5,28,2],[72,0,37,2],[72,8,37,8,"onPress"],[72,15,37,15],[72,18,37,18],[72,27,37,8,"onPress"],[72,34,37,18],[72,35,37,19,"event"],[72,40,37,18],[73,0,37,18],[73,13,37,29,"clearCodeByCoords"],[73,30,37,46],[73,31,37,47,"event"],[73,36,37,52],[73,37,37,53,"nativeEvent"],[73,48,37,46],[73,49,37,18],[74,0,37,18],[74,5,37,2],[76,0,39,2],[76,8,39,8,"onClick"],[76,15,39,15],[76,18,39,18],[76,27,39,8,"onClick"],[76,34,39,18],[76,35,39,19,"e"],[76,36,39,18],[76,38,39,25],[77,0,40,4],[77,10,40,10,"offset"],[77,16,40,16],[77,19,40,19,"e"],[77,20,40,20],[77,21,40,21,"target"],[77,27,40,19],[77,28,40,28,"getClientRects"],[77,42,40,19],[77,45,40,45],[77,46,40,19],[77,47,40,4],[78,0,41,4],[78,10,41,10,"locationX"],[78,19,41,19],[78,22,41,22,"e"],[78,23,41,23],[78,24,41,24,"clientX"],[78,31,41,22],[78,34,41,34,"offset"],[78,40,41,40],[78,41,41,41,"left"],[78,45,41,4],[79,0,42,4],[79,10,42,10,"locationY"],[79,19,42,19],[79,22,42,22,"e"],[79,23,42,23],[79,24,42,24,"clientY"],[79,31,42,22],[79,34,42,34,"offset"],[79,40,42,40],[79,41,42,41,"top"],[79,44,42,4],[80,0,43,4,"clearCodeByCoords"],[80,6,43,4,"clearCodeByCoords"],[80,23,43,21],[80,24,43,22],[81,0,43,23,"locationX"],[81,8,43,23,"locationX"],[81,17,43,32],[81,19,43,23,"locationX"],[81,28,43,22],[82,0,43,34,"locationY"],[82,8,43,34,"locationY"],[82,17,43,43],[82,19,43,34,"locationY"],[83,0,43,22],[83,7,43,21],[83,8,43,4],[84,0,44,3],[84,5,39,2],[86,0,45,2],[86,11,45,9],[86,12,46,4],[86,32,47,6],[87,0,47,6],[87,13,47,13,"Platform"],[87,35,47,22,"OS"],[87,37,47,13],[87,42,47,29],[87,47,47,13],[87,50,47,37],[88,0,47,38,"onClick"],[88,8,47,38,"onClick"],[88,15,47,45],[88,17,47,38,"onClick"],[89,0,47,37],[89,7,47,13],[89,10,47,49],[90,0,47,50,"onPress"],[90,8,47,50,"onPress"],[90,15,47,57],[90,17,47,50,"onPress"],[91,0,47,49],[91,7,47,6],[92,0,47,6],[92,5,46,4],[92,7,49,6],[92,9,46,4],[92,10,45,9],[92,12,51,4,"getCellOnLayoutHandler"],[92,34,45,9],[92,35,45,2],[93,0,53,1],[93,3,16,0],[95,17,54,15,"useClearByFocusCell"],[95,36]],"functionMap":{"names":["<global>","findIndex","useClearByFocusCell","clearCodeByCoords","getCellOnLayoutHandler","<anonymous>","onPress","onClick","useMemo$argument_0"],"mappings":"AAA;kBCE;CDY;4BEC;4BCI;GDO;iCEC,WC;GHQ;kBIC,+CJ;kBKE;GLK;MMG,qDN;CFM"}},"type":"js/module"}]}