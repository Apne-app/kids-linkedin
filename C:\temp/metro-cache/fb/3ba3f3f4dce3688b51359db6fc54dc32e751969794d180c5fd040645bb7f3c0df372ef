{"dependencies":[{"name":"crypto-js","data":{"isAsync":false}},{"name":"buffer","data":{"isAsync":false}},{"name":"./DateUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var CryptoJS = _$$_REQUIRE(_dependencyMap[0], \"crypto-js\");\n\n  var Buffer = global.Buffer || _$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer;\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"./DateUtils\"),\n      dateToString = _require.dateToString;\n\n  var FIVE_MINUTES = 5 * (60 * 1000);\n  var AWS_ACL = \"public-read\";\n  var AWS_SERVICE_NAME = \"s3\";\n  var AWS_REQUEST_POLICY_VERSION = \"aws4_request\";\n  var AWS_ALGORITHM = \"AWS4-HMAC-SHA256\";\n  var DEFAULT_SUCCESS_ACTION_STATUS = \"201\";\n\n  var assert = function assert(object, message) {\n    if (null == object) throw new Error(message);\n  };\n\n  var S3Policy = exports.S3Policy = function () {\n    function S3Policy() {\n      _classCallCheck(this, S3Policy);\n    }\n\n    _createClass(S3Policy, null, [{\n      key: 'generate',\n      value: function generate(options) {\n        options || (options = {});\n        assert(options.key, \"Must provide `key` option with the object key\");\n        assert(options.bucket, \"Must provide `bucket` option with your AWS bucket name\");\n        assert(options.contentType, \"Must provide `contentType` option with the object content type\");\n        assert(options.region, \"Must provide `region` option with your AWS region\");\n        assert(options.date, \"Must provide `date` option with the current date\");\n        assert(options.accessKey, \"Must provide `accessKey` option with your AWSAccessKeyId\");\n        assert(options.secretKey, \"Must provide `secretKey` option with your AWSSecretKey\");\n        var date = options.date;\n        var timeDelta = options.timeDelta || 0;\n        var policyExpiresIn = FIVE_MINUTES - timeDelta;\n        var expirationDate = new Date(date.getTime() + policyExpiresIn);\n\n        var policyParams = _extends({}, options, {\n          acl: options.acl || AWS_ACL,\n          algorithm: AWS_ALGORITHM,\n          amzDate: dateToString(date, 'amz-iso8601'),\n          yyyymmddDate: dateToString(date, 'yyyymmdd'),\n          expirationDate: dateToString(expirationDate, 'iso8601'),\n          successActionStatus: String(options.successActionStatus || DEFAULT_SUCCESS_ACTION_STATUS)\n        });\n\n        policyParams.credential = [policyParams.accessKey, policyParams.yyyymmddDate, policyParams.region, AWS_SERVICE_NAME, AWS_REQUEST_POLICY_VERSION].join('/');\n        var policy = formatPolicyForEncoding(policyParams);\n        var base64EncodedPolicy = getEncodedPolicy(policy);\n        var signature = getSignature(base64EncodedPolicy, policyParams);\n        return formatPolicyForRequestBody(base64EncodedPolicy, signature, policyParams);\n      }\n    }]);\n\n    return S3Policy;\n  }();\n\n  var formatPolicyForRequestBody = function formatPolicyForRequestBody(base64EncodedPolicy, signature, options) {\n    return {\n      \"key\": options.key,\n      \"acl\": options.acl,\n      \"success_action_status\": options.successActionStatus,\n      \"Content-Type\": options.contentType,\n      \"X-Amz-Credential\": options.credential,\n      \"X-Amz-Algorithm\": options.algorithm,\n      \"X-Amz-Date\": options.amzDate,\n      \"Policy\": base64EncodedPolicy,\n      \"X-Amz-Signature\": signature\n    };\n  };\n\n  var formatPolicyForEncoding = function formatPolicyForEncoding(policy) {\n    return {\n      \"expiration\": policy.expirationDate,\n      \"conditions\": [{\n        \"bucket\": policy.bucket\n      }, {\n        \"key\": policy.key\n      }, {\n        \"acl\": policy.acl\n      }, {\n        \"success_action_status\": policy.successActionStatus\n      }, {\n        \"Content-Type\": policy.contentType\n      }, {\n        \"x-amz-credential\": policy.credential\n      }, {\n        \"x-amz-algorithm\": policy.algorithm\n      }, {\n        \"x-amz-date\": policy.amzDate\n      }]\n    };\n  };\n\n  var getEncodedPolicy = function getEncodedPolicy(policy) {\n    return Buffer.from(JSON.stringify(policy), \"utf-8\").toString(\"base64\");\n  };\n\n  var getSignature = function getSignature(base64EncodedPolicy, options) {\n    return CryptoJS.HmacSHA256(base64EncodedPolicy, getSignatureKey(options)).toString(CryptoJS.enc.Hex);\n  };\n\n  var getSignatureKey = function getSignatureKey(options) {\n    var kDate = CryptoJS.HmacSHA256(options.yyyymmddDate, \"AWS4\" + options.secretKey);\n    var kRegion = CryptoJS.HmacSHA256(options.region, kDate);\n    var kService = CryptoJS.HmacSHA256(AWS_SERVICE_NAME, kRegion);\n    var kSigning = CryptoJS.HmacSHA256(AWS_REQUEST_POLICY_VERSION, kService);\n    return kSigning;\n  };\n});","lineCount":157,"map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[8,0,7,0],[8,6,7,4,"_extends"],[8,14,7,12],[8,17,7,15,"Object"],[8,23,7,21],[8,24,7,22,"assign"],[8,30,7,15],[8,34,7,32],[8,44,7,42,"target"],[8,50,7,32],[8,52,7,50],[9,0,7,52],[9,9,7,57],[9,13,7,61,"i"],[9,14,7,62],[9,17,7,65],[9,18,7,52],[9,20,7,68,"i"],[9,21,7,69],[9,24,7,72,"arguments"],[9,33,7,81],[9,34,7,82,"length"],[9,40,7,52],[9,42,7,90,"i"],[9,43,7,91],[9,45,7,52],[9,47,7,95],[10,0,7,97],[10,10,7,101,"source"],[10,16,7,107],[10,19,7,110,"arguments"],[10,28,7,119],[10,29,7,120,"i"],[10,30,7,119],[10,31,7,97],[12,0,7,124],[12,11,7,129],[12,15,7,133,"key"],[12,18,7,124],[12,22,7,140,"source"],[12,28,7,124],[12,30,7,148],[13,0,7,150],[13,12,7,154,"Object"],[13,18,7,160],[13,19,7,161,"prototype"],[13,28,7,154],[13,29,7,171,"hasOwnProperty"],[13,43,7,154],[13,44,7,186,"call"],[13,48,7,154],[13,49,7,191,"source"],[13,55,7,154],[13,57,7,199,"key"],[13,60,7,154],[13,61,7,150],[13,63,7,205],[14,0,7,207,"target"],[14,10,7,207,"target"],[14,16,7,213],[14,17,7,214,"key"],[14,20,7,213],[14,21,7,207],[14,24,7,221,"source"],[14,30,7,227],[14,31,7,228,"key"],[14,34,7,227],[14,35,7,207],[15,0,7,235],[16,0,7,237],[17,0,7,239],[19,0,7,240],[19,11,7,247,"target"],[19,17,7,240],[20,0,7,256],[20,3,7,0],[22,0,9,0],[22,6,9,4,"_createClass"],[22,18,9,16],[22,21,9,19],[22,33,9,31],[23,0,9,33],[23,13,9,42,"defineProperties"],[23,29,9,33],[23,30,9,59,"target"],[23,36,9,33],[23,38,9,67,"props"],[23,43,9,33],[23,45,9,74],[24,0,9,76],[24,11,9,81],[24,15,9,85,"i"],[24,16,9,86],[24,19,9,89],[24,20,9,76],[24,22,9,92,"i"],[24,23,9,93],[24,26,9,96,"props"],[24,31,9,101],[24,32,9,102,"length"],[24,38,9,76],[24,40,9,110,"i"],[24,41,9,111],[24,43,9,76],[24,45,9,115],[25,0,9,117],[25,12,9,121,"descriptor"],[25,22,9,131],[25,25,9,134,"props"],[25,30,9,139],[25,31,9,140,"i"],[25,32,9,139],[25,33,9,117],[26,0,9,144,"descriptor"],[26,8,9,144,"descriptor"],[26,18,9,154],[26,19,9,155,"enumerable"],[26,29,9,144],[26,32,9,168,"descriptor"],[26,42,9,178],[26,43,9,179,"enumerable"],[26,53,9,168],[26,57,9,193],[26,62,9,144],[27,0,9,200,"descriptor"],[27,8,9,200,"descriptor"],[27,18,9,210],[27,19,9,211,"configurable"],[27,31,9,200],[27,34,9,226],[27,38,9,200],[28,0,9,232],[28,12,9,236],[28,23,9,247,"descriptor"],[28,33,9,232],[28,35,9,259,"descriptor"],[28,45,9,269],[28,46,9,270,"writable"],[28,54,9,259],[28,57,9,281],[28,61,9,259],[29,0,9,287,"Object"],[29,8,9,287,"Object"],[29,14,9,293],[29,15,9,294,"defineProperty"],[29,29,9,287],[29,30,9,309,"target"],[29,36,9,287],[29,38,9,317,"descriptor"],[29,48,9,327],[29,49,9,328,"key"],[29,52,9,287],[29,54,9,333,"descriptor"],[29,64,9,287],[30,0,9,347],[31,0,9,349],[33,0,9,350],[33,11,9,357],[33,21,9,367,"Constructor"],[33,32,9,357],[33,34,9,380,"protoProps"],[33,44,9,357],[33,46,9,392,"staticProps"],[33,57,9,357],[33,59,9,405],[34,0,9,407],[34,10,9,411,"protoProps"],[34,20,9,407],[34,22,9,423,"defineProperties"],[34,38,9,439],[34,39,9,440,"Constructor"],[34,50,9,451],[34,51,9,452,"prototype"],[34,60,9,439],[34,62,9,463,"protoProps"],[34,72,9,439],[34,73,9,423],[35,0,9,476],[35,10,9,480,"staticProps"],[35,21,9,476],[35,23,9,493,"defineProperties"],[35,39,9,509],[35,40,9,510,"Constructor"],[35,51,9,509],[35,53,9,523,"staticProps"],[35,64,9,509],[35,65,9,493],[36,0,9,537],[36,13,9,544,"Constructor"],[36,24,9,537],[37,0,9,558],[37,5,9,350],[38,0,9,561],[38,3,9,19],[38,5,9,0],[40,0,11,0],[40,11,11,9,"_classCallCheck"],[40,26,11,0],[40,27,11,25,"instance"],[40,35,11,0],[40,37,11,35,"Constructor"],[40,48,11,0],[40,50,11,48],[41,0,11,50],[41,8,11,54],[41,10,11,56,"instance"],[41,18,11,64],[41,30,11,76,"Constructor"],[41,41,11,54],[41,42,11,50],[41,44,11,90],[42,0,11,92],[42,12,11,98],[42,16,11,102,"TypeError"],[42,25,11,98],[42,26,11,112],[42,61,11,98],[42,62,11,92],[43,0,11,151],[44,0,11,153],[46,0,17,0],[46,6,17,4,"CryptoJS"],[46,14,17,12],[46,17,17,15,"require"],[46,28,17,22],[46,60,17,0],[48,0,18,0],[48,6,18,4,"Buffer"],[48,12,18,10],[48,15,18,13,"global"],[48,21,18,19],[48,22,18,20,"Buffer"],[48,28,18,13],[48,32,18,30,"require"],[48,43,18,37],[48,72,18,30],[48,73,18,48,"Buffer"],[48,79,18,0],[50,0,20,0],[50,6,20,4,"_require"],[50,14,20,12],[50,17,20,15,"require"],[50,28,20,22],[50,62,20,0],[51,0,20,0],[51,6,21,4,"dateToString"],[51,18,21,16],[51,21,21,19,"_require"],[51,29,21,27],[51,30,21,28,"dateToString"],[51,42,20,0],[53,0,23,0],[53,6,23,4,"FIVE_MINUTES"],[53,18,23,16],[53,21,23,19],[53,26,23,24],[53,31,23,29],[53,35,23,19],[53,36,23,0],[54,0,25,0],[54,6,25,4,"AWS_ACL"],[54,13,25,11],[54,16,25,14],[54,29,25,0],[55,0,26,0],[55,6,26,4,"AWS_SERVICE_NAME"],[55,22,26,20],[55,25,26,23],[55,29,26,0],[56,0,27,0],[56,6,27,4,"AWS_REQUEST_POLICY_VERSION"],[56,32,27,30],[56,35,27,33],[56,49,27,0],[57,0,28,0],[57,6,28,4,"AWS_ALGORITHM"],[57,19,28,17],[57,22,28,20],[57,40,28,0],[58,0,30,0],[58,6,30,4,"DEFAULT_SUCCESS_ACTION_STATUS"],[58,35,30,33],[58,38,30,36],[58,43,30,0],[60,0,32,0],[60,6,32,4,"assert"],[60,12,32,10],[60,15,32,13],[60,24,32,22,"assert"],[60,30,32,13],[60,31,32,29,"object"],[60,37,32,13],[60,39,32,37,"message"],[60,46,32,13],[60,48,32,46],[61,0,33,2],[61,8,33,6],[61,16,33,14,"object"],[61,22,33,2],[61,24,33,22],[61,30,33,28],[61,34,33,32,"Error"],[61,39,33,28],[61,40,33,38,"message"],[61,47,33,28],[61,48,33,22],[62,0,34,1],[62,3,32,0],[64,0,36,0],[64,6,36,4,"S3Policy"],[64,14,36,12],[64,17,36,15,"exports"],[64,24,36,22],[64,25,36,23,"S3Policy"],[64,33,36,15],[64,36,36,34],[64,48,36,46],[65,0,37,2],[65,13,37,11,"S3Policy"],[65,21,37,2],[65,24,37,22],[66,0,38,4,"_classCallCheck"],[66,6,38,4,"_classCallCheck"],[66,21,38,19],[66,22,38,20],[66,26,38,19],[66,28,38,26,"S3Policy"],[66,36,38,19],[66,37,38,4],[67,0,39,3],[69,0,41,2,"_createClass"],[69,4,41,2,"_createClass"],[69,16,41,14],[69,17,41,15,"S3Policy"],[69,25,41,14],[69,27,41,25],[69,31,41,14],[69,33,41,31],[69,34,41,32],[70,0,42,4,"key"],[70,6,42,4,"key"],[70,9,42,7],[70,11,42,9],[70,21,41,32],[71,0,43,4,"value"],[71,6,43,4,"value"],[71,11,43,9],[71,13,43,11],[71,22,43,20,"generate"],[71,30,43,11],[71,31,43,29,"options"],[71,38,43,11],[71,40,43,38],[72,0,44,6,"options"],[72,8,44,6,"options"],[72,15,44,13],[72,20,44,18,"options"],[72,27,44,25],[72,30,44,28],[72,32,44,13],[72,33,44,6],[73,0,46,6,"assert"],[73,8,46,6,"assert"],[73,14,46,12],[73,15,46,13,"options"],[73,22,46,20],[73,23,46,21,"key"],[73,26,46,12],[73,28,46,26],[73,75,46,12],[73,76,46,6],[74,0,47,6,"assert"],[74,8,47,6,"assert"],[74,14,47,12],[74,15,47,13,"options"],[74,22,47,20],[74,23,47,21,"bucket"],[74,29,47,12],[74,31,47,29],[74,87,47,12],[74,88,47,6],[75,0,48,6,"assert"],[75,8,48,6,"assert"],[75,14,48,12],[75,15,48,13,"options"],[75,22,48,20],[75,23,48,21,"contentType"],[75,34,48,12],[75,36,48,34],[75,100,48,12],[75,101,48,6],[76,0,49,6,"assert"],[76,8,49,6,"assert"],[76,14,49,12],[76,15,49,13,"options"],[76,22,49,20],[76,23,49,21,"region"],[76,29,49,12],[76,31,49,29],[76,82,49,12],[76,83,49,6],[77,0,50,6,"assert"],[77,8,50,6,"assert"],[77,14,50,12],[77,15,50,13,"options"],[77,22,50,20],[77,23,50,21,"date"],[77,27,50,12],[77,29,50,27],[77,79,50,12],[77,80,50,6],[78,0,51,6,"assert"],[78,8,51,6,"assert"],[78,14,51,12],[78,15,51,13,"options"],[78,22,51,20],[78,23,51,21,"accessKey"],[78,32,51,12],[78,34,51,32],[78,92,51,12],[78,93,51,6],[79,0,52,6,"assert"],[79,8,52,6,"assert"],[79,14,52,12],[79,15,52,13,"options"],[79,22,52,20],[79,23,52,21,"secretKey"],[79,32,52,12],[79,34,52,32],[79,90,52,12],[79,91,52,6],[80,0,54,6],[80,12,54,10,"date"],[80,16,54,14],[80,19,54,17,"options"],[80,26,54,24],[80,27,54,25,"date"],[80,31,54,6],[81,0,55,6],[81,12,55,10,"timeDelta"],[81,21,55,19],[81,24,55,22,"options"],[81,31,55,29],[81,32,55,30,"timeDelta"],[81,41,55,22],[81,45,55,43],[81,46,55,6],[82,0,56,6],[82,12,56,10,"policyExpiresIn"],[82,27,56,25],[82,30,56,28,"FIVE_MINUTES"],[82,42,56,40],[82,45,56,43,"timeDelta"],[82,54,56,6],[83,0,57,6],[83,12,57,10,"expirationDate"],[83,26,57,24],[83,29,57,27],[83,33,57,31,"Date"],[83,37,57,27],[83,38,57,36,"date"],[83,42,57,40],[83,43,57,41,"getTime"],[83,50,57,36],[83,55,57,53,"policyExpiresIn"],[83,70,57,27],[83,71,57,6],[85,0,59,6],[85,12,59,10,"policyParams"],[85,24,59,22],[85,27,59,25,"_extends"],[85,35,59,33],[85,36,59,34],[85,38,59,33],[85,40,59,38,"options"],[85,47,59,33],[85,49,59,47],[86,0,60,8,"acl"],[86,10,60,8,"acl"],[86,13,60,11],[86,15,60,13,"options"],[86,22,60,20],[86,23,60,21,"acl"],[86,26,60,13],[86,30,60,28,"AWS_ACL"],[86,37,59,47],[87,0,61,8,"algorithm"],[87,10,61,8,"algorithm"],[87,19,61,17],[87,21,61,19,"AWS_ALGORITHM"],[87,34,59,47],[88,0,62,8,"amzDate"],[88,10,62,8,"amzDate"],[88,17,62,15],[88,19,62,17,"dateToString"],[88,31,62,29],[88,32,62,30,"date"],[88,36,62,29],[88,38,62,36],[88,51,62,29],[88,52,59,47],[89,0,63,8,"yyyymmddDate"],[89,10,63,8,"yyyymmddDate"],[89,22,63,20],[89,24,63,22,"dateToString"],[89,36,63,34],[89,37,63,35,"date"],[89,41,63,34],[89,43,63,41],[89,53,63,34],[89,54,59,47],[90,0,64,8,"expirationDate"],[90,10,64,8,"expirationDate"],[90,24,64,22],[90,26,64,24,"dateToString"],[90,38,64,36],[90,39,64,37,"expirationDate"],[90,53,64,36],[90,55,64,53],[90,64,64,36],[90,65,59,47],[91,0,65,8,"successActionStatus"],[91,10,65,8,"successActionStatus"],[91,29,65,27],[91,31,65,29,"String"],[91,37,65,35],[91,38,65,36,"options"],[91,45,65,43],[91,46,65,44,"successActionStatus"],[91,65,65,36],[91,69,65,67,"DEFAULT_SUCCESS_ACTION_STATUS"],[91,98,65,35],[92,0,59,47],[92,9,59,33],[92,10,59,6],[94,0,68,6,"policyParams"],[94,8,68,6,"policyParams"],[94,20,68,18],[94,21,68,19,"credential"],[94,31,68,6],[94,34,68,32],[94,35,68,33,"policyParams"],[94,47,68,45],[94,48,68,46,"accessKey"],[94,57,68,32],[94,59,68,57,"policyParams"],[94,71,68,69],[94,72,68,70,"yyyymmddDate"],[94,84,68,32],[94,86,68,84,"policyParams"],[94,98,68,96],[94,99,68,97,"region"],[94,105,68,32],[94,107,68,105,"AWS_SERVICE_NAME"],[94,123,68,32],[94,125,68,123,"AWS_REQUEST_POLICY_VERSION"],[94,151,68,32],[94,153,68,151,"join"],[94,157,68,32],[94,158,68,156],[94,161,68,32],[94,162,68,6],[95,0,70,6],[95,12,70,10,"policy"],[95,18,70,16],[95,21,70,19,"formatPolicyForEncoding"],[95,44,70,42],[95,45,70,43,"policyParams"],[95,57,70,42],[95,58,70,6],[96,0,71,6],[96,12,71,10,"base64EncodedPolicy"],[96,31,71,29],[96,34,71,32,"getEncodedPolicy"],[96,50,71,48],[96,51,71,49,"policy"],[96,57,71,48],[96,58,71,6],[97,0,72,6],[97,12,72,10,"signature"],[97,21,72,19],[97,24,72,22,"getSignature"],[97,36,72,34],[97,37,72,35,"base64EncodedPolicy"],[97,56,72,34],[97,58,72,56,"policyParams"],[97,70,72,34],[97,71,72,6],[98,0,74,6],[98,15,74,13,"formatPolicyForRequestBody"],[98,41,74,39],[98,42,74,40,"base64EncodedPolicy"],[98,61,74,39],[98,63,74,61,"signature"],[98,72,74,39],[98,74,74,72,"policyParams"],[98,86,74,39],[98,87,74,6],[99,0,75,5],[100,0,41,32],[100,5,41,31],[100,6,41,14],[100,7,41,2],[102,0,78,2],[102,11,78,9,"S3Policy"],[102,19,78,2],[103,0,79,1],[103,3,36,34],[103,5,36,0],[105,0,81,0],[105,6,81,4,"formatPolicyForRequestBody"],[105,32,81,30],[105,35,81,33],[105,44,81,42,"formatPolicyForRequestBody"],[105,70,81,33],[105,71,81,69,"base64EncodedPolicy"],[105,90,81,33],[105,92,81,90,"signature"],[105,101,81,33],[105,103,81,101,"options"],[105,110,81,33],[105,112,81,110],[106,0,82,2],[106,11,82,9],[107,0,83,4],[107,13,83,11,"options"],[107,20,83,18],[107,21,83,19,"key"],[107,24,82,9],[108,0,84,4],[108,13,84,11,"options"],[108,20,84,18],[108,21,84,19,"acl"],[108,24,82,9],[109,0,85,4],[109,31,85,29,"options"],[109,38,85,36],[109,39,85,37,"successActionStatus"],[109,58,82,9],[110,0,86,4],[110,22,86,20,"options"],[110,29,86,27],[110,30,86,28,"contentType"],[110,41,82,9],[111,0,87,4],[111,26,87,24,"options"],[111,33,87,31],[111,34,87,32,"credential"],[111,44,82,9],[112,0,88,4],[112,25,88,23,"options"],[112,32,88,30],[112,33,88,31,"algorithm"],[112,42,82,9],[113,0,89,4],[113,20,89,18,"options"],[113,27,89,25],[113,28,89,26,"amzDate"],[113,35,82,9],[114,0,90,4],[114,16,90,14,"base64EncodedPolicy"],[114,35,82,9],[115,0,91,4],[115,25,91,23,"signature"],[116,0,82,9],[116,5,82,2],[117,0,93,1],[117,3,81,0],[119,0,95,0],[119,6,95,4,"formatPolicyForEncoding"],[119,29,95,27],[119,32,95,30],[119,41,95,39,"formatPolicyForEncoding"],[119,64,95,30],[119,65,95,63,"policy"],[119,71,95,30],[119,73,95,71],[120,0,96,2],[120,11,96,9],[121,0,97,4],[121,20,97,18,"policy"],[121,26,97,24],[121,27,97,25,"expirationDate"],[121,41,96,9],[122,0,98,4],[122,20,98,18],[122,21,98,19],[123,0,98,21],[123,18,98,31,"policy"],[123,24,98,37],[123,25,98,38,"bucket"],[124,0,98,19],[124,7,98,18],[124,9,98,48],[125,0,98,50],[125,15,98,57,"policy"],[125,21,98,63],[125,22,98,64,"key"],[126,0,98,48],[126,7,98,18],[126,9,98,71],[127,0,98,73],[127,15,98,80,"policy"],[127,21,98,86],[127,22,98,87,"acl"],[128,0,98,71],[128,7,98,18],[128,9,98,94],[129,0,98,96],[129,33,98,121,"policy"],[129,39,98,127],[129,40,98,128,"successActionStatus"],[130,0,98,94],[130,7,98,18],[130,9,98,151],[131,0,98,153],[131,24,98,169,"policy"],[131,30,98,175],[131,31,98,176,"contentType"],[132,0,98,151],[132,7,98,18],[132,9,98,191],[133,0,98,193],[133,28,98,213,"policy"],[133,34,98,219],[133,35,98,220,"credential"],[134,0,98,191],[134,7,98,18],[134,9,98,234],[135,0,98,236],[135,27,98,255,"policy"],[135,33,98,261],[135,34,98,262,"algorithm"],[136,0,98,234],[136,7,98,18],[136,9,98,275],[137,0,98,277],[137,22,98,291,"policy"],[137,28,98,297],[137,29,98,298,"amzDate"],[138,0,98,275],[138,7,98,18],[139,0,96,9],[139,5,96,2],[140,0,100,1],[140,3,95,0],[142,0,102,0],[142,6,102,4,"getEncodedPolicy"],[142,22,102,20],[142,25,102,23],[142,34,102,32,"getEncodedPolicy"],[142,50,102,23],[142,51,102,49,"policy"],[142,57,102,23],[142,59,102,57],[143,0,103,2],[143,11,103,9,"Buffer"],[143,17,103,15],[143,18,103,16,"from"],[143,22,103,9],[143,23,103,21,"JSON"],[143,27,103,25],[143,28,103,26,"stringify"],[143,37,103,21],[143,38,103,36,"policy"],[143,44,103,21],[143,45,103,9],[143,47,103,45],[143,54,103,9],[143,56,103,54,"toString"],[143,64,103,9],[143,65,103,63],[143,73,103,9],[143,74,103,2],[144,0,104,1],[144,3,102,0],[146,0,106,0],[146,6,106,4,"getSignature"],[146,18,106,16],[146,21,106,19],[146,30,106,28,"getSignature"],[146,42,106,19],[146,43,106,41,"base64EncodedPolicy"],[146,62,106,19],[146,64,106,62,"options"],[146,71,106,19],[146,73,106,71],[147,0,107,2],[147,11,107,9,"CryptoJS"],[147,19,107,17],[147,20,107,18,"HmacSHA256"],[147,30,107,9],[147,31,107,29,"base64EncodedPolicy"],[147,50,107,9],[147,52,107,50,"getSignatureKey"],[147,67,107,65],[147,68,107,66,"options"],[147,75,107,65],[147,76,107,9],[147,78,107,76,"toString"],[147,86,107,9],[147,87,107,85,"CryptoJS"],[147,95,107,93],[147,96,107,94,"enc"],[147,99,107,85],[147,100,107,98,"Hex"],[147,103,107,9],[147,104,107,2],[148,0,108,1],[148,3,106,0],[150,0,110,0],[150,6,110,4,"getSignatureKey"],[150,21,110,19],[150,24,110,22],[150,33,110,31,"getSignatureKey"],[150,48,110,22],[150,49,110,47,"options"],[150,56,110,22],[150,58,110,56],[151,0,111,2],[151,8,111,6,"kDate"],[151,13,111,11],[151,16,111,14,"CryptoJS"],[151,24,111,22],[151,25,111,23,"HmacSHA256"],[151,35,111,14],[151,36,111,34,"options"],[151,43,111,41],[151,44,111,42,"yyyymmddDate"],[151,56,111,14],[151,58,111,56],[151,67,111,65,"options"],[151,74,111,72],[151,75,111,73,"secretKey"],[151,84,111,14],[151,85,111,2],[152,0,112,2],[152,8,112,6,"kRegion"],[152,15,112,13],[152,18,112,16,"CryptoJS"],[152,26,112,24],[152,27,112,25,"HmacSHA256"],[152,37,112,16],[152,38,112,36,"options"],[152,45,112,43],[152,46,112,44,"region"],[152,52,112,16],[152,54,112,52,"kDate"],[152,59,112,16],[152,60,112,2],[153,0,113,2],[153,8,113,6,"kService"],[153,16,113,14],[153,19,113,17,"CryptoJS"],[153,27,113,25],[153,28,113,26,"HmacSHA256"],[153,38,113,17],[153,39,113,37,"AWS_SERVICE_NAME"],[153,55,113,17],[153,57,113,55,"kRegion"],[153,64,113,17],[153,65,113,2],[154,0,114,2],[154,8,114,6,"kSigning"],[154,16,114,14],[154,19,114,17,"CryptoJS"],[154,27,114,25],[154,28,114,26,"HmacSHA256"],[154,38,114,17],[154,39,114,37,"AWS_REQUEST_POLICY_VERSION"],[154,65,114,17],[154,67,114,65,"kService"],[154,75,114,17],[154,76,114,2],[155,0,116,2],[155,11,116,9,"kSigning"],[155,19,116,2],[156,0,117,1],[156,3,110,0]],"functionMap":{"names":["<global>","<anonymous>","defineProperties","_classCallCheck","assert","S3Policy","generate","formatPolicyForRequestBody","formatPolicyForEncoding","getEncodedPolicy","getSignature","getSignatureKey"],"mappings":"AAA;gCCM,gOD;mBCE,cC,4TD,oND;AGE,yJH;aIqB;CJE;kCCE;EIC;GJE;WKI;KLgC;CDI;iCOE;CPY;8BQE;CRK;uBSE;CTE;mBUE;CVE;sBWE;CXO"}},"type":"js/module"}]}