{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"./constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MAIN_SCRIPT = exports.soundMode = exports.playMode = exports.PLAYER_FUNCTIONS = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _constants = _$$_REQUIRE(_dependencyMap[2], \"./constants\");\n\n  var _playMode, _soundMode;\n\n  var PLAYER_FUNCTIONS = {\n    muteVideo: 'player.mute(); true;',\n    unMuteVideo: 'player.unMute(); true;',\n    playVideo: 'player.playVideo(); true;',\n    pauseVideo: 'player.pauseVideo(); true;',\n    durationScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getDuration', data: player.getDuration()}));\\ntrue;\\n\",\n    currentTimeScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getCurrentTime', data: player.getCurrentTime()}));\\ntrue;\\n\",\n    isMutedScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'isMuted', data: player.isMuted()}));\\ntrue;\\n\",\n    getVolumeScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getVolume', data: player.getVolume()}));\\ntrue;\\n\",\n    getPlaybackRateScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getPlaybackRate', data: player.getPlaybackRate()}));\\ntrue;\\n\",\n    getAvailablePlaybackRatesScript: \"\\nwindow.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'getAvailablePlaybackRates', data: player.getAvailablePlaybackRates()}));\\ntrue;\\n\",\n    setVolume: function setVolume(volume) {\n      return \"player.setVolume(\" + volume + \"); true;\";\n    },\n    seekToScript: function seekToScript(seconds, allowSeekAhead) {\n      return \"player.seekTo(\" + seconds + \", \" + allowSeekAhead + \"); true;\";\n    },\n    setPlaybackRate: function setPlaybackRate(playbackRate) {\n      return \"player.setPlaybackRate(\" + playbackRate + \"); true;\";\n    },\n    loadPlaylist: function loadPlaylist(playList, startIndex, play) {\n      var index = startIndex || 0;\n      var playlistJson = JSON.stringify(playList);\n      var func = play ? 'loadPlaylist' : 'cuePlaylist';\n      return \"player.\" + func + \"({playlist: \" + playlistJson + \", index: \" + index + \"); true;\";\n    }\n  };\n  exports.PLAYER_FUNCTIONS = PLAYER_FUNCTIONS;\n  var playMode = (_playMode = {}, (0, _defineProperty2.default)(_playMode, _constants.PLAY_MODE, PLAYER_FUNCTIONS.playVideo), (0, _defineProperty2.default)(_playMode, _constants.PAUSE_MODE, PLAYER_FUNCTIONS.pauseVideo), _playMode);\n  exports.playMode = playMode;\n  var soundMode = (_soundMode = {}, (0, _defineProperty2.default)(_soundMode, _constants.MUTE_MODE, PLAYER_FUNCTIONS.muteVideo), (0, _defineProperty2.default)(_soundMode, _constants.UNMUTE_MODE, PLAYER_FUNCTIONS.unMuteVideo), _soundMode);\n  exports.soundMode = soundMode;\n\n  var MAIN_SCRIPT = function MAIN_SCRIPT(videoId, playList, initialPlayerParams, allowWebViewZoom, contentScale) {\n    var end = initialPlayerParams.end,\n        rel = initialPlayerParams.rel,\n        color = initialPlayerParams.color,\n        start = initialPlayerParams.start,\n        playerLang = initialPlayerParams.playerLang,\n        _initialPlayerParams$ = initialPlayerParams.loop,\n        loop = _initialPlayerParams$ === void 0 ? false : _initialPlayerParams$,\n        cc_lang_pref = initialPlayerParams.cc_lang_pref,\n        iv_load_policy = initialPlayerParams.iv_load_policy,\n        modestbranding = initialPlayerParams.modestbranding,\n        _initialPlayerParams$2 = initialPlayerParams.controls,\n        controls = _initialPlayerParams$2 === void 0 ? true : _initialPlayerParams$2,\n        showClosedCaptions = initialPlayerParams.showClosedCaptions,\n        _initialPlayerParams$3 = initialPlayerParams.preventFullScreen,\n        preventFullScreen = _initialPlayerParams$3 === void 0 ? false : _initialPlayerParams$3;\n    var rel_s = rel ? 1 : 0;\n    var loop_s = loop ? 1 : 0;\n    var videoId_s = videoId || '';\n    var controls_s = controls ? 1 : 0;\n    var cc_lang_pref_s = cc_lang_pref || '';\n    var modestbranding_s = modestbranding ? 1 : 0;\n    var preventFullScreen_s = preventFullScreen ? 0 : 1;\n    var showClosedCaptions_s = showClosedCaptions ? 1 : 0;\n    var list = typeof playList === 'string' ? playList : '';\n    var listType = typeof playList === 'string' ? 'playlist' : '';\n    var contentScale_s = typeof contentScale === 'number' ? contentScale : 1.0;\n    var playlist = Array.isArray(playList) ? \"playlist: \\\"\" + playList.join(',') + \"\\\",\" : '';\n    var scale = \"initial-scale=\" + contentScale_s;\n\n    if (!allowWebViewZoom) {\n      scale += \", maximum-scale=\" + contentScale_s;\n    }\n\n    return \"\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta\\n      name=\\\"viewport\\\"\\n      content=\\\"width=device-width, \" + scale + \"\\\"\\n    >\\n    <style>\\n      body {\\n        margin: 0;\\n      }\\n      .container {\\n        position: relative;\\n        width: 100%;\\n        height: 0;\\n        padding-bottom: 56.25%;\\n      }\\n      .video {\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          width: 100%;\\n          height: 100%;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"video\\\" id=\\\"player\\\" />\\n    </div>\\n\\n    <script>\\n      var tag = document.createElement('script');\\n\\n      tag.src = \\\"https://www.youtube.com/iframe_api\\\";\\n      var firstScriptTag = document.getElementsByTagName('script')[0];\\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\\n\\n      var player;\\n      function onYouTubeIframeAPIReady() {\\n        player = new YT.Player('player', {\\n          width: '1000',\\n          height: '1000',\\n          videoId: '\" + videoId_s + \"',\\n          playerVars: {\\n            \" + playlist + \"\\n            end: \" + end + \",\\n            rel: \" + rel_s + \",\\n            playsinline: 1,\\n            loop: \" + loop_s + \",\\n            color: \" + color + \",\\n            start: \" + start + \",\\n            list: '\" + list + \"',\\n            hl: \" + playerLang + \",\\n            listType: '\" + listType + \"',\\n            controls: \" + controls_s + \",\\n            fs: \" + preventFullScreen_s + \",\\n            cc_lang_pref: '\" + cc_lang_pref_s + \"',\\n            iv_load_policy: \" + iv_load_policy + \",\\n            modestbranding: \" + modestbranding_s + \",\\n            cc_load_policy: \" + showClosedCaptions_s + \",\\n          },\\n          events: {\\n            'onReady': onPlayerReady,\\n            'onStateChange': onPlayerStateChange,\\n            'onError': onPlayerError,\\n            'onPlaybackQualityChange': onPlaybackQualityChange,\\n            'onPlaybackRateChange': onPlaybackRateChange,\\n          }\\n        });\\n      }\\n\\n      function onPlayerError(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerError', data: event.data}))\\n      }\\n\\n      function onPlaybackRateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playbackRateChange', data: event.data}))\\n      }\\n\\n      function onPlaybackQualityChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerQualityChange', data: event.data}))\\n      }\\n\\n      function onPlayerReady(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerReady'}))\\n      }\\n\\n      var done = false;\\n      function onPlayerStateChange(event) {\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'playerStateChange', data: event.data}))\\n      }\\n\\n      var isFullScreen = false;\\n      function onFullScreenChange() {\\n        isFullScreen = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\\n        window.ReactNativeWebView.postMessage(JSON.stringify({eventType: 'fullScreenChange', data: Boolean(isFullScreen)}));\\n      }\\n\\n      document.addEventListener('fullscreenchange', onFullScreenChange)\\n      document.addEventListener('mozfullscreenchange', onFullScreenChange)\\n      document.addEventListener('msfullscreenchange', onFullScreenChange)\\n      document.addEventListener('webkitfullscreenchange', onFullScreenChange)\\n    </script>\\n  </body>\\n</html>\\n\";\n  };\n\n  exports.MAIN_SCRIPT = MAIN_SCRIPT;\n});","lineCount":86,"map":[[11,0,1,0],[15,0,3,7],[15,6,3,13,"PLAYER_FUNCTIONS"],[15,22,3,29],[15,25,3,32],[16,0,4,2,"muteVideo"],[16,4,4,2,"muteVideo"],[16,13,4,11],[16,15,4,13],[16,37,3,32],[17,0,5,2,"unMuteVideo"],[17,4,5,2,"unMuteVideo"],[17,15,5,13],[17,17,5,15],[17,41,3,32],[18,0,6,2,"playVideo"],[18,4,6,2,"playVideo"],[18,13,6,11],[18,15,6,13],[18,42,3,32],[19,0,7,2,"pauseVideo"],[19,4,7,2,"pauseVideo"],[19,14,7,12],[19,16,7,14],[19,44,3,32],[20,0,8,2,"durationScript"],[20,4,8,2,"durationScript"],[20,18,8,16],[20,143,3,32],[21,0,12,2,"currentTimeScript"],[21,4,12,2,"currentTimeScript"],[21,21,12,19],[21,152,3,32],[22,0,16,2,"isMutedScript"],[22,4,16,2,"isMutedScript"],[22,17,16,15],[22,134,3,32],[23,0,20,2,"getVolumeScript"],[23,4,20,2,"getVolumeScript"],[23,19,20,17],[23,140,3,32],[24,0,24,2,"getPlaybackRateScript"],[24,4,24,2,"getPlaybackRateScript"],[24,25,24,23],[24,158,3,32],[25,0,28,2,"getAvailablePlaybackRatesScript"],[25,4,28,2,"getAvailablePlaybackRatesScript"],[25,35,28,33],[25,188,3,32],[26,0,33,2,"setVolume"],[26,4,33,2,"setVolume"],[26,13,33,11],[26,15,33,13],[26,34,33,13,"volume"],[26,40,33,19],[26,42,33,23],[27,0,34,4],[27,35,34,31,"volume"],[27,41,34,4],[28,0,35,3],[28,5,3,32],[29,0,37,2,"seekToScript"],[29,4,37,2,"seekToScript"],[29,16,37,14],[29,18,37,16],[29,40,37,17,"seconds"],[29,47,37,16],[29,49,37,26,"allowSeekAhead"],[29,63,37,16],[29,65,37,45],[30,0,38,4],[30,32,38,28,"seconds"],[30,39,38,4],[30,49,38,40,"allowSeekAhead"],[30,63,38,4],[31,0,39,3],[31,5,3,32],[32,0,41,2,"setPlaybackRate"],[32,4,41,2,"setPlaybackRate"],[32,19,41,17],[32,21,41,19],[32,46,41,19,"playbackRate"],[32,58,41,31],[32,60,41,35],[33,0,42,4],[33,41,42,37,"playbackRate"],[33,53,42,4],[34,0,43,3],[34,5,3,32],[35,0,45,2,"loadPlaylist"],[35,4,45,2,"loadPlaylist"],[35,16,45,14],[35,18,45,16],[35,40,45,17,"playList"],[35,48,45,16],[35,50,45,27,"startIndex"],[35,60,45,16],[35,62,45,39,"play"],[35,66,45,16],[35,68,45,48],[36,0,46,4],[36,10,46,10,"index"],[36,15,46,15],[36,18,46,18,"startIndex"],[36,28,46,28],[36,32,46,32],[36,33,46,4],[37,0,47,4],[37,10,47,10,"playlistJson"],[37,22,47,22],[37,25,47,25,"JSON"],[37,29,47,29],[37,30,47,30,"stringify"],[37,39,47,25],[37,40,47,40,"playList"],[37,48,47,25],[37,49,47,4],[38,0,48,4],[38,10,48,10,"func"],[38,14,48,14],[38,17,48,17,"play"],[38,21,48,21],[38,24,48,24],[38,38,48,21],[38,41,48,41],[38,54,48,4],[39,0,50,4],[39,25,50,21,"func"],[39,29,50,4],[39,49,50,40,"playlistJson"],[39,61,50,4],[39,78,50,64,"index"],[39,83,50,4],[40,0,51,3],[41,0,3,32],[41,3,3,7],[43,0,54,7],[43,6,54,13,"playMode"],[43,14,54,21],[43,75,55,3,"PLAY_MODE"],[43,95,54,21],[43,97,55,15,"PLAYER_FUNCTIONS"],[43,113,55,31],[43,114,55,32,"playVideo"],[43,123,54,21],[43,167,56,3,"PAUSE_MODE"],[43,188,54,21],[43,190,56,16,"PLAYER_FUNCTIONS"],[43,206,56,32],[43,207,56,33,"pauseVideo"],[43,217,54,21],[43,230,54,7],[45,0,59,7],[45,6,59,13,"soundMode"],[45,15,59,22],[45,78,60,3,"MUTE_MODE"],[45,98,59,22],[45,100,60,15,"PLAYER_FUNCTIONS"],[45,116,60,31],[45,117,60,32,"muteVideo"],[45,126,59,22],[45,171,61,3,"UNMUTE_MODE"],[45,193,59,22],[45,195,61,17,"PLAYER_FUNCTIONS"],[45,211,61,33],[45,212,61,34,"unMuteVideo"],[45,223,59,22],[45,237,59,7],[48,0,64,7],[48,6,64,13,"MAIN_SCRIPT"],[48,17,64,24],[48,20,64,27],[48,29,64,13,"MAIN_SCRIPT"],[48,40,64,27],[48,41,65,2,"videoId"],[48,48,64,27],[48,50,66,2,"playList"],[48,58,64,27],[48,60,67,2,"initialPlayerParams"],[48,79,64,27],[48,81,68,2,"allowWebViewZoom"],[48,97,64,27],[48,99,69,2,"contentScale"],[48,111,64,27],[48,113,70,5],[49,0,70,5],[49,8,72,4,"end"],[49,11,70,5],[49,14,84,6,"initialPlayerParams"],[49,33,70,5],[49,34,72,4,"end"],[49,37,70,5],[50,0,70,5],[50,8,73,4,"rel"],[50,11,70,5],[50,14,84,6,"initialPlayerParams"],[50,33,70,5],[50,34,73,4,"rel"],[50,37,70,5],[51,0,70,5],[51,8,74,4,"color"],[51,13,70,5],[51,16,84,6,"initialPlayerParams"],[51,35,70,5],[51,36,74,4,"color"],[51,41,70,5],[52,0,70,5],[52,8,75,4,"start"],[52,13,70,5],[52,16,84,6,"initialPlayerParams"],[52,35,70,5],[52,36,75,4,"start"],[52,41,70,5],[53,0,70,5],[53,8,76,4,"playerLang"],[53,18,70,5],[53,21,84,6,"initialPlayerParams"],[53,40,70,5],[53,41,76,4,"playerLang"],[53,51,70,5],[54,0,70,5],[54,32,84,6,"initialPlayerParams"],[54,51,70,5],[54,52,77,4,"loop"],[54,56,70,5],[55,0,70,5],[55,8,77,4,"loop"],[55,12,70,5],[55,50,77,11],[55,55,70,5],[56,0,70,5],[56,8,78,4,"cc_lang_pref"],[56,20,70,5],[56,23,84,6,"initialPlayerParams"],[56,42,70,5],[56,43,78,4,"cc_lang_pref"],[56,55,70,5],[57,0,70,5],[57,8,79,4,"iv_load_policy"],[57,22,70,5],[57,25,84,6,"initialPlayerParams"],[57,44,70,5],[57,45,79,4,"iv_load_policy"],[57,59,70,5],[58,0,70,5],[58,8,80,4,"modestbranding"],[58,22,70,5],[58,25,84,6,"initialPlayerParams"],[58,44,70,5],[58,45,80,4,"modestbranding"],[58,59,70,5],[59,0,70,5],[59,33,84,6,"initialPlayerParams"],[59,52,70,5],[59,53,81,4,"controls"],[59,61,70,5],[60,0,70,5],[60,8,81,4,"controls"],[60,16,70,5],[60,55,81,15],[60,59,70,5],[61,0,70,5],[61,8,82,4,"showClosedCaptions"],[61,26,70,5],[61,29,84,6,"initialPlayerParams"],[61,48,70,5],[61,49,82,4,"showClosedCaptions"],[61,67,70,5],[62,0,70,5],[62,33,84,6,"initialPlayerParams"],[62,52,70,5],[62,53,83,4,"preventFullScreen"],[62,70,70,5],[63,0,70,5],[63,8,83,4,"preventFullScreen"],[63,25,70,5],[63,64,83,24],[63,69,70,5],[64,0,87,2],[64,8,87,8,"rel_s"],[64,13,87,13],[64,16,87,16,"rel"],[64,19,87,19],[64,22,87,22],[64,23,87,19],[64,26,87,26],[64,27,87,2],[65,0,88,2],[65,8,88,8,"loop_s"],[65,14,88,14],[65,17,88,17,"loop"],[65,21,88,21],[65,24,88,24],[65,25,88,21],[65,28,88,28],[65,29,88,2],[66,0,89,2],[66,8,89,8,"videoId_s"],[66,17,89,17],[66,20,89,20,"videoId"],[66,27,89,27],[66,31,89,31],[66,33,89,2],[67,0,90,2],[67,8,90,8,"controls_s"],[67,18,90,18],[67,21,90,21,"controls"],[67,29,90,29],[67,32,90,32],[67,33,90,29],[67,36,90,36],[67,37,90,2],[68,0,91,2],[68,8,91,8,"cc_lang_pref_s"],[68,22,91,22],[68,25,91,25,"cc_lang_pref"],[68,37,91,37],[68,41,91,41],[68,43,91,2],[69,0,92,2],[69,8,92,8,"modestbranding_s"],[69,24,92,24],[69,27,92,27,"modestbranding"],[69,41,92,41],[69,44,92,44],[69,45,92,41],[69,48,92,48],[69,49,92,2],[70,0,93,2],[70,8,93,8,"preventFullScreen_s"],[70,27,93,27],[70,30,93,30,"preventFullScreen"],[70,47,93,47],[70,50,93,50],[70,51,93,47],[70,54,93,54],[70,55,93,2],[71,0,94,2],[71,8,94,8,"showClosedCaptions_s"],[71,28,94,28],[71,31,94,31,"showClosedCaptions"],[71,49,94,49],[71,52,94,52],[71,53,94,49],[71,56,94,56],[71,57,94,2],[72,0,95,2],[72,8,95,8,"list"],[72,12,95,12],[72,15,95,15],[72,22,95,22,"playList"],[72,30,95,15],[72,35,95,35],[72,43,95,15],[72,46,95,46,"playList"],[72,54,95,15],[72,57,95,57],[72,59,95,2],[73,0,96,2],[73,8,96,8,"listType"],[73,16,96,16],[73,19,96,19],[73,26,96,26,"playList"],[73,34,96,19],[73,39,96,39],[73,47,96,19],[73,50,96,50],[73,60,96,19],[73,63,96,63],[73,65,96,2],[74,0,97,2],[74,8,97,8,"contentScale_s"],[74,22,97,22],[74,25,97,25],[74,32,97,32,"contentScale"],[74,44,97,25],[74,49,97,49],[74,57,97,25],[74,60,97,60,"contentScale"],[74,72,97,25],[74,75,97,75],[74,78,97,2],[75,0,98,2],[75,8,98,8,"playlist"],[75,16,98,16],[75,19,98,19,"Array"],[75,24,98,24],[75,25,98,25,"isArray"],[75,32,98,19],[75,33,98,33,"playList"],[75,41,98,19],[75,62,99,20,"playList"],[75,70,99,28],[75,71,99,29,"join"],[75,75,99,20],[75,76,99,34],[75,79,99,20],[75,80,98,19],[75,91,100,6],[75,93,98,2],[76,0,103,2],[76,8,103,6,"scale"],[76,13,103,11],[76,35,103,31,"contentScale_s"],[76,49,103,2],[78,0,104,2],[78,8,104,6],[78,9,104,7,"allowWebViewZoom"],[78,25,104,2],[78,27,104,25],[79,0,106,4,"scale"],[79,6,106,4,"scale"],[79,11,106,9],[79,36,106,32,"contentScale_s"],[79,50,106,4],[80,0,107,3],[82,0,109,2],[82,125,115,37,"scale"],[82,130,109,2],[82,1053,153,22,"videoId_s"],[82,1062,109,2],[82,1111,155,14,"playlist"],[82,1119,109,2],[82,1146,156,19,"end"],[82,1149,109,2],[82,1177,157,19,"rel_s"],[82,1182,109,2],[82,1240,159,20,"loop_s"],[82,1246,109,2],[82,1276,160,21,"color"],[82,1281,109,2],[82,1311,161,21,"start"],[82,1316,109,2],[82,1346,162,21,"list"],[82,1350,109,2],[82,1378,163,18,"playerLang"],[82,1388,109,2],[82,1422,164,25,"listType"],[82,1430,109,2],[82,1464,165,24,"controls_s"],[82,1474,109,2],[82,1501,166,18,"preventFullScreen_s"],[82,1520,109,2],[82,1558,167,29,"cc_lang_pref_s"],[82,1572,109,2],[82,1612,168,30,"iv_load_policy"],[82,1626,109,2],[82,1665,169,30,"modestbranding_s"],[82,1681,109,2],[82,1720,170,30,"showClosedCaptions_s"],[82,1740,109,2],[83,0,217,1],[83,3,64,7]],"functionMap":{"names":["<global>","PLAYER_FUNCTIONS.setVolume","PLAYER_FUNCTIONS.seekToScript","PLAYER_FUNCTIONS.setPlaybackRate","PLAYER_FUNCTIONS.loadPlaylist","MAIN_SCRIPT"],"mappings":"AAA;aCgC;GDE;gBEE;GFE;mBGE;GHE;gBIE;GJM;2BKa;CLyJ"}},"type":"js/module"}]}