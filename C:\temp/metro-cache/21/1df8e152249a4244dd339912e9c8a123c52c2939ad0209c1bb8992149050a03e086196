{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"prop-types","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"prop-types\"));\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kids-linkedin/new-app/kids-linkedin/node_modules/toggle-switch-react-native/ToggleSwitch.js\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var ToggleSwitch = function (_React$Component) {\n    (0, _inherits2.default)(ToggleSwitch, _React$Component);\n\n    var _super = _createSuper(ToggleSwitch);\n\n    function ToggleSwitch() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, ToggleSwitch);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.offsetX = new _reactNative.Animated.Value(0);\n      _this.dimensions = ToggleSwitch.calculateDimensions(_this.props.size);\n\n      _this.createToggleSwitchStyle = function () {\n        return [{\n          justifyContent: \"center\",\n          width: _this.dimensions.width,\n          borderRadius: 20,\n          padding: _this.dimensions.padding,\n          backgroundColor: _this.props.isOn ? _this.props.onColor : _this.props.offColor\n        }, _this.props.isOn ? _this.props.trackOnStyle : _this.props.trackOffStyle];\n      };\n\n      _this.createInsideCircleStyle = function () {\n        return [{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: _reactNative.Platform.OS === \"web\" ? 0 : 4,\n          left: _reactNative.Platform.OS === \"web\" ? 4 : 0,\n          position: \"absolute\",\n          backgroundColor: _this.props.circleColor,\n          transform: [{\n            translateX: _this.offsetX\n          }],\n          width: _this.dimensions.circleWidth,\n          height: _this.dimensions.circleHeight,\n          borderRadius: _this.dimensions.circleWidth / 2,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 2.5,\n          elevation: 1.5\n        }, _this.props.isOn ? _this.props.thumbOnStyle : _this.props.thumbOffStyle];\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(ToggleSwitch, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            animationSpeed = _this$props.animationSpeed,\n            useNativeDriver = _this$props.useNativeDriver,\n            isOn = _this$props.isOn,\n            onToggle = _this$props.onToggle,\n            disabled = _this$props.disabled,\n            labelStyle = _this$props.labelStyle,\n            label = _this$props.label,\n            icon = _this$props.icon;\n        var toValue;\n\n        if (!_reactNative.I18nManager.isRTL && isOn) {\n          toValue = this.dimensions.width - this.dimensions.translateX;\n        } else if (_reactNative.I18nManager.isRTL && isOn) {\n          toValue = -this.dimensions.width + this.dimensions.translateX;\n        } else {\n          toValue = -1;\n        }\n\n        _reactNative.Animated.timing(this.offsetX, {\n          toValue: toValue,\n          duration: animationSpeed,\n          useNativeDriver: useNativeDriver\n        }).start();\n\n        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n          style: styles.container\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }\n        }), label ? _react.default.createElement(_reactNative.Text, {\n          style: [styles.labelStyle, labelStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, label) : null, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: this.createToggleSwitchStyle(),\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return disabled ? null : onToggle(!isOn);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: this.createInsideCircleStyle(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }\n        }, icon)));\n      }\n    }], [{\n      key: \"calculateDimensions\",\n      value: function calculateDimensions(size) {\n        switch (size) {\n          case \"small\":\n            return {\n              width: 40,\n              padding: 10,\n              circleWidth: 15,\n              circleHeight: 15,\n              translateX: 22\n            };\n\n          case \"large\":\n            return {\n              width: 70,\n              padding: 20,\n              circleWidth: 30,\n              circleHeight: 30,\n              translateX: 38\n            };\n\n          default:\n            return {\n              width: 46,\n              padding: 12,\n              circleWidth: 18,\n              circleHeight: 18,\n              translateX: 26\n            };\n        }\n      }\n    }]);\n    return ToggleSwitch;\n  }(_react.default.Component);\n\n  exports.default = ToggleSwitch;\n  ToggleSwitch.propTypes = {\n    isOn: _propTypes.default.bool.isRequired,\n    label: _propTypes.default.string,\n    onColor: _propTypes.default.string,\n    offColor: _propTypes.default.string,\n    size: _propTypes.default.string,\n    labelStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n    thumbOnStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n    thumbOffStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n    trackOnStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n    trackOffStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),\n    onToggle: _propTypes.default.func,\n    icon: _propTypes.default.object,\n    disabled: _propTypes.default.bool,\n    animationSpeed: _propTypes.default.number,\n    useNativeDriver: _propTypes.default.bool,\n    circleColor: _propTypes.default.string\n  };\n  ToggleSwitch.defaultProps = {\n    isOn: false,\n    onColor: \"#4cd137\",\n    offColor: \"#ecf0f1\",\n    size: \"medium\",\n    labelStyle: {},\n    thumbOnStyle: {},\n    thumbOffStyle: {},\n    trackOnStyle: {},\n    trackOffStyle: {},\n    icon: null,\n    disabled: false,\n    animationSpeed: 300,\n    useNativeDriver: true,\n    circleColor: \"white\"\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    labelStyle: {\n      marginHorizontal: 10\n    }\n  });\n});","lineCount":237,"map":[[21,0,10,0],[23,0,11,0],[25,0,21,0],[33,6,23,21,"ToggleSwitch"],[33,18],[48,12,89,2,"offsetX"],[48,19],[48,22,89,12],[48,26,89,16,"Animated"],[48,48,89,25,"Value"],[48,53,89,12],[48,54,89,31],[48,55,89,12],[48,56],[49,12,90,2,"dimensions"],[49,22],[49,25,90,15,"ToggleSwitch"],[49,37,90,27],[49,38,90,28,"calculateDimensions"],[49,57,90,15],[49,58,90,48],[49,64,90,53,"props"],[49,69,90,48],[49,70,90,59,"size"],[49,74,90,15],[49,75],[51,12,92,2,"createToggleSwitchStyle"],[51,35],[51,38,92,28],[52,0,92,28],[52,15,92,34],[52,16,93,4],[53,0,94,6,"justifyContent"],[53,10,94,6,"justifyContent"],[53,24,94,20],[53,26,94,22],[53,34,93,4],[54,0,95,6,"width"],[54,10,95,6,"width"],[54,15,95,11],[54,17,95,13],[54,23,95,18,"dimensions"],[54,33,95,13],[54,34,95,29,"width"],[54,39,93,4],[55,0,96,6,"borderRadius"],[55,10,96,6,"borderRadius"],[55,22,96,18],[55,24,96,20],[55,26,93,4],[56,0,97,6,"padding"],[56,10,97,6,"padding"],[56,17,97,13],[56,19,97,15],[56,25,97,20,"dimensions"],[56,35,97,15],[56,36,97,31,"padding"],[56,43,93,4],[57,0,98,6,"backgroundColor"],[57,10,98,6,"backgroundColor"],[57,25,98,21],[57,27,98,23],[57,33,98,28,"props"],[57,38,98,23],[57,39,98,34,"isOn"],[57,43,98,23],[57,46,99,10],[57,52,99,15,"props"],[57,57,99,10],[57,58,99,21,"onColor"],[57,65,98,23],[57,68,100,10],[57,74,100,15,"props"],[57,79,100,10],[57,80,100,21,"offColor"],[58,0,93,4],[58,9,92,34],[58,11,102,4],[58,17,102,9,"props"],[58,22,102,4],[58,23,102,15,"isOn"],[58,27,102,4],[58,30,102,22],[58,36,102,27,"props"],[58,41,102,22],[58,42,102,33,"trackOnStyle"],[58,54,102,4],[58,57,102,48],[58,63,102,53,"props"],[58,68,102,48],[58,69,102,59,"trackOffStyle"],[58,82,92,34],[58,83,92,28],[59,0,92,28],[59,7],[61,12,105,2,"createInsideCircleStyle"],[61,35],[61,38,105,28],[62,0,105,28],[62,15,105,34],[62,16,106,4],[63,0,107,6,"alignItems"],[63,10,107,6,"alignItems"],[63,20,107,16],[63,22,107,18],[63,30,106,4],[64,0,108,6,"justifyContent"],[64,10,108,6,"justifyContent"],[64,24,108,20],[64,26,108,22],[64,34,106,4],[65,0,109,6,"margin"],[65,10,109,6,"margin"],[65,16,109,12],[65,18,109,14,"Platform"],[65,40,109,23,"OS"],[65,42,109,14],[65,47,109,30],[65,52,109,14],[65,55,109,38],[65,56,109,14],[65,59,109,42],[65,60,106,4],[66,0,110,6,"left"],[66,10,110,6,"left"],[66,14,110,10],[66,16,110,12,"Platform"],[66,38,110,21,"OS"],[66,40,110,12],[66,45,110,28],[66,50,110,12],[66,53,110,36],[66,54,110,12],[66,57,110,40],[66,58,106,4],[67,0,111,6,"position"],[67,10,111,6,"position"],[67,18,111,14],[67,20,111,16],[67,30,106,4],[68,0,112,6,"backgroundColor"],[68,10,112,6,"backgroundColor"],[68,25,112,21],[68,27,112,23],[68,33,112,28,"props"],[68,38,112,23],[68,39,112,34,"circleColor"],[68,50,106,4],[69,0,113,6,"transform"],[69,10,113,6,"transform"],[69,19,113,15],[69,21,113,17],[69,22,113,18],[70,0,113,20,"translateX"],[70,12,113,20,"translateX"],[70,22,113,30],[70,24,113,32],[70,30,113,37,"offsetX"],[71,0,113,18],[71,11,113,17],[71,12,106,4],[72,0,114,6,"width"],[72,10,114,6,"width"],[72,15,114,11],[72,17,114,13],[72,23,114,18,"dimensions"],[72,33,114,13],[72,34,114,29,"circleWidth"],[72,45,106,4],[73,0,115,6,"height"],[73,10,115,6,"height"],[73,16,115,12],[73,18,115,14],[73,24,115,19,"dimensions"],[73,34,115,14],[73,35,115,30,"circleHeight"],[73,47,106,4],[74,0,116,6,"borderRadius"],[74,10,116,6,"borderRadius"],[74,22,116,18],[74,24,116,20],[74,30,116,25,"dimensions"],[74,40,116,20],[74,41,116,36,"circleWidth"],[74,52,116,20],[74,55,116,50],[74,56,106,4],[75,0,117,6,"shadowColor"],[75,10,117,6,"shadowColor"],[75,21,117,17],[75,23,117,19],[75,29,106,4],[76,0,118,6,"shadowOffset"],[76,10,118,6,"shadowOffset"],[76,22,118,18],[76,24,118,20],[77,0,119,8,"width"],[77,12,119,8,"width"],[77,17,119,13],[77,19,119,15],[77,20,118,20],[78,0,120,8,"height"],[78,12,120,8,"height"],[78,18,120,14],[78,20,120,16],[79,0,118,20],[79,11,106,4],[80,0,122,6,"shadowOpacity"],[80,10,122,6,"shadowOpacity"],[80,23,122,19],[80,25,122,21],[80,28,106,4],[81,0,123,6,"shadowRadius"],[81,10,123,6,"shadowRadius"],[81,22,123,18],[81,24,123,20],[81,27,106,4],[82,0,124,6,"elevation"],[82,10,124,6,"elevation"],[82,19,124,15],[82,21,124,17],[83,0,106,4],[83,9,105,34],[83,11,126,4],[83,17,126,9,"props"],[83,22,126,4],[83,23,126,15,"isOn"],[83,27,126,4],[83,30,126,22],[83,36,126,27,"props"],[83,41,126,22],[83,42,126,33,"thumbOnStyle"],[83,54,126,4],[83,57,126,48],[83,63,126,53,"props"],[83,68,126,48],[83,69,126,59,"thumbOffStyle"],[83,82,105,34],[83,83,105,28],[84,0,105,28],[84,7],[91,13,129,2],[91,31,129,11],[92,0,129,11],[92,26,139,8],[92,31,139,13,"props"],[92,36,129,11],[93,0,129,11],[93,12,131,6,"animationSpeed"],[93,26,129,11],[93,41,131,6,"animationSpeed"],[93,55,129,11],[94,0,129,11],[94,12,132,6,"useNativeDriver"],[94,27,129,11],[94,42,132,6,"useNativeDriver"],[94,57,129,11],[95,0,129,11],[95,12,133,6,"isOn"],[95,16,129,11],[95,31,133,6,"isOn"],[95,35,129,11],[96,0,129,11],[96,12,134,6,"onToggle"],[96,20,129,11],[96,35,134,6,"onToggle"],[96,43,129,11],[97,0,129,11],[97,12,135,6,"disabled"],[97,20,129,11],[97,35,135,6,"disabled"],[97,43,129,11],[98,0,129,11],[98,12,136,6,"labelStyle"],[98,22,129,11],[98,37,136,6,"labelStyle"],[98,47,129,11],[99,0,129,11],[99,12,137,6,"label"],[99,17,129,11],[99,32,137,6,"label"],[99,37,129,11],[100,0,129,11],[100,12,138,6,"icon"],[100,16,129,11],[100,31,138,6,"icon"],[100,35,129,11],[101,0,141,4],[101,12,141,8,"toValue"],[101,19,141,4],[103,0,142,4],[103,12,142,8],[103,13,142,9,"I18nManager"],[103,38,142,21,"isRTL"],[103,43,142,8],[103,47,142,30,"isOn"],[103,51,142,4],[103,53,142,36],[104,0,143,6,"toValue"],[104,10,143,6,"toValue"],[104,17,143,13],[104,20,143,16],[104,25,143,21,"dimensions"],[104,35,143,16],[104,36,143,32,"width"],[104,41,143,16],[104,44,143,40],[104,49,143,45,"dimensions"],[104,59,143,40],[104,60,143,56,"translateX"],[104,70,143,6],[105,0,144,5],[105,9,142,4],[105,15,144,11],[105,19,144,15,"I18nManager"],[105,44,144,27,"isRTL"],[105,49,144,15],[105,53,144,36,"isOn"],[105,57,144,11],[105,59,144,42],[106,0,145,6,"toValue"],[106,10,145,6,"toValue"],[106,17,145,13],[106,20,145,16],[106,21,145,17],[106,26,145,22,"dimensions"],[106,36,145,17],[106,37,145,33,"width"],[106,42,145,16],[106,45,145,41],[106,50,145,46,"dimensions"],[106,60,145,41],[106,61,145,57,"translateX"],[106,71,145,6],[107,0,146,5],[107,9,144,11],[107,15,146,11],[108,0,147,6,"toValue"],[108,10,147,6,"toValue"],[108,17,147,13],[108,20,147,16],[108,21,147,17],[108,22,147,6],[109,0,148,5],[111,0,150,4,"Animated"],[111,30,150,13,"timing"],[111,36,150,4],[111,37,150,20],[111,42,150,25,"offsetX"],[111,49,150,4],[111,51,150,34],[112,0,151,6,"toValue"],[112,10,151,6,"toValue"],[112,17,151,13],[112,19,151,6,"toValue"],[112,26,150,34],[113,0,152,6,"duration"],[113,10,152,6,"duration"],[113,18,152,14],[113,20,152,16,"animationSpeed"],[113,34,150,34],[114,0,153,6,"useNativeDriver"],[114,10,153,6,"useNativeDriver"],[114,25,153,21],[114,27,153,23,"useNativeDriver"],[115,0,150,34],[115,9,150,4],[115,11,154,7,"start"],[115,16,150,4],[117,0,156,4],[117,15,157,6],[117,44,157,7],[117,61,157,6],[118,0,157,12],[118,10,157,12],[118,15,157,17],[118,17,157,19,"styles"],[118,23,157,25],[118,24,157,26,"container"],[119,0,157,6],[119,11,157,41],[119,16,157,46,"props"],[119,21,157,6],[120,0,157,6],[121,0,157,6],[122,0,157,6],[123,0,157,6],[124,0,157,6],[125,0,157,6],[126,0,157,6],[126,12,158,9,"label"],[126,17,158,14],[126,20,159,10],[126,49,159,11],[126,66,159,10],[127,0,159,16],[127,10,159,16],[127,15,159,21],[127,17,159,23],[127,18,159,24,"styles"],[127,24,159,30],[127,25,159,31,"labelStyle"],[127,35,159,23],[127,37,159,43,"labelStyle"],[127,47,159,23],[127,48,159,10],[128,0,159,10],[129,0,159,10],[130,0,159,10],[131,0,159,10],[132,0,159,10],[133,0,159,10],[134,0,159,10],[134,11,159,57,"label"],[134,16,159,10],[134,17,158,14],[134,20,160,12],[134,24,157,6],[134,26,161,8],[134,55,161,9],[134,84,161,8],[135,0,162,10],[135,10,162,10],[135,15,162,15],[135,17,162,17],[135,22,162,22,"createToggleSwitchStyle"],[135,45,162,17],[135,47,161,8],[136,0,163,10],[136,10,163,10],[136,23,163,23],[136,25,163,25],[136,28,161,8],[137,0,164,10],[137,10,164,10],[137,17,164,17],[137,19,164,19],[138,0,164,19],[138,19,164,26,"disabled"],[138,27,164,34],[138,30,164,37],[138,34,164,34],[138,37,164,44,"onToggle"],[138,45,164,52],[138,46,164,53],[138,47,164,54,"isOn"],[138,51,164,52],[138,52,164,19],[139,0,164,19],[139,11,161,8],[140,0,161,8],[141,0,161,8],[142,0,161,8],[143,0,161,8],[144,0,161,8],[145,0,161,8],[146,0,161,8],[146,11,166,10],[146,40,166,11],[146,61,166,10],[146,62,166,20],[146,66,166,10],[147,0,166,25],[147,10,166,25],[147,15,166,30],[147,17,166,32],[147,22,166,37,"createInsideCircleStyle"],[147,45,166,32],[147,47,166,10],[148,0,166,10],[149,0,166,10],[150,0,166,10],[151,0,166,10],[152,0,166,10],[153,0,166,10],[154,0,166,10],[154,11,167,13,"icon"],[154,15,166,10],[154,16,161,8],[154,17,157,6],[154,18,156,4],[155,0,172,3],[158,13,24,2],[158,42,24,29,"size"],[158,46,24,2],[158,48,24,35],[159,0,25,4],[159,16,25,12,"size"],[159,20,25,4],[160,0,26,6],[160,15,26,11],[160,22,26,6],[161,0,27,8],[161,19,27,15],[162,0,28,10,"width"],[162,14,28,10,"width"],[162,19,28,15],[162,21,28,17],[162,23,27,15],[163,0,29,10,"padding"],[163,14,29,10,"padding"],[163,21,29,17],[163,23,29,19],[163,25,27,15],[164,0,30,10,"circleWidth"],[164,14,30,10,"circleWidth"],[164,25,30,21],[164,27,30,23],[164,29,27,15],[165,0,31,10,"circleHeight"],[165,14,31,10,"circleHeight"],[165,26,31,22],[165,28,31,24],[165,30,27,15],[166,0,32,10,"translateX"],[166,14,32,10,"translateX"],[166,24,32,20],[166,26,32,22],[167,0,27,15],[167,13,27,8],[169,0,34,6],[169,15,34,11],[169,22,34,6],[170,0,35,8],[170,19,35,15],[171,0,36,10,"width"],[171,14,36,10,"width"],[171,19,36,15],[171,21,36,17],[171,23,35,15],[172,0,37,10,"padding"],[172,14,37,10,"padding"],[172,21,37,17],[172,23,37,19],[172,25,35,15],[173,0,38,10,"circleWidth"],[173,14,38,10,"circleWidth"],[173,25,38,21],[173,27,38,23],[173,29,35,15],[174,0,39,10,"circleHeight"],[174,14,39,10,"circleHeight"],[174,26,39,22],[174,28,39,24],[174,30,35,15],[175,0,40,10,"translateX"],[175,14,40,10,"translateX"],[175,24,40,20],[175,26,40,22],[176,0,35,15],[176,13,35,8],[178,0,42,6],[179,0,43,8],[179,19,43,15],[180,0,44,10,"width"],[180,14,44,10,"width"],[180,19,44,15],[180,21,44,17],[180,23,43,15],[181,0,45,10,"padding"],[181,14,45,10,"padding"],[181,21,45,17],[181,23,45,19],[181,25,43,15],[182,0,46,10,"circleWidth"],[182,14,46,10,"circleWidth"],[182,25,46,21],[182,27,46,23],[182,29,43,15],[183,0,47,10,"circleHeight"],[183,14,47,10,"circleHeight"],[183,26,47,22],[183,28,47,24],[183,30,43,15],[184,0,48,10,"translateX"],[184,14,48,10,"translateX"],[184,24,48,20],[184,26,48,22],[185,0,43,15],[185,13,43,8],[186,0,25,4],[187,0,51,3],[190,4,23,42,"React"],[190,19,23,48,"Component"],[190,28],[193,0,23,21,"ToggleSwitch"],[193,2,23,21,"ToggleSwitch"],[193,14],[193,15,53,9,"propTypes"],[193,24],[193,27,53,21],[194,0,54,4,"isOn"],[194,4,54,4,"isOn"],[194,8,54,8],[194,10,54,10,"PropTypes"],[194,29,54,20,"bool"],[194,33,54,10],[194,34,54,25,"isRequired"],[194,44,53,21],[195,0,55,4,"label"],[195,4,55,4,"label"],[195,9,55,9],[195,11,55,11,"PropTypes"],[195,30,55,21,"string"],[195,36,53,21],[196,0,56,4,"onColor"],[196,4,56,4,"onColor"],[196,11,56,11],[196,13,56,13,"PropTypes"],[196,32,56,23,"string"],[196,38,53,21],[197,0,57,4,"offColor"],[197,4,57,4,"offColor"],[197,12,57,12],[197,14,57,14,"PropTypes"],[197,33,57,24,"string"],[197,39,53,21],[198,0,58,4,"size"],[198,4,58,4,"size"],[198,8,58,8],[198,10,58,10,"PropTypes"],[198,29,58,20,"string"],[198,35,53,21],[199,0,59,4,"labelStyle"],[199,4,59,4,"labelStyle"],[199,14,59,14],[199,16,59,16,"PropTypes"],[199,35,59,26,"oneOfType"],[199,44,59,16],[199,45,59,36],[199,46,59,37,"PropTypes"],[199,65,59,47,"object"],[199,71,59,36],[199,73,59,55,"PropTypes"],[199,92,59,65,"number"],[199,98,59,36],[199,99,59,16],[199,100,53,21],[200,0,60,4,"thumbOnStyle"],[200,4,60,4,"thumbOnStyle"],[200,16,60,16],[200,18,60,18,"PropTypes"],[200,37,60,28,"oneOfType"],[200,46,60,18],[200,47,60,38],[200,48,60,39,"PropTypes"],[200,67,60,49,"object"],[200,73,60,38],[200,75,60,57,"PropTypes"],[200,94,60,67,"number"],[200,100,60,38],[200,101,60,18],[200,102,53,21],[201,0,61,4,"thumbOffStyle"],[201,4,61,4,"thumbOffStyle"],[201,17,61,17],[201,19,61,19,"PropTypes"],[201,38,61,29,"oneOfType"],[201,47,61,19],[201,48,61,39],[201,49,61,40,"PropTypes"],[201,68,61,50,"object"],[201,74,61,39],[201,76,61,58,"PropTypes"],[201,95,61,68,"number"],[201,101,61,39],[201,102,61,19],[201,103,53,21],[202,0,62,4,"trackOnStyle"],[202,4,62,4,"trackOnStyle"],[202,16,62,16],[202,18,62,18,"PropTypes"],[202,37,62,28,"oneOfType"],[202,46,62,18],[202,47,62,38],[202,48,62,39,"PropTypes"],[202,67,62,49,"object"],[202,73,62,38],[202,75,62,57,"PropTypes"],[202,94,62,67,"number"],[202,100,62,38],[202,101,62,18],[202,102,53,21],[203,0,63,4,"trackOffStyle"],[203,4,63,4,"trackOffStyle"],[203,17,63,17],[203,19,63,19,"PropTypes"],[203,38,63,29,"oneOfType"],[203,47,63,19],[203,48,63,39],[203,49,63,40,"PropTypes"],[203,68,63,50,"object"],[203,74,63,39],[203,76,63,58,"PropTypes"],[203,95,63,68,"number"],[203,101,63,39],[203,102,63,19],[203,103,53,21],[204,0,64,4,"onToggle"],[204,4,64,4,"onToggle"],[204,12,64,12],[204,14,64,14,"PropTypes"],[204,33,64,24,"func"],[204,37,53,21],[205,0,65,4,"icon"],[205,4,65,4,"icon"],[205,8,65,8],[205,10,65,10,"PropTypes"],[205,29,65,20,"object"],[205,35,53,21],[206,0,66,4,"disabled"],[206,4,66,4,"disabled"],[206,12,66,12],[206,14,66,14,"PropTypes"],[206,33,66,24,"bool"],[206,37,53,21],[207,0,67,4,"animationSpeed"],[207,4,67,4,"animationSpeed"],[207,18,67,18],[207,20,67,20,"PropTypes"],[207,39,67,30,"number"],[207,45,53,21],[208,0,68,4,"useNativeDriver"],[208,4,68,4,"useNativeDriver"],[208,19,68,19],[208,21,68,21,"PropTypes"],[208,40,68,31,"bool"],[208,44,53,21],[209,0,69,4,"circleColor"],[209,4,69,4,"circleColor"],[209,15,69,15],[209,17,69,17,"PropTypes"],[209,36,69,27,"string"],[210,0,53,21],[210,3],[211,0,23,21,"ToggleSwitch"],[211,2,23,21,"ToggleSwitch"],[211,14],[211,15,72,9,"defaultProps"],[211,27],[211,30,72,24],[212,0,73,4,"isOn"],[212,4,73,4,"isOn"],[212,8,73,8],[212,10,73,10],[212,15,72,24],[213,0,74,4,"onColor"],[213,4,74,4,"onColor"],[213,11,74,11],[213,13,74,13],[213,22,72,24],[214,0,75,4,"offColor"],[214,4,75,4,"offColor"],[214,12,75,12],[214,14,75,14],[214,23,72,24],[215,0,76,4,"size"],[215,4,76,4,"size"],[215,8,76,8],[215,10,76,10],[215,18,72,24],[216,0,77,4,"labelStyle"],[216,4,77,4,"labelStyle"],[216,14,77,14],[216,16,77,16],[216,18,72,24],[217,0,78,4,"thumbOnStyle"],[217,4,78,4,"thumbOnStyle"],[217,16,78,16],[217,18,78,18],[217,20,72,24],[218,0,79,4,"thumbOffStyle"],[218,4,79,4,"thumbOffStyle"],[218,17,79,17],[218,19,79,19],[218,21,72,24],[219,0,80,4,"trackOnStyle"],[219,4,80,4,"trackOnStyle"],[219,16,80,16],[219,18,80,18],[219,20,72,24],[220,0,81,4,"trackOffStyle"],[220,4,81,4,"trackOffStyle"],[220,17,81,17],[220,19,81,19],[220,21,72,24],[221,0,82,4,"icon"],[221,4,82,4,"icon"],[221,8,82,8],[221,10,82,10],[221,14,72,24],[222,0,83,4,"disabled"],[222,4,83,4,"disabled"],[222,12,83,12],[222,14,83,14],[222,19,72,24],[223,0,84,4,"animationSpeed"],[223,4,84,4,"animationSpeed"],[223,18,84,18],[223,20,84,20],[223,23,72,24],[224,0,85,4,"useNativeDriver"],[224,4,85,4,"useNativeDriver"],[224,19,85,19],[224,21,85,21],[224,25,72,24],[225,0,86,4,"circleColor"],[225,4,86,4,"circleColor"],[225,15,86,15],[225,17,86,17],[226,0,72,24],[226,3],[228,0,175,0],[228,6,175,6,"styles"],[228,12,175,12],[228,15,175,15,"StyleSheet"],[228,39,175,26,"create"],[228,45,175,15],[228,46,175,33],[229,0,176,2,"container"],[229,4,176,2,"container"],[229,13,176,11],[229,15,176,13],[230,0,177,4,"flexDirection"],[230,6,177,4,"flexDirection"],[230,19,177,17],[230,21,177,19],[230,26,176,13],[231,0,178,4,"alignItems"],[231,6,178,4,"alignItems"],[231,16,178,14],[231,18,178,16],[232,0,176,13],[232,5,175,33],[233,0,180,2,"labelStyle"],[233,4,180,2,"labelStyle"],[233,14,180,12],[233,16,180,14],[234,0,181,4,"marginHorizontal"],[234,6,181,4,"marginHorizontal"],[234,22,181,20],[234,24,181,22],[235,0,180,14],[236,0,175,33],[236,3,175,15],[236,4,175,0]],"functionMap":{"names":["<global>","ToggleSwitch","calculateDimensions","createToggleSwitchStyle","createInsideCircleStyle","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCsB;ECC;GD2B;4BEyC;GFW;4BGE;GHsB;EIE;mBCmC,yCD;GJQ;CDC"}},"type":"js/module"}]}