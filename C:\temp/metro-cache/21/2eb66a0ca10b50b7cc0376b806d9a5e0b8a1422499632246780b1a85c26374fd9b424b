{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], \"./_xfBase\");\n\n  var XDropWhile = function () {\n    function XDropWhile(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n    XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n    XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f) {\n        if (this.f(input)) {\n          return result;\n        }\n\n        this.f = null;\n      }\n\n      return this.xf['@@transducer/step'](result, input);\n    };\n\n    return XDropWhile;\n  }();\n\n  var _xdropWhile = _curry2(function _xdropWhile(f, xf) {\n    return new XDropWhile(f, xf);\n  });\n\n  module.exports = _xdropWhile;\n});","lineCount":35,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_xfBase"],[4,13,3,11],[4,16,3,27,"require"],[4,27,3,34],[4,59,3,0],[6,0,5,0],[6,6,5,4,"XDropWhile"],[6,16,5,14],[6,19,5,30],[6,31,5,42],[7,0,7,2],[7,13,7,11,"XDropWhile"],[7,23,7,2],[7,24,7,22,"f"],[7,25,7,2],[7,27,7,25,"xf"],[7,29,7,2],[7,31,7,29],[8,0,8,4],[8,11,8,9,"xf"],[8,13,8,4],[8,16,8,14,"xf"],[8,18,8,4],[9,0,9,4],[9,11,9,9,"f"],[9,12,9,4],[9,15,9,13,"f"],[9,16,9,4],[10,0,10,3],[12,0,11,2,"XDropWhile"],[12,4,11,2,"XDropWhile"],[12,14,11,12],[12,15,11,13,"prototype"],[12,24,11,2],[12,25,11,23],[12,44,11,2],[12,48,11,46,"_xfBase"],[12,55,11,53],[12,56,11,54,"init"],[12,60,11,2],[13,0,12,2,"XDropWhile"],[13,4,12,2,"XDropWhile"],[13,14,12,12],[13,15,12,13,"prototype"],[13,24,12,2],[13,25,12,23],[13,46,12,2],[13,50,12,48,"_xfBase"],[13,57,12,55],[13,58,12,56,"result"],[13,64,12,2],[15,0,13,2,"XDropWhile"],[15,4,13,2,"XDropWhile"],[15,14,13,12],[15,15,13,13,"prototype"],[15,24,13,2],[15,25,13,23],[15,44,13,2],[15,48,13,46],[15,58,13,56,"result"],[15,64,13,46],[15,66,13,64,"input"],[15,71,13,46],[15,73,13,71],[16,0,14,4],[16,10,14,8],[16,15,14,13,"f"],[16,16,14,4],[16,18,14,16],[17,0,15,6],[17,12,15,10],[17,17,15,15,"f"],[17,18,15,10],[17,19,15,17,"input"],[17,24,15,10],[17,25,15,6],[17,27,15,25],[18,0,16,8],[18,17,16,15,"result"],[18,23,16,8],[19,0,17,7],[21,0,18,6],[21,13,18,11,"f"],[21,14,18,6],[21,17,18,15],[21,21,18,6],[22,0,19,5],[24,0,20,4],[24,13,20,11],[24,18,20,16,"xf"],[24,20,20,11],[24,21,20,19],[24,40,20,11],[24,42,20,40,"result"],[24,48,20,11],[24,50,20,48,"input"],[24,55,20,11],[24,56,20,4],[25,0,21,3],[25,5,13,2],[27,0,23,2],[27,11,23,9,"XDropWhile"],[27,21,23,2],[28,0,24,1],[28,3,5,30],[28,5,5,0],[30,0,26,0],[30,6,26,4,"_xdropWhile"],[30,17,26,15],[30,20,26,31,"_curry2"],[30,27,26,38],[30,28,26,39],[30,37,26,48,"_xdropWhile"],[30,48,26,39],[30,49,26,60,"f"],[30,50,26,39],[30,52,26,63,"xf"],[30,54,26,39],[30,56,26,67],[31,0,27,2],[31,11,27,9],[31,15,27,13,"XDropWhile"],[31,25,27,9],[31,26,27,24,"f"],[31,27,27,9],[31,29,27,27,"xf"],[31,31,27,9],[31,32,27,2],[32,0,28,1],[32,3,26,38],[32,4,26,0],[34,0,29,0,"module"],[34,2,29,0,"module"],[34,8,29,6],[34,9,29,7,"exports"],[34,16,29,0],[34,19,29,17,"_xdropWhile"],[34,30,29,0]],"functionMap":{"names":["<global>","<anonymous>","XDropWhile","XDropWhile.prototype.transducerStep","_xdropWhile"],"mappings":"AAA;8BCI;ECE;GDG;8CEG;GFQ;CDG;uCIE;CJE"}},"type":"js/module"}]}