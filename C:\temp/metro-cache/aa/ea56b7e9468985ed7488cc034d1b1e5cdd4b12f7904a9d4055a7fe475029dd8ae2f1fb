{"dependencies":[{"name":"../util/class","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":16},"end":{"line":3,"column":40}}]}},{"name":"../util/assign","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":16},"end":{"line":4,"column":41}}]}},{"name":"../mixins/publisher","data":{"isAsync":false,"locs":[{"start":{"line":5,"column":16},"end":{"line":5,"column":46}}]}},{"name":"./grammar","data":{"isAsync":false,"locs":[{"start":{"line":6,"column":16},"end":{"line":6,"column":36}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Class = _$$_REQUIRE(_dependencyMap[0], \"../util/class\"),\n      assign = _$$_REQUIRE(_dependencyMap[1], \"../util/assign\"),\n      Publisher = _$$_REQUIRE(_dependencyMap[2], \"../mixins/publisher\"),\n      Grammar = _$$_REQUIRE(_dependencyMap[3], \"./grammar\");\n\n  var Channel = Class({\n    initialize: function initialize(name) {\n      this.id = this.name = name;\n    },\n    push: function push(message) {\n      this.trigger('message', message);\n    },\n    isUnused: function isUnused() {\n      return this.countListeners('message') === 0;\n    }\n  });\n  assign(Channel.prototype, Publisher);\n  assign(Channel, {\n    HANDSHAKE: '/meta/handshake',\n    CONNECT: '/meta/connect',\n    SUBSCRIBE: '/meta/subscribe',\n    UNSUBSCRIBE: '/meta/unsubscribe',\n    DISCONNECT: '/meta/disconnect',\n    META: 'meta',\n    SERVICE: 'service',\n    expand: function expand(name) {\n      var segments = this.parse(name),\n          channels = ['/**', name];\n      var copy = segments.slice();\n      copy[copy.length - 1] = '*';\n      channels.push(this.unparse(copy));\n\n      for (var i = 1, n = segments.length; i < n; i++) {\n        copy = segments.slice(0, i);\n        copy.push('**');\n        channels.push(this.unparse(copy));\n      }\n\n      return channels;\n    },\n    isValid: function isValid(name) {\n      return Grammar.CHANNEL_NAME.test(name) || Grammar.CHANNEL_PATTERN.test(name);\n    },\n    parse: function parse(name) {\n      if (!this.isValid(name)) return null;\n      return name.split('/').slice(1);\n    },\n    unparse: function unparse(segments) {\n      return '/' + segments.join('/');\n    },\n    isMeta: function isMeta(name) {\n      var segments = this.parse(name);\n      return segments ? segments[0] === this.META : null;\n    },\n    isService: function isService(name) {\n      var segments = this.parse(name);\n      return segments ? segments[0] === this.SERVICE : null;\n    },\n    isSubscribable: function isSubscribable(name) {\n      if (!this.isValid(name)) return null;\n      return !this.isMeta(name) && !this.isService(name);\n    },\n    Set: Class({\n      initialize: function initialize() {\n        this._channels = {};\n      },\n      getKeys: function getKeys() {\n        var keys = [];\n\n        for (var key in this._channels) {\n          keys.push(key);\n        }\n\n        return keys;\n      },\n      remove: function remove(name) {\n        delete this._channels[name];\n      },\n      hasSubscription: function hasSubscription(name) {\n        return this._channels.hasOwnProperty(name);\n      },\n      subscribe: function subscribe(names, subscription) {\n        var name;\n\n        for (var i = 0, n = names.length; i < n; i++) {\n          name = names[i];\n          var channel = this._channels[name] = this._channels[name] || new Channel(name);\n          channel.bind('message', subscription);\n        }\n      },\n      unsubscribe: function unsubscribe(name, subscription) {\n        var channel = this._channels[name];\n        if (!channel) return false;\n        channel.unbind('message', subscription);\n\n        if (channel.isUnused()) {\n          this.remove(name);\n          return true;\n        } else {\n          return false;\n        }\n      },\n      distributeMessage: function distributeMessage(message) {\n        var channels = Channel.expand(message.channel);\n\n        for (var i = 0, n = channels.length; i < n; i++) {\n          var channel = this._channels[channels[i]];\n          if (channel) channel.trigger('message', message);\n        }\n      }\n    })\n  });\n  module.exports = Channel;\n});","lineCount":117,"map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"Class"],[4,11,3,9],[4,14,3,16,"require"],[4,25,3,23],[4,61,3,0],[5,0,3,0],[5,6,4,4,"assign"],[5,12,4,10],[5,15,4,16,"require"],[5,26,4,23],[5,63,3,0],[6,0,3,0],[6,6,5,4,"Publisher"],[6,15,5,13],[6,18,5,16,"require"],[6,29,5,23],[6,71,3,0],[7,0,3,0],[7,6,6,4,"Grammar"],[7,13,6,11],[7,16,6,16,"require"],[7,27,6,23],[7,59,3,0],[9,0,8,0],[9,6,8,4,"Channel"],[9,13,8,11],[9,16,8,14,"Class"],[9,21,8,19],[9,22,8,20],[10,0,9,2,"initialize"],[10,4,9,2,"initialize"],[10,14,9,12],[10,16,9,14],[10,36,9,23,"name"],[10,40,9,14],[10,42,9,29],[11,0,10,4],[11,11,10,9,"id"],[11,13,10,4],[11,16,10,14],[11,21,10,19,"name"],[11,25,10,14],[11,28,10,26,"name"],[11,32,10,4],[12,0,11,3],[12,5,8,20],[13,0,13,2,"push"],[13,4,13,2,"push"],[13,8,13,6],[13,10,13,8],[13,24,13,17,"message"],[13,31,13,8],[13,33,13,26],[14,0,14,4],[14,11,14,9,"trigger"],[14,18,14,4],[14,19,14,17],[14,28,14,4],[14,30,14,28,"message"],[14,37,14,4],[15,0,15,3],[15,5,8,20],[16,0,17,2,"isUnused"],[16,4,17,2,"isUnused"],[16,12,17,10],[16,14,17,12],[16,34,17,23],[17,0,18,4],[17,13,18,11],[17,18,18,16,"countListeners"],[17,32,18,11],[17,33,18,31],[17,42,18,11],[17,48,18,46],[17,49,18,4],[18,0,19,3],[19,0,8,20],[19,3,8,19],[19,4,8,0],[20,0,22,0,"assign"],[20,2,22,0,"assign"],[20,8,22,6],[20,9,22,7,"Channel"],[20,16,22,14],[20,17,22,15,"prototype"],[20,26,22,6],[20,28,22,26,"Publisher"],[20,37,22,6],[20,38,22,0],[21,0,24,0,"assign"],[21,2,24,0,"assign"],[21,8,24,6],[21,9,24,7,"Channel"],[21,16,24,6],[21,18,24,16],[22,0,25,2,"HANDSHAKE"],[22,4,25,2,"HANDSHAKE"],[22,13,25,11],[22,15,25,16],[22,32,24,16],[23,0,26,2,"CONNECT"],[23,4,26,2,"CONNECT"],[23,11,26,9],[23,13,26,16],[23,28,24,16],[24,0,27,2,"SUBSCRIBE"],[24,4,27,2,"SUBSCRIBE"],[24,13,27,11],[24,15,27,16],[24,32,24,16],[25,0,28,2,"UNSUBSCRIBE"],[25,4,28,2,"UNSUBSCRIBE"],[25,15,28,13],[25,17,28,16],[25,36,24,16],[26,0,29,2,"DISCONNECT"],[26,4,29,2,"DISCONNECT"],[26,14,29,12],[26,16,29,16],[26,34,24,16],[27,0,31,2,"META"],[27,4,31,2,"META"],[27,8,31,6],[27,10,31,16],[27,16,24,16],[28,0,32,2,"SERVICE"],[28,4,32,2,"SERVICE"],[28,11,32,9],[28,13,32,16],[28,22,24,16],[29,0,34,2,"expand"],[29,4,34,2,"expand"],[29,10,34,8],[29,12,34,10],[29,28,34,19,"name"],[29,32,34,10],[29,34,34,25],[30,0,35,4],[30,10,35,8,"segments"],[30,18,35,16],[30,21,35,19],[30,26,35,24,"parse"],[30,31,35,19],[30,32,35,30,"name"],[30,36,35,19],[30,37,35,4],[31,0,35,4],[31,10,36,8,"channels"],[31,18,36,16],[31,21,36,19],[31,22,36,20],[31,27,36,19],[31,29,36,27,"name"],[31,33,36,19],[31,34,35,4],[32,0,38,4],[32,10,38,8,"copy"],[32,14,38,12],[32,17,38,15,"segments"],[32,25,38,23],[32,26,38,24,"slice"],[32,31,38,15],[32,33,38,4],[33,0,39,4,"copy"],[33,6,39,4,"copy"],[33,10,39,8],[33,11,39,9,"copy"],[33,15,39,13],[33,16,39,14,"length"],[33,22,39,9],[33,25,39,23],[33,26,39,8],[33,27,39,4],[33,30,39,28],[33,33,39,4],[34,0,40,4,"channels"],[34,6,40,4,"channels"],[34,14,40,12],[34,15,40,13,"push"],[34,19,40,4],[34,20,40,18],[34,25,40,23,"unparse"],[34,32,40,18],[34,33,40,31,"copy"],[34,37,40,18],[34,38,40,4],[36,0,42,4],[36,11,42,9],[36,15,42,13,"i"],[36,16,42,14],[36,19,42,17],[36,20,42,9],[36,22,42,20,"n"],[36,23,42,21],[36,26,42,24,"segments"],[36,34,42,32],[36,35,42,33,"length"],[36,41,42,4],[36,43,42,41,"i"],[36,44,42,42],[36,47,42,45,"n"],[36,48,42,4],[36,50,42,48,"i"],[36,51,42,49],[36,53,42,4],[36,55,42,53],[37,0,43,6,"copy"],[37,8,43,6,"copy"],[37,12,43,10],[37,15,43,13,"segments"],[37,23,43,21],[37,24,43,22,"slice"],[37,29,43,13],[37,30,43,28],[37,31,43,13],[37,33,43,31,"i"],[37,34,43,13],[37,35,43,6],[38,0,44,6,"copy"],[38,8,44,6,"copy"],[38,12,44,10],[38,13,44,11,"push"],[38,17,44,6],[38,18,44,16],[38,22,44,6],[39,0,45,6,"channels"],[39,8,45,6,"channels"],[39,16,45,14],[39,17,45,15,"push"],[39,21,45,6],[39,22,45,20],[39,27,45,25,"unparse"],[39,34,45,20],[39,35,45,33,"copy"],[39,39,45,20],[39,40,45,6],[40,0,46,5],[42,0,48,4],[42,13,48,11,"channels"],[42,21,48,4],[43,0,49,3],[43,5,24,16],[44,0,51,2,"isValid"],[44,4,51,2,"isValid"],[44,11,51,9],[44,13,51,11],[44,30,51,20,"name"],[44,34,51,11],[44,36,51,26],[45,0,52,4],[45,13,52,11,"Grammar"],[45,20,52,18],[45,21,52,19,"CHANNEL_NAME"],[45,33,52,11],[45,34,52,32,"test"],[45,38,52,11],[45,39,52,37,"name"],[45,43,52,11],[45,48,53,11,"Grammar"],[45,55,53,18],[45,56,53,19,"CHANNEL_PATTERN"],[45,71,53,11],[45,72,53,35,"test"],[45,76,53,11],[45,77,53,40,"name"],[45,81,53,11],[45,82,52,4],[46,0,54,3],[46,5,24,16],[47,0,56,2,"parse"],[47,4,56,2,"parse"],[47,9,56,7],[47,11,56,9],[47,26,56,18,"name"],[47,30,56,9],[47,32,56,24],[48,0,57,4],[48,10,57,8],[48,11,57,9],[48,16,57,14,"isValid"],[48,23,57,9],[48,24,57,22,"name"],[48,28,57,9],[48,29,57,4],[48,31,57,29],[48,38,57,36],[48,42,57,29],[49,0,58,4],[49,13,58,11,"name"],[49,17,58,15],[49,18,58,16,"split"],[49,23,58,11],[49,24,58,22],[49,27,58,11],[49,29,58,27,"slice"],[49,34,58,11],[49,35,58,33],[49,36,58,11],[49,37,58,4],[50,0,59,3],[50,5,24,16],[51,0,61,2,"unparse"],[51,4,61,2,"unparse"],[51,11,61,9],[51,13,61,11],[51,30,61,20,"segments"],[51,38,61,11],[51,40,61,30],[52,0,62,4],[52,13,62,11],[52,19,62,17,"segments"],[52,27,62,25],[52,28,62,26,"join"],[52,32,62,17],[52,33,62,31],[52,36,62,17],[52,37,62,4],[53,0,63,3],[53,5,24,16],[54,0,65,2,"isMeta"],[54,4,65,2,"isMeta"],[54,10,65,8],[54,12,65,10],[54,28,65,19,"name"],[54,32,65,10],[54,34,65,25],[55,0,66,4],[55,10,66,8,"segments"],[55,18,66,16],[55,21,66,19],[55,26,66,24,"parse"],[55,31,66,19],[55,32,66,30,"name"],[55,36,66,19],[55,37,66,4],[56,0,67,4],[56,13,67,11,"segments"],[56,21,67,19],[56,24,67,23,"segments"],[56,32,67,31],[56,33,67,32],[56,34,67,31],[56,35,67,23],[56,40,67,39],[56,45,67,44,"META"],[56,49,67,19],[56,52,67,52],[56,56,67,4],[57,0,68,3],[57,5,24,16],[58,0,70,2,"isService"],[58,4,70,2,"isService"],[58,13,70,11],[58,15,70,13],[58,34,70,22,"name"],[58,38,70,13],[58,40,70,28],[59,0,71,4],[59,10,71,8,"segments"],[59,18,71,16],[59,21,71,19],[59,26,71,24,"parse"],[59,31,71,19],[59,32,71,30,"name"],[59,36,71,19],[59,37,71,4],[60,0,72,4],[60,13,72,11,"segments"],[60,21,72,19],[60,24,72,23,"segments"],[60,32,72,31],[60,33,72,32],[60,34,72,31],[60,35,72,23],[60,40,72,39],[60,45,72,44,"SERVICE"],[60,52,72,19],[60,55,72,55],[60,59,72,4],[61,0,73,3],[61,5,24,16],[62,0,75,2,"isSubscribable"],[62,4,75,2,"isSubscribable"],[62,18,75,16],[62,20,75,18],[62,44,75,27,"name"],[62,48,75,18],[62,50,75,33],[63,0,76,4],[63,10,76,8],[63,11,76,9],[63,16,76,14,"isValid"],[63,23,76,9],[63,24,76,22,"name"],[63,28,76,9],[63,29,76,4],[63,31,76,29],[63,38,76,36],[63,42,76,29],[64,0,77,4],[64,13,77,11],[64,14,77,12],[64,19,77,17,"isMeta"],[64,25,77,12],[64,26,77,24,"name"],[64,30,77,12],[64,31,77,11],[64,35,77,33],[64,36,77,34],[64,41,77,39,"isService"],[64,50,77,34],[64,51,77,49,"name"],[64,55,77,34],[64,56,77,4],[65,0,78,3],[65,5,24,16],[66,0,80,2,"Set"],[66,4,80,2,"Set"],[66,7,80,5],[66,9,80,7,"Class"],[66,14,80,12],[66,15,80,13],[67,0,81,4,"initialize"],[67,6,81,4,"initialize"],[67,16,81,14],[67,18,81,16],[67,40,81,27],[68,0,82,6],[68,13,82,11,"_channels"],[68,22,82,6],[68,25,82,23],[68,27,82,6],[69,0,83,5],[69,7,80,13],[70,0,85,4,"getKeys"],[70,6,85,4,"getKeys"],[70,13,85,11],[70,15,85,13],[70,34,85,24],[71,0,86,6],[71,12,86,10,"keys"],[71,16,86,14],[71,19,86,17],[71,21,86,6],[73,0,87,6],[73,13,87,11],[73,17,87,15,"key"],[73,20,87,6],[73,24,87,22],[73,29,87,27,"_channels"],[73,38,87,6],[74,0,87,38,"keys"],[74,10,87,38,"keys"],[74,14,87,42],[74,15,87,43,"push"],[74,19,87,38],[74,20,87,48,"key"],[74,23,87,38],[75,0,87,6],[77,0,88,6],[77,15,88,13,"keys"],[77,19,88,6],[78,0,89,5],[78,7,80,13],[79,0,91,4,"remove"],[79,6,91,4,"remove"],[79,12,91,10],[79,14,91,12],[79,30,91,21,"name"],[79,34,91,12],[79,36,91,27],[80,0,92,6],[80,15,92,13],[80,20,92,18,"_channels"],[80,29,92,13],[80,30,92,28,"name"],[80,34,92,13],[80,35,92,6],[81,0,93,5],[81,7,80,13],[82,0,95,4,"hasSubscription"],[82,6,95,4,"hasSubscription"],[82,21,95,19],[82,23,95,21],[82,48,95,30,"name"],[82,52,95,21],[82,54,95,36],[83,0,96,6],[83,15,96,13],[83,20,96,18,"_channels"],[83,29,96,13],[83,30,96,28,"hasOwnProperty"],[83,44,96,13],[83,45,96,43,"name"],[83,49,96,13],[83,50,96,6],[84,0,97,5],[84,7,80,13],[85,0,99,4,"subscribe"],[85,6,99,4,"subscribe"],[85,15,99,13],[85,17,99,15],[85,36,99,24,"names"],[85,41,99,15],[85,43,99,31,"subscription"],[85,55,99,15],[85,57,99,45],[86,0,100,6],[86,12,100,10,"name"],[86,16,100,6],[88,0,101,6],[88,13,101,11],[88,17,101,15,"i"],[88,18,101,16],[88,21,101,19],[88,22,101,11],[88,24,101,22,"n"],[88,25,101,23],[88,28,101,26,"names"],[88,33,101,31],[88,34,101,32,"length"],[88,40,101,6],[88,42,101,40,"i"],[88,43,101,41],[88,46,101,44,"n"],[88,47,101,6],[88,49,101,47,"i"],[88,50,101,48],[88,52,101,6],[88,54,101,52],[89,0,102,8,"name"],[89,10,102,8,"name"],[89,14,102,12],[89,17,102,15,"names"],[89,22,102,20],[89,23,102,21,"i"],[89,24,102,20],[89,25,102,8],[90,0,103,8],[90,14,103,12,"channel"],[90,21,103,19],[90,24,103,22],[90,29,103,27,"_channels"],[90,38,103,22],[90,39,103,37,"name"],[90,43,103,22],[90,47,103,45],[90,52,103,50,"_channels"],[90,61,103,45],[90,62,103,60,"name"],[90,66,103,45],[90,71,103,69],[90,75,103,73,"Channel"],[90,82,103,69],[90,83,103,81,"name"],[90,87,103,69],[90,88,103,8],[91,0,104,8,"channel"],[91,10,104,8,"channel"],[91,17,104,15],[91,18,104,16,"bind"],[91,22,104,8],[91,23,104,21],[91,32,104,8],[91,34,104,32,"subscription"],[91,46,104,8],[92,0,105,7],[93,0,106,5],[93,7,80,13],[94,0,108,4,"unsubscribe"],[94,6,108,4,"unsubscribe"],[94,17,108,15],[94,19,108,17],[94,40,108,26,"name"],[94,44,108,17],[94,46,108,32,"subscription"],[94,58,108,17],[94,60,108,46],[95,0,109,6],[95,12,109,10,"channel"],[95,19,109,17],[95,22,109,20],[95,27,109,25,"_channels"],[95,36,109,20],[95,37,109,35,"name"],[95,41,109,20],[95,42,109,6],[96,0,110,6],[96,12,110,10],[96,13,110,11,"channel"],[96,20,110,6],[96,22,110,20],[96,29,110,27],[96,34,110,20],[97,0,111,6,"channel"],[97,8,111,6,"channel"],[97,15,111,13],[97,16,111,14,"unbind"],[97,22,111,6],[97,23,111,21],[97,32,111,6],[97,34,111,32,"subscription"],[97,46,111,6],[99,0,113,6],[99,12,113,10,"channel"],[99,19,113,17],[99,20,113,18,"isUnused"],[99,28,113,10],[99,30,113,6],[99,32,113,30],[100,0,114,8],[100,15,114,13,"remove"],[100,21,114,8],[100,22,114,20,"name"],[100,26,114,8],[101,0,115,8],[101,17,115,15],[101,21,115,8],[102,0,116,7],[102,9,113,6],[102,15,116,13],[103,0,117,8],[103,17,117,15],[103,22,117,8],[104,0,118,7],[105,0,119,5],[105,7,80,13],[106,0,121,4,"distributeMessage"],[106,6,121,4,"distributeMessage"],[106,23,121,21],[106,25,121,23],[106,52,121,32,"message"],[106,59,121,23],[106,61,121,41],[107,0,122,6],[107,12,122,10,"channels"],[107,20,122,18],[107,23,122,21,"Channel"],[107,30,122,28],[107,31,122,29,"expand"],[107,37,122,21],[107,38,122,36,"message"],[107,45,122,43],[107,46,122,44,"channel"],[107,53,122,21],[107,54,122,6],[109,0,124,6],[109,13,124,11],[109,17,124,15,"i"],[109,18,124,16],[109,21,124,19],[109,22,124,11],[109,24,124,22,"n"],[109,25,124,23],[109,28,124,26,"channels"],[109,36,124,34],[109,37,124,35,"length"],[109,43,124,6],[109,45,124,43,"i"],[109,46,124,44],[109,49,124,47,"n"],[109,50,124,6],[109,52,124,50,"i"],[109,53,124,51],[109,55,124,6],[109,57,124,55],[110,0,125,8],[110,14,125,12,"channel"],[110,21,125,19],[110,24,125,22],[110,29,125,27,"_channels"],[110,38,125,22],[110,39,125,37,"channels"],[110,47,125,45],[110,48,125,46,"i"],[110,49,125,45],[110,50,125,22],[110,51,125,8],[111,0,126,8],[111,14,126,12,"channel"],[111,21,126,8],[111,23,126,21,"channel"],[111,30,126,28],[111,31,126,29,"trigger"],[111,38,126,21],[111,39,126,37],[111,48,126,21],[111,50,126,48,"message"],[111,57,126,21],[112,0,127,7],[113,0,128,5],[114,0,80,13],[114,5,80,12],[115,0,24,16],[115,3,24,6],[115,4,24,0],[116,0,132,0,"module"],[116,2,132,0,"module"],[116,8,132,6],[116,9,132,7,"exports"],[116,16,132,0],[116,19,132,17,"Channel"],[116,26,132,0]],"functionMap":{"names":["<global>","Class$argument_0.initialize","Class$argument_0.push","Class$argument_0.isUnused","assign$argument_1.expand","assign$argument_1.isValid","assign$argument_1.parse","assign$argument_1.unparse","assign$argument_1.isMeta","assign$argument_1.isService","assign$argument_1.isSubscribable","Class$argument_0.getKeys","Class$argument_0.remove","Class$argument_0.hasSubscription","Class$argument_0.subscribe","Class$argument_0.unsubscribe","Class$argument_0.distributeMessage"],"mappings":"AAA;cCQ;GDE;QEE;GFE;YGE;GHE;UIe;GJe;WKE;GLG;SME;GNG;WOE;GPE;UQE;GRG;aSE;GTG;kBUE;GVG;gBCG;KDE;aWE;KXI;YYE;KZE;qBaE;KbE;ecE;KdO;iBeE;KfW;uBgBE;KhBO"}},"type":"js/module"}]}