{"dependencies":[{"name":"./core","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":37},"end":{"line":4,"column":54}}]}},{"name":"./sha1","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":56},"end":{"line":4,"column":73}}]}},{"name":"./hmac","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":75},"end":{"line":4,"column":92}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  ;\n\n  (function (root, factory, undef) {\n    if (typeof exports === \"object\") {\n      module.exports = exports = factory(_$$_REQUIRE(_dependencyMap[0], \"./core\"), _$$_REQUIRE(_dependencyMap[1], \"./sha1\"), _$$_REQUIRE(_dependencyMap[2], \"./hmac\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      define([\"./core\", \"./sha1\", \"./hmac\"], factory);\n    } else {\n      factory(root.CryptoJS);\n    }\n  })(this, function (CryptoJS) {\n    (function () {\n      var C = CryptoJS;\n      var C_lib = C.lib;\n      var Base = C_lib.Base;\n      var WordArray = C_lib.WordArray;\n      var C_algo = C.algo;\n      var SHA1 = C_algo.SHA1;\n      var HMAC = C_algo.HMAC;\n      var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n        cfg: Base.extend({\n          keySize: 128 / 32,\n          hasher: SHA1,\n          iterations: 1\n        }),\n        init: function init(cfg) {\n          this.cfg = this.cfg.extend(cfg);\n        },\n        compute: function compute(password, salt) {\n          var cfg = this.cfg;\n          var hmac = HMAC.create(cfg.hasher, password);\n          var derivedKey = WordArray.create();\n          var blockIndex = WordArray.create([0x00000001]);\n          var derivedKeyWords = derivedKey.words;\n          var blockIndexWords = blockIndex.words;\n          var keySize = cfg.keySize;\n          var iterations = cfg.iterations;\n\n          while (derivedKeyWords.length < keySize) {\n            var block = hmac.update(salt).finalize(blockIndex);\n            hmac.reset();\n            var blockWords = block.words;\n            var blockWordsLength = blockWords.length;\n            var intermediate = block;\n\n            for (var i = 1; i < iterations; i++) {\n              intermediate = hmac.finalize(intermediate);\n              hmac.reset();\n              var intermediateWords = intermediate.words;\n\n              for (var j = 0; j < blockWordsLength; j++) {\n                blockWords[j] ^= intermediateWords[j];\n              }\n            }\n\n            derivedKey.concat(block);\n            blockIndexWords[0]++;\n          }\n\n          derivedKey.sigBytes = keySize * 4;\n          return derivedKey;\n        }\n      });\n\n      C.PBKDF2 = function (password, salt, cfg) {\n        return PBKDF2.create(cfg).compute(password, salt);\n      };\n    })();\n\n    return CryptoJS.PBKDF2;\n  });\n});","lineCount":73,"map":[[2,0,1,0],[4,0,1,2],[4,13,1,12,"root"],[4,17,1,2],[4,19,1,18,"factory"],[4,26,1,2],[4,28,1,27,"undef"],[4,33,1,2],[4,35,1,34],[5,0,2,1],[5,8,2,5],[5,15,2,12,"exports"],[5,22,2,5],[5,27,2,24],[5,35,2,1],[5,37,2,34],[6,0,4,2,"module"],[6,6,4,2,"module"],[6,12,4,8],[6,13,4,9,"exports"],[6,20,4,2],[6,23,4,19,"exports"],[6,30,4,26],[6,33,4,29,"factory"],[6,40,4,36],[6,41,4,37,"require"],[6,52,4,44],[6,81,4,36],[6,83,4,56,"require"],[6,94,4,63],[6,123,4,36],[6,125,4,75,"require"],[6,136,4,82],[6,165,4,36],[6,166,4,2],[7,0,5,2],[7,5,2,1],[7,11,6,6],[7,15,6,10],[7,22,6,17,"define"],[7,28,6,10],[7,33,6,28],[7,43,6,10],[7,47,6,42,"define"],[7,53,6,48],[7,54,6,49,"amd"],[7,57,6,6],[7,59,6,54],[8,0,8,2,"define"],[8,6,8,2,"define"],[8,12,8,8],[8,13,8,9],[8,14,8,10],[8,22,8,9],[8,24,8,20],[8,32,8,9],[8,34,8,30],[8,42,8,9],[8,43,8,8],[8,45,8,41,"factory"],[8,52,8,8],[8,53,8,2],[9,0,9,2],[9,5,6,6],[9,11,10,6],[10,0,12,2,"factory"],[10,6,12,2,"factory"],[10,13,12,9],[10,14,12,10,"root"],[10,18,12,14],[10,19,12,15,"CryptoJS"],[10,27,12,9],[10,28,12,2],[11,0,13,2],[12,0,14,1],[12,3,1,2],[12,5,14,2],[12,9,1,2],[12,11,14,8],[12,21,14,18,"CryptoJS"],[12,29,14,8],[12,31,14,28],[13,0,16,2],[13,17,16,14],[14,0,18,5],[14,10,18,9,"C"],[14,11,18,10],[14,14,18,13,"CryptoJS"],[14,22,18,5],[15,0,19,5],[15,10,19,9,"C_lib"],[15,15,19,14],[15,18,19,17,"C"],[15,19,19,18],[15,20,19,19,"lib"],[15,23,19,5],[16,0,20,5],[16,10,20,9,"Base"],[16,14,20,13],[16,17,20,16,"C_lib"],[16,22,20,21],[16,23,20,22,"Base"],[16,27,20,5],[17,0,21,5],[17,10,21,9,"WordArray"],[17,19,21,18],[17,22,21,21,"C_lib"],[17,27,21,26],[17,28,21,27,"WordArray"],[17,37,21,5],[18,0,22,5],[18,10,22,9,"C_algo"],[18,16,22,15],[18,19,22,18,"C"],[18,20,22,19],[18,21,22,20,"algo"],[18,25,22,5],[19,0,23,5],[19,10,23,9,"SHA1"],[19,14,23,13],[19,17,23,16,"C_algo"],[19,23,23,22],[19,24,23,23,"SHA1"],[19,28,23,5],[20,0,24,5],[20,10,24,9,"HMAC"],[20,14,24,13],[20,17,24,16,"C_algo"],[20,23,24,22],[20,24,24,23,"HMAC"],[20,28,24,5],[21,0,29,5],[21,10,29,9,"PBKDF2"],[21,16,29,15],[21,19,29,18,"C_algo"],[21,25,29,24],[21,26,29,25,"PBKDF2"],[21,32,29,18],[21,35,29,34,"Base"],[21,39,29,38],[21,40,29,39,"extend"],[21,46,29,34],[21,47,29,46],[22,0,37,9,"cfg"],[22,8,37,9,"cfg"],[22,11,37,12],[22,13,37,14,"Base"],[22,17,37,18],[22,18,37,19,"extend"],[22,24,37,14],[22,25,37,26],[23,0,38,13,"keySize"],[23,10,38,13,"keySize"],[23,17,38,20],[23,19,38,22],[23,25,38,26],[23,27,37,26],[24,0,39,13,"hasher"],[24,10,39,13,"hasher"],[24,16,39,19],[24,18,39,21,"SHA1"],[24,22,37,26],[25,0,40,13,"iterations"],[25,10,40,13,"iterations"],[25,20,40,23],[25,22,40,25],[26,0,37,26],[26,9,37,14],[26,10,29,46],[27,0,54,9,"init"],[27,8,54,9,"init"],[27,12,54,13],[27,14,54,15],[27,28,54,25,"cfg"],[27,31,54,15],[27,33,54,30],[28,0,55,13],[28,15,55,18,"cfg"],[28,18,55,13],[28,21,55,24],[28,26,55,29,"cfg"],[28,29,55,24],[28,30,55,33,"extend"],[28,36,55,24],[28,37,55,40,"cfg"],[28,40,55,24],[28,41,55,13],[29,0,56,10],[29,9,29,46],[30,0,70,9,"compute"],[30,8,70,9,"compute"],[30,15,70,16],[30,17,70,18],[30,34,70,28,"password"],[30,42,70,18],[30,44,70,38,"salt"],[30,48,70,18],[30,50,70,44],[31,0,72,13],[31,14,72,17,"cfg"],[31,17,72,20],[31,20,72,23],[31,25,72,28,"cfg"],[31,28,72,13],[32,0,75,13],[32,14,75,17,"hmac"],[32,18,75,21],[32,21,75,24,"HMAC"],[32,25,75,28],[32,26,75,29,"create"],[32,32,75,24],[32,33,75,36,"cfg"],[32,36,75,39],[32,37,75,40,"hasher"],[32,43,75,24],[32,45,75,48,"password"],[32,53,75,24],[32,54,75,13],[33,0,78,13],[33,14,78,17,"derivedKey"],[33,24,78,27],[33,27,78,30,"WordArray"],[33,36,78,39],[33,37,78,40,"create"],[33,43,78,30],[33,45,78,13],[34,0,79,13],[34,14,79,17,"blockIndex"],[34,24,79,27],[34,27,79,30,"WordArray"],[34,36,79,39],[34,37,79,40,"create"],[34,43,79,30],[34,44,79,47],[34,45,79,48],[34,55,79,47],[34,56,79,30],[34,57,79,13],[35,0,82,13],[35,14,82,17,"derivedKeyWords"],[35,29,82,32],[35,32,82,35,"derivedKey"],[35,42,82,45],[35,43,82,46,"words"],[35,48,82,13],[36,0,83,13],[36,14,83,17,"blockIndexWords"],[36,29,83,32],[36,32,83,35,"blockIndex"],[36,42,83,45],[36,43,83,46,"words"],[36,48,83,13],[37,0,84,13],[37,14,84,17,"keySize"],[37,21,84,24],[37,24,84,27,"cfg"],[37,27,84,30],[37,28,84,31,"keySize"],[37,35,84,13],[38,0,85,13],[38,14,85,17,"iterations"],[38,24,85,27],[38,27,85,30,"cfg"],[38,30,85,33],[38,31,85,34,"iterations"],[38,41,85,13],[40,0,88,13],[40,17,88,20,"derivedKeyWords"],[40,32,88,35],[40,33,88,36,"length"],[40,39,88,20],[40,42,88,45,"keySize"],[40,49,88,13],[40,51,88,54],[41,0,89,17],[41,16,89,21,"block"],[41,21,89,26],[41,24,89,29,"hmac"],[41,28,89,33],[41,29,89,34,"update"],[41,35,89,29],[41,36,89,41,"salt"],[41,40,89,29],[41,42,89,47,"finalize"],[41,50,89,29],[41,51,89,56,"blockIndex"],[41,61,89,29],[41,62,89,17],[42,0,90,17,"hmac"],[42,12,90,17,"hmac"],[42,16,90,21],[42,17,90,22,"reset"],[42,22,90,17],[43,0,93,17],[43,16,93,21,"blockWords"],[43,26,93,31],[43,29,93,34,"block"],[43,34,93,39],[43,35,93,40,"words"],[43,40,93,17],[44,0,94,17],[44,16,94,21,"blockWordsLength"],[44,32,94,37],[44,35,94,40,"blockWords"],[44,45,94,50],[44,46,94,51,"length"],[44,52,94,17],[45,0,97,17],[45,16,97,21,"intermediate"],[45,28,97,33],[45,31,97,36,"block"],[45,36,97,17],[47,0,98,17],[47,17,98,22],[47,21,98,26,"i"],[47,22,98,27],[47,25,98,30],[47,26,98,17],[47,28,98,33,"i"],[47,29,98,34],[47,32,98,37,"iterations"],[47,42,98,17],[47,44,98,49,"i"],[47,45,98,50],[47,47,98,17],[47,49,98,54],[48,0,99,21,"intermediate"],[48,14,99,21,"intermediate"],[48,26,99,33],[48,29,99,36,"hmac"],[48,33,99,40],[48,34,99,41,"finalize"],[48,42,99,36],[48,43,99,50,"intermediate"],[48,55,99,36],[48,56,99,21],[49,0,100,21,"hmac"],[49,14,100,21,"hmac"],[49,18,100,25],[49,19,100,26,"reset"],[49,24,100,21],[50,0,103,21],[50,18,103,25,"intermediateWords"],[50,35,103,42],[50,38,103,45,"intermediate"],[50,50,103,57],[50,51,103,58,"words"],[50,56,103,21],[52,0,106,21],[52,19,106,26],[52,23,106,30,"j"],[52,24,106,31],[52,27,106,34],[52,28,106,21],[52,30,106,37,"j"],[52,31,106,38],[52,34,106,41,"blockWordsLength"],[52,50,106,21],[52,52,106,59,"j"],[52,53,106,60],[52,55,106,21],[52,57,106,64],[53,0,107,25,"blockWords"],[53,16,107,25,"blockWords"],[53,26,107,35],[53,27,107,36,"j"],[53,28,107,35],[53,29,107,25],[53,33,107,42,"intermediateWords"],[53,50,107,59],[53,51,107,60,"j"],[53,52,107,59],[53,53,107,25],[54,0,108,22],[55,0,109,18],[57,0,111,17,"derivedKey"],[57,12,111,17,"derivedKey"],[57,22,111,27],[57,23,111,28,"concat"],[57,29,111,17],[57,30,111,35,"block"],[57,35,111,17],[58,0,112,17,"blockIndexWords"],[58,12,112,17,"blockIndexWords"],[58,27,112,32],[58,28,112,33],[58,29,112,32],[58,30,112,17],[59,0,113,14],[61,0,114,13,"derivedKey"],[61,10,114,13,"derivedKey"],[61,20,114,23],[61,21,114,24,"sigBytes"],[61,29,114,13],[61,32,114,35,"keySize"],[61,39,114,42],[61,42,114,45],[61,43,114,13],[62,0,116,13],[62,17,116,20,"derivedKey"],[62,27,116,13],[63,0,117,10],[64,0,29,46],[64,7,29,34],[64,8,29,5],[66,0,137,5,"C"],[66,6,137,5,"C"],[66,7,137,6],[66,8,137,7,"PBKDF2"],[66,14,137,5],[66,17,137,16],[66,27,137,26,"password"],[66,35,137,16],[66,37,137,36,"salt"],[66,41,137,16],[66,43,137,42,"cfg"],[66,46,137,16],[66,48,137,47],[67,0,138,9],[67,15,138,16,"PBKDF2"],[67,21,138,22],[67,22,138,23,"create"],[67,28,138,16],[67,29,138,30,"cfg"],[67,32,138,16],[67,34,138,35,"compute"],[67,41,138,16],[67,42,138,43,"password"],[67,50,138,16],[67,52,138,53,"salt"],[67,56,138,16],[67,57,138,9],[68,0,139,6],[68,7,137,5],[69,0,140,2],[69,5,16,2],[69,8,16,1],[71,0,143,1],[71,11,143,8,"CryptoJS"],[71,19,143,16],[71,20,143,17,"PBKDF2"],[71,26,143,1],[72,0,145,1],[72,3,1,2],[72,4,1,1]],"functionMap":{"names":["<global>","<anonymous>","Base.extend$argument_0.init","Base.extend$argument_0.compute","C.PBKDF2"],"mappings":"AAA,EC;CDa,OC;eCwC;UDE;kBEc;UF+C;gBGoB;MHE;CDM"}},"type":"js/module"}]}