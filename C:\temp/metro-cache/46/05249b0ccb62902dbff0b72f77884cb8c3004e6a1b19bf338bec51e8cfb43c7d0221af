{"dependencies":[{"name":"../util/class","data":{"isAsync":false}},{"name":"../util/cookies","data":{"isAsync":false}},{"name":"../util/promise","data":{"isAsync":false}},{"name":"../util/array","data":{"isAsync":false}},{"name":"../util/assign","data":{"isAsync":false}},{"name":"../mixins/logging","data":{"isAsync":false}},{"name":"../mixins/timeouts","data":{"isAsync":false}},{"name":"../protocol/channel","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Class = _$$_REQUIRE(_dependencyMap[0], \"../util/class\"),\n      Cookie = _$$_REQUIRE(_dependencyMap[1], \"../util/cookies\").Cookie,\n      Promise = _$$_REQUIRE(_dependencyMap[2], \"../util/promise\"),\n      array = _$$_REQUIRE(_dependencyMap[3], \"../util/array\"),\n      assign = _$$_REQUIRE(_dependencyMap[4], \"../util/assign\"),\n      Logging = _$$_REQUIRE(_dependencyMap[5], \"../mixins/logging\"),\n      Timeouts = _$$_REQUIRE(_dependencyMap[6], \"../mixins/timeouts\"),\n      Channel = _$$_REQUIRE(_dependencyMap[7], \"../protocol/channel\");\n\n  var Transport = assign(Class({\n    className: 'Transport',\n    DEFAULT_PORTS: {\n      'http:': 80,\n      'https:': 443,\n      'ws:': 80,\n      'wss:': 443\n    },\n    MAX_DELAY: 0,\n    batching: true,\n    initialize: function initialize(dispatcher, endpoint) {\n      this._dispatcher = dispatcher;\n      this.endpoint = endpoint;\n      this._outbox = [];\n      this._proxy = assign({}, this._dispatcher.proxy);\n      if (!this._proxy.origin) this._proxy.origin = this._findProxy();\n    },\n    close: function close() {},\n    encode: function encode(messages) {\n      return '';\n    },\n    sendMessage: function sendMessage(message) {\n      this.debug('Client ? sending message to ?: ?', this._dispatcher.clientId, this.endpoint.href, message);\n      if (!this.batching) return Promise.resolve(this.request([message]));\n\n      this._outbox.push(message);\n\n      this._flushLargeBatch();\n\n      if (message.channel === Channel.HANDSHAKE) return this._publish(0.01);\n      if (message.channel === Channel.CONNECT) this._connectMessage = message;\n      return this._publish(this.MAX_DELAY);\n    },\n    _makePromise: function _makePromise() {\n      var self = this;\n      this._requestPromise = this._requestPromise || new Promise(function (resolve) {\n        self._resolvePromise = resolve;\n      });\n    },\n    _publish: function _publish(delay) {\n      this._makePromise();\n\n      this.addTimeout('publish', delay, function () {\n        this._flush();\n\n        delete this._requestPromise;\n      }, this);\n      return this._requestPromise;\n    },\n    _flush: function _flush() {\n      this.removeTimeout('publish');\n      if (this._outbox.length > 1 && this._connectMessage) this._connectMessage.advice = {\n        timeout: 0\n      };\n\n      this._resolvePromise(this.request(this._outbox));\n\n      this._connectMessage = null;\n      this._outbox = [];\n    },\n    _flushLargeBatch: function _flushLargeBatch() {\n      var string = this.encode(this._outbox);\n      if (string.length < this._dispatcher.maxRequestSize) return;\n\n      var last = this._outbox.pop();\n\n      this._makePromise();\n\n      this._flush();\n\n      if (last) this._outbox.push(last);\n    },\n    _receive: function _receive(replies) {\n      if (!replies) return;\n      replies = [].concat(replies);\n      this.debug('Client ? received from ? via ?: ?', this._dispatcher.clientId, this.endpoint.href, this.connectionType, replies);\n\n      for (var i = 0, n = replies.length; i < n; i++) {\n        this._dispatcher.handleResponse(replies[i]);\n      }\n    },\n    _handleError: function _handleError(messages, immediate) {\n      messages = [].concat(messages);\n      this.debug('Client ? failed to send to ? via ?: ?', this._dispatcher.clientId, this.endpoint.href, this.connectionType, messages);\n\n      for (var i = 0, n = messages.length; i < n; i++) {\n        this._dispatcher.handleError(messages[i]);\n      }\n    },\n    _getCookies: function _getCookies() {\n      var cookies = this._dispatcher.cookies,\n          url = this.endpoint.href;\n      if (!cookies) return '';\n      return array.map(cookies.getCookiesSync(url), function (cookie) {\n        return cookie.cookieString();\n      }).join('; ');\n    },\n    _storeCookies: function _storeCookies(setCookie) {\n      var cookies = this._dispatcher.cookies,\n          url = this.endpoint.href,\n          cookie;\n      if (!setCookie || !cookies) return;\n      setCookie = [].concat(setCookie);\n\n      for (var i = 0, n = setCookie.length; i < n; i++) {\n        cookie = Cookie.parse(setCookie[i]);\n        cookies.setCookieSync(cookie, url);\n      }\n    },\n    _findProxy: function _findProxy() {\n      if (typeof process === 'undefined') return undefined;\n      var protocol = this.endpoint.protocol;\n      if (!protocol) return undefined;\n      var name = protocol.replace(/:$/, '').toLowerCase() + '_proxy',\n          upcase = name.toUpperCase(),\n          env = process.env,\n          keys,\n          proxy;\n\n      if (name === 'http_proxy' && env.REQUEST_METHOD) {\n        keys = Object.keys(env).filter(function (k) {\n          return /^http_proxy$/i.test(k);\n        });\n\n        if (keys.length === 1) {\n          if (keys[0] === name && env[upcase] === undefined) proxy = env[name];\n        } else if (keys.length > 1) {\n          proxy = env[name];\n        }\n\n        proxy = proxy || env['CGI_' + upcase];\n      } else {\n        proxy = env[name] || env[upcase];\n        if (proxy && !env[name]) console.warn('The environment variable ' + upcase + ' is discouraged. Use ' + name + '.');\n      }\n\n      return proxy;\n    }\n  }), {\n    get: function get(dispatcher, allowed, disabled, callback, context) {\n      var endpoint = dispatcher.endpoint;\n      array.asyncEach(this._transports, function (pair, resume) {\n        var connType = pair[0],\n            klass = pair[1],\n            connEndpoint = dispatcher.endpointFor(connType);\n        if (array.indexOf(disabled, connType) >= 0) return resume();\n\n        if (array.indexOf(allowed, connType) < 0) {\n          klass.isUsable(dispatcher, connEndpoint, function () {});\n          return resume();\n        }\n\n        klass.isUsable(dispatcher, connEndpoint, function (isUsable) {\n          if (!isUsable) return resume();\n          var transport = klass.hasOwnProperty('create') ? klass.create(dispatcher, connEndpoint) : new klass(dispatcher, connEndpoint);\n          callback.call(context, transport);\n        });\n      }, function () {\n        throw new Error('Could not find a usable connection type for ' + endpoint.href);\n      });\n    },\n    register: function register(type, klass) {\n      this._transports.push([type, klass]);\n\n      klass.prototype.connectionType = type;\n    },\n    getConnectionTypes: function getConnectionTypes() {\n      return array.map(this._transports, function (t) {\n        return t[0];\n      });\n    },\n    disable: function disable(feature) {\n      if (feature !== 'autodisconnect') return;\n\n      for (var i = 0; i < this._transports.length; i++) {\n        this._transports[i][1]._unloaded = false;\n      }\n    },\n    _transports: []\n  });\n  assign(Transport.prototype, Logging);\n  assign(Transport.prototype, Timeouts);\n  module.exports = Transport;\n});","lineCount":196,"map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"Class"],[4,11,3,9],[4,14,3,15,"require"],[4,25,3,22],[4,61,3,0],[5,0,3,0],[5,6,4,4,"Cookie"],[5,12,4,10],[5,15,4,15,"require"],[5,26,4,22],[5,64,4,15],[5,65,4,42,"Cookie"],[5,71,3,0],[6,0,3,0],[6,6,5,4,"Promise"],[6,13,5,11],[6,16,5,15,"require"],[6,27,5,22],[6,65,3,0],[7,0,3,0],[7,6,6,4,"array"],[7,11,6,9],[7,14,6,15,"require"],[7,25,6,22],[7,61,3,0],[8,0,3,0],[8,6,7,4,"assign"],[8,12,7,10],[8,15,7,15,"require"],[8,26,7,22],[8,63,3,0],[9,0,3,0],[9,6,8,4,"Logging"],[9,13,8,11],[9,16,8,15,"require"],[9,27,8,22],[9,67,3,0],[10,0,3,0],[10,6,9,4,"Timeouts"],[10,14,9,12],[10,17,9,15,"require"],[10,28,9,22],[10,69,3,0],[11,0,3,0],[11,6,10,4,"Channel"],[11,13,10,11],[11,16,10,15,"require"],[11,27,10,22],[11,69,3,0],[13,0,12,0],[13,6,12,4,"Transport"],[13,15,12,13],[13,18,12,16,"assign"],[13,24,12,22],[13,25,12,23,"Class"],[13,30,12,28],[13,31,12,29],[14,0,12,31,"className"],[14,4,12,31,"className"],[14,13,12,40],[14,15,12,42],[14,26,12,29],[15,0,13,2,"DEFAULT_PORTS"],[15,4,13,2,"DEFAULT_PORTS"],[15,17,13,15],[15,19,13,17],[16,0,13,19],[16,15,13,28],[16,17,13,17],[17,0,13,32],[17,16,13,42],[17,19,13,17],[18,0,13,47],[18,13,13,54],[18,15,13,17],[19,0,13,58],[19,14,13,66],[20,0,13,17],[20,5,12,29],[21,0,14,2,"MAX_DELAY"],[21,4,14,2,"MAX_DELAY"],[21,13,14,11],[21,15,14,17],[21,16,12,29],[22,0,16,2,"batching"],[22,4,16,2,"batching"],[22,12,16,10],[22,14,16,13],[22,18,12,29],[23,0,18,2,"initialize"],[23,4,18,2,"initialize"],[23,14,18,12],[23,16,18,14],[23,36,18,23,"dispatcher"],[23,46,18,14],[23,48,18,35,"endpoint"],[23,56,18,14],[23,58,18,45],[24,0,19,4],[24,11,19,9,"_dispatcher"],[24,22,19,4],[24,25,19,23,"dispatcher"],[24,35,19,4],[25,0,20,4],[25,11,20,9,"endpoint"],[25,19,20,4],[25,22,20,23,"endpoint"],[25,30,20,4],[26,0,21,4],[26,11,21,9,"_outbox"],[26,18,21,4],[26,21,21,23],[26,23,21,4],[27,0,22,4],[27,11,22,9,"_proxy"],[27,17,22,4],[27,20,22,23,"assign"],[27,26,22,29],[27,27,22,30],[27,29,22,29],[27,31,22,34],[27,36,22,39,"_dispatcher"],[27,47,22,34],[27,48,22,51,"proxy"],[27,53,22,29],[27,54,22,4],[28,0,24,4],[28,10,24,8],[28,11,24,9],[28,16,24,14,"_proxy"],[28,22,24,9],[28,23,24,21,"origin"],[28,29,24,4],[28,31,25,6],[28,36,25,11,"_proxy"],[28,42,25,6],[28,43,25,18,"origin"],[28,49,25,6],[28,52,25,27],[28,57,25,32,"_findProxy"],[28,67,25,27],[28,69,25,6],[29,0,26,3],[29,5,12,29],[30,0,28,2,"close"],[30,4,28,2,"close"],[30,9,28,7],[30,11,28,9],[30,28,28,20],[30,29,28,22],[30,30,12,29],[31,0,30,2,"encode"],[31,4,30,2,"encode"],[31,10,30,8],[31,12,30,10],[31,28,30,19,"messages"],[31,36,30,10],[31,38,30,29],[32,0,31,4],[32,13,31,11],[32,15,31,4],[33,0,32,3],[33,5,12,29],[34,0,34,2,"sendMessage"],[34,4,34,2,"sendMessage"],[34,15,34,13],[34,17,34,15],[34,38,34,24,"message"],[34,45,34,15],[34,47,34,33],[35,0,35,4],[35,11,35,9,"debug"],[35,16,35,4],[35,17,35,15],[35,51,35,4],[35,53,36,15],[35,58,36,20,"_dispatcher"],[35,69,36,15],[35,70,36,32,"clientId"],[35,78,35,4],[35,80,36,42],[35,85,36,47,"endpoint"],[35,93,36,42],[35,94,36,56,"href"],[35,98,35,4],[35,100,36,62,"message"],[35,107,35,4],[36,0,38,4],[36,10,38,8],[36,11,38,9],[36,16,38,14,"batching"],[36,24,38,4],[36,26,38,24],[36,33,38,31,"Promise"],[36,40,38,38],[36,41,38,39,"resolve"],[36,48,38,31],[36,49,38,47],[36,54,38,52,"request"],[36,61,38,47],[36,62,38,60],[36,63,38,61,"message"],[36,70,38,60],[36,71,38,47],[36,72,38,31],[36,73,38,24],[38,0,40,4],[38,11,40,9,"_outbox"],[38,18,40,4],[38,19,40,17,"push"],[38,23,40,4],[38,24,40,22,"message"],[38,31,40,4],[40,0,41,4],[40,11,41,9,"_flushLargeBatch"],[40,27,41,4],[42,0,43,4],[42,10,43,8,"message"],[42,17,43,15],[42,18,43,16,"channel"],[42,25,43,8],[42,30,43,28,"Channel"],[42,37,43,35],[42,38,43,36,"HANDSHAKE"],[42,47,43,4],[42,49,44,6],[42,56,44,13],[42,61,44,18,"_publish"],[42,69,44,13],[42,70,44,27],[42,74,44,13],[42,75,44,6],[43,0,46,4],[43,10,46,8,"message"],[43,17,46,15],[43,18,46,16,"channel"],[43,25,46,8],[43,30,46,28,"Channel"],[43,37,46,35],[43,38,46,36,"CONNECT"],[43,45,46,4],[43,47,47,6],[43,52,47,11,"_connectMessage"],[43,67,47,6],[43,70,47,29,"message"],[43,77,47,6],[44,0,49,4],[44,13,49,11],[44,18,49,16,"_publish"],[44,26,49,11],[44,27,49,25],[44,32,49,30,"MAX_DELAY"],[44,41,49,11],[44,42,49,4],[45,0,50,3],[45,5,12,29],[46,0,52,2,"_makePromise"],[46,4,52,2,"_makePromise"],[46,16,52,14],[46,18,52,16],[46,42,52,27],[47,0,53,4],[47,10,53,8,"self"],[47,14,53,12],[47,17,53,15],[47,21,53,4],[48,0,55,4],[48,11,55,9,"_requestPromise"],[48,26,55,4],[48,29,55,27],[48,34,55,32,"_requestPromise"],[48,49,55,27],[48,53,55,51],[48,57,55,55,"Promise"],[48,64,55,51],[48,65,55,63],[48,75,55,72,"resolve"],[48,82,55,63],[48,84,55,81],[49,0,56,6,"self"],[49,8,56,6,"self"],[49,12,56,10],[49,13,56,11,"_resolvePromise"],[49,28,56,6],[49,31,56,29,"resolve"],[49,38,56,6],[50,0,57,5],[50,7,55,51],[50,8,55,4],[51,0,58,3],[51,5,12,29],[52,0,60,2,"_publish"],[52,4,60,2,"_publish"],[52,12,60,10],[52,14,60,12],[52,32,60,21,"delay"],[52,37,60,12],[52,39,60,28],[53,0,61,4],[53,11,61,9,"_makePromise"],[53,23,61,4],[55,0,63,4],[55,11,63,9,"addTimeout"],[55,21,63,4],[55,22,63,20],[55,31,63,4],[55,33,63,31,"delay"],[55,38,63,4],[55,40,63,38],[55,52,63,49],[56,0,64,6],[56,13,64,11,"_flush"],[56,19,64,6],[58,0,65,6],[58,15,65,13],[58,20,65,18,"_requestPromise"],[58,35,65,6],[59,0,66,5],[59,7,63,4],[59,9,66,7],[59,13,63,4],[60,0,68,4],[60,13,68,11],[60,18,68,16,"_requestPromise"],[60,33,68,4],[61,0,69,3],[61,5,12,29],[62,0,71,2,"_flush"],[62,4,71,2,"_flush"],[62,10,71,8],[62,12,71,10],[62,30,71,21],[63,0,72,4],[63,11,72,9,"removeTimeout"],[63,24,72,4],[63,25,72,23],[63,34,72,4],[64,0,74,4],[64,10,74,8],[64,15,74,13,"_outbox"],[64,22,74,8],[64,23,74,21,"length"],[64,29,74,8],[64,32,74,30],[64,33,74,8],[64,37,74,35],[64,42,74,40,"_connectMessage"],[64,57,74,4],[64,59,75,6],[64,64,75,11,"_connectMessage"],[64,79,75,6],[64,80,75,27,"advice"],[64,86,75,6],[64,89,75,36],[65,0,75,38,"timeout"],[65,8,75,38,"timeout"],[65,15,75,45],[65,17,75,47],[66,0,75,36],[66,7,75,6],[68,0,77,4],[68,11,77,9,"_resolvePromise"],[68,26,77,4],[68,27,77,25],[68,32,77,30,"request"],[68,39,77,25],[68,40,77,38],[68,45,77,43,"_outbox"],[68,52,77,25],[68,53,77,4],[70,0,79,4],[70,11,79,9,"_connectMessage"],[70,26,79,4],[70,29,79,27],[70,33,79,4],[71,0,80,4],[71,11,80,9,"_outbox"],[71,18,80,4],[71,21,80,19],[71,23,80,4],[72,0,81,3],[72,5,12,29],[73,0,83,2,"_flushLargeBatch"],[73,4,83,2,"_flushLargeBatch"],[73,20,83,18],[73,22,83,20],[73,50,83,31],[74,0,84,4],[74,10,84,8,"string"],[74,16,84,14],[74,19,84,17],[74,24,84,22,"encode"],[74,30,84,17],[74,31,84,29],[74,36,84,34,"_outbox"],[74,43,84,17],[74,44,84,4],[75,0,85,4],[75,10,85,8,"string"],[75,16,85,14],[75,17,85,15,"length"],[75,23,85,8],[75,26,85,24],[75,31,85,29,"_dispatcher"],[75,42,85,24],[75,43,85,41,"maxRequestSize"],[75,57,85,4],[75,59,85,57],[77,0,86,4],[77,10,86,8,"last"],[77,14,86,12],[77,17,86,15],[77,22,86,20,"_outbox"],[77,29,86,15],[77,30,86,28,"pop"],[77,33,86,15],[77,35,86,4],[79,0,88,4],[79,11,88,9,"_makePromise"],[79,23,88,4],[81,0,89,4],[81,11,89,9,"_flush"],[81,17,89,4],[83,0,91,4],[83,10,91,8,"last"],[83,14,91,4],[83,16,91,14],[83,21,91,19,"_outbox"],[83,28,91,14],[83,29,91,27,"push"],[83,33,91,14],[83,34,91,32,"last"],[83,38,91,14],[84,0,92,3],[84,5,12,29],[85,0,94,2,"_receive"],[85,4,94,2,"_receive"],[85,12,94,10],[85,14,94,12],[85,32,94,21,"replies"],[85,39,94,12],[85,41,94,30],[86,0,95,4],[86,10,95,8],[86,11,95,9,"replies"],[86,18,95,4],[86,20,95,18],[87,0,96,4,"replies"],[87,6,96,4,"replies"],[87,13,96,11],[87,16,96,14],[87,19,96,17,"concat"],[87,25,96,14],[87,26,96,24,"replies"],[87,33,96,14],[87,34,96,4],[88,0,98,4],[88,11,98,9,"debug"],[88,16,98,4],[88,17,98,15],[88,52,98,4],[88,54,99,15],[88,59,99,20,"_dispatcher"],[88,70,99,15],[88,71,99,32,"clientId"],[88,79,98,4],[88,81,99,42],[88,86,99,47,"endpoint"],[88,94,99,42],[88,95,99,56,"href"],[88,99,98,4],[88,101,99,62],[88,106,99,67,"connectionType"],[88,120,98,4],[88,122,99,83,"replies"],[88,129,98,4],[90,0,101,4],[90,11,101,9],[90,15,101,13,"i"],[90,16,101,14],[90,19,101,17],[90,20,101,9],[90,22,101,20,"n"],[90,23,101,21],[90,26,101,24,"replies"],[90,33,101,31],[90,34,101,32,"length"],[90,40,101,4],[90,42,101,40,"i"],[90,43,101,41],[90,46,101,44,"n"],[90,47,101,4],[90,49,101,47,"i"],[90,50,101,48],[90,52,101,4],[91,0,102,6],[91,13,102,11,"_dispatcher"],[91,24,102,6],[91,25,102,23,"handleResponse"],[91,39,102,6],[91,40,102,38,"replies"],[91,47,102,45],[91,48,102,46,"i"],[91,49,102,45],[91,50,102,6],[92,0,101,4],[93,0,103,3],[93,5,12,29],[94,0,105,2,"_handleError"],[94,4,105,2,"_handleError"],[94,16,105,14],[94,18,105,16],[94,40,105,25,"messages"],[94,48,105,16],[94,50,105,35,"immediate"],[94,59,105,16],[94,61,105,46],[95,0,106,4,"messages"],[95,6,106,4,"messages"],[95,14,106,12],[95,17,106,15],[95,20,106,18,"concat"],[95,26,106,15],[95,27,106,25,"messages"],[95,35,106,15],[95,36,106,4],[96,0,108,4],[96,11,108,9,"debug"],[96,16,108,4],[96,17,108,15],[96,56,108,4],[96,58,109,15],[96,63,109,20,"_dispatcher"],[96,74,109,15],[96,75,109,32,"clientId"],[96,83,108,4],[96,85,109,42],[96,90,109,47,"endpoint"],[96,98,109,42],[96,99,109,56,"href"],[96,103,108,4],[96,105,109,62],[96,110,109,67,"connectionType"],[96,124,108,4],[96,126,109,83,"messages"],[96,134,108,4],[98,0,111,4],[98,11,111,9],[98,15,111,13,"i"],[98,16,111,14],[98,19,111,17],[98,20,111,9],[98,22,111,20,"n"],[98,23,111,21],[98,26,111,24,"messages"],[98,34,111,32],[98,35,111,33,"length"],[98,41,111,4],[98,43,111,41,"i"],[98,44,111,42],[98,47,111,45,"n"],[98,48,111,4],[98,50,111,48,"i"],[98,51,111,49],[98,53,111,4],[99,0,112,6],[99,13,112,11,"_dispatcher"],[99,24,112,6],[99,25,112,23,"handleError"],[99,36,112,6],[99,37,112,35,"messages"],[99,45,112,43],[99,46,112,44,"i"],[99,47,112,43],[99,48,112,6],[100,0,111,4],[101,0,113,3],[101,5,12,29],[102,0,115,2,"_getCookies"],[102,4,115,2,"_getCookies"],[102,15,115,13],[102,17,115,15],[102,40,115,26],[103,0,116,4],[103,10,116,8,"cookies"],[103,17,116,15],[103,20,116,18],[103,25,116,23,"_dispatcher"],[103,36,116,18],[103,37,116,35,"cookies"],[103,44,116,4],[104,0,116,4],[104,10,117,8,"url"],[104,13,117,11],[104,16,117,18],[104,21,117,23,"endpoint"],[104,29,117,18],[104,30,117,32,"href"],[104,34,116,4],[105,0,119,4],[105,10,119,8],[105,11,119,9,"cookies"],[105,18,119,4],[105,20,119,18],[105,27,119,25],[105,29,119,18],[106,0,121,4],[106,13,121,11,"array"],[106,18,121,16],[106,19,121,17,"map"],[106,22,121,11],[106,23,121,21,"cookies"],[106,30,121,28],[106,31,121,29,"getCookiesSync"],[106,45,121,21],[106,46,121,44,"url"],[106,49,121,21],[106,50,121,11],[106,52,121,50],[106,62,121,59,"cookie"],[106,68,121,50],[106,70,121,67],[107,0,122,6],[107,15,122,13,"cookie"],[107,21,122,19],[107,22,122,20,"cookieString"],[107,34,122,13],[107,36,122,6],[108,0,123,5],[108,7,121,11],[108,9,123,7,"join"],[108,13,121,11],[108,14,123,12],[108,18,121,11],[108,19,121,4],[109,0,124,3],[109,5,12,29],[110,0,126,2,"_storeCookies"],[110,4,126,2,"_storeCookies"],[110,17,126,15],[110,19,126,17],[110,42,126,26,"setCookie"],[110,51,126,17],[110,53,126,37],[111,0,127,4],[111,10,127,8,"cookies"],[111,17,127,15],[111,20,127,18],[111,25,127,23,"_dispatcher"],[111,36,127,18],[111,37,127,35,"cookies"],[111,44,127,4],[112,0,127,4],[112,10,128,8,"url"],[112,13,128,11],[112,16,128,18],[112,21,128,23,"endpoint"],[112,29,128,18],[112,30,128,32,"href"],[112,34,127,4],[113,0,127,4],[113,10,129,8,"cookie"],[113,16,127,4],[114,0,131,4],[114,10,131,8],[114,11,131,9,"setCookie"],[114,20,131,8],[114,24,131,22],[114,25,131,23,"cookies"],[114,32,131,4],[114,34,131,32],[115,0,132,4,"setCookie"],[115,6,132,4,"setCookie"],[115,15,132,13],[115,18,132,16],[115,21,132,19,"concat"],[115,27,132,16],[115,28,132,26,"setCookie"],[115,37,132,16],[115,38,132,4],[117,0,134,4],[117,11,134,9],[117,15,134,13,"i"],[117,16,134,14],[117,19,134,17],[117,20,134,9],[117,22,134,20,"n"],[117,23,134,21],[117,26,134,24,"setCookie"],[117,35,134,33],[117,36,134,34,"length"],[117,42,134,4],[117,44,134,42,"i"],[117,45,134,43],[117,48,134,46,"n"],[117,49,134,4],[117,51,134,49,"i"],[117,52,134,50],[117,54,134,4],[117,56,134,54],[118,0,135,6,"cookie"],[118,8,135,6,"cookie"],[118,14,135,12],[118,17,135,15,"Cookie"],[118,23,135,21],[118,24,135,22,"parse"],[118,29,135,15],[118,30,135,28,"setCookie"],[118,39,135,37],[118,40,135,38,"i"],[118,41,135,37],[118,42,135,15],[118,43,135,6],[119,0,136,6,"cookies"],[119,8,136,6,"cookies"],[119,15,136,13],[119,16,136,14,"setCookieSync"],[119,29,136,6],[119,30,136,28,"cookie"],[119,36,136,6],[119,38,136,36,"url"],[119,41,136,6],[120,0,137,5],[121,0,138,3],[121,5,12,29],[122,0,140,2,"_findProxy"],[122,4,140,2,"_findProxy"],[122,14,140,12],[122,16,140,14],[122,38,140,25],[123,0,141,4],[123,10,141,8],[123,17,141,15,"process"],[123,24,141,8],[123,29,141,27],[123,40,141,4],[123,42,141,40],[123,49,141,47,"undefined"],[123,58,141,40],[124,0,143,4],[124,10,143,8,"protocol"],[124,18,143,16],[124,21,143,19],[124,26,143,24,"endpoint"],[124,34,143,19],[124,35,143,33,"protocol"],[124,43,143,4],[125,0,144,4],[125,10,144,8],[125,11,144,9,"protocol"],[125,19,144,4],[125,21,144,19],[125,28,144,26,"undefined"],[125,37,144,19],[126,0,146,4],[126,10,146,8,"name"],[126,14,146,12],[126,17,146,17,"protocol"],[126,25,146,25],[126,26,146,26,"replace"],[126,33,146,17],[126,34,146,34],[126,38,146,17],[126,40,146,40],[126,42,146,17],[126,44,146,44,"toLowerCase"],[126,55,146,17],[126,60,146,60],[126,68,146,4],[127,0,146,4],[127,10,147,8,"upcase"],[127,16,147,14],[127,19,147,17,"name"],[127,23,147,21],[127,24,147,22,"toUpperCase"],[127,35,147,17],[127,37,146,4],[128,0,146,4],[128,10,148,8,"env"],[128,13,148,11],[128,16,148,17,"process"],[128,23,148,24],[128,24,148,25,"env"],[128,27,146,4],[129,0,146,4],[129,10,149,8,"keys"],[129,14,146,4],[130,0,146,4],[130,10,149,14,"proxy"],[130,15,146,4],[132,0,151,4],[132,10,151,8,"name"],[132,14,151,12],[132,19,151,17],[132,31,151,8],[132,35,151,33,"env"],[132,38,151,36],[132,39,151,37,"REQUEST_METHOD"],[132,53,151,4],[132,55,151,53],[133,0,152,6,"keys"],[133,8,152,6,"keys"],[133,12,152,10],[133,15,152,13,"Object"],[133,21,152,19],[133,22,152,20,"keys"],[133,26,152,13],[133,27,152,25,"env"],[133,30,152,13],[133,32,152,30,"filter"],[133,38,152,13],[133,39,152,37],[133,49,152,46,"k"],[133,50,152,37],[133,52,152,49],[134,0,152,51],[134,17,152,58],[134,33,152,74,"test"],[134,37,152,58],[134,38,152,79,"k"],[134,39,152,58],[134,40,152,51],[135,0,152,83],[135,9,152,13],[135,10,152,6],[137,0,153,6],[137,12,153,10,"keys"],[137,16,153,14],[137,17,153,15,"length"],[137,23,153,10],[137,28,153,26],[137,29,153,6],[137,31,153,29],[138,0,154,8],[138,14,154,12,"keys"],[138,18,154,16],[138,19,154,17],[138,20,154,16],[138,21,154,12],[138,26,154,24,"name"],[138,30,154,12],[138,34,154,32,"env"],[138,37,154,35],[138,38,154,36,"upcase"],[138,44,154,35],[138,45,154,32],[138,50,154,48,"undefined"],[138,59,154,8],[138,61,155,10,"proxy"],[138,66,155,15],[138,69,155,18,"env"],[138,72,155,21],[138,73,155,22,"name"],[138,77,155,21],[138,78,155,10],[139,0,156,7],[139,9,153,6],[139,15,156,13],[139,19,156,17,"keys"],[139,23,156,21],[139,24,156,22,"length"],[139,30,156,17],[139,33,156,31],[139,34,156,13],[139,36,156,34],[140,0,157,8,"proxy"],[140,10,157,8,"proxy"],[140,15,157,13],[140,18,157,16,"env"],[140,21,157,19],[140,22,157,20,"name"],[140,26,157,19],[140,27,157,8],[141,0,158,7],[143,0,159,6,"proxy"],[143,8,159,6,"proxy"],[143,13,159,11],[143,16,159,14,"proxy"],[143,21,159,19],[143,25,159,23,"env"],[143,28,159,26],[143,29,159,27],[143,38,159,36,"upcase"],[143,44,159,26],[143,45,159,6],[144,0,160,5],[144,7,151,4],[144,13,160,11],[145,0,161,6,"proxy"],[145,8,161,6,"proxy"],[145,13,161,11],[145,16,161,14,"env"],[145,19,161,17],[145,20,161,18,"name"],[145,24,161,17],[145,25,161,14],[145,29,161,27,"env"],[145,32,161,30],[145,33,161,31,"upcase"],[145,39,161,30],[145,40,161,6],[146,0,162,6],[146,12,162,10,"proxy"],[146,17,162,15],[146,21,162,19],[146,22,162,20,"env"],[146,25,162,23],[146,26,162,24,"name"],[146,30,162,23],[146,31,162,6],[146,33,163,8,"console"],[146,40,163,15],[146,41,163,16,"warn"],[146,45,163,8],[146,46,163,21],[146,76,163,51,"upcase"],[146,82,163,21],[146,85,164,21],[146,108,163,21],[146,111,164,47,"name"],[146,115,163,21],[146,118,164,54],[146,121,163,8],[147,0,165,5],[149,0,166,4],[149,13,166,11,"proxy"],[149,18,166,4],[150,0,167,3],[151,0,12,29],[151,3,12,28],[151,4,12,22],[151,6,169,4],[152,0,170,2,"get"],[152,4,170,2,"get"],[152,7,170,5],[152,9,170,7],[152,22,170,16,"dispatcher"],[152,32,170,7],[152,34,170,28,"allowed"],[152,41,170,7],[152,43,170,37,"disabled"],[152,51,170,7],[152,53,170,47,"callback"],[152,61,170,7],[152,63,170,57,"context"],[152,70,170,7],[152,72,170,66],[153,0,171,4],[153,10,171,8,"endpoint"],[153,18,171,16],[153,21,171,19,"dispatcher"],[153,31,171,29],[153,32,171,30,"endpoint"],[153,40,171,4],[154,0,173,4,"array"],[154,6,173,4,"array"],[154,11,173,9],[154,12,173,10,"asyncEach"],[154,21,173,4],[154,22,173,20],[154,27,173,25,"_transports"],[154,38,173,4],[154,40,173,38],[154,50,173,47,"pair"],[154,54,173,38],[154,56,173,53,"resume"],[154,62,173,38],[154,64,173,61],[155,0,174,6],[155,12,174,10,"connType"],[155,20,174,18],[155,23,174,25,"pair"],[155,27,174,29],[155,28,174,30],[155,29,174,29],[155,30,174,6],[156,0,174,6],[156,12,174,34,"klass"],[156,17,174,39],[156,20,174,42,"pair"],[156,24,174,46],[156,25,174,47],[156,26,174,46],[156,27,174,6],[157,0,174,6],[157,12,175,10,"connEndpoint"],[157,24,175,22],[157,27,175,25,"dispatcher"],[157,37,175,35],[157,38,175,36,"endpointFor"],[157,49,175,25],[157,50,175,48,"connType"],[157,58,175,25],[157,59,174,6],[158,0,177,6],[158,12,177,10,"array"],[158,17,177,15],[158,18,177,16,"indexOf"],[158,25,177,10],[158,26,177,24,"disabled"],[158,34,177,10],[158,36,177,34,"connType"],[158,44,177,10],[158,49,177,47],[158,50,177,6],[158,52,178,8],[158,59,178,15,"resume"],[158,65,178,21],[158,67,178,8],[160,0,180,6],[160,12,180,10,"array"],[160,17,180,15],[160,18,180,16,"indexOf"],[160,25,180,10],[160,26,180,24,"allowed"],[160,33,180,10],[160,35,180,33,"connType"],[160,43,180,10],[160,47,180,45],[160,48,180,6],[160,50,180,48],[161,0,181,8,"klass"],[161,10,181,8,"klass"],[161,15,181,13],[161,16,181,14,"isUsable"],[161,24,181,8],[161,25,181,23,"dispatcher"],[161,35,181,8],[161,37,181,35,"connEndpoint"],[161,49,181,8],[161,51,181,49],[161,63,181,60],[161,64,181,62],[161,65,181,8],[162,0,182,8],[162,17,182,15,"resume"],[162,23,182,21],[162,25,182,8],[163,0,183,7],[165,0,185,6,"klass"],[165,8,185,6,"klass"],[165,13,185,11],[165,14,185,12,"isUsable"],[165,22,185,6],[165,23,185,21,"dispatcher"],[165,33,185,6],[165,35,185,33,"connEndpoint"],[165,47,185,6],[165,49,185,47],[165,59,185,56,"isUsable"],[165,67,185,47],[165,69,185,66],[166,0,186,8],[166,14,186,12],[166,15,186,13,"isUsable"],[166,23,186,8],[166,25,186,23],[166,32,186,30,"resume"],[166,38,186,36],[166,40,186,23],[167,0,187,8],[167,14,187,12,"transport"],[167,23,187,21],[167,26,187,24,"klass"],[167,31,187,29],[167,32,187,30,"hasOwnProperty"],[167,46,187,24],[167,47,187,45],[167,55,187,24],[167,59,187,57,"klass"],[167,64,187,62],[167,65,187,63,"create"],[167,71,187,57],[167,72,187,70,"dispatcher"],[167,82,187,57],[167,84,187,82,"connEndpoint"],[167,96,187,57],[167,97,187,24],[167,100,187,98],[167,104,187,102,"klass"],[167,109,187,98],[167,110,187,108,"dispatcher"],[167,120,187,98],[167,122,187,120,"connEndpoint"],[167,134,187,98],[167,135,187,8],[168,0,188,8,"callback"],[168,10,188,8,"callback"],[168,18,188,16],[168,19,188,17,"call"],[168,23,188,8],[168,24,188,22,"context"],[168,31,188,8],[168,33,188,31,"transport"],[168,42,188,8],[169,0,189,7],[169,9,185,6],[170,0,190,5],[170,7,173,4],[170,9,190,7],[170,21,190,18],[171,0,191,6],[171,14,191,12],[171,18,191,16,"Error"],[171,23,191,12],[171,24,191,22],[171,73,191,71,"endpoint"],[171,81,191,79],[171,82,191,80,"href"],[171,86,191,12],[171,87,191,6],[172,0,192,5],[172,7,173,4],[173,0,193,3],[173,5,169,4],[174,0,195,2,"register"],[174,4,195,2,"register"],[174,12,195,10],[174,14,195,12],[174,32,195,21,"type"],[174,36,195,12],[174,38,195,27,"klass"],[174,43,195,12],[174,45,195,34],[175,0,196,4],[175,11,196,9,"_transports"],[175,22,196,4],[175,23,196,21,"push"],[175,27,196,4],[175,28,196,26],[175,29,196,27,"type"],[175,33,196,26],[175,35,196,33,"klass"],[175,40,196,26],[175,41,196,4],[177,0,197,4,"klass"],[177,6,197,4,"klass"],[177,11,197,9],[177,12,197,10,"prototype"],[177,21,197,4],[177,22,197,20,"connectionType"],[177,36,197,4],[177,39,197,37,"type"],[177,43,197,4],[178,0,198,3],[178,5,169,4],[179,0,200,2,"getConnectionTypes"],[179,4,200,2,"getConnectionTypes"],[179,22,200,20],[179,24,200,22],[179,54,200,33],[180,0,201,4],[180,13,201,11,"array"],[180,18,201,16],[180,19,201,17,"map"],[180,22,201,11],[180,23,201,21],[180,28,201,26,"_transports"],[180,39,201,11],[180,41,201,39],[180,51,201,48,"t"],[180,52,201,39],[180,54,201,51],[181,0,201,53],[181,15,201,60,"t"],[181,16,201,61],[181,17,201,62],[181,18,201,61],[181,19,201,53],[182,0,201,66],[182,7,201,11],[182,8,201,4],[183,0,202,3],[183,5,169,4],[184,0,204,2,"disable"],[184,4,204,2,"disable"],[184,11,204,9],[184,13,204,11],[184,30,204,20,"feature"],[184,37,204,11],[184,39,204,29],[185,0,205,4],[185,10,205,8,"feature"],[185,17,205,15],[185,22,205,20],[185,38,205,4],[185,40,205,38],[187,0,207,4],[187,11,207,9],[187,15,207,13,"i"],[187,16,207,14],[187,19,207,17],[187,20,207,4],[187,22,207,20,"i"],[187,23,207,21],[187,26,207,24],[187,31,207,29,"_transports"],[187,42,207,24],[187,43,207,41,"length"],[187,49,207,4],[187,51,207,49,"i"],[187,52,207,50],[187,54,207,4],[188,0,208,6],[188,13,208,11,"_transports"],[188,24,208,6],[188,25,208,23,"i"],[188,26,208,6],[188,28,208,26],[188,29,208,6],[188,31,208,29,"_unloaded"],[188,40,208,6],[188,43,208,41],[188,48,208,6],[189,0,207,4],[190,0,209,3],[190,5,169,4],[191,0,211,2,"_transports"],[191,4,211,2,"_transports"],[191,15,211,13],[191,17,211,15],[192,0,169,4],[192,3,12,22],[192,4,12,0],[193,0,214,0,"assign"],[193,2,214,0,"assign"],[193,8,214,6],[193,9,214,7,"Transport"],[193,18,214,16],[193,19,214,17,"prototype"],[193,28,214,6],[193,30,214,28,"Logging"],[193,37,214,6],[193,38,214,0],[194,0,215,0,"assign"],[194,2,215,0,"assign"],[194,8,215,6],[194,9,215,7,"Transport"],[194,18,215,16],[194,19,215,17,"prototype"],[194,28,215,6],[194,30,215,28,"Timeouts"],[194,38,215,6],[194,39,215,0],[195,0,217,0,"module"],[195,2,217,0,"module"],[195,8,217,6],[195,9,217,7,"exports"],[195,16,217,0],[195,19,217,17,"Transport"],[195,28,217,0]],"functionMap":{"names":["<global>","Class$argument_0.initialize","Class$argument_0.close","Class$argument_0.encode","Class$argument_0.sendMessage","Class$argument_0._makePromise","Promise$argument_0","Class$argument_0._publish","addTimeout$argument_2","Class$argument_0._flush","Class$argument_0._flushLargeBatch","Class$argument_0._receive","Class$argument_0._handleError","Class$argument_0._getCookies","array.map$argument_1","Class$argument_0._storeCookies","Class$argument_0._findProxy","Object.keys.filter$argument_0","assign$argument_1.get","array.asyncEach$argument_1","klass.isUsable$argument_2","array.asyncEach$argument_2","assign$argument_1.register","assign$argument_1.getConnectionTypes","assign$argument_1.disable"],"mappings":"AAA;cCiB;GDQ;SEE,aF;UGE;GHE;eIE;GJgB;gBKE;+DCG;KDE;GLC;YOE;sCCG;KDG;GPG;USE;GTU;oBUE;GVS;YWE;GXS;gBYE;GZQ;eaE;kDCM;KDE;GbC;iBeE;GfY;cgBE;qCCY,8CD;GhBe;OkBG;sCCG;iDCQ,aD;+CCI;ODI;KDC,EG;KHE;GlBC;YsBE;GtBG;sBuBE;uCTC,2BS;GvBC;WwBE;GxBK"}},"type":"js/module"}]}