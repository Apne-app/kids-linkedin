{"dependencies":[{"name":"./core","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":37},"end":{"line":4,"column":54}}]}},{"name":"./cipher-core","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":56},"end":{"line":4,"column":80}}]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var c,o;c=this,o=function(c){return c.mode.CFB=(function(){var o=c.lib.BlockCipherMode.extend();function t(c,o,t,n){var s=this._iv;if(s){var l=s.slice(0);this._iv=void 0}else l=this._prevBlock;n.encryptBlock(l,0);for(var p=0;p<t;p++)c[o+p]^=l[p]}return o.Encryptor=o.extend({processBlock:function(c,o){var n=this._cipher,s=n.blockSize;t.call(this,c,o,s,n),this._prevBlock=c.slice(o,o+s)}}),o.Decryptor=o.extend({processBlock:function(c,o){var n=this._cipher,s=n.blockSize,l=c.slice(o,o+s);t.call(this,c,o,s,n),this._prevBlock=l}}),o})(),c.mode.CFB},\"object\"==typeof e?m.exports=e=o(r(d[0]),r(d[1])):\"function\"==typeof define&&define.amd?define([\"./core\",\"./cipher-core\"],o):o(c.CryptoJS)});","lineCount":1,"map":[[1,28,1,2],[1,32,1,12,"root"],[1,34,1,18,"factory"],[1,36,1,12,"root"],[1,38,14,2,"this"],[1,43,1,18,"factory"],[1,45,14,8],[1,54,14,18,"CryptoJS"],[1,57,76,1],[1,64,19,1,"CryptoJS"],[1,66,19,10,"mode"],[1,71,19,15,"CFB"],[1,76,19,22],[1,87,20,5],[1,91,20,9,"CFB"],[1,93,20,15,"CryptoJS"],[1,95,20,24,"lib"],[1,99,20,28,"BlockCipherMode"],[1,115,20,44,"extend"],[1,124,51,5],[1,133,51,14,"generateKeystreamAndEncrypt"],[1,135,51,42,"words"],[1,137,51,49,"offset"],[1,139,51,57,"blockSize"],[1,141,51,68,"cipher"],[1,144,53,9],[1,148,53,13,"iv"],[1,150,53,18,"this"],[1,155,53,23,"_iv"],[1,159,56,9],[1,162,56,13,"iv"],[1,164,56,17],[1,165,57,13],[1,169,57,17,"keystream"],[1,171,57,29,"iv"],[1,173,57,32,"slice"],[1,179,57,38],[1,182,60,13,"this"],[1,187,60,18,"_iv"],[1,196,60,24,"undefined"],[1,203,62,17,"keystream"],[1,205,62,29,"this"],[1,210,62,34,"_prevBlock"],[1,221,64,9,"cipher"],[1,223,64,16,"encryptBlock"],[1,236,64,29,"keystream"],[1,238,64,40],[1,241,67,9],[1,245,67,14],[1,249,67,18,"i"],[1,251,67,22],[1,253,67,25,"i"],[1,255,67,29,"blockSize"],[1,257,67,40,"i"],[1,261,68,13,"words"],[1,263,68,19,"offset"],[1,265,68,28,"i"],[1,269,68,34,"keystream"],[1,271,68,44,"i"],[1,274,72,5],[1,281,22,5,"CFB"],[1,283,22,9,"Encryptor"],[1,293,22,21,"CFB"],[1,295,22,25,"extend"],[1,303,23,9,"processBlock"],[1,316,23,23],[1,325,23,33,"words"],[1,327,23,40,"offset"],[1,330,25,13],[1,334,25,17,"cipher"],[1,336,25,26,"this"],[1,341,25,31,"_cipher"],[1,349,26,17,"blockSize"],[1,351,26,29,"cipher"],[1,353,26,36,"blockSize"],[1,363,28,13,"generateKeystreamAndEncrypt"],[1,365,28,41,"call"],[1,370,28,46,"this"],[1,375,28,52,"words"],[1,377,28,59,"offset"],[1,379,28,67,"blockSize"],[1,381,28,78,"cipher"],[1,384,31,13,"this"],[1,389,31,18,"_prevBlock"],[1,400,31,31,"words"],[1,402,31,37,"slice"],[1,408,31,43,"offset"],[1,410,31,51,"offset"],[1,412,31,60,"blockSize"],[1,418,35,5,"CFB"],[1,420,35,9,"Decryptor"],[1,430,35,21,"CFB"],[1,432,35,25,"extend"],[1,440,36,9,"processBlock"],[1,453,36,23],[1,462,36,33,"words"],[1,464,36,40,"offset"],[1,467,38,13],[1,471,38,17,"cipher"],[1,473,38,26,"this"],[1,478,38,31,"_cipher"],[1,486,39,17,"blockSize"],[1,488,39,29,"cipher"],[1,490,39,36,"blockSize"],[1,500,42,17,"thisBlock"],[1,502,42,29,"words"],[1,504,42,35,"slice"],[1,510,42,41,"offset"],[1,512,42,49,"offset"],[1,514,42,58,"blockSize"],[1,517,44,13,"generateKeystreamAndEncrypt"],[1,519,44,41,"call"],[1,524,44,46,"this"],[1,529,44,52,"words"],[1,531,44,59,"offset"],[1,533,44,67,"blockSize"],[1,535,44,78,"cipher"],[1,538,47,13,"this"],[1,543,47,18,"_prevBlock"],[1,554,47,31,"thisBlock"],[1,559,72,12,"CFB"],[1,562,19,22],[1,565,76,8,"CryptoJS"],[1,567,76,17,"mode"],[1,572,76,22,"CFB"],[1,577,2,24],[1,594,2,12,"exports"],[1,596,4,2,"module"],[1,598,4,9,"exports"],[1,606,4,19,"exports"],[1,608,4,29,"factory"],[1,610,4,37,"require"],[1,612,4,44,"d"],[1,614,4,44],[1,618,4,56,"require"],[1,620,4,63,"d"],[1,622,4,63],[1,627,6,28],[1,646,6,17,"define"],[1,654,6,42,"define"],[1,661,6,49,"amd"],[1,665,8,2,"define"],[1,673,8,10],[1,682,8,20],[1,699,8,38,"factory"],[1,702,12,2,"factory"],[1,704,12,10,"root"],[1,706,12,15,"CryptoJS"]],"functionMap":{"names":["<global>","<anonymous>","CFB.extend$argument_0.processBlock","generateKeystreamAndEncrypt"],"mappings":"AAA,EC;CDa,OC;uBCS;UDS;uBCI;UDY;KEG;MFmB;CDQ"}},"type":"js/module"}]}