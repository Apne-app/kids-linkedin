{"dependencies":[{"name":"mdn-data/css/at-rules.json","data":{"isAsync":false}},{"name":"mdn-data/css/properties.json","data":{"isAsync":false}},{"name":"mdn-data/css/syntaxes.json","data":{"isAsync":false}},{"name":"./patch.json","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var mdnAtrules = _$$_REQUIRE(_dependencyMap[0], \"mdn-data/css/at-rules.json\");\n\n  var mdnProperties = _$$_REQUIRE(_dependencyMap[1], \"mdn-data/css/properties.json\");\n\n  var mdnSyntaxes = _$$_REQUIRE(_dependencyMap[2], \"mdn-data/css/syntaxes.json\");\n\n  var patch = _$$_REQUIRE(_dependencyMap[3], \"./patch.json\");\n\n  var extendSyntax = /^\\s*\\|\\s*/;\n\n  function preprocessAtrules(dict) {\n    var result = Object.create(null);\n\n    for (var atruleName in dict) {\n      var atrule = dict[atruleName];\n      var descriptors = null;\n\n      if (atrule.descriptors) {\n        descriptors = Object.create(null);\n\n        for (var descriptor in atrule.descriptors) {\n          descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\n        }\n      }\n\n      result[atruleName.substr(1)] = {\n        prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\n        descriptors: descriptors\n      };\n    }\n\n    return result;\n  }\n\n  function patchDictionary(dict, patchDict) {\n    var result = {};\n\n    for (var key in dict) {\n      result[key] = dict[key].syntax || dict[key];\n    }\n\n    for (var _key in patchDict) {\n      if (_key in dict) {\n        if (patchDict[_key].syntax) {\n          result[_key] = extendSyntax.test(patchDict[_key].syntax) ? result[_key] + ' ' + patchDict[_key].syntax.trim() : patchDict[_key].syntax;\n        } else {\n          delete result[_key];\n        }\n      } else {\n        if (patchDict[_key].syntax) {\n          result[_key] = patchDict[_key].syntax.replace(extendSyntax, '');\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function unpackSyntaxes(dict) {\n    var result = {};\n\n    for (var key in dict) {\n      result[key] = dict[key].syntax;\n    }\n\n    return result;\n  }\n\n  function patchAtrules(dict, patchDict) {\n    var result = {};\n\n    for (var key in dict) {\n      var patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;\n      result[key] = {\n        prelude: key in patchDict && 'prelude' in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,\n        descriptors: dict[key].descriptors ? patchDictionary(dict[key].descriptors, patchDescriptors || {}) : patchDescriptors && unpackSyntaxes(patchDescriptors)\n      };\n    }\n\n    for (var _key2 in patchDict) {\n      if (!hasOwnProperty.call(dict, _key2)) {\n        result[_key2] = {\n          prelude: patchDict[_key2].prelude || null,\n          descriptors: patchDict[_key2].descriptors && unpackSyntaxes(patchDict[_key2].descriptors)\n        };\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = {\n    types: patchDictionary(mdnSyntaxes, patch.syntaxes),\n    atrules: patchAtrules(preprocessAtrules(mdnAtrules), patch.atrules),\n    properties: patchDictionary(mdnProperties, patch.properties)\n  };\n});","lineCount":98,"map":[[2,0,1,0],[2,6,1,6,"mdnAtrules"],[2,16,1,16],[2,19,1,19,"require"],[2,30,1,26],[2,79,1,0],[4,0,2,0],[4,6,2,6,"mdnProperties"],[4,19,2,19],[4,22,2,22,"require"],[4,33,2,29],[4,84,2,0],[6,0,3,0],[6,6,3,6,"mdnSyntaxes"],[6,17,3,17],[6,20,3,20,"require"],[6,31,3,27],[6,80,3,0],[8,0,4,0],[8,6,4,6,"patch"],[8,11,4,11],[8,14,4,14,"require"],[8,25,4,21],[8,60,4,0],[10,0,5,0],[10,6,5,6,"extendSyntax"],[10,18,5,18],[10,21,5,21],[10,32,5,0],[12,0,7,0],[12,11,7,9,"preprocessAtrules"],[12,28,7,0],[12,29,7,27,"dict"],[12,33,7,0],[12,35,7,33],[13,0,8,4],[13,8,8,10,"result"],[13,14,8,16],[13,17,8,19,"Object"],[13,23,8,25],[13,24,8,26,"create"],[13,30,8,19],[13,31,8,33],[13,35,8,19],[13,36,8,4],[15,0,10,4],[15,9,10,9],[15,13,10,15,"atruleName"],[15,23,10,4],[15,27,10,29,"dict"],[15,31,10,4],[15,33,10,35],[16,0,11,8],[16,10,11,14,"atrule"],[16,16,11,20],[16,19,11,23,"dict"],[16,23,11,27],[16,24,11,28,"atruleName"],[16,34,11,27],[16,35,11,8],[17,0,12,8],[17,10,12,12,"descriptors"],[17,21,12,23],[17,24,12,26],[17,28,12,8],[19,0,14,8],[19,10,14,12,"atrule"],[19,16,14,18],[19,17,14,19,"descriptors"],[19,28,14,8],[19,30,14,32],[20,0,15,12,"descriptors"],[20,8,15,12,"descriptors"],[20,19,15,23],[20,22,15,26,"Object"],[20,28,15,32],[20,29,15,33,"create"],[20,35,15,26],[20,36,15,40],[20,40,15,26],[20,41,15,12],[22,0,17,12],[22,13,17,17],[22,17,17,23,"descriptor"],[22,27,17,12],[22,31,17,37,"atrule"],[22,37,17,43],[22,38,17,44,"descriptors"],[22,49,17,12],[22,51,17,57],[23,0,18,16,"descriptors"],[23,10,18,16,"descriptors"],[23,21,18,27],[23,22,18,28,"descriptor"],[23,32,18,27],[23,33,18,16],[23,36,18,42,"atrule"],[23,42,18,48],[23,43,18,49,"descriptors"],[23,54,18,42],[23,55,18,61,"descriptor"],[23,65,18,42],[23,67,18,73,"syntax"],[23,73,18,16],[24,0,19,13],[25,0,20,9],[27,0,22,8,"result"],[27,6,22,8,"result"],[27,12,22,14],[27,13,22,15,"atruleName"],[27,23,22,25],[27,24,22,26,"substr"],[27,30,22,15],[27,31,22,33],[27,32,22,15],[27,33,22,14],[27,34,22,8],[27,37,22,39],[28,0,23,12,"prelude"],[28,8,23,12,"prelude"],[28,15,23,19],[28,17,23,21,"atrule"],[28,23,23,27],[28,24,23,28,"syntax"],[28,30,23,21],[28,31,23,35,"trim"],[28,35,23,21],[28,38,23,42,"match"],[28,43,23,21],[28,44,23,48],[28,63,23,21],[28,65,23,69],[28,66,23,21],[28,68,23,72,"trim"],[28,72,23,21],[28,78,23,82],[28,82,22,39],[29,0,24,12,"descriptors"],[29,8,24,12,"descriptors"],[29,19,24,23],[29,21,24,12,"descriptors"],[30,0,22,39],[30,7,22,8],[31,0,26,5],[33,0,28,4],[33,11,28,11,"result"],[33,17,28,4],[34,0,29,1],[36,0,31,0],[36,11,31,9,"patchDictionary"],[36,26,31,0],[36,27,31,25,"dict"],[36,31,31,0],[36,33,31,31,"patchDict"],[36,42,31,0],[36,44,31,42],[37,0,32,4],[37,8,32,10,"result"],[37,14,32,16],[37,17,32,19],[37,19,32,4],[39,0,35,4],[39,9,35,9],[39,13,35,15,"key"],[39,16,35,4],[39,20,35,22,"dict"],[39,24,35,4],[39,26,35,28],[40,0,36,8,"result"],[40,6,36,8,"result"],[40,12,36,14],[40,13,36,15,"key"],[40,16,36,14],[40,17,36,8],[40,20,36,22,"dict"],[40,24,36,26],[40,25,36,27,"key"],[40,28,36,26],[40,29,36,22],[40,30,36,32,"syntax"],[40,36,36,22],[40,40,36,42,"dict"],[40,44,36,46],[40,45,36,47,"key"],[40,48,36,46],[40,49,36,8],[41,0,37,5],[43,0,40,4],[43,9,40,9],[43,13,40,15,"key"],[43,17,40,4],[43,21,40,22,"patchDict"],[43,30,40,4],[43,32,40,33],[44,0,41,8],[44,10,41,12,"key"],[44,14,41,15],[44,18,41,19,"dict"],[44,22,41,8],[44,24,41,25],[45,0,42,12],[45,12,42,16,"patchDict"],[45,21,42,25],[45,22,42,26,"key"],[45,26,42,25],[45,27,42,16],[45,28,42,31,"syntax"],[45,34,42,12],[45,36,42,39],[46,0,43,16,"result"],[46,10,43,16,"result"],[46,16,43,22],[46,17,43,23,"key"],[46,21,43,22],[46,22,43,16],[46,25,43,30,"extendSyntax"],[46,37,43,42],[46,38,43,43,"test"],[46,42,43,30],[46,43,43,48,"patchDict"],[46,52,43,57],[46,53,43,58,"key"],[46,57,43,57],[46,58,43,48],[46,59,43,63,"syntax"],[46,65,43,30],[46,69,44,22,"result"],[46,75,44,28],[46,76,44,29,"key"],[46,80,44,28],[46,81,44,22],[46,84,44,36],[46,87,44,22],[46,90,44,42,"patchDict"],[46,99,44,51],[46,100,44,52,"key"],[46,104,44,51],[46,105,44,42],[46,106,44,57,"syntax"],[46,112,44,42],[46,113,44,64,"trim"],[46,117,44,42],[46,119,43,30],[46,122,45,22,"patchDict"],[46,131,45,31],[46,132,45,32,"key"],[46,136,45,31],[46,137,45,22],[46,138,45,37,"syntax"],[46,144,43,16],[47,0,46,13],[47,9,42,12],[47,15,46,19],[48,0,47,16],[48,17,47,23,"result"],[48,23,47,29],[48,24,47,30,"key"],[48,28,47,29],[48,29,47,16],[49,0,48,13],[50,0,49,9],[50,7,41,8],[50,13,49,15],[51,0,50,12],[51,12,50,16,"patchDict"],[51,21,50,25],[51,22,50,26,"key"],[51,26,50,25],[51,27,50,16],[51,28,50,31,"syntax"],[51,34,50,12],[51,36,50,39],[52,0,51,16,"result"],[52,10,51,16,"result"],[52,16,51,22],[52,17,51,23,"key"],[52,21,51,22],[52,22,51,16],[52,25,51,30,"patchDict"],[52,34,51,39],[52,35,51,40,"key"],[52,39,51,39],[52,40,51,30],[52,41,51,45,"syntax"],[52,47,51,30],[52,48,51,52,"replace"],[52,55,51,30],[52,56,51,60,"extendSyntax"],[52,68,51,30],[52,70,51,74],[52,72,51,30],[52,73,51,16],[53,0,52,13],[54,0,53,9],[55,0,54,5],[57,0,56,4],[57,11,56,11,"result"],[57,17,56,4],[58,0,57,1],[60,0,59,0],[60,11,59,9,"unpackSyntaxes"],[60,25,59,0],[60,26,59,24,"dict"],[60,30,59,0],[60,32,59,30],[61,0,60,4],[61,8,60,10,"result"],[61,14,60,16],[61,17,60,19],[61,19,60,4],[63,0,62,4],[63,9,62,9],[63,13,62,15,"key"],[63,16,62,4],[63,20,62,22,"dict"],[63,24,62,4],[63,26,62,28],[64,0,63,8,"result"],[64,6,63,8,"result"],[64,12,63,14],[64,13,63,15,"key"],[64,16,63,14],[64,17,63,8],[64,20,63,22,"dict"],[64,24,63,26],[64,25,63,27,"key"],[64,28,63,26],[64,29,63,22],[64,30,63,32,"syntax"],[64,36,63,8],[65,0,64,5],[67,0,66,4],[67,11,66,11,"result"],[67,17,66,4],[68,0,67,1],[70,0,69,0],[70,11,69,9,"patchAtrules"],[70,23,69,0],[70,24,69,22,"dict"],[70,28,69,0],[70,30,69,28,"patchDict"],[70,39,69,0],[70,41,69,39],[71,0,70,4],[71,8,70,10,"result"],[71,14,70,16],[71,17,70,19],[71,19,70,4],[73,0,73,4],[73,9,73,9],[73,13,73,15,"key"],[73,16,73,4],[73,20,73,22,"dict"],[73,24,73,4],[73,26,73,28],[74,0,74,8],[74,10,74,14,"patchDescriptors"],[74,26,74,30],[74,29,74,34,"patchDict"],[74,38,74,43],[74,39,74,44,"key"],[74,42,74,43],[74,43,74,34],[74,47,74,52,"patchDict"],[74,56,74,61],[74,57,74,62,"key"],[74,60,74,61],[74,61,74,52],[74,62,74,67,"descriptors"],[74,73,74,33],[74,77,74,83],[74,81,74,8],[75,0,76,8,"result"],[75,6,76,8,"result"],[75,12,76,14],[75,13,76,15,"key"],[75,16,76,14],[75,17,76,8],[75,20,76,22],[76,0,77,12,"prelude"],[76,8,77,12,"prelude"],[76,15,77,19],[76,17,77,21,"key"],[76,20,77,24],[76,24,77,28,"patchDict"],[76,33,77,21],[76,37,77,41],[76,50,77,54,"patchDict"],[76,59,77,63],[76,60,77,64,"key"],[76,63,77,63],[76,64,77,21],[76,67,78,18,"patchDict"],[76,76,78,27],[76,77,78,28,"key"],[76,80,78,27],[76,81,78,18],[76,82,78,33,"prelude"],[76,89,77,21],[76,92,79,18,"dict"],[76,96,79,22],[76,97,79,23,"key"],[76,100,79,22],[76,101,79,18],[76,102,79,28,"prelude"],[76,109,79,18],[76,113,79,39],[76,117,76,22],[77,0,80,12,"descriptors"],[77,8,80,12,"descriptors"],[77,19,80,23],[77,21,80,25,"dict"],[77,25,80,29],[77,26,80,30,"key"],[77,29,80,29],[77,30,80,25],[77,31,80,35,"descriptors"],[77,42,80,25],[77,45,81,18,"patchDictionary"],[77,60,81,33],[77,61,81,34,"dict"],[77,65,81,38],[77,66,81,39,"key"],[77,69,81,38],[77,70,81,34],[77,71,81,44,"descriptors"],[77,82,81,33],[77,84,81,57,"patchDescriptors"],[77,100,81,73],[77,104,81,77],[77,106,81,33],[77,107,80,25],[77,110,82,18,"patchDescriptors"],[77,126,82,34],[77,130,82,38,"unpackSyntaxes"],[77,144,82,52],[77,145,82,53,"patchDescriptors"],[77,161,82,52],[78,0,76,22],[78,7,76,8],[79,0,84,5],[81,0,87,4],[81,9,87,9],[81,13,87,15,"key"],[81,18,87,4],[81,22,87,22,"patchDict"],[81,31,87,4],[81,33,87,33],[82,0,88,8],[82,10,88,12],[82,11,88,13,"hasOwnProperty"],[82,25,88,27],[82,26,88,28,"call"],[82,30,88,13],[82,31,88,33,"dict"],[82,35,88,13],[82,37,88,39,"key"],[82,42,88,13],[82,43,88,8],[82,45,88,45],[83,0,89,12,"result"],[83,8,89,12,"result"],[83,14,89,18],[83,15,89,19,"key"],[83,20,89,18],[83,21,89,12],[83,24,89,26],[84,0,90,16,"prelude"],[84,10,90,16,"prelude"],[84,17,90,23],[84,19,90,25,"patchDict"],[84,28,90,34],[84,29,90,35,"key"],[84,34,90,34],[84,35,90,25],[84,36,90,40,"prelude"],[84,43,90,25],[84,47,90,51],[84,51,89,26],[85,0,91,16,"descriptors"],[85,10,91,16,"descriptors"],[85,21,91,27],[85,23,91,29,"patchDict"],[85,32,91,38],[85,33,91,39,"key"],[85,38,91,38],[85,39,91,29],[85,40,91,44,"descriptors"],[85,51,91,29],[85,55,91,59,"unpackSyntaxes"],[85,69,91,73],[85,70,91,74,"patchDict"],[85,79,91,83],[85,80,91,84,"key"],[85,85,91,83],[85,86,91,74],[85,87,91,89,"descriptors"],[85,98,91,73],[86,0,89,26],[86,9,89,12],[87,0,93,9],[88,0,94,5],[90,0,96,4],[90,11,96,11,"result"],[90,17,96,4],[91,0,97,1],[93,0,99,0,"module"],[93,2,99,0,"module"],[93,8,99,6],[93,9,99,7,"exports"],[93,16,99,0],[93,19,99,17],[94,0,100,4,"types"],[94,4,100,4,"types"],[94,9,100,9],[94,11,100,11,"patchDictionary"],[94,26,100,26],[94,27,100,27,"mdnSyntaxes"],[94,38,100,26],[94,40,100,40,"patch"],[94,45,100,45],[94,46,100,46,"syntaxes"],[94,54,100,26],[94,55,99,17],[95,0,101,4,"atrules"],[95,4,101,4,"atrules"],[95,11,101,11],[95,13,101,13,"patchAtrules"],[95,25,101,25],[95,26,101,26,"preprocessAtrules"],[95,43,101,43],[95,44,101,44,"mdnAtrules"],[95,54,101,43],[95,55,101,25],[95,57,101,57,"patch"],[95,62,101,62],[95,63,101,63,"atrules"],[95,70,101,25],[95,71,99,17],[96,0,102,4,"properties"],[96,4,102,4,"properties"],[96,14,102,14],[96,16,102,16,"patchDictionary"],[96,31,102,31],[96,32,102,32,"mdnProperties"],[96,45,102,31],[96,47,102,47,"patch"],[96,52,102,52],[96,53,102,53,"properties"],[96,63,102,31],[97,0,99,17],[97,3,99,0]],"functionMap":{"names":["<global>","preprocessAtrules","patchDictionary","unpackSyntaxes","patchAtrules"],"mappings":"AAA;ACM;CDsB;AEE;CF0B;AGE;CHQ;AIE;CJ4B"}},"type":"js/module"}]}