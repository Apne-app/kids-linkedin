{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"../../Core/Devtools/symbolicateStackTrace","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),e.deleteStack=function(t){u.delete(t)},e.symbolicate=function(t){var o=u.get(t);null==o&&(o=(0,n.default)(t).then(f),u.set(t,o));return o};var n=t(r(d[1]));function o(t,n){var o;if(\"undefined\"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(o=l(t))||n&&t&&\"number\"==typeof t.length){o&&(t=o);var c=0;return function(){return c>=t.length?{done:!0}:{done:!1,value:t[c++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}return(o=t[Symbol.iterator]()).next.bind(o)}function l(t,n){if(t){if(\"string\"==typeof t)return c(t,n);var o=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===o&&t.constructor&&(o=t.constructor.name),\"Map\"===o||\"Set\"===o?Array.from(t):\"Arguments\"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?c(t,n):void 0}}function c(t,n){(null==n||n>t.length)&&(n=t.length);for(var o=0,l=new Array(n);o<n;o++)l[o]=t[o];return l}var u=new Map,f=function(t){var n=t.stack,l=t.codeFrame;if(!Array.isArray(n))throw new Error('Expected stack to be an array.');for(var c,u=[],f=o(n);!(c=f()).done;){var s=c.value,y=!1;if('collapse'in s){if('boolean'!=typeof s.collapse)throw new Error('Expected stack frame `collapse` to be a boolean.');y=s.collapse}u.push({column:s.column,file:s.file,lineNumber:s.lineNumber,methodName:s.methodName,collapse:y})}return{stack:u,codeFrame:l}}});","lineCount":1,"map":[[1,28,11,0],[1,118,52,7],[1,127,52,28,"stack"],[1,130,53,2,"cache"],[1,132,53,8,"delete"],[1,139,53,15,"stack"],[1,157,56,7],[1,166,56,28,"stack"],[1,169,57,2],[1,173,57,6,"promise"],[1,175,57,16,"cache"],[1,177,57,22,"get"],[1,181,57,26,"stack"],[1,184,58,17],[1,190,58,6,"promise"],[1,194,59,4,"promise"],[1,197,59,14],[1,199,59,14,"_symbolicateStackTrace"],[1,201,59,14,"default"],[1,210,59,36,"stack"],[1,213,59,43,"then"],[1,218,59,48,"sanitize"],[1,221,60,4,"cache"],[1,223,60,10,"set"],[1,227,60,14,"stack"],[1,229,60,21,"promise"],[1,233,63,2],[1,240,63,9,"promise"],[1,243,13,0],[1,247,13,0,"_symbolicateStackTrace"],[1,249,13,0,"_interopRequireDefault"],[1,251,13,0,"r"],[1,253,13,0,"d"],[1,255,13,0],[1,1084,20,0],[1,1088,20,6,"cache"],[1,1090,20,59],[1,1094,20,63,"Map"],[1,1098,25,6,"sanitize"],[1,1100,25,17],[1,1109,25,17,"_ref"],[1,1112,28,54],[1,1116,26,9,"maybeStack"],[1,1118,28,54,"_ref"],[1,1120,26,2,"stack"],[1,1126,27,2,"codeFrame"],[1,1128,28,54,"_ref"],[1,1130,27,2,"codeFrame"],[1,1140,29,2],[1,1144,29,7,"Array"],[1,1150,29,13,"isArray"],[1,1158,29,21,"maybeStack"],[1,1161,30,4],[1,1167,30,10],[1,1171,30,14,"Error"],[1,1177,30,20],[1,1211,33,2],[1,1215,32,2],[1,1219,33,2,"_step"],[1,1221,32,8,"stack"],[1,1226,33,2,"_iterator"],[1,1228,33,2,"_createForOfIteratorHelperLoose"],[1,1230,33,27,"maybeStack"],[1,1235,33,2,"_step"],[1,1237,33,2,"_iterator"],[1,1242,33,2,"done"],[1,1248,33,39],[1,1249,33,39],[1,1253,33,13,"maybeFrame"],[1,1255,33,39,"_step"],[1,1257,33,39,"value"],[1,1263,34,8,"collapse"],[1,1266,34,19],[1,1268,35,4],[1,1271,35,8],[1,1284,35,22,"maybeFrame"],[1,1286,35,34],[1,1287,36,6],[1,1290,36,41],[1,1308,36,17,"maybeFrame"],[1,1310,36,28,"collapse"],[1,1319,37,8],[1,1325,37,14],[1,1329,37,18,"Error"],[1,1335,37,24],[1,1387,39,6,"collapse"],[1,1389,39,17,"maybeFrame"],[1,1391,39,28,"collapse"],[1,1400,41,4,"stack"],[1,1402,41,10,"push"],[1,1408,42,6,"column"],[1,1415,42,14,"maybeFrame"],[1,1417,42,25,"column"],[1,1424,43,6,"file"],[1,1429,43,12,"maybeFrame"],[1,1431,43,23,"file"],[1,1436,44,6,"lineNumber"],[1,1447,44,18,"maybeFrame"],[1,1449,44,29,"lineNumber"],[1,1460,45,6,"methodName"],[1,1471,45,18,"maybeFrame"],[1,1473,45,29,"methodName"],[1,1484,46,6,"collapse"],[1,1493,46,6,"collapse"],[1,1497,49,2],[1,1504,49,10,"stack"],[1,1510,49,10,"stack"],[1,1512,49,17,"codeFrame"],[1,1522,49,17,"codeFrame"]],"functionMap":{"names":["<global>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;iBCwB;CDyB;OEE;CFE;OGE;CHQ"}},"type":"js/module"}]}