{"dependencies":[{"name":"../common/OffsetToLocation","data":{"isAsync":false}},{"name":"../common/SyntaxError","data":{"isAsync":false}},{"name":"../common/TokenStream","data":{"isAsync":false}},{"name":"../common/List","data":{"isAsync":false}},{"name":"../tokenizer","data":{"isAsync":false}},{"name":"../tokenizer/const","data":{"isAsync":false}},{"name":"../tokenizer/utils","data":{"isAsync":false}},{"name":"./sequence","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var OffsetToLocation = _$$_REQUIRE(_dependencyMap[0], \"../common/OffsetToLocation\");\n\n  var SyntaxError = _$$_REQUIRE(_dependencyMap[1], \"../common/SyntaxError\");\n\n  var TokenStream = _$$_REQUIRE(_dependencyMap[2], \"../common/TokenStream\");\n\n  var List = _$$_REQUIRE(_dependencyMap[3], \"../common/List\");\n\n  var tokenize = _$$_REQUIRE(_dependencyMap[4], \"../tokenizer\");\n\n  var constants = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer/const\");\n\n  var _require = _$$_REQUIRE(_dependencyMap[6], \"../tokenizer/utils\"),\n      findWhiteSpaceStart = _require.findWhiteSpaceStart,\n      cmpStr = _require.cmpStr;\n\n  var sequence = _$$_REQUIRE(_dependencyMap[7], \"./sequence\");\n\n  var noop = function noop() {};\n\n  var TYPE = constants.TYPE;\n  var NAME = constants.NAME;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var IDENT = TYPE.Ident;\n  var FUNCTION = TYPE.Function;\n  var URL = TYPE.Url;\n  var HASH = TYPE.Hash;\n  var PERCENTAGE = TYPE.Percentage;\n  var NUMBER = TYPE.Number;\n  var NUMBERSIGN = 0x0023;\n  var NULL = 0;\n\n  function createParseContext(name) {\n    return function () {\n      return this[name]();\n    };\n  }\n\n  function processConfig(config) {\n    var parserConfig = {\n      context: {},\n      scope: {},\n      atrule: {},\n      pseudo: {}\n    };\n\n    if (config.parseContext) {\n      for (var name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n          case 'function':\n            parserConfig.context[name] = config.parseContext[name];\n            break;\n\n          case 'string':\n            parserConfig.context[name] = createParseContext(config.parseContext[name]);\n            break;\n        }\n      }\n    }\n\n    if (config.scope) {\n      for (var name in config.scope) {\n        parserConfig.scope[name] = config.scope[name];\n      }\n    }\n\n    if (config.atrule) {\n      for (var name in config.atrule) {\n        var atrule = config.atrule[name];\n\n        if (atrule.parse) {\n          parserConfig.atrule[name] = atrule.parse;\n        }\n      }\n    }\n\n    if (config.pseudo) {\n      for (var name in config.pseudo) {\n        var pseudo = config.pseudo[name];\n\n        if (pseudo.parse) {\n          parserConfig.pseudo[name] = pseudo.parse;\n        }\n      }\n    }\n\n    if (config.node) {\n      for (var name in config.node) {\n        parserConfig[name] = config.node[name].parse;\n      }\n    }\n\n    return parserConfig;\n  }\n\n  module.exports = function createParser(config) {\n    var parser = {\n      scanner: new TokenStream(),\n      locationMap: new OffsetToLocation(),\n      filename: '<unknown>',\n      needPositions: false,\n      onParseError: noop,\n      onParseErrorThrow: false,\n      parseAtrulePrelude: true,\n      parseRulePrelude: true,\n      parseValue: true,\n      parseCustomProperty: false,\n      readSequence: sequence,\n      createList: function createList() {\n        return new List();\n      },\n      createSingleNodeList: function createSingleNodeList(node) {\n        return new List().appendData(node);\n      },\n      getFirstListNode: function getFirstListNode(list) {\n        return list && list.first();\n      },\n      getLastListNode: function getLastListNode(list) {\n        return list.last();\n      },\n      parseWithFallback: function parseWithFallback(consumer, fallback) {\n        var startToken = this.scanner.tokenIndex;\n\n        try {\n          return consumer.call(this);\n        } catch (e) {\n          if (this.onParseErrorThrow) {\n            throw e;\n          }\n\n          var fallbackNode = fallback.call(this, startToken);\n          this.onParseErrorThrow = true;\n          this.onParseError(e, fallbackNode);\n          this.onParseErrorThrow = false;\n          return fallbackNode;\n        }\n      },\n      lookupNonWSType: function lookupNonWSType(offset) {\n        do {\n          var type = this.scanner.lookupType(offset++);\n\n          if (type !== WHITESPACE) {\n            return type;\n          }\n        } while (type !== NULL);\n\n        return NULL;\n      },\n      eat: function eat(tokenType) {\n        if (this.scanner.tokenType !== tokenType) {\n          var offset = this.scanner.tokenStart;\n          var message = NAME[tokenType] + ' is expected';\n\n          switch (tokenType) {\n            case IDENT:\n              if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\n                offset = this.scanner.tokenEnd - 1;\n                message = 'Identifier is expected but function found';\n              } else {\n                message = 'Identifier is expected';\n              }\n\n              break;\n\n            case HASH:\n              if (this.scanner.isDelim(NUMBERSIGN)) {\n                this.scanner.next();\n                offset++;\n                message = 'Name is expected';\n              }\n\n              break;\n\n            case PERCENTAGE:\n              if (this.scanner.tokenType === NUMBER) {\n                offset = this.scanner.tokenEnd;\n                message = 'Percent sign is expected';\n              }\n\n              break;\n\n            default:\n              if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\n                offset = offset + 1;\n              }\n\n          }\n\n          this.error(message, offset);\n        }\n\n        this.scanner.next();\n      },\n      consume: function consume(tokenType) {\n        var value = this.scanner.getTokenValue();\n        this.eat(tokenType);\n        return value;\n      },\n      consumeFunctionName: function consumeFunctionName() {\n        var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\n        this.eat(FUNCTION);\n        return name;\n      },\n      getLocation: function getLocation(start, end) {\n        if (this.needPositions) {\n          return this.locationMap.getLocationRange(start, end, this.filename);\n        }\n\n        return null;\n      },\n      getLocationFromList: function getLocationFromList(list) {\n        if (this.needPositions) {\n          var head = this.getFirstListNode(list);\n          var tail = this.getLastListNode(list);\n          return this.locationMap.getLocationRange(head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart, tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart, this.filename);\n        }\n\n        return null;\n      },\n      error: function error(message, offset) {\n        var location = typeof offset !== 'undefined' && offset < this.scanner.source.length ? this.locationMap.getLocation(offset) : this.scanner.eof ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1)) : this.locationMap.getLocation(this.scanner.tokenStart);\n        throw new SyntaxError(message || 'Unexpected input', this.scanner.source, location.offset, location.line, location.column);\n      }\n    };\n    config = processConfig(config || {});\n\n    for (var key in config) {\n      parser[key] = config[key];\n    }\n\n    return function (source, options) {\n      options = options || {};\n      var context = options.context || 'default';\n      var onComment = options.onComment;\n      var ast;\n      tokenize(source, parser.scanner);\n      parser.locationMap.setSource(source, options.offset, options.line, options.column);\n      parser.filename = options.filename || '<unknown>';\n      parser.needPositions = Boolean(options.positions);\n      parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\n      parser.onParseErrorThrow = false;\n      parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n      parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n      parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n      parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n      if (!parser.context.hasOwnProperty(context)) {\n        throw new Error('Unknown context `' + context + '`');\n      }\n\n      if (typeof onComment === 'function') {\n        parser.scanner.forEachToken(function (type, start, end) {\n          if (type === COMMENT) {\n            var loc = parser.getLocation(start, end);\n            var value = cmpStr(source, end - 2, end, '*/') ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);\n            onComment(value, loc);\n          }\n        });\n      }\n\n      ast = parser.context[context].call(parser, options);\n\n      if (!parser.scanner.eof) {\n        parser.error();\n      }\n\n      return ast;\n    };\n  };\n});","lineCount":272,"map":[[2,0,1,0],[2,6,1,4,"OffsetToLocation"],[2,22,1,20],[2,25,1,23,"require"],[2,36,1,30],[2,85,1,0],[4,0,2,0],[4,6,2,4,"SyntaxError"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,75,2,0],[6,0,3,0],[6,6,3,4,"TokenStream"],[6,17,3,15],[6,20,3,18,"require"],[6,31,3,25],[6,75,3,0],[8,0,4,0],[8,6,4,4,"List"],[8,10,4,8],[8,13,4,11,"require"],[8,24,4,18],[8,61,4,0],[10,0,5,0],[10,6,5,4,"tokenize"],[10,14,5,12],[10,17,5,15,"require"],[10,28,5,22],[10,63,5,0],[12,0,6,0],[12,6,6,4,"constants"],[12,15,6,13],[12,18,6,16,"require"],[12,29,6,23],[12,70,6,0],[14,17,7,38,"require"],[14,28,7,45],[14,69],[15,6,7,6,"findWhiteSpaceStart"],[15,25],[15,37,7,6,"findWhiteSpaceStart"],[15,56],[16,6,7,27,"cmpStr"],[16,12],[16,24,7,27,"cmpStr"],[16,30],[18,0,8,0],[18,6,8,4,"sequence"],[18,14,8,12],[18,17,8,15,"require"],[18,28,8,22],[18,61,8,0],[20,0,9,0],[20,6,9,4,"noop"],[20,10,9,8],[20,13,9,11],[20,22,9,4,"noop"],[20,26,9,11],[20,29,9,22],[20,30,9,24],[20,31,9,0],[22,0,11,0],[22,6,11,4,"TYPE"],[22,10,11,8],[22,13,11,11,"constants"],[22,22,11,20],[22,23,11,21,"TYPE"],[22,27,11,0],[23,0,12,0],[23,6,12,4,"NAME"],[23,10,12,8],[23,13,12,11,"constants"],[23,22,12,20],[23,23,12,21,"NAME"],[23,27,12,0],[24,0,13,0],[24,6,13,4,"WHITESPACE"],[24,16,13,14],[24,19,13,17,"TYPE"],[24,23,13,21],[24,24,13,22,"WhiteSpace"],[24,34,13,0],[25,0,14,0],[25,6,14,4,"COMMENT"],[25,13,14,11],[25,16,14,14,"TYPE"],[25,20,14,18],[25,21,14,19,"Comment"],[25,28,14,0],[26,0,15,0],[26,6,15,4,"IDENT"],[26,11,15,9],[26,14,15,12,"TYPE"],[26,18,15,16],[26,19,15,17,"Ident"],[26,24,15,0],[27,0,16,0],[27,6,16,4,"FUNCTION"],[27,14,16,12],[27,17,16,15,"TYPE"],[27,21,16,19],[27,22,16,20,"Function"],[27,30,16,0],[28,0,17,0],[28,6,17,4,"URL"],[28,9,17,7],[28,12,17,10,"TYPE"],[28,16,17,14],[28,17,17,15,"Url"],[28,20,17,0],[29,0,18,0],[29,6,18,4,"HASH"],[29,10,18,8],[29,13,18,11,"TYPE"],[29,17,18,15],[29,18,18,16,"Hash"],[29,22,18,0],[30,0,19,0],[30,6,19,4,"PERCENTAGE"],[30,16,19,14],[30,19,19,17,"TYPE"],[30,23,19,21],[30,24,19,22,"Percentage"],[30,34,19,0],[31,0,20,0],[31,6,20,4,"NUMBER"],[31,12,20,10],[31,15,20,13,"TYPE"],[31,19,20,17],[31,20,20,18,"Number"],[31,26,20,0],[32,0,21,0],[32,6,21,4,"NUMBERSIGN"],[32,16,21,14],[32,19,21,17],[32,25,21,0],[33,0,22,0],[33,6,22,4,"NULL"],[33,10,22,8],[33,13,22,11],[33,14,22,0],[35,0,24,0],[35,11,24,9,"createParseContext"],[35,29,24,0],[35,30,24,28,"name"],[35,34,24,0],[35,36,24,34],[36,0,25,4],[36,11,25,11],[36,23,25,22],[37,0,26,8],[37,13,26,15],[37,18,26,20,"name"],[37,22,26,15],[37,25,26,8],[38,0,27,5],[38,5,25,4],[39,0,28,1],[41,0,30,0],[41,11,30,9,"processConfig"],[41,24,30,0],[41,25,30,23,"config"],[41,31,30,0],[41,33,30,31],[42,0,31,4],[42,8,31,8,"parserConfig"],[42,20,31,20],[42,23,31,23],[43,0,32,8,"context"],[43,6,32,8,"context"],[43,13,32,15],[43,15,32,17],[43,17,31,23],[44,0,33,8,"scope"],[44,6,33,8,"scope"],[44,11,33,13],[44,13,33,15],[44,15,31,23],[45,0,34,8,"atrule"],[45,6,34,8,"atrule"],[45,12,34,14],[45,14,34,16],[45,16,31,23],[46,0,35,8,"pseudo"],[46,6,35,8,"pseudo"],[46,12,35,14],[46,14,35,16],[47,0,31,23],[47,5,31,4],[49,0,38,4],[49,8,38,8,"config"],[49,14,38,14],[49,15,38,15,"parseContext"],[49,27,38,4],[49,29,38,29],[50,0,39,8],[50,11,39,13],[50,15,39,17,"name"],[50,19,39,8],[50,23,39,25,"config"],[50,29,39,31],[50,30,39,32,"parseContext"],[50,42,39,8],[50,44,39,46],[51,0,40,12],[51,16,40,20],[51,23,40,27,"config"],[51,29,40,33],[51,30,40,34,"parseContext"],[51,42,40,27],[51,43,40,47,"name"],[51,47,40,27],[51,48,40,12],[52,0,41,16],[52,15,41,21],[52,25,41,16],[53,0,42,20,"parserConfig"],[53,12,42,20,"parserConfig"],[53,24,42,32],[53,25,42,33,"context"],[53,32,42,20],[53,33,42,41,"name"],[53,37,42,20],[53,41,42,49,"config"],[53,47,42,55],[53,48,42,56,"parseContext"],[53,60,42,49],[53,61,42,69,"name"],[53,65,42,49],[53,66,42,20],[54,0,43,20],[56,0,45,16],[56,15,45,21],[56,23,45,16],[57,0,46,20,"parserConfig"],[57,12,46,20,"parserConfig"],[57,24,46,32],[57,25,46,33,"context"],[57,32,46,20],[57,33,46,41,"name"],[57,37,46,20],[57,41,46,49,"createParseContext"],[57,59,46,67],[57,60,46,68,"config"],[57,66,46,74],[57,67,46,75,"parseContext"],[57,79,46,68],[57,80,46,88,"name"],[57,84,46,68],[57,85,46,67],[57,86,46,20],[58,0,47,20],[59,0,40,12],[60,0,49,9],[61,0,50,5],[63,0,52,4],[63,8,52,8,"config"],[63,14,52,14],[63,15,52,15,"scope"],[63,20,52,4],[63,22,52,22],[64,0,53,8],[64,11,53,13],[64,15,53,17,"name"],[64,19,53,8],[64,23,53,25,"config"],[64,29,53,31],[64,30,53,32,"scope"],[64,35,53,8],[64,37,53,39],[65,0,54,12,"parserConfig"],[65,8,54,12,"parserConfig"],[65,20,54,24],[65,21,54,25,"scope"],[65,26,54,12],[65,27,54,31,"name"],[65,31,54,12],[65,35,54,39,"config"],[65,41,54,45],[65,42,54,46,"scope"],[65,47,54,39],[65,48,54,52,"name"],[65,52,54,39],[65,53,54,12],[66,0,55,9],[67,0,56,5],[69,0,58,4],[69,8,58,8,"config"],[69,14,58,14],[69,15,58,15,"atrule"],[69,21,58,4],[69,23,58,23],[70,0,59,8],[70,11,59,13],[70,15,59,17,"name"],[70,19,59,8],[70,23,59,25,"config"],[70,29,59,31],[70,30,59,32,"atrule"],[70,36,59,8],[70,38,59,40],[71,0,60,12],[71,12,60,16,"atrule"],[71,18,60,22],[71,21,60,25,"config"],[71,27,60,31],[71,28,60,32,"atrule"],[71,34,60,25],[71,35,60,39,"name"],[71,39,60,25],[71,40,60,12],[73,0,62,12],[73,12,62,16,"atrule"],[73,18,62,22],[73,19,62,23,"parse"],[73,24,62,12],[73,26,62,30],[74,0,63,16,"parserConfig"],[74,10,63,16,"parserConfig"],[74,22,63,28],[74,23,63,29,"atrule"],[74,29,63,16],[74,30,63,36,"name"],[74,34,63,16],[74,38,63,44,"atrule"],[74,44,63,50],[74,45,63,51,"parse"],[74,50,63,16],[75,0,64,13],[76,0,65,9],[77,0,66,5],[79,0,68,4],[79,8,68,8,"config"],[79,14,68,14],[79,15,68,15,"pseudo"],[79,21,68,4],[79,23,68,23],[80,0,69,8],[80,11,69,13],[80,15,69,17,"name"],[80,19,69,8],[80,23,69,25,"config"],[80,29,69,31],[80,30,69,32,"pseudo"],[80,36,69,8],[80,38,69,40],[81,0,70,12],[81,12,70,16,"pseudo"],[81,18,70,22],[81,21,70,25,"config"],[81,27,70,31],[81,28,70,32,"pseudo"],[81,34,70,25],[81,35,70,39,"name"],[81,39,70,25],[81,40,70,12],[83,0,72,12],[83,12,72,16,"pseudo"],[83,18,72,22],[83,19,72,23,"parse"],[83,24,72,12],[83,26,72,30],[84,0,73,16,"parserConfig"],[84,10,73,16,"parserConfig"],[84,22,73,28],[84,23,73,29,"pseudo"],[84,29,73,16],[84,30,73,36,"name"],[84,34,73,16],[84,38,73,44,"pseudo"],[84,44,73,50],[84,45,73,51,"parse"],[84,50,73,16],[85,0,74,13],[86,0,75,9],[87,0,76,5],[89,0,78,4],[89,8,78,8,"config"],[89,14,78,14],[89,15,78,15,"node"],[89,19,78,4],[89,21,78,21],[90,0,79,8],[90,11,79,13],[90,15,79,17,"name"],[90,19,79,8],[90,23,79,25,"config"],[90,29,79,31],[90,30,79,32,"node"],[90,34,79,8],[90,36,79,38],[91,0,80,12,"parserConfig"],[91,8,80,12,"parserConfig"],[91,20,80,24],[91,21,80,25,"name"],[91,25,80,24],[91,26,80,12],[91,29,80,33,"config"],[91,35,80,39],[91,36,80,40,"node"],[91,40,80,33],[91,41,80,45,"name"],[91,45,80,33],[91,47,80,51,"parse"],[91,52,80,12],[92,0,81,9],[93,0,82,5],[95,0,84,4],[95,11,84,11,"parserConfig"],[95,23,84,4],[96,0,85,1],[98,0,87,0,"module"],[98,2,87,0,"module"],[98,8,87,6],[98,9,87,7,"exports"],[98,16,87,0],[98,19,87,17],[98,28,87,26,"createParser"],[98,40,87,17],[98,41,87,39,"config"],[98,47,87,17],[98,49,87,47],[99,0,88,4],[99,8,88,8,"parser"],[99,14,88,14],[99,17,88,17],[100,0,89,8,"scanner"],[100,6,89,8,"scanner"],[100,13,89,15],[100,15,89,17],[100,19,89,21,"TokenStream"],[100,30,89,17],[100,32,88,17],[101,0,90,8,"locationMap"],[101,6,90,8,"locationMap"],[101,17,90,19],[101,19,90,21],[101,23,90,25,"OffsetToLocation"],[101,39,90,21],[101,41,88,17],[102,0,92,8,"filename"],[102,6,92,8,"filename"],[102,14,92,16],[102,16,92,18],[102,27,88,17],[103,0,93,8,"needPositions"],[103,6,93,8,"needPositions"],[103,19,93,21],[103,21,93,23],[103,26,88,17],[104,0,94,8,"onParseError"],[104,6,94,8,"onParseError"],[104,18,94,20],[104,20,94,22,"noop"],[104,24,88,17],[105,0,95,8,"onParseErrorThrow"],[105,6,95,8,"onParseErrorThrow"],[105,23,95,25],[105,25,95,27],[105,30,88,17],[106,0,96,8,"parseAtrulePrelude"],[106,6,96,8,"parseAtrulePrelude"],[106,24,96,26],[106,26,96,28],[106,30,88,17],[107,0,97,8,"parseRulePrelude"],[107,6,97,8,"parseRulePrelude"],[107,22,97,24],[107,24,97,26],[107,28,88,17],[108,0,98,8,"parseValue"],[108,6,98,8,"parseValue"],[108,16,98,18],[108,18,98,20],[108,22,88,17],[109,0,99,8,"parseCustomProperty"],[109,6,99,8,"parseCustomProperty"],[109,25,99,27],[109,27,99,29],[109,32,88,17],[110,0,101,8,"readSequence"],[110,6,101,8,"readSequence"],[110,18,101,20],[110,20,101,22,"sequence"],[110,28,88,17],[111,0,103,8,"createList"],[111,6,103,8,"createList"],[111,16,103,18],[111,18,103,20],[111,40,103,31],[112,0,104,12],[112,15,104,19],[112,19,104,23,"List"],[112,23,104,19],[112,25,104,12],[113,0,105,9],[113,7,88,17],[114,0,106,8,"createSingleNodeList"],[114,6,106,8,"createSingleNodeList"],[114,26,106,28],[114,28,106,30],[114,58,106,39,"node"],[114,62,106,30],[114,64,106,45],[115,0,107,12],[115,15,107,19],[115,19,107,23,"List"],[115,23,107,19],[115,26,107,30,"appendData"],[115,36,107,19],[115,37,107,41,"node"],[115,41,107,19],[115,42,107,12],[116,0,108,9],[116,7,88,17],[117,0,109,8,"getFirstListNode"],[117,6,109,8,"getFirstListNode"],[117,22,109,24],[117,24,109,26],[117,50,109,35,"list"],[117,54,109,26],[117,56,109,41],[118,0,110,12],[118,15,110,19,"list"],[118,19,110,23],[118,23,110,27,"list"],[118,27,110,31],[118,28,110,32,"first"],[118,33,110,27],[118,35,110,12],[119,0,111,9],[119,7,88,17],[120,0,112,8,"getLastListNode"],[120,6,112,8,"getLastListNode"],[120,21,112,23],[120,23,112,25],[120,48,112,34,"list"],[120,52,112,25],[120,54,112,40],[121,0,113,12],[121,15,113,19,"list"],[121,19,113,23],[121,20,113,24,"last"],[121,24,113,19],[121,26,113,12],[122,0,114,9],[122,7,88,17],[123,0,116,8,"parseWithFallback"],[123,6,116,8,"parseWithFallback"],[123,23,116,25],[123,25,116,27],[123,52,116,36,"consumer"],[123,60,116,27],[123,62,116,46,"fallback"],[123,70,116,27],[123,72,116,56],[124,0,117,12],[124,12,117,16,"startToken"],[124,22,117,26],[124,25,117,29],[124,30,117,34,"scanner"],[124,37,117,29],[124,38,117,42,"tokenIndex"],[124,48,117,12],[126,0,119,12],[126,12,119,16],[127,0,120,16],[127,17,120,23,"consumer"],[127,25,120,31],[127,26,120,32,"call"],[127,30,120,23],[127,31,120,37],[127,35,120,23],[127,36,120,16],[128,0,121,13],[128,9,119,12],[128,10,121,14],[128,17,121,21,"e"],[128,18,121,14],[128,20,121,24],[129,0,122,16],[129,14,122,20],[129,19,122,25,"onParseErrorThrow"],[129,36,122,16],[129,38,122,44],[130,0,123,20],[130,18,123,26,"e"],[130,19,123,20],[131,0,124,17],[133,0,126,16],[133,14,126,20,"fallbackNode"],[133,26,126,32],[133,29,126,35,"fallback"],[133,37,126,43],[133,38,126,44,"call"],[133,42,126,35],[133,43,126,49],[133,47,126,35],[133,49,126,55,"startToken"],[133,59,126,35],[133,60,126,16],[134,0,128,16],[134,15,128,21,"onParseErrorThrow"],[134,32,128,16],[134,35,128,41],[134,39,128,16],[135,0,129,16],[135,15,129,21,"onParseError"],[135,27,129,16],[135,28,129,34,"e"],[135,29,129,16],[135,31,129,37,"fallbackNode"],[135,43,129,16],[136,0,130,16],[136,15,130,21,"onParseErrorThrow"],[136,32,130,16],[136,35,130,41],[136,40,130,16],[137,0,132,16],[137,17,132,23,"fallbackNode"],[137,29,132,16],[138,0,133,13],[139,0,134,9],[139,7,88,17],[140,0,136,8,"lookupNonWSType"],[140,6,136,8,"lookupNonWSType"],[140,21,136,23],[140,23,136,25],[140,48,136,34,"offset"],[140,54,136,25],[140,56,136,42],[141,0,137,12],[141,11,137,15],[142,0,138,16],[142,14,138,20,"type"],[142,18,138,24],[142,21,138,27],[142,26,138,32,"scanner"],[142,33,138,27],[142,34,138,40,"lookupType"],[142,44,138,27],[142,45,138,51,"offset"],[142,51,138,57],[142,53,138,27],[142,54,138,16],[144,0,139,16],[144,14,139,20,"type"],[144,18,139,24],[144,23,139,29,"WHITESPACE"],[144,33,139,16],[144,35,139,41],[145,0,140,20],[145,19,140,27,"type"],[145,23,140,20],[146,0,141,17],[147,0,142,13],[147,9,137,12],[147,17,142,21,"type"],[147,21,142,25],[147,26,142,30,"NULL"],[147,30,137,12],[149,0,144,12],[149,15,144,19,"NULL"],[149,19,144,12],[150,0,145,9],[150,7,88,17],[151,0,147,8,"eat"],[151,6,147,8,"eat"],[151,9,147,11],[151,11,147,13],[151,24,147,22,"tokenType"],[151,33,147,13],[151,35,147,33],[152,0,148,12],[152,12,148,16],[152,17,148,21,"scanner"],[152,24,148,16],[152,25,148,29,"tokenType"],[152,34,148,16],[152,39,148,43,"tokenType"],[152,48,148,12],[152,50,148,54],[153,0,149,16],[153,14,149,20,"offset"],[153,20,149,26],[153,23,149,29],[153,28,149,34,"scanner"],[153,35,149,29],[153,36,149,42,"tokenStart"],[153,46,149,16],[154,0,150,16],[154,14,150,20,"message"],[154,21,150,27],[154,24,150,30,"NAME"],[154,28,150,34],[154,29,150,35,"tokenType"],[154,38,150,34],[154,39,150,30],[154,42,150,48],[154,56,150,16],[156,0,153,16],[156,18,153,24,"tokenType"],[156,27,153,16],[157,0,154,20],[157,17,154,25,"IDENT"],[157,22,154,20],[158,0,156,24],[158,18,156,28],[158,23,156,33,"scanner"],[158,30,156,28],[158,31,156,41,"tokenType"],[158,40,156,28],[158,45,156,55,"FUNCTION"],[158,53,156,28],[158,57,156,67],[158,62,156,72,"scanner"],[158,69,156,67],[158,70,156,80,"tokenType"],[158,79,156,67],[158,84,156,94,"URL"],[158,87,156,24],[158,89,156,99],[159,0,157,28,"offset"],[159,16,157,28,"offset"],[159,22,157,34],[159,25,157,37],[159,30,157,42,"scanner"],[159,37,157,37],[159,38,157,50,"tokenEnd"],[159,46,157,37],[159,49,157,61],[159,50,157,28],[160,0,158,28,"message"],[160,16,158,28,"message"],[160,23,158,35],[160,26,158,38],[160,69,158,28],[161,0,159,25],[161,15,156,24],[161,21,159,31],[162,0,160,28,"message"],[162,16,160,28,"message"],[162,23,160,35],[162,26,160,38],[162,50,160,28],[163,0,161,25],[165,0,162,24],[167,0,164,20],[167,17,164,25,"HASH"],[167,21,164,20],[168,0,165,24],[168,18,165,28],[168,23,165,33,"scanner"],[168,30,165,28],[168,31,165,41,"isDelim"],[168,38,165,28],[168,39,165,49,"NUMBERSIGN"],[168,49,165,28],[168,50,165,24],[168,52,165,62],[169,0,166,28],[169,21,166,33,"scanner"],[169,28,166,28],[169,29,166,41,"next"],[169,33,166,28],[170,0,167,28,"offset"],[170,16,167,28,"offset"],[170,22,167,34],[171,0,168,28,"message"],[171,16,168,28,"message"],[171,23,168,35],[171,26,168,38],[171,44,168,28],[172,0,169,25],[174,0,170,24],[176,0,172,20],[176,17,172,25,"PERCENTAGE"],[176,27,172,20],[177,0,173,24],[177,18,173,28],[177,23,173,33,"scanner"],[177,30,173,28],[177,31,173,41,"tokenType"],[177,40,173,28],[177,45,173,55,"NUMBER"],[177,51,173,24],[177,53,173,63],[178,0,174,28,"offset"],[178,16,174,28,"offset"],[178,22,174,34],[178,25,174,37],[178,30,174,42,"scanner"],[178,37,174,37],[178,38,174,50,"tokenEnd"],[178,46,174,28],[179,0,175,28,"message"],[179,16,175,28,"message"],[179,23,175,35],[179,26,175,38],[179,52,175,28],[180,0,176,25],[182,0,177,24],[184,0,179,20],[185,0,182,24],[185,18,182,28],[185,23,182,33,"scanner"],[185,30,182,28],[185,31,182,41,"source"],[185,37,182,28],[185,38,182,48,"charCodeAt"],[185,48,182,28],[185,49,182,59],[185,54,182,64,"scanner"],[185,61,182,59],[185,62,182,72,"tokenStart"],[185,72,182,28],[185,78,182,88,"tokenType"],[185,87,182,24],[185,89,182,99],[186,0,183,28,"offset"],[186,16,183,28,"offset"],[186,22,183,34],[186,25,183,37,"offset"],[186,31,183,43],[186,34,183,46],[186,35,183,28],[187,0,184,25],[189,0,153,16],[191,0,187,16],[191,15,187,21,"error"],[191,20,187,16],[191,21,187,27,"message"],[191,28,187,16],[191,30,187,36,"offset"],[191,36,187,16],[192,0,188,13],[194,0,190,12],[194,13,190,17,"scanner"],[194,20,190,12],[194,21,190,25,"next"],[194,25,190,12],[195,0,191,9],[195,7,88,17],[196,0,193,8,"consume"],[196,6,193,8,"consume"],[196,13,193,15],[196,15,193,17],[196,32,193,26,"tokenType"],[196,41,193,17],[196,43,193,37],[197,0,194,12],[197,12,194,16,"value"],[197,17,194,21],[197,20,194,24],[197,25,194,29,"scanner"],[197,32,194,24],[197,33,194,37,"getTokenValue"],[197,46,194,24],[197,48,194,12],[198,0,196,12],[198,13,196,17,"eat"],[198,16,196,12],[198,17,196,21,"tokenType"],[198,26,196,12],[199,0,198,12],[199,15,198,19,"value"],[199,20,198,12],[200,0,199,9],[200,7,88,17],[201,0,200,8,"consumeFunctionName"],[201,6,200,8,"consumeFunctionName"],[201,25,200,27],[201,27,200,29],[201,58,200,40],[202,0,201,12],[202,12,201,16,"name"],[202,16,201,20],[202,19,201,23],[202,24,201,28,"scanner"],[202,31,201,23],[202,32,201,36,"source"],[202,38,201,23],[202,39,201,43,"substring"],[202,48,201,23],[202,49,201,53],[202,54,201,58,"scanner"],[202,61,201,53],[202,62,201,66,"tokenStart"],[202,72,201,23],[202,74,201,78],[202,79,201,83,"scanner"],[202,86,201,78],[202,87,201,91,"tokenEnd"],[202,95,201,78],[202,98,201,102],[202,99,201,23],[202,100,201,12],[203,0,203,12],[203,13,203,17,"eat"],[203,16,203,12],[203,17,203,21,"FUNCTION"],[203,25,203,12],[204,0,205,12],[204,15,205,19,"name"],[204,19,205,12],[205,0,206,9],[205,7,88,17],[206,0,208,8,"getLocation"],[206,6,208,8,"getLocation"],[206,17,208,19],[206,19,208,21],[206,40,208,30,"start"],[206,45,208,21],[206,47,208,37,"end"],[206,50,208,21],[206,52,208,42],[207,0,209,12],[207,12,209,16],[207,17,209,21,"needPositions"],[207,30,209,12],[207,32,209,36],[208,0,210,16],[208,17,210,23],[208,22,210,28,"locationMap"],[208,33,210,23],[208,34,210,40,"getLocationRange"],[208,50,210,23],[208,51,211,20,"start"],[208,56,210,23],[208,58,212,20,"end"],[208,61,210,23],[208,63,213,20],[208,68,213,25,"filename"],[208,76,210,23],[208,77,210,16],[209,0,215,13],[211,0,217,12],[211,15,217,19],[211,19,217,12],[212,0,218,9],[212,7,88,17],[213,0,219,8,"getLocationFromList"],[213,6,219,8,"getLocationFromList"],[213,25,219,27],[213,27,219,29],[213,56,219,38,"list"],[213,60,219,29],[213,62,219,44],[214,0,220,12],[214,12,220,16],[214,17,220,21,"needPositions"],[214,30,220,12],[214,32,220,36],[215,0,221,16],[215,14,221,20,"head"],[215,18,221,24],[215,21,221,27],[215,26,221,32,"getFirstListNode"],[215,42,221,27],[215,43,221,49,"list"],[215,47,221,27],[215,48,221,16],[216,0,222,16],[216,14,222,20,"tail"],[216,18,222,24],[216,21,222,27],[216,26,222,32,"getLastListNode"],[216,41,222,27],[216,42,222,48,"list"],[216,46,222,27],[216,47,222,16],[217,0,223,16],[217,17,223,23],[217,22,223,28,"locationMap"],[217,33,223,23],[217,34,223,40,"getLocationRange"],[217,50,223,23],[217,51,224,20,"head"],[217,55,224,24],[217,60,224,29],[217,64,224,20],[217,67,224,36,"head"],[217,71,224,40],[217,72,224,41,"loc"],[217,75,224,36],[217,76,224,45,"start"],[217,81,224,36],[217,82,224,51,"offset"],[217,88,224,36],[217,91,224,60],[217,96,224,65,"locationMap"],[217,107,224,60],[217,108,224,77,"startOffset"],[217,119,224,20],[217,122,224,91],[217,127,224,96,"scanner"],[217,134,224,91],[217,135,224,104,"tokenStart"],[217,145,223,23],[217,147,225,20,"tail"],[217,151,225,24],[217,156,225,29],[217,160,225,20],[217,163,225,36,"tail"],[217,167,225,40],[217,168,225,41,"loc"],[217,171,225,36],[217,172,225,45,"end"],[217,175,225,36],[217,176,225,49,"offset"],[217,182,225,36],[217,185,225,58],[217,190,225,63,"locationMap"],[217,201,225,58],[217,202,225,75,"startOffset"],[217,213,225,20],[217,216,225,89],[217,221,225,94,"scanner"],[217,228,225,89],[217,229,225,102,"tokenStart"],[217,239,223,23],[217,241,226,20],[217,246,226,25,"filename"],[217,254,223,23],[217,255,223,16],[218,0,228,13],[220,0,230,12],[220,15,230,19],[220,19,230,12],[221,0,231,9],[221,7,88,17],[222,0,233,8,"error"],[222,6,233,8,"error"],[222,11,233,13],[222,13,233,15],[222,28,233,24,"message"],[222,35,233,15],[222,37,233,33,"offset"],[222,43,233,15],[222,45,233,41],[223,0,234,12],[223,12,234,16,"location"],[223,20,234,24],[223,23,234,27],[223,30,234,34,"offset"],[223,36,234,27],[223,41,234,45],[223,52,234,27],[223,56,234,60,"offset"],[223,62,234,66],[223,65,234,69],[223,70,234,74,"scanner"],[223,77,234,69],[223,78,234,82,"source"],[223,84,234,69],[223,85,234,89,"length"],[223,91,234,27],[223,94,235,18],[223,99,235,23,"locationMap"],[223,110,235,18],[223,111,235,35,"getLocation"],[223,122,235,18],[223,123,235,47,"offset"],[223,129,235,18],[223,130,234,27],[223,133,236,18],[223,138,236,23,"scanner"],[223,145,236,18],[223,146,236,31,"eof"],[223,149,236,18],[223,152,237,22],[223,157,237,27,"locationMap"],[223,168,237,22],[223,169,237,39,"getLocation"],[223,180,237,22],[223,181,237,51,"findWhiteSpaceStart"],[223,200,237,70],[223,201,237,71],[223,206,237,76,"scanner"],[223,213,237,71],[223,214,237,84,"source"],[223,220,237,70],[223,222,237,92],[223,227,237,97,"scanner"],[223,234,237,92],[223,235,237,105,"source"],[223,241,237,92],[223,242,237,112,"length"],[223,248,237,92],[223,251,237,121],[223,252,237,70],[223,253,237,22],[223,254,236,18],[223,257,238,22],[223,262,238,27,"locationMap"],[223,273,238,22],[223,274,238,39,"getLocation"],[223,285,238,22],[223,286,238,51],[223,291,238,56,"scanner"],[223,298,238,51],[223,299,238,64,"tokenStart"],[223,309,238,22],[223,310,234,12],[224,0,240,12],[224,14,240,18],[224,18,240,22,"SyntaxError"],[224,29,240,18],[224,30,241,16,"message"],[224,37,241,23],[224,41,241,27],[224,59,240,18],[224,61,242,16],[224,66,242,21,"scanner"],[224,73,242,16],[224,74,242,29,"source"],[224,80,240,18],[224,82,243,16,"location"],[224,90,243,24],[224,91,243,25,"offset"],[224,97,240,18],[224,99,244,16,"location"],[224,107,244,24],[224,108,244,25,"line"],[224,112,240,18],[224,114,245,16,"location"],[224,122,245,24],[224,123,245,25,"column"],[224,129,240,18],[224,130,240,12],[225,0,247,9],[226,0,88,17],[226,5,88,4],[227,0,250,4,"config"],[227,4,250,4,"config"],[227,10,250,10],[227,13,250,13,"processConfig"],[227,26,250,26],[227,27,250,27,"config"],[227,33,250,33],[227,37,250,37],[227,39,250,26],[227,40,250,4],[229,0,251,4],[229,9,251,9],[229,13,251,13,"key"],[229,16,251,4],[229,20,251,20,"config"],[229,26,251,4],[229,28,251,28],[230,0,252,8,"parser"],[230,6,252,8,"parser"],[230,12,252,14],[230,13,252,15,"key"],[230,16,252,14],[230,17,252,8],[230,20,252,22,"config"],[230,26,252,28],[230,27,252,29,"key"],[230,30,252,28],[230,31,252,8],[231,0,253,5],[233,0,255,4],[233,11,255,11],[233,21,255,20,"source"],[233,27,255,11],[233,29,255,28,"options"],[233,36,255,11],[233,38,255,37],[234,0,256,8,"options"],[234,6,256,8,"options"],[234,13,256,15],[234,16,256,18,"options"],[234,23,256,25],[234,27,256,29],[234,29,256,8],[235,0,258,8],[235,10,258,12,"context"],[235,17,258,19],[235,20,258,22,"options"],[235,27,258,29],[235,28,258,30,"context"],[235,35,258,22],[235,39,258,41],[235,48,258,8],[236,0,259,8],[236,10,259,12,"onComment"],[236,19,259,21],[236,22,259,24,"options"],[236,29,259,31],[236,30,259,32,"onComment"],[236,39,259,8],[237,0,260,8],[237,10,260,12,"ast"],[237,13,260,8],[238,0,262,8,"tokenize"],[238,6,262,8,"tokenize"],[238,14,262,16],[238,15,262,17,"source"],[238,21,262,16],[238,23,262,25,"parser"],[238,29,262,31],[238,30,262,32,"scanner"],[238,37,262,16],[238,38,262,8],[239,0,263,8,"parser"],[239,6,263,8,"parser"],[239,12,263,14],[239,13,263,15,"locationMap"],[239,24,263,8],[239,25,263,27,"setSource"],[239,34,263,8],[239,35,264,12,"source"],[239,41,263,8],[239,43,265,12,"options"],[239,50,265,19],[239,51,265,20,"offset"],[239,57,263,8],[239,59,266,12,"options"],[239,66,266,19],[239,67,266,20,"line"],[239,71,263,8],[239,73,267,12,"options"],[239,80,267,19],[239,81,267,20,"column"],[239,87,263,8],[240,0,270,8,"parser"],[240,6,270,8,"parser"],[240,12,270,14],[240,13,270,15,"filename"],[240,21,270,8],[240,24,270,26,"options"],[240,31,270,33],[240,32,270,34,"filename"],[240,40,270,26],[240,44,270,46],[240,55,270,8],[241,0,271,8,"parser"],[241,6,271,8,"parser"],[241,12,271,14],[241,13,271,15,"needPositions"],[241,26,271,8],[241,29,271,31,"Boolean"],[241,36,271,38],[241,37,271,39,"options"],[241,44,271,46],[241,45,271,47,"positions"],[241,54,271,38],[241,55,271,8],[242,0,272,8,"parser"],[242,6,272,8,"parser"],[242,12,272,14],[242,13,272,15,"onParseError"],[242,25,272,8],[242,28,272,30],[242,35,272,37,"options"],[242,42,272,44],[242,43,272,45,"onParseError"],[242,55,272,30],[242,60,272,62],[242,70,272,30],[242,73,272,75,"options"],[242,80,272,82],[242,81,272,83,"onParseError"],[242,93,272,30],[242,96,272,98,"noop"],[242,100,272,8],[243,0,273,8,"parser"],[243,6,273,8,"parser"],[243,12,273,14],[243,13,273,15,"onParseErrorThrow"],[243,30,273,8],[243,33,273,35],[243,38,273,8],[244,0,274,8,"parser"],[244,6,274,8,"parser"],[244,12,274,14],[244,13,274,15,"parseAtrulePrelude"],[244,31,274,8],[244,34,274,36],[244,58,274,60,"options"],[244,65,274,36],[244,68,274,70,"Boolean"],[244,75,274,77],[244,76,274,78,"options"],[244,83,274,85],[244,84,274,86,"parseAtrulePrelude"],[244,102,274,77],[244,103,274,36],[244,106,274,108],[244,110,274,8],[245,0,275,8,"parser"],[245,6,275,8,"parser"],[245,12,275,14],[245,13,275,15,"parseRulePrelude"],[245,29,275,8],[245,32,275,34],[245,54,275,56,"options"],[245,61,275,34],[245,64,275,66,"Boolean"],[245,71,275,73],[245,72,275,74,"options"],[245,79,275,81],[245,80,275,82,"parseRulePrelude"],[245,96,275,73],[245,97,275,34],[245,100,275,102],[245,104,275,8],[246,0,276,8,"parser"],[246,6,276,8,"parser"],[246,12,276,14],[246,13,276,15,"parseValue"],[246,23,276,8],[246,26,276,28],[246,42,276,44,"options"],[246,49,276,28],[246,52,276,54,"Boolean"],[246,59,276,61],[246,60,276,62,"options"],[246,67,276,69],[246,68,276,70,"parseValue"],[246,78,276,61],[246,79,276,28],[246,82,276,84],[246,86,276,8],[247,0,277,8,"parser"],[247,6,277,8,"parser"],[247,12,277,14],[247,13,277,15,"parseCustomProperty"],[247,32,277,8],[247,35,277,37],[247,60,277,62,"options"],[247,67,277,37],[247,70,277,72,"Boolean"],[247,77,277,79],[247,78,277,80,"options"],[247,85,277,87],[247,86,277,88,"parseCustomProperty"],[247,105,277,79],[247,106,277,37],[247,109,277,111],[247,114,277,8],[249,0,279,8],[249,10,279,12],[249,11,279,13,"parser"],[249,17,279,19],[249,18,279,20,"context"],[249,25,279,13],[249,26,279,28,"hasOwnProperty"],[249,40,279,13],[249,41,279,43,"context"],[249,48,279,13],[249,49,279,8],[249,51,279,53],[250,0,280,12],[250,14,280,18],[250,18,280,22,"Error"],[250,23,280,18],[250,24,280,28],[250,46,280,50,"context"],[250,53,280,28],[250,56,280,60],[250,59,280,18],[250,60,280,12],[251,0,281,9],[253,0,283,8],[253,10,283,12],[253,17,283,19,"onComment"],[253,26,283,12],[253,31,283,33],[253,41,283,8],[253,43,283,45],[254,0,284,12,"parser"],[254,8,284,12,"parser"],[254,14,284,18],[254,15,284,19,"scanner"],[254,22,284,12],[254,23,284,27,"forEachToken"],[254,35,284,12],[254,36,284,40],[254,46,284,41,"type"],[254,50,284,40],[254,52,284,47,"start"],[254,57,284,40],[254,59,284,54,"end"],[254,62,284,40],[254,64,284,62],[255,0,285,16],[255,14,285,20,"type"],[255,18,285,24],[255,23,285,29,"COMMENT"],[255,30,285,16],[255,32,285,38],[256,0,286,20],[256,16,286,26,"loc"],[256,19,286,29],[256,22,286,32,"parser"],[256,28,286,38],[256,29,286,39,"getLocation"],[256,40,286,32],[256,41,286,51,"start"],[256,46,286,32],[256,48,286,58,"end"],[256,51,286,32],[256,52,286,20],[257,0,287,20],[257,16,287,26,"value"],[257,21,287,31],[257,24,287,34,"cmpStr"],[257,30,287,40],[257,31,287,41,"source"],[257,37,287,40],[257,39,287,49,"end"],[257,42,287,52],[257,45,287,55],[257,46,287,40],[257,48,287,58,"end"],[257,51,287,40],[257,53,287,63],[257,57,287,40],[257,58,287,34],[257,61,288,26,"source"],[257,67,288,32],[257,68,288,33,"slice"],[257,73,288,26],[257,74,288,39,"start"],[257,79,288,44],[257,82,288,47],[257,83,288,26],[257,85,288,50,"end"],[257,88,288,53],[257,91,288,56],[257,92,288,26],[257,93,287,34],[257,96,289,26,"source"],[257,102,289,32],[257,103,289,33,"slice"],[257,108,289,26],[257,109,289,39,"start"],[257,114,289,44],[257,117,289,47],[257,118,289,26],[257,120,289,50,"end"],[257,123,289,26],[257,124,287,20],[258,0,291,20,"onComment"],[258,12,291,20,"onComment"],[258,21,291,29],[258,22,291,30,"value"],[258,27,291,29],[258,29,291,37,"loc"],[258,32,291,29],[258,33,291,20],[259,0,292,17],[260,0,293,13],[260,9,284,12],[261,0,294,9],[263,0,296,8,"ast"],[263,6,296,8,"ast"],[263,9,296,11],[263,12,296,14,"parser"],[263,18,296,20],[263,19,296,21,"context"],[263,26,296,14],[263,27,296,29,"context"],[263,34,296,14],[263,36,296,38,"call"],[263,40,296,14],[263,41,296,43,"parser"],[263,47,296,14],[263,49,296,51,"options"],[263,56,296,14],[263,57,296,8],[265,0,298,8],[265,10,298,12],[265,11,298,13,"parser"],[265,17,298,19],[265,18,298,20,"scanner"],[265,25,298,13],[265,26,298,28,"eof"],[265,29,298,8],[265,31,298,33],[266,0,299,12,"parser"],[266,8,299,12,"parser"],[266,14,299,18],[266,15,299,19,"error"],[266,20,299,12],[267,0,300,9],[269,0,302,8],[269,13,302,15,"ast"],[269,16,302,8],[270,0,303,5],[270,5,255,4],[271,0,304,1],[271,3,87,0]],"functionMap":{"names":["<global>","noop","createParseContext","<anonymous>","processConfig","createParser","parser.createList","parser.createSingleNodeList","parser.getFirstListNode","parser.getLastListNode","parser.parseWithFallback","parser.lookupNonWSType","parser.eat","parser.consume","parser.consumeFunctionName","parser.getLocation","parser.getLocationFromList","parser.error","parser.scanner.forEachToken$argument_0"],"mappings":"AAA;WCQ,aD;AEe;WCC;KDE;CFC;AIE;CJuD;iBKE;oBCgB;SDE;8BEC;SFE;0BGC;SHE;yBIC;SJE;2BKE;SLkB;yBME;SNS;aOE;SP4C;iBQE;SRM;6BSC;STM;qBUE;SVU;6BWC;SXY;eYE;SZc;WFQ;wCe6B;afS;KEU;CLC"}},"type":"js/module"}]}