{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.memoize = memoize;\n  exports.animateTiming = animateTiming;\n  exports.animateSpring = animateSpring;\n  exports.animateElastic = animateElastic;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _constants = _$$_REQUIRE(_dependencyMap[3], \"./constants\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function memoize(fn) {\n    var _this = this;\n\n    memoize.cache = {};\n    memoize.size = 0;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var key = JSON.stringify(args);\n\n      if (memoize.cache[key]) {\n        return memoize.cache[key];\n      }\n\n      var value = fn.apply(_this, args);\n\n      if (memoize.size > 1000) {\n        memoize.size = 0;\n        memoize.cache = {};\n      }\n\n      memoize.size += 1;\n      memoize.cache[key] = value;\n      return value;\n    };\n  }\n\n  function animateTiming(_ref) {\n    var variable = _ref.variable,\n        toValue = _ref.toValue,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === void 0 ? _constants.ANIMATED_TIMING_IN : _ref$duration,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === void 0 ? _reactNative.Easing.easeOut : _ref$easing,\n        _ref$callback = _ref.callback,\n        callback = _ref$callback === void 0 ? null : _ref$callback;\n\n    _reactNative.Animated.timing(variable, {\n      toValue: toValue,\n      duration: duration,\n      easing: easing,\n      delay: delay,\n      useNativeDriver: true\n    }).start(callback);\n  }\n\n  function animateSpring(_ref2) {\n    var variable = _ref2.variable,\n        toValue = _ref2.toValue,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n        _ref2$tension = _ref2.tension,\n        tension = _ref2$tension === void 0 ? _constants.ANIMATED_SPRING_TENSION : _ref2$tension,\n        _ref2$friction = _ref2.friction,\n        friction = _ref2$friction === void 0 ? _constants.ANIMATED_SPRING_FRICTION : _ref2$friction,\n        _ref2$callback = _ref2.callback,\n        callback = _ref2$callback === void 0 ? null : _ref2$callback;\n\n    _reactNative.Animated.spring(variable, {\n      toValue: toValue,\n      tension: tension,\n      friction: friction,\n      delay: delay,\n      useNativeDriver: true\n    }).start(callback);\n  }\n\n  function animateElastic(params) {\n    animateTiming(_objectSpread({\n      duration: _constants.ANIMATED_ELASTIC_DURATION,\n      easing: _reactNative.Easing.elastic(_constants.ANIMATED_ELASTIC_BOUNCINESS)\n    }, params));\n  }\n});","lineCount":99,"map":[[14,0,1,0],[16,0,2,0],[22,0,10,7],[22,11,10,16,"memoize"],[22,18,10,7],[22,19,10,24,"fn"],[22,21,10,7],[22,23,10,28],[23,0,10,28],[25,0,11,2,"memoize"],[25,4,11,2,"memoize"],[25,11,11,9],[25,12,11,10,"cache"],[25,17,11,2],[25,20,11,18],[25,22,11,2],[26,0,12,2,"memoize"],[26,4,12,2,"memoize"],[26,11,12,9],[26,12,12,10,"size"],[26,16,12,2],[26,19,12,17],[26,20,12,2],[27,0,13,2],[27,11,13,9],[27,23,13,22],[28,0,13,22],[28,40,13,13,"args"],[28,44,13,22],[29,0,13,13,"args"],[29,8,13,13,"args"],[29,12,13,22],[30,0,13,22],[32,0,14,4],[32,10,14,10,"key"],[32,13,14,13],[32,16,14,16,"JSON"],[32,20,14,20],[32,21,14,21,"stringify"],[32,30,14,16],[32,31,14,31,"args"],[32,35,14,16],[32,36,14,4],[34,0,15,4],[34,10,15,8,"memoize"],[34,17,15,15],[34,18,15,16,"cache"],[34,23,15,8],[34,24,15,22,"key"],[34,27,15,8],[34,28,15,4],[34,30,15,28],[35,0,16,6],[35,15,16,13,"memoize"],[35,22,16,20],[35,23,16,21,"cache"],[35,28,16,13],[35,29,16,27,"key"],[35,32,16,13],[35,33,16,6],[36,0,17,5],[38,0,18,4],[38,10,18,10,"value"],[38,15,18,15],[38,18,18,18,"fn"],[38,20,18,20],[38,21,18,21,"apply"],[38,26,18,18],[38,27,18,27],[38,32,18,18],[38,34,18,33,"args"],[38,38,18,18],[38,39,18,4],[40,0,19,4],[40,10,19,7,"memoize"],[40,17,19,14],[40,18,19,15,"size"],[40,22,19,7],[40,25,19,22],[40,29,19,4],[40,31,19,28],[41,0,20,6,"memoize"],[41,8,20,6,"memoize"],[41,15,20,13],[41,16,20,14,"size"],[41,20,20,6],[41,23,20,21],[41,24,20,6],[42,0,21,6,"memoize"],[42,8,21,6,"memoize"],[42,15,21,13],[42,16,21,14,"cache"],[42,21,21,6],[42,24,21,22],[42,26,21,6],[43,0,22,5],[45,0,23,4,"memoize"],[45,6,23,4,"memoize"],[45,13,23,11],[45,14,23,12,"size"],[45,18,23,4],[45,22,23,20],[45,23,23,4],[46,0,24,4,"memoize"],[46,6,24,4,"memoize"],[46,13,24,11],[46,14,24,12,"cache"],[46,19,24,4],[46,20,24,18,"key"],[46,23,24,4],[46,27,24,25,"value"],[46,32,24,4],[47,0,25,4],[47,13,25,11,"value"],[47,18,25,4],[48,0,26,3],[48,5,13,2],[49,0,27,1],[51,0,29,7],[51,11,29,16,"animateTiming"],[51,24,29,7],[51,31,36,3],[52,0,36,3],[52,8,30,2,"variable"],[52,16,36,3],[52,24,30,2,"variable"],[52,32,36,3],[53,0,36,3],[53,8,31,2,"toValue"],[53,15,36,3],[53,23,31,2,"toValue"],[53,30,36,3],[54,0,36,3],[54,29,32,2,"duration"],[54,37,36,3],[55,0,36,3],[55,8,32,2,"duration"],[55,16,36,3],[55,46,32,13,"ANIMATED_TIMING_IN"],[55,75,36,3],[56,0,36,3],[56,26,33,2,"delay"],[56,31,36,3],[57,0,36,3],[57,8,33,2,"delay"],[57,13,36,3],[57,40,33,10],[57,41,36,3],[58,0,36,3],[58,27,34,2,"easing"],[58,33,36,3],[59,0,36,3],[59,8,34,2,"easing"],[59,14,36,3],[59,42,34,11,"Easing"],[59,62,34,18,"easeOut"],[59,69,36,3],[60,0,36,3],[60,29,35,2,"callback"],[60,37,36,3],[61,0,36,3],[61,8,35,2,"callback"],[61,16,36,3],[61,46,35,13],[61,50,36,3],[63,0,37,2,"Animated"],[63,26,37,11,"timing"],[63,32,37,2],[63,33,37,18,"variable"],[63,41,37,2],[63,43,37,28],[64,0,38,4,"toValue"],[64,6,38,4,"toValue"],[64,13,38,11],[64,15,38,4,"toValue"],[64,22,37,28],[65,0,39,4,"duration"],[65,6,39,4,"duration"],[65,14,39,12],[65,16,39,4,"duration"],[65,24,37,28],[66,0,40,4,"easing"],[66,6,40,4,"easing"],[66,12,40,10],[66,14,40,4,"easing"],[66,20,37,28],[67,0,41,4,"delay"],[67,6,41,4,"delay"],[67,11,41,9],[67,13,41,4,"delay"],[67,18,37,28],[68,0,42,4,"useNativeDriver"],[68,6,42,4,"useNativeDriver"],[68,21,42,19],[68,23,42,21],[69,0,37,28],[69,5,37,2],[69,7,43,5,"start"],[69,12,37,2],[69,13,43,11,"callback"],[69,21,37,2],[70,0,44,1],[72,0,46,7],[72,11,46,16,"animateSpring"],[72,24,46,7],[72,32,53,3],[73,0,53,3],[73,8,47,2,"variable"],[73,16,53,3],[73,25,47,2,"variable"],[73,33,53,3],[74,0,53,3],[74,8,48,2,"toValue"],[74,15,53,3],[74,24,48,2,"toValue"],[74,31,53,3],[75,0,53,3],[75,28,49,2,"delay"],[75,33,53,3],[76,0,53,3],[76,8,49,2,"delay"],[76,13,53,3],[76,41,49,10],[76,42,53,3],[77,0,53,3],[77,30,50,2,"tension"],[77,37,53,3],[78,0,53,3],[78,8,50,2,"tension"],[78,15,53,3],[78,45,50,12,"ANIMATED_SPRING_TENSION"],[78,79,53,3],[79,0,53,3],[79,31,51,2,"friction"],[79,39,53,3],[80,0,53,3],[80,8,51,2,"friction"],[80,16,53,3],[80,47,51,13,"ANIMATED_SPRING_FRICTION"],[80,82,53,3],[81,0,53,3],[81,31,52,2,"callback"],[81,39,53,3],[82,0,53,3],[82,8,52,2,"callback"],[82,16,53,3],[82,47,52,13],[82,51,53,3],[84,0,54,2,"Animated"],[84,26,54,11,"spring"],[84,32,54,2],[84,33,54,18,"variable"],[84,41,54,2],[84,43,54,28],[85,0,55,4,"toValue"],[85,6,55,4,"toValue"],[85,13,55,11],[85,15,55,4,"toValue"],[85,22,54,28],[86,0,56,4,"tension"],[86,6,56,4,"tension"],[86,13,56,11],[86,15,56,4,"tension"],[86,22,54,28],[87,0,57,4,"friction"],[87,6,57,4,"friction"],[87,14,57,12],[87,16,57,4,"friction"],[87,24,54,28],[88,0,58,4,"delay"],[88,6,58,4,"delay"],[88,11,58,9],[88,13,58,4,"delay"],[88,18,54,28],[89,0,59,4,"useNativeDriver"],[89,6,59,4,"useNativeDriver"],[89,21,59,19],[89,23,59,21],[90,0,54,28],[90,5,54,2],[90,7,60,5,"start"],[90,12,54,2],[90,13,60,11,"callback"],[90,21,54,2],[91,0,61,1],[93,0,63,7],[93,11,63,16,"animateElastic"],[93,25,63,7],[93,26,63,31,"params"],[93,32,63,7],[93,34,63,39],[94,0,64,2,"animateTiming"],[94,4,64,2,"animateTiming"],[94,17,64,15],[95,0,65,4,"duration"],[95,6,65,4,"duration"],[95,14,65,12],[95,16,65,14,"ANIMATED_ELASTIC_DURATION"],[95,52,64,15],[96,0,66,4,"easing"],[96,6,66,4,"easing"],[96,12,66,10],[96,14,66,12,"Easing"],[96,34,66,19,"elastic"],[96,41,66,12],[96,42,66,27,"ANIMATED_ELASTIC_BOUNCINESS"],[96,80,66,12],[97,0,64,15],[97,7,67,7,"params"],[97,13,64,15],[97,15,64,2],[98,0,69,1]],"functionMap":{"names":["<global>","memoize","<anonymous>","animateTiming","animateSpring","animateElastic"],"mappings":"AAA;OCS;SCG;GDa;CDC;OGE;CHe;OIE;CJe;OKE;CLM"}},"type":"js/module"}]}