{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react-native-reanimated","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.string = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _reactNativeReanimated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"react-native-reanimated\"));\n\n  var concat = _reactNativeReanimated.default.concat;\n\n  var string = function string(strings) {\n    for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      values[_key - 1] = arguments[_key];\n    }\n\n    if (values.length === 0) {\n      return concat(strings[0]);\n    }\n\n    var result = values.reduce(function (acc, v, idx) {\n      return [].concat((0, _toConsumableArray2.default)(acc), [strings[idx], v]);\n    }, []);\n    result.push(strings[strings.length - 1]);\n    return concat.apply(void 0, (0, _toConsumableArray2.default)(result));\n  };\n\n  exports.string = string;\n});","lineCount":32,"map":[[9,0,1,0],[11,0,1,73],[13,0,1,119],[13,6,1,123,"concat"],[13,12,1,129],[13,15,1,130,"Animated"],[13,46,1,139,"concat"],[13,52,1,119],[15,0,1,153],[15,6,1,157,"string"],[15,12,1,163],[15,15,1,164],[15,24,1,173,"string"],[15,30,1,164],[15,31,1,180,"strings"],[15,38,1,164],[15,40,1,188],[16,0,1,189],[16,9,1,193],[16,13,1,197,"_len"],[16,17,1,201],[16,20,1,202,"arguments"],[16,29,1,211],[16,30,1,212,"length"],[16,36,1,193],[16,38,1,219,"values"],[16,44,1,225],[16,47,1,226],[16,51,1,230,"Array"],[16,56,1,226],[16,57,1,236,"_len"],[16,61,1,240],[16,64,1,241],[16,65,1,236],[16,68,1,243,"_len"],[16,72,1,247],[16,75,1,248],[16,76,1,236],[16,79,1,250],[16,80,1,226],[16,81,1,193],[16,83,1,253,"_key"],[16,87,1,257],[16,90,1,258],[16,91,1,189],[16,93,1,260,"_key"],[16,97,1,264],[16,100,1,265,"_len"],[16,104,1,189],[16,106,1,270,"_key"],[16,110,1,274],[16,112,1,189],[16,114,1,277],[17,0,1,278,"values"],[17,6,1,278,"values"],[17,12,1,284],[17,13,1,285,"_key"],[17,17,1,289],[17,20,1,290],[17,21,1,284],[17,22,1,278],[17,25,1,293,"arguments"],[17,34,1,302],[17,35,1,303,"_key"],[17,39,1,302],[17,40,1,278],[18,0,1,310],[20,0,1,310],[20,8,1,313,"values"],[20,14,1,319],[20,15,1,320,"length"],[20,21,1,313],[20,26,1,329],[20,27,1,310],[20,29,1,331],[21,0,1,332],[21,13,1,339,"concat"],[21,19,1,345],[21,20,1,346,"strings"],[21,27,1,353],[21,28,1,354],[21,29,1,353],[21,30,1,345],[21,31,1,332],[22,0,1,359],[24,0,1,359],[24,8,1,363,"result"],[24,14,1,369],[24,17,1,370,"values"],[24,23,1,376],[24,24,1,377,"reduce"],[24,30,1,370],[24,31,1,384],[24,41,1,393,"acc"],[24,44,1,384],[24,46,1,397,"v"],[24,47,1,384],[24,49,1,399,"idx"],[24,52,1,384],[24,54,1,403],[25,0,1,404],[25,13,1,410],[25,16,1,413,"concat"],[25,22,1,410],[25,23,1,420],[25,56,1,439,"acc"],[25,59,1,420],[25,60,1,410],[25,62,1,444],[25,63,1,445,"strings"],[25,70,1,452],[25,71,1,453,"idx"],[25,74,1,452],[25,75,1,444],[25,77,1,458,"v"],[25,78,1,444],[25,79,1,410],[25,80,1,404],[26,0,1,463],[26,5,1,370],[26,7,1,464],[26,9,1,370],[26,10,1,359],[27,0,1,468,"result"],[27,4,1,468,"result"],[27,10,1,474],[27,11,1,475,"push"],[27,15,1,468],[27,16,1,480,"strings"],[27,23,1,487],[27,24,1,488,"strings"],[27,31,1,495],[27,32,1,496,"length"],[27,38,1,488],[27,41,1,503],[27,42,1,487],[27,43,1,468],[28,0,1,507],[28,11,1,514,"concat"],[28,17,1,520],[28,18,1,521,"apply"],[28,23,1,514],[28,24,1,527],[28,29,1,532],[28,30,1,514],[28,32,1,534],[28,65,1,553,"result"],[28,71,1,534],[28,72,1,514],[28,73,1,507],[29,0,1,563],[29,3,1,153]],"functionMap":{"names":["<global>","string","values.reduce$argument_0"],"mappings":"AAA,oKC,4NC,+ED,oGD"}},"type":"js/module"}]}