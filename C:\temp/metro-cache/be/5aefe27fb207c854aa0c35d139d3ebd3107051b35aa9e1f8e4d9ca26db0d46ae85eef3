{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XAll = function () {\n    function XAll(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.all = true;\n    }\n\n    XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n    XAll.prototype['@@transducer/result'] = function (result) {\n      if (this.all) {\n        result = this.xf['@@transducer/step'](result, true);\n      }\n\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XAll.prototype['@@transducer/step'] = function (result, input) {\n      if (!this.f(input)) {\n        this.all = false;\n        result = _reduced(this.xf['@@transducer/step'](result, false));\n      }\n\n      return result;\n    };\n\n    return XAll;\n  }();\n\n  var _xall = _curry2(function _xall(f, xf) {\n    return new XAll(f, xf);\n  });\n\n  module.exports = _xall;\n});","lineCount":42,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_reduced"],[4,14,3,12],[4,17,3,28,"require"],[4,28,3,35],[4,61,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XAll"],[8,10,7,8],[8,13,7,24],[8,25,7,36],[9,0,9,2],[9,13,9,11,"XAll"],[9,17,9,2],[9,18,9,16,"f"],[9,19,9,2],[9,21,9,19,"xf"],[9,23,9,2],[9,25,9,23],[10,0,10,4],[10,11,10,9,"xf"],[10,13,10,4],[10,16,10,14,"xf"],[10,18,10,4],[11,0,11,4],[11,11,11,9,"f"],[11,12,11,4],[11,15,11,13,"f"],[11,16,11,4],[12,0,12,4],[12,11,12,9,"all"],[12,14,12,4],[12,17,12,15],[12,21,12,4],[13,0,13,3],[15,0,14,2,"XAll"],[15,4,14,2,"XAll"],[15,8,14,6],[15,9,14,7,"prototype"],[15,18,14,2],[15,19,14,17],[15,38,14,2],[15,42,14,40,"_xfBase"],[15,49,14,47],[15,50,14,48,"init"],[15,54,14,2],[17,0,15,2,"XAll"],[17,4,15,2,"XAll"],[17,8,15,6],[17,9,15,7,"prototype"],[17,18,15,2],[17,19,15,17],[17,40,15,2],[17,44,15,42],[17,54,15,52,"result"],[17,60,15,42],[17,62,15,60],[18,0,16,4],[18,10,16,8],[18,15,16,13,"all"],[18,18,16,4],[18,20,16,18],[19,0,17,6,"result"],[19,8,17,6,"result"],[19,14,17,12],[19,17,17,15],[19,22,17,20,"xf"],[19,24,17,15],[19,25,17,23],[19,44,17,15],[19,46,17,44,"result"],[19,52,17,15],[19,54,17,52],[19,58,17,15],[19,59,17,6],[20,0,18,5],[22,0,19,4],[22,13,19,11],[22,18,19,16,"xf"],[22,20,19,11],[22,21,19,19],[22,42,19,11],[22,44,19,42,"result"],[22,50,19,11],[22,51,19,4],[23,0,20,3],[23,5,15,2],[25,0,21,2,"XAll"],[25,4,21,2,"XAll"],[25,8,21,6],[25,9,21,7,"prototype"],[25,18,21,2],[25,19,21,17],[25,38,21,2],[25,42,21,40],[25,52,21,50,"result"],[25,58,21,40],[25,60,21,58,"input"],[25,65,21,40],[25,67,21,65],[26,0,22,4],[26,10,22,8],[26,11,22,9],[26,16,22,14,"f"],[26,17,22,9],[26,18,22,16,"input"],[26,23,22,9],[26,24,22,4],[26,26,22,24],[27,0,23,6],[27,13,23,11,"all"],[27,16,23,6],[27,19,23,17],[27,24,23,6],[28,0,24,6,"result"],[28,8,24,6,"result"],[28,14,24,12],[28,17,24,15,"_reduced"],[28,25,24,23],[28,26,24,24],[28,31,24,29,"xf"],[28,33,24,24],[28,34,24,32],[28,53,24,24],[28,55,24,53,"result"],[28,61,24,24],[28,63,24,61],[28,68,24,24],[28,69,24,23],[28,70,24,6],[29,0,25,5],[31,0,26,4],[31,13,26,11,"result"],[31,19,26,4],[32,0,27,3],[32,5,21,2],[34,0,29,2],[34,11,29,9,"XAll"],[34,15,29,2],[35,0,30,1],[35,3,7,24],[35,5,7,0],[37,0,32,0],[37,6,32,4,"_xall"],[37,11,32,9],[37,14,32,25,"_curry2"],[37,21,32,32],[37,22,32,33],[37,31,32,42,"_xall"],[37,36,32,33],[37,37,32,48,"f"],[37,38,32,33],[37,40,32,51,"xf"],[37,42,32,33],[37,44,32,55],[38,0,33,2],[38,11,33,9],[38,15,33,13,"XAll"],[38,19,33,9],[38,20,33,18,"f"],[38,21,33,9],[38,23,33,21,"xf"],[38,25,33,9],[38,26,33,2],[39,0,34,1],[39,3,32,32],[39,4,32,0],[41,0,35,0,"module"],[41,2,35,0,"module"],[41,8,35,6],[41,9,35,7,"exports"],[41,16,35,0],[41,19,35,17,"_xall"],[41,24,35,0]],"functionMap":{"names":["<global>","<anonymous>","XAll","XAll.prototype.transducerResult","XAll.prototype.transducerStep","_xall"],"mappings":"AAA;wBCM;ECE;GDI;0CEE;GFK;wCGC;GHM;CDG;iCKE;CLE"}},"type":"js/module"}]}