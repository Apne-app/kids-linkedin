{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}},{"name":"./useFocusState","data":{"isAsync":false}},{"name":"./CodeField.styles","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[7], \"./utils\");\n\n  var _useFocusState3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./useFocusState\"));\n\n  var _CodeField = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./CodeField.styles\"));\n\n  var DEFAULT_CELL_COUNT = 4;\n\n  var CodeField = function CodeField(_ref, ref) {\n    var rootStyle = _ref.rootStyle,\n        textInputStyle = _ref.textInputStyle,\n        onBlur = _ref.onBlur,\n        onFocus = _ref.onFocus,\n        value = _ref.value,\n        renderCell = _ref.renderCell,\n        _ref$cellCount = _ref.cellCount,\n        cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n        _ref$RootProps = _ref.RootProps,\n        RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n        _ref$RootComponent = _ref.RootComponent,\n        RootComponent = _ref$RootComponent === void 0 ? _reactNative.View : _ref$RootComponent,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"]);\n\n    var _useFocusState = (0, _useFocusState3.default)({\n      onBlur: onBlur,\n      onFocus: onFocus\n    }),\n        _useFocusState2 = (0, _slicedToArray2.default)(_useFocusState, 3),\n        isFocused = _useFocusState2[0],\n        handleOnBlur = _useFocusState2[1],\n        handleOnFocus = _useFocusState2[2];\n\n    var cells = (0, _utils.getSymbols)(value || '', cellCount).map(function (symbol, index, symbols) {\n      var isFirstEmptySymbol = symbols.indexOf('') === index;\n      return renderCell({\n        index: index,\n        symbol: symbol,\n        isFocused: isFocused && isFirstEmptySymbol\n      });\n    });\n    return React.createElement(RootComponent, (0, _extends2.default)({}, RootProps, {\n      style: (0, _utils.getStyle)(_CodeField.default.root, rootStyle)\n    }), cells, React.createElement(_reactNative.TextInput, (0, _extends2.default)({\n      disableFullscreenUI: true,\n      caretHidden: true,\n      spellCheck: false,\n      autoCorrect: false,\n      blurOnSubmit: false,\n      clearButtonMode: 'never',\n      autoCapitalize: 'characters',\n      underlineColorAndroid: 'transparent',\n      maxLength: cellCount\n    }, rest, {\n      value: value,\n      onBlur: handleOnBlur,\n      onFocus: handleOnFocus,\n      style: (0, _utils.getStyle)(_CodeField.default.textInput, textInputStyle),\n      ref: ref\n    })));\n  };\n\n  var _default = React.forwardRef(CodeField);\n\n  exports.default = _default;\n});","lineCount":85,"map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,4,0],[25,0,5,0],[27,0,6,0],[27,6,6,6,"DEFAULT_CELL_COUNT"],[27,24,6,24],[27,27,6,27],[27,28,6,0],[29,0,7,0],[29,6,7,6,"CodeField"],[29,15,7,15],[29,18,7,18],[29,27,7,6,"CodeField"],[29,36,7,18],[29,43,20,2,"ref"],[29,46,7,18],[29,48,21,5],[30,0,21,5],[30,8,9,4,"rootStyle"],[30,17,21,5],[30,25,9,4,"rootStyle"],[30,34,21,5],[31,0,21,5],[31,8,10,4,"textInputStyle"],[31,22,21,5],[31,30,10,4,"textInputStyle"],[31,44,21,5],[32,0,21,5],[32,8,11,4,"onBlur"],[32,14,21,5],[32,22,11,4,"onBlur"],[32,28,21,5],[33,0,21,5],[33,8,12,4,"onFocus"],[33,15,21,5],[33,23,12,4,"onFocus"],[33,30,21,5],[34,0,21,5],[34,8,13,4,"value"],[34,13,21,5],[34,21,13,4,"value"],[34,26,21,5],[35,0,21,5],[35,8,14,4,"renderCell"],[35,18,21,5],[35,26,14,4,"renderCell"],[35,36,21,5],[36,0,21,5],[36,30,15,4,"cellCount"],[36,39,21,5],[37,0,21,5],[37,8,15,4,"cellCount"],[37,17,21,5],[37,48,15,16,"DEFAULT_CELL_COUNT"],[37,66,21,5],[38,0,21,5],[38,30,16,4,"RootProps"],[38,39,21,5],[39,0,21,5],[39,8,16,4,"RootProps"],[39,17,21,5],[39,48,16,16],[39,50,21,5],[40,0,21,5],[40,34,17,4,"RootComponent"],[40,47,21,5],[41,0,21,5],[41,8,17,4,"RootComponent"],[41,21,21,5],[41,56,17,20,"View"],[41,73,21,5],[42,0,21,5],[42,8,18,7,"rest"],[42,12,21,5],[44,0,21,5],[44,25,22,51],[44,54,22,65],[45,0,23,4,"onBlur"],[45,6,23,4,"onBlur"],[45,12,23,10],[45,14,23,4,"onBlur"],[45,20,22,65],[46,0,24,4,"onFocus"],[46,6,24,4,"onFocus"],[46,13,24,11],[46,15,24,4,"onFocus"],[47,0,22,65],[47,5,22,51],[47,6,21,5],[48,0,21,5],[49,0,21,5],[49,8,22,9,"isFocused"],[49,17,21,5],[50,0,21,5],[50,8,22,20,"handleOnBlur"],[50,20,21,5],[51,0,21,5],[51,8,22,34,"handleOnFocus"],[51,21,21,5],[53,0,26,2],[53,8,26,8,"cells"],[53,13,26,13],[53,16,26,16],[53,39,26,27,"value"],[53,44,26,32],[53,48,26,36],[53,50,26,16],[53,52,26,40,"cellCount"],[53,61,26,16],[53,63,26,51,"map"],[53,66,26,16],[53,67,27,4],[53,77,27,5,"symbol"],[53,83,27,4],[53,85,27,13,"index"],[53,90,27,4],[53,92,27,20,"symbols"],[53,99,27,4],[53,101,27,32],[54,0,28,6],[54,10,28,12,"isFirstEmptySymbol"],[54,28,28,30],[54,31,28,33,"symbols"],[54,38,28,40],[54,39,28,41,"indexOf"],[54,46,28,33],[54,47,28,49],[54,49,28,33],[54,55,28,57,"index"],[54,60,28,6],[55,0,29,6],[55,13,29,13,"renderCell"],[55,23,29,23],[55,24,29,24],[56,0,30,8,"index"],[56,8,30,8,"index"],[56,13,30,13],[56,15,30,8,"index"],[56,20,29,24],[57,0,31,8,"symbol"],[57,8,31,8,"symbol"],[57,14,31,14],[57,16,31,8,"symbol"],[57,22,29,24],[58,0,32,8,"isFocused"],[58,8,32,8,"isFocused"],[58,17,32,17],[58,19,32,19,"isFocused"],[58,28,32,28],[58,32,32,32,"isFirstEmptySymbol"],[59,0,29,24],[59,7,29,23],[59,8,29,6],[60,0,34,5],[60,5,26,16],[60,6,26,2],[61,0,36,2],[61,11,36,9,"React"],[61,16,36,14],[61,17,36,15,"createElement"],[61,30,36,9],[61,31,37,4,"RootComponent"],[61,44,36,9],[61,46,38,4],[61,69,38,18],[61,71,38,4],[61,73,38,22,"RootProps"],[61,82,38,4],[61,84,38,33],[62,0,38,34,"style"],[62,6,38,34,"style"],[62,11,38,39],[62,13,38,41],[62,34,38,50,"styles"],[62,53,38,57,"root"],[62,57,38,41],[62,59,38,63,"rootStyle"],[62,68,38,41],[63,0,38,33],[63,5,38,4],[63,6,36,9],[63,8,39,4,"cells"],[63,13,36,9],[63,15,40,4,"React"],[63,20,40,9],[63,21,40,10,"createElement"],[63,34,40,4],[63,35,41,6,"TextInput"],[63,57,40,4],[63,59,42,6],[63,82,43,8],[64,0,44,10,"disableFullscreenUI"],[64,6,44,10,"disableFullscreenUI"],[64,25,44,29],[64,27,44,31],[64,31,43,8],[65,0,47,10,"caretHidden"],[65,6,47,10,"caretHidden"],[65,17,47,21],[65,19,47,23],[65,23,43,8],[66,0,48,10,"spellCheck"],[66,6,48,10,"spellCheck"],[66,16,48,20],[66,18,48,22],[66,23,43,8],[67,0,49,10,"autoCorrect"],[67,6,49,10,"autoCorrect"],[67,17,49,21],[67,19,49,23],[67,24,43,8],[68,0,50,10,"blurOnSubmit"],[68,6,50,10,"blurOnSubmit"],[68,18,50,22],[68,20,50,24],[68,25,43,8],[69,0,51,10,"clearButtonMode"],[69,6,51,10,"clearButtonMode"],[69,21,51,25],[69,23,51,27],[69,30,43,8],[70,0,52,10,"autoCapitalize"],[70,6,52,10,"autoCapitalize"],[70,20,52,24],[70,22,52,26],[70,34,43,8],[71,0,53,10,"underlineColorAndroid"],[71,6,53,10,"underlineColorAndroid"],[71,27,53,31],[71,29,53,33],[71,42,43,8],[72,0,54,10,"maxLength"],[72,6,54,10,"maxLength"],[72,15,54,19],[72,17,54,21,"cellCount"],[73,0,43,8],[73,5,42,6],[73,7,56,8,"rest"],[73,11,42,6],[73,13,57,8],[74,0,58,10,"value"],[74,6,58,10,"value"],[74,11,58,15],[74,13,58,17,"value"],[74,18,57,8],[75,0,59,10,"onBlur"],[75,6,59,10,"onBlur"],[75,12,59,16],[75,14,59,18,"handleOnBlur"],[75,26,57,8],[76,0,60,10,"onFocus"],[76,6,60,10,"onFocus"],[76,13,60,17],[76,15,60,19,"handleOnFocus"],[76,28,57,8],[77,0,61,10,"style"],[77,6,61,10,"style"],[77,11,61,15],[77,13,61,17],[77,34,61,26,"styles"],[77,53,61,33,"textInput"],[77,62,61,17],[77,64,61,44,"textInputStyle"],[77,78,61,17],[77,79,57,8],[78,0,62,10,"ref"],[78,6,62,10,"ref"],[78,9,62,13],[78,11,62,15,"ref"],[79,0,57,8],[79,5,42,6],[79,6,40,4],[79,7,36,9],[79,8,36,2],[80,0,67,1],[80,3,7,0],[82,17,68,15,"React"],[82,22,68,20],[82,23,68,21,"forwardRef"],[82,33,68,15],[82,34,68,32,"CodeField"],[82,43,68,15],[82,44]],"functionMap":{"names":["<global>","CodeField","getSymbols.map$argument_0"],"mappings":"AAA;kBCM;ICoB;KDO;CDiC"}},"type":"js/module"}]}