{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"../MaterialCommunityIcon","data":{"isAsync":false}},{"name":"../TouchableRipple","data":{"isAsync":false}},{"name":"../../core/theming","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CheckboxAndroid = exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"color\"));\n\n  var _MaterialCommunityIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../MaterialCommunityIcon\"));\n\n  var _TouchableRipple = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../TouchableRipple\"));\n\n  var _theming = _$$_REQUIRE(_dependencyMap[14], \"../../core/theming\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kidsLinkedin/kids-linkedin/node_modules/react-native-paper/src/components/Checkbox/CheckboxAndroid.tsx\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var ANIMATION_DURATION = 100;\n\n  var CheckboxAndroid = function (_React$Component) {\n    (0, _inherits2.default)(CheckboxAndroid, _React$Component);\n\n    var _super = _createSuper(CheckboxAndroid);\n\n    function CheckboxAndroid() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, CheckboxAndroid);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        scaleAnim: new _reactNative.Animated.Value(1)\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(CheckboxAndroid, [{\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (prevProps.status === this.props.status) {\n          return;\n        }\n\n        var checked = this.props.status === 'checked';\n        var animation = this.props.theme.animation;\n\n        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scaleAnim, {\n          toValue: 0.85,\n          duration: checked ? ANIMATION_DURATION * animation.scale : 0,\n          useNativeDriver: false\n        }), _reactNative.Animated.timing(this.state.scaleAnim, {\n          toValue: 1,\n          duration: checked ? ANIMATION_DURATION * animation.scale : ANIMATION_DURATION * animation.scale * 1.75,\n          useNativeDriver: false\n        })]).start();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            status = _this$props.status,\n            disabled = _this$props.disabled,\n            onPress = _this$props.onPress,\n            theme = _this$props.theme,\n            rest = (0, _objectWithoutProperties2.default)(_this$props, [\"status\", \"disabled\", \"onPress\", \"theme\"]);\n        var checked = status === 'checked';\n        var indeterminate = status === 'indeterminate';\n        var checkedColor = this.props.color || theme.colors.accent;\n        var uncheckedColor = this.props.uncheckedColor || (0, _color.default)(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n        var rippleColor, checkboxColor;\n\n        if (disabled) {\n          rippleColor = (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();\n          checkboxColor = theme.colors.disabled;\n        } else {\n          rippleColor = (0, _color.default)(checkedColor).fade(0.32).rgb().string();\n          checkboxColor = checked ? checkedColor : uncheckedColor;\n        }\n\n        var borderWidth = this.state.scaleAnim.interpolate({\n          inputRange: [0.8, 1],\n          outputRange: [7, 0]\n        });\n        var icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n        return React.createElement(_TouchableRipple.default, (0, _extends2.default)({}, rest, {\n          borderless: true,\n          rippleColor: rippleColor,\n          onPress: onPress,\n          disabled: disabled,\n          accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          accessibilityState: {\n            disabled: disabled\n          },\n          accessibilityLiveRegion: \"polite\",\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }\n        }), React.createElement(_reactNative.Animated.View, {\n          style: {\n            transform: [{\n              scale: this.state.scaleAnim\n            }]\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        }, React.createElement(_MaterialCommunityIcon.default, {\n          allowFontScaling: false,\n          name: icon,\n          size: 24,\n          color: checkboxColor,\n          direction: \"ltr\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }\n        }), React.createElement(_reactNative.View, {\n          style: [_reactNative.StyleSheet.absoluteFill, styles.fillContainer],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: [styles.fill, {\n            borderColor: checkboxColor\n          }, {\n            borderWidth: borderWidth\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        }))));\n      }\n    }]);\n    return CheckboxAndroid;\n  }(React.Component);\n\n  exports.CheckboxAndroid = CheckboxAndroid;\n  CheckboxAndroid.displayName = 'Checkbox.Android';\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      borderRadius: 18,\n      width: 36,\n      height: 36,\n      padding: 6\n    },\n    fillContainer: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    fill: {\n      height: 14,\n      width: 14\n    }\n  });\n\n  var _default = (0, _theming.withTheme)(CheckboxAndroid);\n\n  exports.default = _default;\n});","lineCount":206,"map":[[25,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[43,0,41,0],[43,6,41,6,"ANIMATION_DURATION"],[43,24,41,24],[43,27,41,27],[43,30,41,0],[45,6,58,6,"CheckboxAndroid"],[45,21],[60,12,61,2,"state"],[60,17],[60,20,61,10],[61,0,62,4,"scaleAnim"],[61,8,62,4,"scaleAnim"],[61,17,62,13],[61,19,62,15],[61,23,62,19,"Animated"],[61,45,62,28,"Value"],[61,50,62,15],[61,51,62,34],[61,52,62,15],[62,0,61,10],[62,7],[68,41,65,21,"prevProps"],[68,50],[68,52,65,39],[69,0,66,4],[69,12,66,8,"prevProps"],[69,21,66,17],[69,22,66,18,"status"],[69,28,66,8],[69,33,66,29],[69,38,66,34,"props"],[69,43,66,29],[69,44,66,40,"status"],[69,50,66,4],[69,52,66,48],[70,0,67,6],[71,0,68,5],[73,0,70,4],[73,12,70,10,"checked"],[73,19,70,17],[73,22,70,20],[73,27,70,25,"props"],[73,32,70,20],[73,33,70,31,"status"],[73,39,70,20],[73,44,70,42],[73,53,70,4],[74,0,65,39],[74,12,71,12,"animation"],[74,21,65,39],[74,24,71,26],[74,29,71,31,"props"],[74,34,71,26],[74,35,71,37,"theme"],[74,40,65,39],[74,41,71,12,"animation"],[74,50,65,39],[76,0,73,4,"Animated"],[76,30,73,13,"sequence"],[76,38,73,4],[76,39,73,22],[76,40,74,6,"Animated"],[76,62,74,15,"timing"],[76,68,74,6],[76,69,74,22],[76,74,74,27,"state"],[76,79,74,22],[76,80,74,33,"scaleAnim"],[76,89,74,6],[76,91,74,44],[77,0,75,8,"toValue"],[77,10,75,8,"toValue"],[77,17,75,15],[77,19,75,17],[77,23,74,44],[78,0,76,8,"duration"],[78,10,76,8,"duration"],[78,18,76,16],[78,20,76,18,"checked"],[78,27,76,25],[78,30,76,28,"ANIMATION_DURATION"],[78,48,76,46],[78,51,76,49,"animation"],[78,60,76,58],[78,61,76,59,"scale"],[78,66,76,25],[78,69,76,67],[78,70,74,44],[79,0,77,8,"useNativeDriver"],[79,10,77,8,"useNativeDriver"],[79,25,77,23],[79,27,77,25],[80,0,74,44],[80,9,74,6],[80,10,73,22],[80,12,79,6,"Animated"],[80,34,79,15,"timing"],[80,40,79,6],[80,41,79,22],[80,46,79,27,"state"],[80,51,79,22],[80,52,79,33,"scaleAnim"],[80,61,79,6],[80,63,79,44],[81,0,80,8,"toValue"],[81,10,80,8,"toValue"],[81,17,80,15],[81,19,80,17],[81,20,79,44],[82,0,81,8,"duration"],[82,10,81,8,"duration"],[82,18,81,16],[82,20,81,18,"checked"],[82,27,81,25],[82,30,82,12,"ANIMATION_DURATION"],[82,48,82,30],[82,51,82,33,"animation"],[82,60,82,42],[82,61,82,43,"scale"],[82,66,81,25],[82,69,83,12,"ANIMATION_DURATION"],[82,87,83,30],[82,90,83,33,"animation"],[82,99,83,42],[82,100,83,43,"scale"],[82,105,83,12],[82,108,83,51],[82,112,79,44],[83,0,84,8,"useNativeDriver"],[83,10,84,8,"useNativeDriver"],[83,25,84,23],[83,27,84,25],[84,0,79,44],[84,9,79,6],[84,10,73,22],[84,11,73,4],[84,13,86,7,"start"],[84,18,73,4],[85,0,87,3],[88,31,89,11],[89,0,89,11],[89,26,90,58],[89,31,90,63,"props"],[89,36,89,11],[90,0,89,11],[90,12,90,12,"status"],[90,18,89,11],[90,33,90,12,"status"],[90,39,89,11],[91,0,89,11],[91,12,90,20,"disabled"],[91,20,89,11],[91,35,90,20,"disabled"],[91,43,89,11],[92,0,89,11],[92,12,90,30,"onPress"],[92,19,89,11],[92,34,90,30,"onPress"],[92,41,89,11],[93,0,89,11],[93,12,90,39,"theme"],[93,17,89,11],[93,32,90,39,"theme"],[93,37,89,11],[94,0,89,11],[94,12,90,49,"rest"],[94,16,89,11],[95,0,91,4],[95,12,91,10,"checked"],[95,19,91,17],[95,22,91,20,"status"],[95,28,91,26],[95,33,91,31],[95,42,91,4],[96,0,92,4],[96,12,92,10,"indeterminate"],[96,25,92,23],[96,28,92,26,"status"],[96,34,92,32],[96,39,92,37],[96,54,92,4],[97,0,93,4],[97,12,93,10,"checkedColor"],[97,24,93,22],[97,27,93,25],[97,32,93,30,"props"],[97,37,93,25],[97,38,93,36,"color"],[97,43,93,25],[97,47,93,45,"theme"],[97,52,93,50],[97,53,93,51,"colors"],[97,59,93,45],[97,60,93,58,"accent"],[97,66,93,4],[98,0,94,4],[98,12,94,10,"uncheckedColor"],[98,26,94,24],[98,29,95,6],[98,34,95,11,"props"],[98,39,95,6],[98,40,95,17,"uncheckedColor"],[98,54,95,6],[98,58,96,6],[98,78,96,12,"theme"],[98,83,96,17],[98,84,96,18,"colors"],[98,90,96,12],[98,91,96,25,"text"],[98,95,96,6],[98,97,97,9,"alpha"],[98,102,96,6],[98,103,97,15,"theme"],[98,108,97,20],[98,109,97,21,"dark"],[98,113,97,15],[98,116,97,28],[98,119,97,15],[98,122,97,34],[98,126,96,6],[98,128,98,9,"rgb"],[98,131,96,6],[98,134,99,9,"string"],[98,140,96,6],[98,142,94,4],[99,0,101,4],[99,12,101,8,"rippleColor"],[99,23,101,4],[99,25,101,21,"checkboxColor"],[99,38,101,4],[101,0,103,4],[101,12,103,8,"disabled"],[101,20,103,4],[101,22,103,18],[102,0,104,6,"rippleColor"],[102,10,104,6,"rippleColor"],[102,21,104,17],[102,24,104,20],[102,44,104,26,"theme"],[102,49,104,31],[102,50,104,32,"colors"],[102,56,104,26],[102,57,104,39,"text"],[102,61,104,20],[102,63,104,45,"alpha"],[102,68,104,20],[102,69,104,51],[102,73,104,20],[102,75,104,57,"rgb"],[102,78,104,20],[102,81,104,63,"string"],[102,87,104,20],[102,89,104,6],[103,0,105,6,"checkboxColor"],[103,10,105,6,"checkboxColor"],[103,23,105,19],[103,26,105,22,"theme"],[103,31,105,27],[103,32,105,28,"colors"],[103,38,105,22],[103,39,105,35,"disabled"],[103,47,105,6],[104,0,106,5],[104,9,103,4],[104,15,106,11],[105,0,107,6,"rippleColor"],[105,10,107,6,"rippleColor"],[105,21,107,17],[105,24,107,20],[105,44,107,26,"checkedColor"],[105,56,107,20],[105,58,107,40,"fade"],[105,62,107,20],[105,63,107,45],[105,67,107,20],[105,69,107,51,"rgb"],[105,72,107,20],[105,75,107,57,"string"],[105,81,107,20],[105,83,107,6],[106,0,108,6,"checkboxColor"],[106,10,108,6,"checkboxColor"],[106,23,108,19],[106,26,108,22,"checked"],[106,33,108,29],[106,36,108,32,"checkedColor"],[106,48,108,29],[106,51,108,47,"uncheckedColor"],[106,65,108,6],[107,0,109,5],[109,0,111,4],[109,12,111,10,"borderWidth"],[109,23,111,21],[109,26,111,24],[109,31,111,29,"state"],[109,36,111,24],[109,37,111,35,"scaleAnim"],[109,46,111,24],[109,47,111,45,"interpolate"],[109,58,111,24],[109,59,111,57],[110,0,112,6,"inputRange"],[110,10,112,6,"inputRange"],[110,20,112,16],[110,22,112,18],[110,23,112,19],[110,26,112,18],[110,28,112,24],[110,29,112,18],[110,30,111,57],[111,0,113,6,"outputRange"],[111,10,113,6,"outputRange"],[111,21,113,17],[111,23,113,19],[111,24,113,20],[111,25,113,19],[111,27,113,23],[111,28,113,19],[112,0,111,57],[112,9,111,24],[112,10,111,4],[113,0,116,4],[113,12,116,10,"icon"],[113,16,116,14],[113,19,116,17,"indeterminate"],[113,32,116,30],[113,35,117,8],[113,46,116,30],[113,49,118,8,"checked"],[113,56,118,15],[113,59,119,8],[113,76,118,15],[113,79,120,8],[113,103,116,4],[114,0,122,4],[114,15,123,6],[114,35,123,7],[114,59,123,6],[114,88,124,12,"rest"],[114,92,123,6],[115,0,125,8],[115,10,125,8],[115,20,125,18],[115,26,123,6],[116,0,126,8],[116,10,126,8],[116,21,126,19],[116,23,126,21,"rippleColor"],[116,34,123,6],[117,0,127,8],[117,10,127,8],[117,17,127,15],[117,19,127,17,"onPress"],[117,26,123,6],[118,0,128,8],[118,10,128,8],[118,18,128,16],[118,20,128,18,"disabled"],[118,28,123,6],[119,0,129,8],[119,10,129,8],[119,29,129,27],[119,31,129,29,"disabled"],[119,39,129,37],[119,42,129,40],[119,43,129,41],[119,51,129,40],[119,53,129,51],[119,63,129,40],[119,64,129,37],[119,67,129,65],[119,75,123,6],[120,0,130,8],[120,10,130,8],[120,36,130,34],[120,38,130,35],[120,46,123,6],[121,0,131,8],[121,10,131,8],[121,27,131,25],[121,29,131,26],[121,37,123,6],[122,0,132,8],[122,10,132,8],[122,28,132,26],[122,30,132,28],[123,0,132,30,"disabled"],[123,12,132,30,"disabled"],[123,20,132,38],[123,22,132,30,"disabled"],[124,0,132,28],[124,11,123,6],[125,0,133,8],[125,10,133,8],[125,33,133,31],[125,35,133,32],[125,43,123,6],[126,0,134,8],[126,10,134,8],[126,15,134,13],[126,17,134,15,"styles"],[126,23,134,21],[126,24,134,22,"container"],[126,33,123,6],[127,0,123,6],[128,0,123,6],[129,0,123,6],[130,0,123,6],[131,0,123,6],[132,0,123,6],[133,0,123,6],[133,12,136,8],[133,32,136,9],[133,53,136,8],[133,54,136,18],[133,58,136,8],[134,0,136,23],[134,10,136,23],[134,15,136,28],[134,17,136,30],[135,0,136,32,"transform"],[135,12,136,32,"transform"],[135,21,136,41],[135,23,136,43],[135,24,136,44],[136,0,136,46,"scale"],[136,14,136,46,"scale"],[136,19,136,51],[136,21,136,53],[136,26,136,58,"state"],[136,31,136,53],[136,32,136,64,"scaleAnim"],[137,0,136,44],[137,13,136,43],[138,0,136,30],[138,11,136,8],[139,0,136,8],[140,0,136,8],[141,0,136,8],[142,0,136,8],[143,0,136,8],[144,0,136,8],[145,0,136,8],[145,11,137,10],[145,31,137,11],[145,61,137,10],[146,0,138,12],[146,10,138,12],[146,26,138,28],[146,28,138,30],[146,33,137,10],[147,0,139,12],[147,10,139,12],[147,14,139,16],[147,16,139,18,"icon"],[147,20,137,10],[148,0,140,12],[148,10,140,12],[148,14,140,16],[148,16,140,18],[148,18,137,10],[149,0,141,12],[149,10,141,12],[149,15,141,17],[149,17,141,19,"checkboxColor"],[149,30,137,10],[150,0,142,12],[150,10,142,12],[150,19,142,21],[150,21,142,22],[150,26,137,10],[151,0,137,10],[152,0,137,10],[153,0,137,10],[154,0,137,10],[155,0,137,10],[156,0,137,10],[157,0,137,10],[157,10,136,8],[157,12,144,10],[157,32,144,11],[157,49,144,10],[158,0,144,16],[158,10,144,16],[158,15,144,21],[158,17,144,23],[158,18,144,24,"StyleSheet"],[158,42,144,35,"absoluteFill"],[158,54,144,23],[158,56,144,49,"styles"],[158,62,144,55],[158,63,144,56,"fillContainer"],[158,76,144,23],[158,77,144,10],[159,0,144,10],[160,0,144,10],[161,0,144,10],[162,0,144,10],[163,0,144,10],[164,0,144,10],[165,0,144,10],[165,11,145,12],[165,31,145,13],[165,52,145,12],[165,53,145,22],[165,57,145,12],[166,0,146,14],[166,10,146,14],[166,15,146,19],[166,17,146,21],[166,18,147,16,"styles"],[166,24,147,22],[166,25,147,23,"fill"],[166,29,146,21],[166,31,148,16],[167,0,148,18,"borderColor"],[167,12,148,18,"borderColor"],[167,23,148,29],[167,25,148,31,"checkboxColor"],[168,0,148,16],[168,11,146,21],[168,13,149,16],[169,0,149,18,"borderWidth"],[169,12,149,18,"borderWidth"],[169,23,149,29],[169,25,149,18,"borderWidth"],[170,0,149,16],[170,11,146,21],[170,12,145,12],[171,0,145,12],[172,0,145,12],[173,0,145,12],[174,0,145,12],[175,0,145,12],[176,0,145,12],[177,0,145,12],[177,10,144,10],[177,11,136,8],[177,12,123,6],[177,13,122,4],[178,0,156,3],[181,4,58,30,"React"],[181,9,58,35],[181,10,58,36,"Component"],[181,19],[184,0,58,6,"CheckboxAndroid"],[184,2,58,6,"CheckboxAndroid"],[184,17],[184,18,59,9,"displayName"],[184,29],[184,32,59,23],[184,50],[186,0,159,0],[186,6,159,6,"styles"],[186,12,159,12],[186,15,159,15,"StyleSheet"],[186,39,159,26,"create"],[186,45,159,15],[186,46,159,33],[187,0,160,2,"container"],[187,4,160,2,"container"],[187,13,160,11],[187,15,160,13],[188,0,161,4,"borderRadius"],[188,6,161,4,"borderRadius"],[188,18,161,16],[188,20,161,18],[188,22,160,13],[189,0,162,4,"width"],[189,6,162,4,"width"],[189,11,162,9],[189,13,162,11],[189,15,160,13],[190,0,163,4,"height"],[190,6,163,4,"height"],[190,12,163,10],[190,14,163,12],[190,16,160,13],[191,0,164,4,"padding"],[191,6,164,4,"padding"],[191,13,164,11],[191,15,164,13],[192,0,160,13],[192,5,159,33],[193,0,166,2,"fillContainer"],[193,4,166,2,"fillContainer"],[193,17,166,15],[193,19,166,17],[194,0,167,4,"alignItems"],[194,6,167,4,"alignItems"],[194,16,167,14],[194,18,167,16],[194,26,166,17],[195,0,168,4,"justifyContent"],[195,6,168,4,"justifyContent"],[195,20,168,18],[195,22,168,20],[196,0,166,17],[196,5,159,33],[197,0,170,2,"fill"],[197,4,170,2,"fill"],[197,8,170,6],[197,10,170,8],[198,0,171,4,"height"],[198,6,171,4,"height"],[198,12,171,10],[198,14,171,12],[198,16,170,8],[199,0,172,4,"width"],[199,6,172,4,"width"],[199,11,172,9],[199,13,172,11],[200,0,170,8],[201,0,159,33],[201,3,159,15],[201,4,159,0],[203,17,176,15],[203,41,176,25,"CheckboxAndroid"],[203,56,176,15],[203,57]],"functionMap":{"names":["<global>","CheckboxAndroid","componentDidUpdate","render"],"mappings":"AAA;ACyD;ECO;GDsB;EEE;GFmE;CDC"}},"type":"js/module"}]}