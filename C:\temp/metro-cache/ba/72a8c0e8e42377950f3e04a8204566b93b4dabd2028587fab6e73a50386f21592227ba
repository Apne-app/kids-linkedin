{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = StackRouter;\n  exports.StackActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\");\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  exports.StackActions = StackActions;\n\n  function StackRouter(options) {\n    var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _nonSecure.nanoid)(),\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return _objectSpread(_objectSpread({}, route), {}, {\n            key: route.key || route.name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n          });\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _nonSecure.nanoid)(),\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (index === -1) {\n                return null;\n              }\n\n              var _action$payload = action.payload,\n                  name = _action$payload.name,\n                  key = _action$payload.key,\n                  params = _action$payload.params;\n\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : name + \"-\" + (0, _nonSecure.nanoid)(),\n                    name: name,\n                    params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), params) : params\n                  } : route;\n                })\n              });\n            }\n\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              var getId = options.routeGetIdList[action.payload.name];\n              var id = getId == null ? void 0 : getId({\n                params: action.payload.params\n              });\n              var route = action.payload.name && action.payload.key ? state.routes.find(function (route) {\n                return route.name === action.payload.name && route.key === action.payload.key;\n              }) : id ? state.routes.find(function (route) {\n                return id === (getId == null ? void 0 : getId({\n                  params: route.params\n                }));\n              }) : undefined;\n              var routes;\n\n              if (route) {\n                routes = state.routes.filter(function (r) {\n                  return r.key !== route.key;\n                });\n                routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                  params: action.payload.params !== undefined ? _objectSpread(_objectSpread({}, route.params), action.payload.params) : route.params\n                }));\n              } else {\n                var _action$payload$key;\n\n                routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: (_action$payload$key = action.payload.key) != null ? _action$payload$key : action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n                }]);\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: routes.length - 1,\n                routes: routes\n              });\n            }\n\n            return null;\n\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (_index > 0) {\n                var _count = Math.max(_index - action.payload.count + 1, 1);\n\n                var _routes = state.routes.slice(0, _count).concat(state.routes.slice(_index + 1));\n\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  index: _routes.length - 1,\n                  routes: _routes\n                });\n              }\n\n              return null;\n            }\n\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n\n          case 'NAVIGATE':\n            if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n              return null;\n            }\n\n            if (action.payload.key || action.payload.name) {\n              var _index2 = -1;\n\n              var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n\n              var _id = _getId == null ? void 0 : _getId({\n                params: action.payload.params\n              });\n\n              if (_id) {\n                _index2 = state.routes.findIndex(function (route) {\n                  return _id === (_getId == null ? void 0 : _getId({\n                    params: route.params\n                  }));\n                });\n              } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                var _action$payload$key2;\n\n                var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: (_action$payload$key2 = action.payload.key) != null ? _action$payload$key2 : action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n                }]);\n\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  routes: _routes2,\n                  index: _routes2.length - 1\n                });\n              }\n\n              var _route = state.routes[_index2];\n\n              var _params;\n\n              if (action.payload.merge === false) {\n                _params = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n              } else {\n                _params = action.payload.params ? _objectSpread(_objectSpread({}, _route.params), action.payload.params) : _route.params;\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params !== _route.params ? _objectSpread(_objectSpread({}, _route), {}, {\n                  params: _params\n                }) : state.routes[_index2]])\n              });\n            }\n\n            return null;\n\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n\n            return null;\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n\n    return router;\n  }\n});","lineCount":345,"map":[[14,0,1,0],[16,0,2,0],[22,0,84,7],[22,6,84,13,"StackActions"],[22,18,84,25],[22,21,84,28],[23,0,85,2,"replace"],[23,4,85,2,"replace"],[23,11,84,28],[23,30,85,10,"name"],[23,34,84,28],[23,36,85,24,"params"],[23,42,84,28],[23,44,85,58],[24,0,86,4],[24,13,86,11],[25,0,86,13,"type"],[25,8,86,13,"type"],[25,12,86,17],[25,14,86,19],[25,23,86,11],[26,0,86,30,"payload"],[26,8,86,30,"payload"],[26,15,86,37],[26,17,86,39],[27,0,86,41,"name"],[27,10,86,41,"name"],[27,14,86,45],[27,16,86,41,"name"],[27,20,86,39],[28,0,86,47,"params"],[28,10,86,47,"params"],[28,16,86,53],[28,18,86,47,"params"],[29,0,86,39],[30,0,86,11],[30,7,86,4],[31,0,87,3],[31,5,84,28],[32,0,88,2,"push"],[32,4,88,2,"push"],[32,8,84,28],[32,24,88,7,"name"],[32,28,84,28],[32,30,88,21,"params"],[32,36,84,28],[32,38,88,55],[33,0,89,4],[33,13,89,11],[34,0,89,13,"type"],[34,8,89,13,"type"],[34,12,89,17],[34,14,89,19],[34,20,89,11],[35,0,89,27,"payload"],[35,8,89,27,"payload"],[35,15,89,34],[35,17,89,36],[36,0,89,38,"name"],[36,10,89,38,"name"],[36,14,89,42],[36,16,89,38,"name"],[36,20,89,36],[37,0,89,44,"params"],[37,10,89,44,"params"],[37,16,89,50],[37,18,89,44,"params"],[38,0,89,36],[39,0,89,11],[39,7,89,4],[40,0,90,3],[40,5,84,28],[41,0,91,2,"pop"],[41,4,91,2,"pop"],[41,7,84,28],[41,24,91,42],[42,0,91,42],[42,10,91,6,"count"],[42,15,91,42],[42,86,91,22],[42,87,91,42],[43,0,92,4],[43,13,92,11],[44,0,92,13,"type"],[44,8,92,13,"type"],[44,12,92,17],[44,14,92,19],[44,19,92,11],[45,0,92,26,"payload"],[45,8,92,26,"payload"],[45,15,92,33],[45,17,92,35],[46,0,92,37,"count"],[46,10,92,37,"count"],[46,15,92,42],[46,17,92,37,"count"],[47,0,92,35],[48,0,92,11],[48,7,92,4],[49,0,93,3],[49,5,84,28],[50,0,94,2,"popToTop"],[50,4,94,2,"popToTop"],[50,12,84,28],[50,34,94,30],[51,0,95,4],[51,13,95,11],[52,0,95,13,"type"],[52,8,95,13,"type"],[52,12,95,17],[52,14,95,19],[53,0,95,11],[53,7,95,4],[54,0,96,3],[55,0,84,28],[55,3,84,7],[58,0,99,15],[58,11,99,24,"StackRouter"],[58,22,99,15],[58,23,99,36,"options"],[58,30,99,15],[58,32,99,65],[59,0,100,2],[59,8,100,8,"router"],[59,14,103,3],[59,49,104,7,"BaseRouter"],[59,68,103,3],[60,0,106,4,"type"],[60,6,106,4,"type"],[60,10,106,8],[60,12,106,10],[60,19,103,3],[61,0,108,4,"getInitialState"],[61,6,108,4,"getInitialState"],[61,21,103,3],[61,54,108,52],[62,0,108,52],[62,12,108,22,"routeNames"],[62,22,108,52],[62,30,108,22,"routeNames"],[62,40,108,52],[63,0,108,52],[63,12,108,34,"routeParamList"],[63,26,108,52],[63,34,108,34,"routeParamList"],[63,48,108,52],[64,0,109,6],[64,12,109,12,"initialRouteName"],[64,28,109,28],[64,31,110,8,"options"],[64,38,110,15],[64,39,110,16,"initialRouteName"],[64,55,110,8],[64,60,110,37,"undefined"],[64,69,110,8],[64,73,111,8,"routeNames"],[64,83,111,18],[64,84,111,19,"includes"],[64,92,111,8],[64,93,111,28,"options"],[64,100,111,35],[64,101,111,36,"initialRouteName"],[64,117,111,8],[64,118,110,8],[64,121,112,12,"options"],[64,128,112,19],[64,129,112,20,"initialRouteName"],[64,145,110,8],[64,148,113,12,"routeNames"],[64,158,113,22],[64,159,113,23],[64,160,113,22],[64,161,109,6],[65,0,115,6],[65,15,115,13],[66,0,116,8,"stale"],[66,10,116,8,"stale"],[66,15,116,13],[66,17,116,15],[66,22,115,13],[67,0,117,8,"type"],[67,10,117,8,"type"],[67,14,117,12],[67,16,117,14],[67,23,115,13],[68,0,118,8,"key"],[68,10,118,8,"key"],[68,13,118,11],[68,26,118,22],[68,50,115,13],[69,0,119,8,"index"],[69,10,119,8,"index"],[69,15,119,13],[69,17,119,15],[69,18,115,13],[70,0,120,8,"routeNames"],[70,10,120,8,"routeNames"],[70,20,120,18],[70,22,120,8,"routeNames"],[70,32,115,13],[71,0,121,8,"routes"],[71,10,121,8,"routes"],[71,16,121,14],[71,18,121,16],[71,19,122,10],[72,0,123,12,"key"],[72,12,123,12,"key"],[72,15,123,15],[72,17,123,20,"initialRouteName"],[72,33,123,15],[72,42,123,40],[72,66,122,10],[73,0,124,12,"name"],[73,12,124,12,"name"],[73,16,124,16],[73,18,124,18,"initialRouteName"],[73,34,122,10],[74,0,125,12,"params"],[74,12,125,12,"params"],[74,18,125,18],[74,20,125,20,"routeParamList"],[74,34,125,34],[74,35,125,35,"initialRouteName"],[74,51,125,34],[75,0,122,10],[75,11,121,16],[76,0,115,13],[76,9,115,6],[77,0,129,5],[77,7,103,3],[78,0,131,4,"getRehydratedState"],[78,6,131,4,"getRehydratedState"],[78,24,103,3],[78,54,131,23,"partialState"],[78,66,103,3],[78,75,131,69],[79,0,131,69],[79,12,131,39,"routeNames"],[79,22,131,69],[79,31,131,39,"routeNames"],[79,41,131,69],[80,0,131,69],[80,12,131,51,"routeParamList"],[80,26,131,69],[80,35,131,51,"routeParamList"],[80,49,131,69],[81,0,132,6],[81,12,132,10,"state"],[81,17,132,15],[81,20,132,18,"partialState"],[81,32,132,6],[83,0,134,6],[83,12,134,10,"state"],[83,17,134,15],[83,18,134,16,"stale"],[83,23,134,10],[83,28,134,26],[83,33,134,6],[83,35,134,33],[84,0,135,8],[84,17,135,15,"state"],[84,22,135,8],[85,0,136,7],[87,0,138,6],[87,12,138,12,"routes"],[87,18,138,18],[87,21,138,21,"state"],[87,26,138,26],[87,27,138,27,"routes"],[87,33,138,21],[87,34,139,9,"filter"],[87,40,138,21],[87,41,139,16],[87,51,139,17,"route"],[87,56,139,16],[88,0,139,16],[88,17,139,27,"routeNames"],[88,27,139,37],[88,28,139,38,"includes"],[88,36,139,27],[88,37,139,47,"route"],[88,42,139,52],[88,43,139,53,"name"],[88,47,139,27],[88,48,139,16],[89,0,139,16],[89,9,138,21],[89,11,140,9,"map"],[89,14,138,21],[89,15,141,10],[89,25,141,11,"route"],[89,30,141,10],[90,0,141,10],[90,49,143,17,"route"],[90,54,141,10],[91,0,144,14,"key"],[91,12,144,14,"key"],[91,15,144,17],[91,17,144,19,"route"],[91,22,144,24],[91,23,144,25,"key"],[91,26,144,19],[91,30,144,35,"route"],[91,35,144,40],[91,36,144,41,"name"],[91,40,144,19],[91,49,144,49],[91,73,141,10],[92,0,145,14,"params"],[92,12,145,14,"params"],[92,18,145,20],[92,20,146,16,"routeParamList"],[92,34,146,30],[92,35,146,31,"route"],[92,40,146,36],[92,41,146,37,"name"],[92,45,146,30],[92,46,146,16],[92,51,146,47,"undefined"],[92,60,146,16],[92,95,148,25,"routeParamList"],[92,109,148,39],[92,110,148,40,"route"],[92,115,148,45],[92,116,148,46,"name"],[92,120,148,39],[92,121,146,16],[92,124,149,25,"route"],[92,129,149,30],[92,130,149,31,"params"],[92,136,146,16],[92,140,151,20,"route"],[92,145,151,25],[92,146,151,26,"params"],[93,0,141,10],[94,0,141,10],[94,9,138,21],[94,10,138,6],[96,0,155,6],[96,12,155,10,"routes"],[96,18,155,16],[96,19,155,17,"length"],[96,25,155,10],[96,30,155,28],[96,31,155,6],[96,33,155,31],[97,0,156,8],[97,14,156,14,"initialRouteName"],[97,30,156,30],[97,33,157,10,"options"],[97,40,157,17],[97,41,157,18,"initialRouteName"],[97,57,157,10],[97,62,157,39,"undefined"],[97,71,157,10],[97,74,158,14,"options"],[97,81,158,21],[97,82,158,22,"initialRouteName"],[97,98,157,10],[97,101,159,14,"routeNames"],[97,111,159,24],[97,112,159,25],[97,113,159,24],[97,114,156,8],[98,0,161,8,"routes"],[98,10,161,8,"routes"],[98,16,161,14],[98,17,161,15,"push"],[98,21,161,8],[98,22,161,20],[99,0,162,10,"key"],[99,12,162,10,"key"],[99,15,162,13],[99,17,162,18,"initialRouteName"],[99,33,162,13],[99,42,162,38],[99,66,161,20],[100,0,163,10,"name"],[100,12,163,10,"name"],[100,16,163,14],[100,18,163,16,"initialRouteName"],[100,34,161,20],[101,0,164,10,"params"],[101,12,164,10,"params"],[101,18,164,16],[101,20,164,18,"routeParamList"],[101,34,164,32],[101,35,164,33,"initialRouteName"],[101,51,164,32],[102,0,161,20],[102,11,161,8],[103,0,166,7],[105,0,168,6],[105,15,168,13],[106,0,169,8,"stale"],[106,10,169,8,"stale"],[106,15,169,13],[106,17,169,15],[106,22,168,13],[107,0,170,8,"type"],[107,10,170,8,"type"],[107,14,170,12],[107,16,170,14],[107,23,168,13],[108,0,171,8,"key"],[108,10,171,8,"key"],[108,13,171,11],[108,26,171,22],[108,50,168,13],[109,0,172,8,"index"],[109,10,172,8,"index"],[109,15,172,13],[109,17,172,15,"routes"],[109,23,172,21],[109,24,172,22,"length"],[109,30,172,15],[109,33,172,31],[109,34,168,13],[110,0,173,8,"routeNames"],[110,10,173,8,"routeNames"],[110,20,173,18],[110,22,173,8,"routeNames"],[110,32,168,13],[111,0,174,8,"routes"],[111,10,174,8,"routes"],[111,16,174,14],[111,18,174,8,"routes"],[112,0,168,13],[112,9,168,6],[113,0,176,5],[113,7,103,3],[114,0,178,4,"getStateForRouteNamesChange"],[114,6,178,4,"getStateForRouteNamesChange"],[114,33,103,3],[114,72,178,32,"state"],[114,77,103,3],[114,86,178,71],[115,0,178,71],[115,12,178,41,"routeNames"],[115,22,178,71],[115,31,178,41,"routeNames"],[115,41,178,71],[116,0,178,71],[116,12,178,53,"routeParamList"],[116,26,178,71],[116,35,178,53,"routeParamList"],[116,49,178,71],[117,0,179,6],[117,12,179,12,"routes"],[117,18,179,18],[117,21,179,21,"state"],[117,26,179,26],[117,27,179,27,"routes"],[117,33,179,21],[117,34,179,34,"filter"],[117,40,179,21],[117,41,179,41],[117,51,179,42,"route"],[117,56,179,41],[118,0,179,41],[118,17,180,8,"routeNames"],[118,27,180,18],[118,28,180,19,"includes"],[118,36,180,8],[118,37,180,28,"route"],[118,42,180,33],[118,43,180,34,"name"],[118,47,180,8],[118,48,179,41],[119,0,179,41],[119,9,179,21],[119,10,179,6],[121,0,183,6],[121,12,183,10,"routes"],[121,18,183,16],[121,19,183,17,"length"],[121,25,183,10],[121,30,183,28],[121,31,183,6],[121,33,183,31],[122,0,184,8],[122,14,184,14,"initialRouteName"],[122,30,184,30],[122,33,185,10,"options"],[122,40,185,17],[122,41,185,18,"initialRouteName"],[122,57,185,10],[122,62,185,39,"undefined"],[122,71,185,10],[122,75,186,10,"routeNames"],[122,85,186,20],[122,86,186,21,"includes"],[122,94,186,10],[122,95,186,30,"options"],[122,102,186,37],[122,103,186,38,"initialRouteName"],[122,119,186,10],[122,120,185,10],[122,123,187,14,"options"],[122,130,187,21],[122,131,187,22,"initialRouteName"],[122,147,185,10],[122,150,188,14,"routeNames"],[122,160,188,24],[122,161,188,25],[122,162,188,24],[122,163,184,8],[123,0,190,8,"routes"],[123,10,190,8,"routes"],[123,16,190,14],[123,17,190,15,"push"],[123,21,190,8],[123,22,190,20],[124,0,191,10,"key"],[124,12,191,10,"key"],[124,15,191,13],[124,17,191,18,"initialRouteName"],[124,33,191,13],[124,42,191,38],[124,66,190,20],[125,0,192,10,"name"],[125,12,192,10,"name"],[125,16,192,14],[125,18,192,16,"initialRouteName"],[125,34,190,20],[126,0,193,10,"params"],[126,12,193,10,"params"],[126,18,193,16],[126,20,193,18,"routeParamList"],[126,34,193,32],[126,35,193,33,"initialRouteName"],[126,51,193,32],[127,0,190,20],[127,11,190,8],[128,0,195,7],[130,0,197,6],[130,47,198,11,"state"],[130,52,197,6],[131,0,199,8,"routeNames"],[131,10,199,8,"routeNames"],[131,20,199,18],[131,22,199,8,"routeNames"],[131,32,197,6],[132,0,200,8,"routes"],[132,10,200,8,"routes"],[132,16,200,14],[132,18,200,8,"routes"],[132,24,197,6],[133,0,201,8,"index"],[133,10,201,8,"index"],[133,15,201,13],[133,17,201,15,"Math"],[133,21,201,19],[133,22,201,20,"min"],[133,25,201,15],[133,26,201,24,"state"],[133,31,201,29],[133,32,201,30,"index"],[133,37,201,15],[133,39,201,37,"routes"],[133,45,201,43],[133,46,201,44,"length"],[133,52,201,37],[133,55,201,53],[133,56,201,15],[134,0,197,6],[135,0,203,5],[135,7,103,3],[136,0,205,4,"getStateForRouteFocus"],[136,6,205,4,"getStateForRouteFocus"],[136,27,103,3],[136,60,205,26,"state"],[136,65,103,3],[136,67,205,33,"key"],[136,70,103,3],[136,72,205,38],[137,0,206,6],[137,12,206,12,"index"],[137,17,206,17],[137,20,206,20,"state"],[137,25,206,25],[137,26,206,26,"routes"],[137,32,206,20],[137,33,206,33,"findIndex"],[137,42,206,20],[137,43,206,43],[137,53,206,44,"r"],[137,54,206,43],[138,0,206,43],[138,17,206,50,"r"],[138,18,206,51],[138,19,206,52,"key"],[138,22,206,50],[138,27,206,60,"key"],[138,30,206,43],[139,0,206,43],[139,9,206,20],[139,10,206,6],[141,0,208,6],[141,12,208,10,"index"],[141,17,208,15],[141,22,208,20],[141,23,208,21],[141,24,208,10],[141,28,208,26,"index"],[141,33,208,31],[141,38,208,36,"state"],[141,43,208,41],[141,44,208,42,"index"],[141,49,208,6],[141,51,208,49],[142,0,209,8],[142,17,209,15,"state"],[142,22,209,8],[143,0,210,7],[145,0,212,6],[145,47,213,11,"state"],[145,52,212,6],[146,0,214,8,"index"],[146,10,214,8,"index"],[146,15,214,13],[146,17,214,8,"index"],[146,22,212,6],[147,0,215,8,"routes"],[147,10,215,8,"routes"],[147,16,215,14],[147,18,215,16,"state"],[147,23,215,21],[147,24,215,22,"routes"],[147,30,215,16],[147,31,215,29,"slice"],[147,36,215,16],[147,37,215,35],[147,38,215,16],[147,40,215,38,"index"],[147,45,215,43],[147,48,215,46],[147,49,215,16],[148,0,212,6],[149,0,217,5],[149,7,103,3],[150,0,219,4,"getStateForAction"],[150,6,219,4,"getStateForAction"],[150,23,103,3],[150,52,219,22,"state"],[150,57,103,3],[150,59,219,29,"action"],[150,65,103,3],[150,67,219,37,"options"],[150,74,103,3],[150,76,219,46],[151,0,219,46],[151,12,220,14,"routeParamList"],[151,26,219,46],[151,29,220,33,"options"],[151,36,219,46],[151,37,220,14,"routeParamList"],[151,51,219,46],[153,0,222,6],[153,16,222,14,"action"],[153,22,222,20],[153,23,222,21,"type"],[153,27,222,6],[154,0,223,8],[154,15,223,13],[154,24,223,8],[155,0,223,24],[156,0,224,10],[156,18,224,16,"index"],[156,23,224,21],[156,26,225,12,"action"],[156,32,225,18],[156,33,225,19,"target"],[156,39,225,12],[156,44,225,30,"state"],[156,49,225,35],[156,50,225,36,"key"],[156,53,225,12],[156,57,225,43,"action"],[156,63,225,49],[156,64,225,50,"source"],[156,70,225,12],[156,73,226,16,"state"],[156,78,226,21],[156,79,226,22,"routes"],[156,85,226,16],[156,86,226,29,"findIndex"],[156,95,226,16],[156,96,226,39],[156,106,226,40,"r"],[156,107,226,39],[157,0,226,39],[157,23,226,46,"r"],[157,24,226,47],[157,25,226,48,"key"],[157,28,226,46],[157,33,226,56,"action"],[157,39,226,62],[157,40,226,63,"source"],[157,46,226,39],[158,0,226,39],[158,15,226,16],[158,16,225,12],[158,19,227,16,"state"],[158,24,227,21],[158,25,227,22,"index"],[158,30,224,10],[160,0,229,10],[160,18,229,14,"index"],[160,23,229,19],[160,28,229,24],[160,29,229,25],[160,30,229,10],[160,32,229,28],[161,0,230,12],[161,23,230,19],[161,27,230,12],[162,0,231,11],[164,0,223,24],[164,36,233,40,"action"],[164,42,233,46],[164,43,233,47,"payload"],[164,50,223,24],[165,0,223,24],[165,18,233,18,"name"],[165,22,223,24],[165,41,233,18,"name"],[165,45,223,24],[166,0,223,24],[166,18,233,24,"key"],[166,21,223,24],[166,40,233,24,"key"],[166,43,223,24],[167,0,223,24],[167,18,233,29,"params"],[167,24,223,24],[167,43,233,29,"params"],[167,49,223,24],[169,0,235,10],[169,18,235,14],[169,19,235,15,"state"],[169,24,235,20],[169,25,235,21,"routeNames"],[169,35,235,15],[169,36,235,32,"includes"],[169,44,235,15],[169,45,235,41,"name"],[169,49,235,15],[169,50,235,10],[169,52,235,48],[170,0,236,12],[170,23,236,19],[170,27,236,12],[171,0,237,11],[173,0,239,10],[173,53,240,15,"state"],[173,58,239,10],[174,0,241,12,"routes"],[174,16,241,12,"routes"],[174,22,241,18],[174,24,241,20,"state"],[174,29,241,25],[174,30,241,26,"routes"],[174,36,241,20],[174,37,241,33,"map"],[174,40,241,20],[174,41,241,37],[174,51,241,38,"route"],[174,56,241,37],[174,58,241,45,"i"],[174,59,241,37],[175,0,241,37],[175,25,242,14,"i"],[175,26,242,15],[175,31,242,20,"index"],[175,36,242,14],[175,39,243,18],[176,0,244,20,"key"],[176,20,244,20,"key"],[176,23,244,23],[176,25,244,25,"key"],[176,28,244,28],[176,33,244,33,"undefined"],[176,42,244,25],[176,45,244,45,"key"],[176,48,244,25],[176,51,244,54,"name"],[176,55,244,25],[176,64,244,62],[176,88,243,18],[177,0,245,20,"name"],[177,20,245,20,"name"],[177,24,245,24],[177,26,245,20,"name"],[177,30,243,18],[178,0,246,20,"params"],[178,20,246,20,"params"],[178,26,246,26],[178,28,247,22,"routeParamList"],[178,42,247,36],[178,43,247,37,"name"],[178,47,247,36],[178,48,247,22],[178,53,247,47,"undefined"],[178,62,247,22],[178,97,249,31,"routeParamList"],[178,111,249,45],[178,112,249,46,"name"],[178,116,249,45],[178,117,247,22],[178,120,250,31,"params"],[178,126,247,22],[178,130,252,26,"params"],[179,0,243,18],[179,19,242,14],[179,22,254,18,"route"],[179,27,241,37],[180,0,241,37],[180,17,241,20],[181,0,239,10],[182,0,257,9],[184,0,259,8],[184,15,259,13],[184,21,259,8],[185,0,260,10],[185,16,260,14,"state"],[185,21,260,19],[185,22,260,20,"routeNames"],[185,32,260,14],[185,33,260,31,"includes"],[185,41,260,14],[185,42,260,40,"action"],[185,48,260,46],[185,49,260,47,"payload"],[185,56,260,40],[185,57,260,55,"name"],[185,61,260,14],[185,62,260,10],[185,64,260,62],[186,0,261,12],[186,18,261,18,"getId"],[186,23,261,23],[186,26,261,26,"options"],[186,33,261,33],[186,34,261,34,"routeGetIdList"],[186,48,261,26],[186,49,261,49,"action"],[186,55,261,55],[186,56,261,56,"payload"],[186,63,261,49],[186,64,261,64,"name"],[186,68,261,26],[186,69,261,12],[187,0,262,12],[187,18,262,18,"id"],[187,20,262,20],[187,23,262,23,"getId"],[187,28,262,20],[187,48,262,23,"getId"],[187,53,262,28],[187,54,262,31],[188,0,262,33,"params"],[188,16,262,33,"params"],[188,22,262,39],[188,24,262,41,"action"],[188,30,262,47],[188,31,262,48,"payload"],[188,38,262,41],[188,39,262,56,"params"],[189,0,262,31],[189,15,262,28],[189,16,262,12],[190,0,264,12],[190,18,264,18,"route"],[190,23,264,23],[190,26,265,14,"action"],[190,32,265,20],[190,33,265,21,"payload"],[190,40,265,14],[190,41,265,29,"name"],[190,45,265,14],[190,49,265,37,"action"],[190,55,265,43],[190,56,265,44,"payload"],[190,63,265,37],[190,64,265,52,"key"],[190,67,265,14],[190,70,266,18,"state"],[190,75,266,23],[190,76,266,24,"routes"],[190,82,266,18],[190,83,266,31,"find"],[190,87,266,18],[190,88,267,20],[190,98,267,21,"route"],[190,103,267,20],[191,0,267,20],[191,23,268,22,"route"],[191,28,268,27],[191,29,268,28,"name"],[191,33,268,22],[191,38,268,37,"action"],[191,44,268,43],[191,45,268,44,"payload"],[191,52,268,37],[191,53,268,52,"name"],[191,57,268,22],[191,61,269,22,"route"],[191,66,269,27],[191,67,269,28,"key"],[191,70,269,22],[191,75,269,36,"action"],[191,81,269,42],[191,82,269,43,"payload"],[191,89,269,36],[191,90,269,51,"key"],[191,93,267,20],[192,0,267,20],[192,15,266,18],[192,16,265,14],[192,19,271,18,"id"],[192,21,271,20],[192,24,272,18,"state"],[192,29,272,23],[192,30,272,24,"routes"],[192,36,272,18],[192,37,272,31,"find"],[192,41,272,18],[192,42,273,20],[192,52,273,21,"route"],[192,57,273,20],[193,0,273,20],[193,23,273,31,"id"],[193,25,273,33],[193,31,273,38,"getId"],[193,36,273,33],[193,56,273,38,"getId"],[193,61,273,43],[193,62,273,46],[194,0,273,48,"params"],[194,18,273,48,"params"],[194,24,273,54],[194,26,273,56,"route"],[194,31,273,61],[194,32,273,62,"params"],[195,0,273,46],[195,17,273,43],[195,18,273,33],[195,19,273,20],[196,0,273,20],[196,15,272,18],[196,16,271,20],[196,19,275,18,"undefined"],[196,28,264,12],[197,0,277,12],[197,18,277,16,"routes"],[197,24,277,12],[199,0,279,12],[199,18,279,16,"route"],[199,23,279,12],[199,25,279,23],[200,0,280,14,"routes"],[200,16,280,14,"routes"],[200,22,280,20],[200,25,280,23,"state"],[200,30,280,28],[200,31,280,29,"routes"],[200,37,280,23],[200,38,280,36,"filter"],[200,44,280,23],[200,45,280,43],[200,55,280,44,"r"],[200,56,280,43],[201,0,280,43],[201,25,280,50,"r"],[201,26,280,51],[201,27,280,52,"key"],[201,30,280,50],[201,35,280,60,"route"],[201,40,280,65],[201,41,280,66,"key"],[201,44,280,43],[202,0,280,43],[202,17,280,23],[202,18,280,14],[203,0,281,14,"routes"],[203,16,281,14,"routes"],[203,22,281,20],[203,23,281,21,"push"],[203,27,281,14],[203,60,282,19,"route"],[203,65,281,14],[204,0,283,16,"params"],[204,18,283,16,"params"],[204,24,283,22],[204,26,284,18,"action"],[204,32,284,24],[204,33,284,25,"payload"],[204,40,284,18],[204,41,284,33,"params"],[204,47,284,18],[204,52,284,44,"undefined"],[204,61,284,18],[204,96,286,27,"route"],[204,101,286,32],[204,102,286,33,"params"],[204,108,284,18],[204,111,287,27,"action"],[204,117,287,33],[204,118,287,34,"payload"],[204,125,287,27],[204,126,287,42,"params"],[204,132,284,18],[204,136,289,22,"route"],[204,141,289,27],[204,142,289,28,"params"],[205,0,281,14],[206,0,291,13],[206,15,279,12],[206,21,291,19],[207,0,291,19],[209,0,292,14,"routes"],[209,16,292,14,"routes"],[209,22,292,20],[209,68,293,19,"state"],[209,73,293,24],[209,74,293,25,"routes"],[209,80,292,20],[209,84,294,16],[210,0,295,18,"key"],[210,18,295,18,"key"],[210,21,295,21],[210,46,296,20,"action"],[210,52,296,26],[210,53,296,27,"payload"],[210,60,296,20],[210,61,296,35,"key"],[210,64,295,21],[210,98,296,45,"action"],[210,104,296,51],[210,105,296,52,"payload"],[210,112,296,45],[210,113,296,60,"name"],[210,117,295,21],[210,126,296,68],[210,150,294,16],[211,0,297,18,"name"],[211,18,297,18,"name"],[211,22,297,22],[211,24,297,24,"action"],[211,30,297,30],[211,31,297,31,"payload"],[211,38,297,24],[211,39,297,39,"name"],[211,43,294,16],[212,0,298,18,"params"],[212,18,298,18,"params"],[212,24,298,24],[212,26,299,20,"routeParamList"],[212,40,299,34],[212,41,299,35,"action"],[212,47,299,41],[212,48,299,42,"payload"],[212,55,299,35],[212,56,299,50,"name"],[212,60,299,34],[212,61,299,20],[212,66,299,60,"undefined"],[212,75,299,20],[212,110,301,29,"routeParamList"],[212,124,301,43],[212,125,301,44,"action"],[212,131,301,50],[212,132,301,51,"payload"],[212,139,301,44],[212,140,301,59,"name"],[212,144,301,43],[212,145,299,20],[212,148,302,29,"action"],[212,154,302,35],[212,155,302,36,"payload"],[212,162,302,29],[212,163,302,44,"params"],[212,169,299,20],[212,173,304,24,"action"],[212,179,304,30],[212,180,304,31,"payload"],[212,187,304,24],[212,188,304,39,"params"],[213,0,294,16],[213,17,292,20],[213,19,292,14],[214,0,307,13],[216,0,309,12],[216,53,310,17,"state"],[216,58,309,12],[217,0,311,14,"index"],[217,16,311,14,"index"],[217,21,311,19],[217,23,311,21,"routes"],[217,29,311,27],[217,30,311,28,"length"],[217,36,311,21],[217,39,311,37],[217,40,309,12],[218,0,312,14,"routes"],[218,16,312,14,"routes"],[218,22,312,20],[218,24,312,14,"routes"],[219,0,309,12],[220,0,314,11],[222,0,316,10],[222,19,316,17],[222,23,316,10],[224,0,318,8],[224,15,318,13],[224,20,318,8],[225,0,318,20],[226,0,319,10],[226,18,319,16,"index"],[226,24,319,21],[226,27,320,12,"action"],[226,33,320,18],[226,34,320,19,"target"],[226,40,320,12],[226,45,320,30,"state"],[226,50,320,35],[226,51,320,36,"key"],[226,54,320,12],[226,58,320,43,"action"],[226,64,320,49],[226,65,320,50,"source"],[226,71,320,12],[226,74,321,16,"state"],[226,79,321,21],[226,80,321,22,"routes"],[226,86,321,16],[226,87,321,29,"findIndex"],[226,96,321,16],[226,97,321,39],[226,107,321,40,"r"],[226,108,321,39],[227,0,321,39],[227,23,321,46,"r"],[227,24,321,47],[227,25,321,48,"key"],[227,28,321,46],[227,33,321,56,"action"],[227,39,321,62],[227,40,321,63,"source"],[227,46,321,39],[228,0,321,39],[228,15,321,16],[228,16,320,12],[228,19,322,16,"state"],[228,24,322,21],[228,25,322,22,"index"],[228,30,319,10],[230,0,324,10],[230,18,324,14,"index"],[230,24,324,19],[230,27,324,22],[230,28,324,10],[230,30,324,25],[231,0,325,12],[231,20,325,18,"count"],[231,26,325,23],[231,29,325,26,"Math"],[231,33,325,30],[231,34,325,31,"max"],[231,37,325,26],[231,38,325,35,"index"],[231,44,325,40],[231,47,325,43,"action"],[231,53,325,49],[231,54,325,50,"payload"],[231,61,325,43],[231,62,325,58,"count"],[231,67,325,35],[231,70,325,66],[231,71,325,26],[231,73,325,69],[231,74,325,26],[231,75,325,12],[233,0,326,12],[233,20,326,18,"routes"],[233,27,326,24],[233,30,326,27,"state"],[233,35,326,32],[233,36,326,33,"routes"],[233,42,326,27],[233,43,327,15,"slice"],[233,48,326,27],[233,49,327,21],[233,50,326,27],[233,52,327,24,"count"],[233,58,326,27],[233,60,328,15,"concat"],[233,66,326,27],[233,67,328,22,"state"],[233,72,328,27],[233,73,328,28,"routes"],[233,79,328,22],[233,80,328,35,"slice"],[233,85,328,22],[233,86,328,41,"index"],[233,92,328,46],[233,95,328,49],[233,96,328,22],[233,97,326,27],[233,98,326,12],[235,0,330,12],[235,55,331,17,"state"],[235,60,330,12],[236,0,332,14,"index"],[236,18,332,14,"index"],[236,23,332,19],[236,25,332,21,"routes"],[236,32,332,27],[236,33,332,28,"length"],[236,39,332,21],[236,42,332,37],[236,43,330,12],[237,0,333,14,"routes"],[237,18,333,14,"routes"],[237,24,333,20],[237,26,333,14,"routes"],[238,0,330,12],[239,0,335,11],[241,0,337,10],[241,21,337,17],[241,25,337,10],[242,0,338,9],[244,0,340,8],[244,15,340,13],[244,27,340,8],[245,0,341,10],[245,19,341,17,"router"],[245,25,341,23],[245,26,341,24,"getStateForAction"],[245,43,341,17],[245,44,342,12,"state"],[245,49,341,17],[245,51,343,12],[246,0,344,14,"type"],[246,14,344,14,"type"],[246,18,344,18],[246,20,344,20],[246,25,343,12],[247,0,345,14,"payload"],[247,14,345,14,"payload"],[247,21,345,21],[247,23,345,23],[248,0,345,25,"count"],[248,16,345,25,"count"],[248,21,345,30],[248,23,345,32,"state"],[248,28,345,37],[248,29,345,38,"routes"],[248,35,345,32],[248,36,345,45,"length"],[248,42,345,32],[248,45,345,54],[249,0,345,23],[250,0,343,12],[250,13,341,17],[250,15,347,12,"options"],[250,22,341,17],[250,23,341,10],[252,0,350,8],[252,15,350,13],[252,25,350,8],[253,0,351,10],[253,16,352,12,"action"],[253,22,352,18],[253,23,352,19,"payload"],[253,30,352,12],[253,31,352,27,"name"],[253,35,352,12],[253,40,352,36,"undefined"],[253,49,352,12],[253,53,353,12],[253,54,353,13,"state"],[253,59,353,18],[253,60,353,19,"routeNames"],[253,70,353,13],[253,71,353,30,"includes"],[253,79,353,13],[253,80,353,39,"action"],[253,86,353,45],[253,87,353,46,"payload"],[253,94,353,39],[253,95,353,54,"name"],[253,99,353,13],[253,100,351,10],[253,102,354,12],[254,0,355,12],[254,21,355,19],[254,25,355,12],[255,0,356,11],[257,0,358,10],[257,16,358,14,"action"],[257,22,358,20],[257,23,358,21,"payload"],[257,30,358,14],[257,31,358,29,"key"],[257,34,358,14],[257,38,358,36,"action"],[257,44,358,42],[257,45,358,43,"payload"],[257,52,358,36],[257,53,358,51,"name"],[257,57,358,10],[257,59,358,57],[258,0,360,12],[258,18,360,16,"index"],[258,25,360,21],[258,28,360,24],[258,29,360,25],[258,30,360,12],[260,0,362,12],[260,18,362,18,"getId"],[260,24,362,23],[260,27,364,14,"action"],[260,33,364,20],[260,34,364,21,"payload"],[260,41,364,14],[260,42,364,29,"key"],[260,45,364,14],[260,50,364,37,"undefined"],[260,59,364,14],[260,63,365,14,"action"],[260,69,365,20],[260,70,365,21,"payload"],[260,77,365,14],[260,78,365,29,"name"],[260,82,365,14],[260,87,365,38,"undefined"],[260,96,364,14],[260,99,366,18,"options"],[260,106,366,25],[260,107,366,26,"routeGetIdList"],[260,121,366,18],[260,122,366,41,"action"],[260,128,366,47],[260,129,366,48,"payload"],[260,136,366,41],[260,137,366,56,"name"],[260,141,366,18],[260,142,364,14],[260,145,367,18,"undefined"],[260,154,362,12],[262,0,368,12],[262,18,368,18,"id"],[262,21,368,20],[262,24,368,23,"getId"],[262,30,368,20],[262,50,368,23,"getId"],[262,56,368,28],[262,57,368,31],[263,0,368,33,"params"],[263,16,368,33,"params"],[263,22,368,39],[263,24,368,41,"action"],[263,30,368,47],[263,31,368,48,"payload"],[263,38,368,41],[263,39,368,56,"params"],[264,0,368,31],[264,15,368,28],[264,16,368,12],[266,0,370,12],[266,18,370,16,"id"],[266,21,370,12],[266,23,370,20],[267,0,371,14,"index"],[267,16,371,14,"index"],[267,23,371,19],[267,26,371,22,"state"],[267,31,371,27],[267,32,371,28,"routes"],[267,38,371,22],[267,39,371,35,"findIndex"],[267,48,371,22],[267,49,372,16],[267,59,372,17,"route"],[267,64,372,16],[268,0,372,16],[268,25,372,27,"id"],[268,28,372,29],[268,34,372,34,"getId"],[268,40,372,29],[268,60,372,34,"getId"],[268,66,372,39],[268,67,372,42],[269,0,372,44,"params"],[269,20,372,44,"params"],[269,26,372,50],[269,28,372,52,"route"],[269,33,372,57],[269,34,372,58,"params"],[270,0,372,42],[270,19,372,39],[270,20,372,29],[270,21,372,16],[271,0,372,16],[271,17,371,22],[271,18,371,14],[272,0,374,13],[272,15,370,12],[272,21,374,19],[272,25,375,15,"state"],[272,30,375,20],[272,31,375,21,"routes"],[272,37,375,15],[272,38,375,28,"state"],[272,43,375,33],[272,44,375,34,"index"],[272,49,375,15],[272,51,375,41,"name"],[272,55,375,15],[272,60,375,50,"action"],[272,66,375,56],[272,67,375,57,"payload"],[272,74,375,50],[272,75,375,65,"name"],[272,79,375,15],[272,83,376,16,"action"],[272,89,376,22],[272,90,376,23,"payload"],[272,97,376,16],[272,98,376,31,"key"],[272,101,376,16],[272,106,376,39,"undefined"],[272,115,375,14],[272,119,377,14,"state"],[272,124,377,19],[272,125,377,20,"routes"],[272,131,377,14],[272,132,377,27,"state"],[272,137,377,32],[272,138,377,33,"index"],[272,143,377,14],[272,145,377,40,"key"],[272,148,377,14],[272,153,377,48,"action"],[272,159,377,54],[272,160,377,55,"payload"],[272,167,377,48],[272,168,377,63,"key"],[272,171,374,19],[272,173,378,14],[273,0,379,14,"index"],[273,16,379,14,"index"],[273,23,379,19],[273,26,379,22,"state"],[273,31,379,27],[273,32,379,28,"index"],[273,37,379,14],[274,0,380,13],[274,15,374,19],[274,21,380,19],[275,0,381,14],[275,21,381,19],[275,25,381,23,"i"],[275,26,381,24],[275,29,381,27,"state"],[275,34,381,32],[275,35,381,33,"routes"],[275,41,381,27],[275,42,381,40,"length"],[275,48,381,27],[275,51,381,49],[275,52,381,14],[275,54,381,52,"i"],[275,55,381,53],[275,59,381,57],[275,60,381,14],[275,62,381,60,"i"],[275,63,381,61],[275,65,381,14],[275,67,381,65],[276,0,382,16],[276,22,383,19,"state"],[276,27,383,24],[276,28,383,25,"routes"],[276,34,383,19],[276,35,383,32,"i"],[276,36,383,19],[276,38,383,35,"name"],[276,42,383,19],[276,47,383,44,"action"],[276,53,383,50],[276,54,383,51,"payload"],[276,61,383,44],[276,62,383,59,"name"],[276,66,383,19],[276,70,384,20,"action"],[276,76,384,26],[276,77,384,27,"payload"],[276,84,384,20],[276,85,384,35,"key"],[276,88,384,20],[276,93,384,43,"undefined"],[276,102,383,18],[276,106,385,18,"state"],[276,111,385,23],[276,112,385,24,"routes"],[276,118,385,18],[276,119,385,31,"i"],[276,120,385,18],[276,122,385,34,"key"],[276,125,385,18],[276,130,385,42,"action"],[276,136,385,48],[276,137,385,49,"payload"],[276,144,385,42],[276,145,385,57,"key"],[276,148,382,16],[276,150,386,18],[277,0,387,18,"index"],[277,20,387,18,"index"],[277,27,387,23],[277,30,387,26,"i"],[277,31,387,18],[278,0,388,18],[279,0,389,17],[280,0,390,15],[281,0,391,13],[283,0,393,12],[283,18,394,14,"index"],[283,25,394,19],[283,30,394,24],[283,31,394,25],[283,32,394,14],[283,36,395,14,"action"],[283,42,395,20],[283,43,395,21,"payload"],[283,50,395,14],[283,51,395,29,"key"],[283,54,394,14],[283,58,396,14,"action"],[283,64,396,20],[283,65,396,21,"payload"],[283,72,396,14],[283,73,396,29,"name"],[283,77,396,14],[283,82,396,38,"undefined"],[283,91,393,12],[283,93,397,14],[284,0,398,14],[284,23,398,21],[284,27,398,14],[285,0,399,13],[287,0,401,12],[287,18,401,16,"index"],[287,25,401,21],[287,30,401,26],[287,31,401,27],[287,32,401,16],[287,36,401,32,"action"],[287,42,401,38],[287,43,401,39,"payload"],[287,50,401,32],[287,51,401,47,"name"],[287,55,401,32],[287,60,401,56,"undefined"],[287,69,401,12],[287,71,401,67],[288,0,401,67],[290,0,402,14],[290,20,402,20,"routes"],[290,28,402,26],[290,74,403,19,"state"],[290,79,403,24],[290,80,403,25,"routes"],[290,86,402,26],[290,90,404,16],[291,0,405,18,"key"],[291,18,405,18,"key"],[291,21,405,21],[291,47,406,20,"action"],[291,53,406,26],[291,54,406,27,"payload"],[291,61,406,20],[291,62,406,35,"key"],[291,65,405,21],[291,100,406,45,"action"],[291,106,406,51],[291,107,406,52,"payload"],[291,114,406,45],[291,115,406,60,"name"],[291,119,405,21],[291,128,406,68],[291,152,404,16],[292,0,407,18,"name"],[292,18,407,18,"name"],[292,22,407,22],[292,24,407,24,"action"],[292,30,407,30],[292,31,407,31,"payload"],[292,38,407,24],[292,39,407,39,"name"],[292,43,404,16],[293,0,408,18,"params"],[293,18,408,18,"params"],[293,24,408,24],[293,26,409,20,"routeParamList"],[293,40,409,34],[293,41,409,35,"action"],[293,47,409,41],[293,48,409,42,"payload"],[293,55,409,35],[293,56,409,50,"name"],[293,60,409,34],[293,61,409,20],[293,66,409,60,"undefined"],[293,75,409,20],[293,110,411,29,"routeParamList"],[293,124,411,43],[293,125,411,44,"action"],[293,131,411,50],[293,132,411,51,"payload"],[293,139,411,44],[293,140,411,59,"name"],[293,144,411,43],[293,145,409,20],[293,148,412,29,"action"],[293,154,412,35],[293,155,412,36,"payload"],[293,162,412,29],[293,163,412,44,"params"],[293,169,409,20],[293,173,414,24,"action"],[293,179,414,30],[293,180,414,31,"payload"],[293,187,414,24],[293,188,414,39,"params"],[294,0,404,16],[294,17,402,26],[294,19,402,14],[296,0,418,14],[296,55,419,19,"state"],[296,60,418,14],[297,0,420,16,"routes"],[297,18,420,16,"routes"],[297,24,420,22],[297,26,420,16,"routes"],[297,34,418,14],[298,0,421,16,"index"],[298,18,421,16,"index"],[298,23,421,21],[298,25,421,23,"routes"],[298,33,421,29],[298,34,421,30,"length"],[298,40,421,23],[298,43,421,39],[299,0,418,14],[300,0,423,13],[302,0,425,12],[302,18,425,18,"route"],[302,24,425,23],[302,27,425,26,"state"],[302,32,425,31],[302,33,425,32,"routes"],[302,39,425,26],[302,40,425,39,"index"],[302,47,425,26],[302,48,425,12],[304,0,427,12],[304,18,427,16,"params"],[304,25,427,12],[306,0,429,12],[306,18,429,16,"action"],[306,24,429,22],[306,25,429,23,"payload"],[306,32,429,16],[306,33,429,31,"merge"],[306,38,429,16],[306,43,429,41],[306,48,429,12],[306,50,429,48],[307,0,430,14,"params"],[307,16,430,14,"params"],[307,23,430,20],[307,26,431,16,"routeParamList"],[307,40,431,30],[307,41,431,31,"route"],[307,47,431,36],[307,48,431,37,"name"],[307,52,431,30],[307,53,431,16],[307,58,431,47,"undefined"],[307,67,431,16],[307,102,433,25,"routeParamList"],[307,116,433,39],[307,117,433,40,"route"],[307,123,433,45],[307,124,433,46,"name"],[307,128,433,39],[307,129,431,16],[307,132,434,25,"action"],[307,138,434,31],[307,139,434,32,"payload"],[307,146,434,25],[307,147,434,40,"params"],[307,153,431,16],[307,157,436,20,"action"],[307,163,436,26],[307,164,436,27,"payload"],[307,171,436,20],[307,172,436,35,"params"],[307,178,430,14],[308,0,437,13],[308,15,429,12],[308,21,437,19],[309,0,438,14,"params"],[309,16,438,14,"params"],[309,23,438,20],[309,26,438,23,"action"],[309,32,438,29],[309,33,438,30,"payload"],[309,40,438,23],[309,41,438,38,"params"],[309,47,438,23],[309,82,440,23,"route"],[309,88,440,28],[309,89,440,29,"params"],[309,95,438,23],[309,98,441,23,"action"],[309,104,441,29],[309,105,441,30,"payload"],[309,112,441,23],[309,113,441,38,"params"],[309,119,438,23],[309,123,443,18,"route"],[309,129,443,23],[309,130,443,24,"params"],[309,136,438,14],[310,0,444,13],[312,0,446,12],[312,53,447,17,"state"],[312,58,446,12],[313,0,448,14,"index"],[313,16,448,14,"index"],[313,21,448,19],[313,23,448,14,"index"],[313,30,446,12],[314,0,449,14,"routes"],[314,16,449,14,"routes"],[314,22,449,20],[314,67,450,19,"state"],[314,72,450,24],[314,73,450,25,"routes"],[314,79,450,19],[314,80,450,32,"slice"],[314,85,450,19],[314,86,450,38],[314,87,450,19],[314,89,450,41,"index"],[314,96,450,19],[314,97,449,20],[314,101,451,16,"params"],[314,108,451,22],[314,113,451,27,"route"],[314,119,451,32],[314,120,451,33,"params"],[314,126,451,16],[314,161,452,25,"route"],[314,167,451,16],[315,0,452,32,"params"],[315,18,452,32,"params"],[315,24,452,38],[315,26,452,32,"params"],[316,0,451,16],[316,21,453,20,"state"],[316,26,453,25],[316,27,453,26,"routes"],[316,33,453,20],[316,34,453,33,"index"],[316,41,453,20],[316,42,449,20],[317,0,446,12],[318,0,456,11],[320,0,458,10],[320,19,458,17],[320,23,458,10],[322,0,460,8],[322,15,460,13],[322,24,460,8],[323,0,461,10],[323,16,461,14,"state"],[323,21,461,19],[323,22,461,20,"index"],[323,27,461,14],[323,30,461,28],[323,31,461,10],[323,33,461,31],[324,0,462,12],[324,21,462,19,"router"],[324,27,462,25],[324,28,462,26,"getStateForAction"],[324,45,462,19],[324,46,463,14,"state"],[324,51,462,19],[324,53,464,14],[325,0,465,16,"type"],[325,16,465,16,"type"],[325,20,465,20],[325,22,465,22],[325,27,464,14],[326,0,466,16,"payload"],[326,16,466,16,"payload"],[326,23,466,23],[326,25,466,25],[327,0,466,27,"count"],[327,18,466,27,"count"],[327,23,466,32],[327,25,466,34],[328,0,466,25],[328,17,464,14],[329,0,467,16,"target"],[329,16,467,16,"target"],[329,22,467,22],[329,24,467,24,"action"],[329,30,467,30],[329,31,467,31,"target"],[329,37,464,14],[330,0,468,16,"source"],[330,16,468,16,"source"],[330,22,468,22],[330,24,468,24,"action"],[330,30,468,30],[330,31,468,31,"source"],[331,0,464,14],[331,15,462,19],[331,17,470,14,"options"],[331,24,462,19],[331,25,462,12],[332,0,472,11],[334,0,474,10],[334,19,474,17],[334,23,474,10],[336,0,476,8],[337,0,477,10],[337,19,477,17,"BaseRouter"],[337,39,477,28,"getStateForAction"],[337,56,477,17],[337,57,477,46,"state"],[337,62,477,17],[337,64,477,53,"action"],[337,70,477,17],[337,71,477,10],[338,0,222,6],[339,0,479,5],[339,7,103,3],[340,0,481,4,"actionCreators"],[340,6,481,4,"actionCreators"],[340,20,481,18],[340,22,481,20,"StackActions"],[341,0,103,3],[341,6,100,2],[343,0,484,2],[343,11,484,9,"router"],[343,17,484,2],[344,0,485,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","state.routes.find$argument_0"],"mappings":"AAA;ECoF;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,0CD;UEE;+BFW;KFwB;IKE;yCFC;uCEC;KLuB;IME;2CCC,oBD;KNW;IQE;uCDO,8BC;qCCe;uBDa;oBEa;sDFE;oBEI,mDF;2CLO,0BK;uCDyC,8BC;gBDmD,mDC;KR2G;CLM"}},"type":"js/module"}]}