{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"./constants","data":{"isAsync":false}},{"name":"./picker","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = RNDateTimePicker;\n\n  var _constants = _$$_REQUIRE(_dependencyMap[1], \"./constants\");\n\n  var _picker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./picker\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n\n  var _react = _$$_REQUIRE(_dependencyMap[4], \"react\");\n\n  function validateProps(props) {\n    var mode = props.mode,\n        value = props.value,\n        display = props.display;\n    (0, _invariant.default)(value, 'A date or time should be specified as `value`.');\n    (0, _invariant.default)(!(display === _constants.ANDROID_DISPLAY.calendar && mode === _constants.ANDROID_MODE.time) && !(display === _constants.ANDROID_DISPLAY.clock && mode === _constants.ANDROID_MODE.date), \"display: \" + display + \" and mode: \" + mode + \" cannot be used together.\");\n  }\n\n  function getPicker(_ref) {\n    var mode = _ref.mode,\n        value = _ref.value,\n        display = _ref.display,\n        is24Hour = _ref.is24Hour,\n        minimumDate = _ref.minimumDate,\n        maximumDate = _ref.maximumDate,\n        neutralButtonLabel = _ref.neutralButtonLabel,\n        minuteInterval = _ref.minuteInterval;\n\n    switch (mode) {\n      case _constants.MODE_TIME:\n        return _picker.default[_constants.MODE_TIME].open({\n          value: value,\n          display: display,\n          minuteInterval: minuteInterval,\n          is24Hour: is24Hour,\n          neutralButtonLabel: neutralButtonLabel\n        });\n\n      case _constants.MODE_DATE:\n      default:\n        return _picker.default[_constants.MODE_DATE].open({\n          value: value,\n          display: display,\n          minimumDate: minimumDate,\n          maximumDate: maximumDate,\n          neutralButtonLabel: neutralButtonLabel\n        });\n    }\n  }\n\n  function RNDateTimePicker(props) {\n    validateProps(props);\n    var mode = props.mode,\n        value = props.value,\n        onChange = props.onChange,\n        display = props.display,\n        is24Hour = props.is24Hour,\n        minimumDate = props.minimumDate,\n        maximumDate = props.maximumDate,\n        neutralButtonLabel = props.neutralButtonLabel,\n        minuteInterval = props.minuteInterval;\n    var valueTimestamp = value.getTime();\n    (0, _react.useEffect)(function () {\n      return function () {\n        var _pickers$mode;\n\n        return ((_pickers$mode = _picker.default[mode]) != null ? _pickers$mode : _picker.default[_constants.MODE_DATE]).dismiss();\n      };\n    }, [mode]);\n    (0, _react.useEffect)(function showOrUpdatePicker() {\n      var picker = getPicker({\n        mode: mode,\n        value: valueTimestamp,\n        display: display,\n        is24Hour: is24Hour,\n        minimumDate: minimumDate,\n        maximumDate: maximumDate,\n        neutralButtonLabel: neutralButtonLabel,\n        minuteInterval: minuteInterval\n      });\n      picker.then(function resolve(_ref2) {\n        var action = _ref2.action,\n            day = _ref2.day,\n            month = _ref2.month,\n            year = _ref2.year,\n            minute = _ref2.minute,\n            hour = _ref2.hour;\n        var date = new Date(valueTimestamp);\n        var event = {\n          type: 'set',\n          nativeEvent: {}\n        };\n\n        switch (action) {\n          case _constants.DATE_SET_ACTION:\n            event.nativeEvent.timestamp = date.setFullYear(year, month, day);\n            onChange(event, date);\n            break;\n\n          case _constants.TIME_SET_ACTION:\n            event.nativeEvent.timestamp = date.setHours(hour, minute);\n            onChange(event, date);\n            break;\n\n          case _constants.NEUTRAL_BUTTON_ACTION:\n            event.type = 'neutralButtonPressed';\n            onChange(event);\n            break;\n\n          case _constants.DISMISS_ACTION:\n          default:\n            event.type = 'dismissed';\n            onChange(event);\n            break;\n        }\n      }, function reject(error) {\n        throw error;\n      });\n    }, [onChange, valueTimestamp, mode]);\n    return null;\n  }\n\n  RNDateTimePicker.defaultProps = {\n    display: _constants.DISPLAY_DEFAULT,\n    mode: _constants.MODE_DATE\n  };\n});","lineCount":133,"map":[[9,0,5,0],[11,0,16,0],[13,0,17,0],[15,0,18,0],[17,0,22,0],[17,11,22,9,"validateProps"],[17,24,22,0],[17,25,22,23,"props"],[17,30,22,0],[17,32,22,50],[18,0,22,50],[18,8,23,9,"mode"],[18,12,22,50],[18,15,23,33,"props"],[18,20,22,50],[18,21,23,9,"mode"],[18,25,22,50],[19,0,22,50],[19,8,23,15,"value"],[19,13,22,50],[19,16,23,33,"props"],[19,21,22,50],[19,22,23,15,"value"],[19,27,22,50],[20,0,22,50],[20,8,23,22,"display"],[20,15,22,50],[20,18,23,33,"props"],[20,23,22,50],[20,24,23,22,"display"],[20,31,22,50],[21,0,24,2],[21,28,24,12,"value"],[21,33,24,2],[21,35,24,19],[21,83,24,2],[22,0,25,2],[22,28,26,4],[22,30,26,6,"display"],[22,37,26,13],[22,42,26,18,"ANDROID_DISPLAY"],[22,69,26,34,"calendar"],[22,77,26,6],[22,81,26,46,"mode"],[22,85,26,50],[22,90,26,55,"ANDROID_MODE"],[22,114,26,68,"time"],[22,118,26,4],[22,123,27,6],[22,125,27,8,"display"],[22,132,27,15],[22,137,27,20,"ANDROID_DISPLAY"],[22,164,27,36,"clock"],[22,169,27,8],[22,173,27,45,"mode"],[22,177,27,49],[22,182,27,54,"ANDROID_MODE"],[22,206,27,67,"date"],[22,210,27,6],[22,211,25,2],[22,227,28,16,"display"],[22,234,25,2],[22,253,28,37,"mode"],[22,257,25,2],[23,0,30,1],[25,0,32,0],[25,11,32,9,"getPicker"],[25,20,32,0],[25,27,41,3],[26,0,41,3],[26,8,33,2,"mode"],[26,12,41,3],[26,20,33,2,"mode"],[26,24,41,3],[27,0,41,3],[27,8,34,2,"value"],[27,13,41,3],[27,21,34,2,"value"],[27,26,41,3],[28,0,41,3],[28,8,35,2,"display"],[28,15,41,3],[28,23,35,2,"display"],[28,30,41,3],[29,0,41,3],[29,8,36,2,"is24Hour"],[29,16,41,3],[29,24,36,2,"is24Hour"],[29,32,41,3],[30,0,41,3],[30,8,37,2,"minimumDate"],[30,19,41,3],[30,27,37,2,"minimumDate"],[30,38,41,3],[31,0,41,3],[31,8,38,2,"maximumDate"],[31,19,41,3],[31,27,38,2,"maximumDate"],[31,38,41,3],[32,0,41,3],[32,8,39,2,"neutralButtonLabel"],[32,26,41,3],[32,34,39,2,"neutralButtonLabel"],[32,52,41,3],[33,0,41,3],[33,8,40,2,"minuteInterval"],[33,22,41,3],[33,30,40,2,"minuteInterval"],[33,44,41,3],[35,0,42,2],[35,12,42,10,"mode"],[35,16,42,2],[36,0,43,4],[36,11,43,9,"MODE_TIME"],[36,31,43,4],[37,0,44,6],[37,15,44,13,"pickers"],[37,31,44,21,"MODE_TIME"],[37,51,44,13],[37,53,44,32,"open"],[37,57,44,13],[37,58,44,37],[38,0,45,8,"value"],[38,10,45,8,"value"],[38,15,45,13],[38,17,45,8,"value"],[38,22,44,37],[39,0,46,8,"display"],[39,10,46,8,"display"],[39,17,46,15],[39,19,46,8,"display"],[39,26,44,37],[40,0,47,8,"minuteInterval"],[40,10,47,8,"minuteInterval"],[40,24,47,22],[40,26,47,8,"minuteInterval"],[40,40,44,37],[41,0,48,8,"is24Hour"],[41,10,48,8,"is24Hour"],[41,18,48,16],[41,20,48,8,"is24Hour"],[41,28,44,37],[42,0,49,8,"neutralButtonLabel"],[42,10,49,8,"neutralButtonLabel"],[42,28,49,26],[42,30,49,8,"neutralButtonLabel"],[43,0,44,37],[43,9,44,13],[43,10,44,6],[45,0,51,4],[45,11,51,9,"MODE_DATE"],[45,31,51,4],[46,0,52,4],[47,0,53,6],[47,15,53,13,"pickers"],[47,31,53,21,"MODE_DATE"],[47,51,53,13],[47,53,53,32,"open"],[47,57,53,13],[47,58,53,37],[48,0,54,8,"value"],[48,10,54,8,"value"],[48,15,54,13],[48,17,54,8,"value"],[48,22,53,37],[49,0,55,8,"display"],[49,10,55,8,"display"],[49,17,55,15],[49,19,55,8,"display"],[49,26,53,37],[50,0,56,8,"minimumDate"],[50,10,56,8,"minimumDate"],[50,21,56,19],[50,23,56,8,"minimumDate"],[50,34,53,37],[51,0,57,8,"maximumDate"],[51,10,57,8,"maximumDate"],[51,21,57,19],[51,23,57,8,"maximumDate"],[51,34,53,37],[52,0,58,8,"neutralButtonLabel"],[52,10,58,8,"neutralButtonLabel"],[52,28,58,26],[52,30,58,8,"neutralButtonLabel"],[53,0,53,37],[53,9,53,13],[53,10,53,6],[54,0,42,2],[55,0,61,1],[57,0,63,15],[57,11,63,24,"RNDateTimePicker"],[57,27,63,15],[57,28,63,41,"props"],[57,33,63,15],[57,35,63,68],[58,0,64,2,"validateProps"],[58,4,64,2,"validateProps"],[58,17,64,15],[58,18,64,16,"props"],[58,23,64,15],[58,24,64,2],[59,0,63,68],[59,8,66,4,"mode"],[59,12,63,68],[59,15,75,6,"props"],[59,20,63,68],[59,21,66,4,"mode"],[59,25,63,68],[60,0,63,68],[60,8,67,4,"value"],[60,13,63,68],[60,16,75,6,"props"],[60,21,63,68],[60,22,67,4,"value"],[60,27,63,68],[61,0,63,68],[61,8,68,4,"onChange"],[61,16,63,68],[61,19,75,6,"props"],[61,24,63,68],[61,25,68,4,"onChange"],[61,33,63,68],[62,0,63,68],[62,8,69,4,"display"],[62,15,63,68],[62,18,75,6,"props"],[62,23,63,68],[62,24,69,4,"display"],[62,31,63,68],[63,0,63,68],[63,8,70,4,"is24Hour"],[63,16,63,68],[63,19,75,6,"props"],[63,24,63,68],[63,25,70,4,"is24Hour"],[63,33,63,68],[64,0,63,68],[64,8,71,4,"minimumDate"],[64,19,63,68],[64,22,75,6,"props"],[64,27,63,68],[64,28,71,4,"minimumDate"],[64,39,63,68],[65,0,63,68],[65,8,72,4,"maximumDate"],[65,19,63,68],[65,22,75,6,"props"],[65,27,63,68],[65,28,72,4,"maximumDate"],[65,39,63,68],[66,0,63,68],[66,8,73,4,"neutralButtonLabel"],[66,26,63,68],[66,29,75,6,"props"],[66,34,63,68],[66,35,73,4,"neutralButtonLabel"],[66,53,63,68],[67,0,63,68],[67,8,74,4,"minuteInterval"],[67,22,63,68],[67,25,75,6,"props"],[67,30,63,68],[67,31,74,4,"minuteInterval"],[67,45,63,68],[68,0,76,2],[68,8,76,8,"valueTimestamp"],[68,22,76,22],[68,25,76,25,"value"],[68,30,76,30],[68,31,76,31,"getTime"],[68,38,76,25],[68,40,76,2],[69,0,78,2],[69,26,78,12],[69,38,78,18],[70,0,81,4],[70,13,81,11],[71,0,81,11],[73,0,81,11],[73,15,81,17],[73,33,81,18,"pickers"],[73,49,81,26,"mode"],[73,53,81,18],[73,54,81,17],[73,82,81,35,"pickers"],[73,98,81,43,"MODE_DATE"],[73,118,81,35],[73,119,81,17],[73,121,81,55,"dismiss"],[73,128,81,17],[73,130,81,11],[74,0,81,11],[74,7,81,4],[75,0,82,3],[75,5,78,2],[75,7,82,5],[75,8,82,6,"mode"],[75,12,82,5],[75,13,78,2],[76,0,84,2],[76,26,85,4],[76,35,85,13,"showOrUpdatePicker"],[76,53,85,4],[76,56,85,34],[77,0,86,6],[77,10,86,12,"picker"],[77,16,86,18],[77,19,86,21,"getPicker"],[77,28,86,30],[77,29,86,31],[78,0,87,8,"mode"],[78,8,87,8,"mode"],[78,12,87,12],[78,14,87,8,"mode"],[78,18,86,31],[79,0,88,8,"value"],[79,8,88,8,"value"],[79,13,88,13],[79,15,88,15,"valueTimestamp"],[79,29,86,31],[80,0,89,8,"display"],[80,8,89,8,"display"],[80,15,89,15],[80,17,89,8,"display"],[80,24,86,31],[81,0,90,8,"is24Hour"],[81,8,90,8,"is24Hour"],[81,16,90,16],[81,18,90,8,"is24Hour"],[81,26,86,31],[82,0,91,8,"minimumDate"],[82,8,91,8,"minimumDate"],[82,19,91,19],[82,21,91,8,"minimumDate"],[82,32,86,31],[83,0,92,8,"maximumDate"],[83,8,92,8,"maximumDate"],[83,19,92,19],[83,21,92,8,"maximumDate"],[83,32,86,31],[84,0,93,8,"neutralButtonLabel"],[84,8,93,8,"neutralButtonLabel"],[84,26,93,26],[84,28,93,8,"neutralButtonLabel"],[84,46,86,31],[85,0,94,8,"minuteInterval"],[85,8,94,8,"minuteInterval"],[85,22,94,22],[85,24,94,8,"minuteInterval"],[86,0,86,31],[86,7,86,30],[86,8,86,6],[87,0,97,6,"picker"],[87,6,97,6,"picker"],[87,12,97,12],[87,13,97,13,"then"],[87,17,97,6],[87,18,98,8],[87,27,98,17,"resolve"],[87,34,98,8],[87,42,98,67],[88,0,98,67],[88,12,98,26,"action"],[88,18,98,67],[88,27,98,26,"action"],[88,33,98,67],[89,0,98,67],[89,12,98,34,"day"],[89,15,98,67],[89,24,98,34,"day"],[89,27,98,67],[90,0,98,67],[90,12,98,39,"month"],[90,17,98,67],[90,26,98,39,"month"],[90,31,98,67],[91,0,98,67],[91,12,98,46,"year"],[91,16,98,67],[91,25,98,46,"year"],[91,29,98,67],[92,0,98,67],[92,12,98,52,"minute"],[92,18,98,67],[92,27,98,52,"minute"],[92,33,98,67],[93,0,98,67],[93,12,98,60,"hour"],[93,16,98,67],[93,25,98,60,"hour"],[93,29,98,67],[94,0,99,10],[94,12,99,16,"date"],[94,16,99,20],[94,19,99,23],[94,23,99,27,"Date"],[94,27,99,23],[94,28,99,32,"valueTimestamp"],[94,42,99,23],[94,43,99,10],[95,0,100,10],[95,12,100,16,"event"],[95,17,100,35],[95,20,100,38],[96,0,101,12,"type"],[96,10,101,12,"type"],[96,14,101,16],[96,16,101,18],[96,21,100,38],[97,0,102,12,"nativeEvent"],[97,10,102,12,"nativeEvent"],[97,21,102,23],[97,23,102,25],[98,0,100,38],[98,9,100,10],[100,0,105,10],[100,16,105,18,"action"],[100,22,105,10],[101,0,106,12],[101,15,106,17,"DATE_SET_ACTION"],[101,41,106,12],[102,0,107,14,"event"],[102,12,107,14,"event"],[102,17,107,19],[102,18,107,20,"nativeEvent"],[102,29,107,14],[102,30,107,32,"timestamp"],[102,39,107,14],[102,42,107,44,"date"],[102,46,107,48],[102,47,107,49,"setFullYear"],[102,58,107,44],[102,59,107,61,"year"],[102,63,107,44],[102,65,107,67,"month"],[102,70,107,44],[102,72,107,74,"day"],[102,75,107,44],[102,76,107,14],[103,0,108,14,"onChange"],[103,12,108,14,"onChange"],[103,20,108,22],[103,21,108,23,"event"],[103,26,108,22],[103,28,108,30,"date"],[103,32,108,22],[103,33,108,14],[104,0,109,14],[106,0,111,12],[106,15,111,17,"TIME_SET_ACTION"],[106,41,111,12],[107,0,112,14,"event"],[107,12,112,14,"event"],[107,17,112,19],[107,18,112,20,"nativeEvent"],[107,29,112,14],[107,30,112,32,"timestamp"],[107,39,112,14],[107,42,112,44,"date"],[107,46,112,48],[107,47,112,49,"setHours"],[107,55,112,44],[107,56,112,58,"hour"],[107,60,112,44],[107,62,112,64,"minute"],[107,68,112,44],[107,69,112,14],[108,0,113,14,"onChange"],[108,12,113,14,"onChange"],[108,20,113,22],[108,21,113,23,"event"],[108,26,113,22],[108,28,113,30,"date"],[108,32,113,22],[108,33,113,14],[109,0,114,14],[111,0,116,12],[111,15,116,17,"NEUTRAL_BUTTON_ACTION"],[111,47,116,12],[112,0,117,14,"event"],[112,12,117,14,"event"],[112,17,117,19],[112,18,117,20,"type"],[112,22,117,14],[112,25,117,27],[112,47,117,14],[113,0,118,14,"onChange"],[113,12,118,14,"onChange"],[113,20,118,22],[113,21,118,23,"event"],[113,26,118,22],[113,27,118,14],[114,0,119,14],[116,0,121,12],[116,15,121,17,"DISMISS_ACTION"],[116,40,121,12],[117,0,122,12],[118,0,123,14,"event"],[118,12,123,14,"event"],[118,17,123,19],[118,18,123,20,"type"],[118,22,123,14],[118,25,123,27],[118,36,123,14],[119,0,124,14,"onChange"],[119,12,124,14,"onChange"],[119,20,124,22],[119,21,124,23,"event"],[119,26,124,22],[119,27,124,14],[120,0,125,14],[121,0,105,10],[122,0,127,9],[122,7,97,6],[122,9,128,8],[122,18,128,17,"reject"],[122,24,128,8],[122,25,128,24,"error"],[122,30,128,8],[122,32,128,31],[123,0,130,10],[123,14,130,16,"error"],[123,19,130,10],[124,0,131,9],[124,7,97,6],[125,0,133,5],[125,5,84,2],[125,7,137,4],[125,8,137,5,"onChange"],[125,16,137,4],[125,18,137,15,"valueTimestamp"],[125,32,137,4],[125,34,137,31,"mode"],[125,38,137,4],[125,39,84,2],[126,0,140,2],[126,11,140,9],[126,15,140,2],[127,0,141,1],[129,0,143,0,"RNDateTimePicker"],[129,2,143,0,"RNDateTimePicker"],[129,18,143,16],[129,19,143,17,"defaultProps"],[129,31,143,0],[129,34,143,32],[130,0,144,2,"display"],[130,4,144,2,"display"],[130,11,144,9],[130,13,144,11,"DISPLAY_DEFAULT"],[130,39,143,32],[131,0,145,2,"mode"],[131,4,145,2,"mode"],[131,8,145,6],[131,10,145,8,"MODE_DATE"],[132,0,143,32],[132,3,143,0]],"functionMap":{"names":["<global>","validateProps","getPicker","RNDateTimePicker","useEffect$argument_0","<anonymous>","showOrUpdatePicker","resolve","reject"],"mappings":"AAA;ACqB;CDQ;AEE;CF6B;eGE;YCe;WCG,qDD;GDC;IGG;QCa;SD6B;QEC;SFG;KHE;CHQ"}},"type":"js/module"}]}