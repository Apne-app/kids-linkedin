{"dependencies":[{"name":"./core","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":37},"end":{"line":4,"column":54}}]}},{"name":"./sha1","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":56},"end":{"line":4,"column":73}}]}},{"name":"./hmac","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":75},"end":{"line":4,"column":92}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  ;\n\n  (function (root, factory, undef) {\n    if (typeof exports === \"object\") {\n      module.exports = exports = factory(_$$_REQUIRE(_dependencyMap[0], \"./core\"), _$$_REQUIRE(_dependencyMap[1], \"./sha1\"), _$$_REQUIRE(_dependencyMap[2], \"./hmac\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      define([\"./core\", \"./sha1\", \"./hmac\"], factory);\n    } else {\n      factory(root.CryptoJS);\n    }\n  })(this, function (CryptoJS) {\n    (function () {\n      var C = CryptoJS;\n      var C_lib = C.lib;\n      var Base = C_lib.Base;\n      var WordArray = C_lib.WordArray;\n      var C_algo = C.algo;\n      var MD5 = C_algo.MD5;\n      var EvpKDF = C_algo.EvpKDF = Base.extend({\n        cfg: Base.extend({\n          keySize: 128 / 32,\n          hasher: MD5,\n          iterations: 1\n        }),\n        init: function init(cfg) {\n          this.cfg = this.cfg.extend(cfg);\n        },\n        compute: function compute(password, salt) {\n          var cfg = this.cfg;\n          var hasher = cfg.hasher.create();\n          var derivedKey = WordArray.create();\n          var derivedKeyWords = derivedKey.words;\n          var keySize = cfg.keySize;\n          var iterations = cfg.iterations;\n\n          while (derivedKeyWords.length < keySize) {\n            if (block) {\n              hasher.update(block);\n            }\n\n            var block = hasher.update(password).finalize(salt);\n            hasher.reset();\n\n            for (var i = 1; i < iterations; i++) {\n              block = hasher.finalize(block);\n              hasher.reset();\n            }\n\n            derivedKey.concat(block);\n          }\n\n          derivedKey.sigBytes = keySize * 4;\n          return derivedKey;\n        }\n      });\n\n      C.EvpKDF = function (password, salt, cfg) {\n        return EvpKDF.create(cfg).compute(password, salt);\n      };\n    })();\n\n    return CryptoJS.EvpKDF;\n  });\n});","lineCount":65,"map":[[2,0,1,0],[4,0,1,2],[4,13,1,12,"root"],[4,17,1,2],[4,19,1,18,"factory"],[4,26,1,2],[4,28,1,27,"undef"],[4,33,1,2],[4,35,1,34],[5,0,2,1],[5,8,2,5],[5,15,2,12,"exports"],[5,22,2,5],[5,27,2,24],[5,35,2,1],[5,37,2,34],[6,0,4,2,"module"],[6,6,4,2,"module"],[6,12,4,8],[6,13,4,9,"exports"],[6,20,4,2],[6,23,4,19,"exports"],[6,30,4,26],[6,33,4,29,"factory"],[6,40,4,36],[6,41,4,37,"require"],[6,52,4,44],[6,81,4,36],[6,83,4,56,"require"],[6,94,4,63],[6,123,4,36],[6,125,4,75,"require"],[6,136,4,82],[6,165,4,36],[6,166,4,2],[7,0,5,2],[7,5,2,1],[7,11,6,6],[7,15,6,10],[7,22,6,17,"define"],[7,28,6,10],[7,33,6,28],[7,43,6,10],[7,47,6,42,"define"],[7,53,6,48],[7,54,6,49,"amd"],[7,57,6,6],[7,59,6,54],[8,0,8,2,"define"],[8,6,8,2,"define"],[8,12,8,8],[8,13,8,9],[8,14,8,10],[8,22,8,9],[8,24,8,20],[8,32,8,9],[8,34,8,30],[8,42,8,9],[8,43,8,8],[8,45,8,41,"factory"],[8,52,8,8],[8,53,8,2],[9,0,9,2],[9,5,6,6],[9,11,10,6],[10,0,12,2,"factory"],[10,6,12,2,"factory"],[10,13,12,9],[10,14,12,10,"root"],[10,18,12,14],[10,19,12,15,"CryptoJS"],[10,27,12,9],[10,28,12,2],[11,0,13,2],[12,0,14,1],[12,3,1,2],[12,5,14,2],[12,9,1,2],[12,11,14,8],[12,21,14,18,"CryptoJS"],[12,29,14,8],[12,31,14,28],[13,0,16,2],[13,17,16,14],[14,0,18,5],[14,10,18,9,"C"],[14,11,18,10],[14,14,18,13,"CryptoJS"],[14,22,18,5],[15,0,19,5],[15,10,19,9,"C_lib"],[15,15,19,14],[15,18,19,17,"C"],[15,19,19,18],[15,20,19,19,"lib"],[15,23,19,5],[16,0,20,5],[16,10,20,9,"Base"],[16,14,20,13],[16,17,20,16,"C_lib"],[16,22,20,21],[16,23,20,22,"Base"],[16,27,20,5],[17,0,21,5],[17,10,21,9,"WordArray"],[17,19,21,18],[17,22,21,21,"C_lib"],[17,27,21,26],[17,28,21,27,"WordArray"],[17,37,21,5],[18,0,22,5],[18,10,22,9,"C_algo"],[18,16,22,15],[18,19,22,18,"C"],[18,20,22,19],[18,21,22,20,"algo"],[18,25,22,5],[19,0,23,5],[19,10,23,9,"MD5"],[19,13,23,12],[19,16,23,15,"C_algo"],[19,22,23,21],[19,23,23,22,"MD5"],[19,26,23,5],[20,0,29,5],[20,10,29,9,"EvpKDF"],[20,16,29,15],[20,19,29,18,"C_algo"],[20,25,29,24],[20,26,29,25,"EvpKDF"],[20,32,29,18],[20,35,29,34,"Base"],[20,39,29,38],[20,40,29,39,"extend"],[20,46,29,34],[20,47,29,46],[21,0,37,9,"cfg"],[21,8,37,9,"cfg"],[21,11,37,12],[21,13,37,14,"Base"],[21,17,37,18],[21,18,37,19,"extend"],[21,24,37,14],[21,25,37,26],[22,0,38,13,"keySize"],[22,10,38,13,"keySize"],[22,17,38,20],[22,19,38,22],[22,25,38,26],[22,27,37,26],[23,0,39,13,"hasher"],[23,10,39,13,"hasher"],[23,16,39,19],[23,18,39,21,"MD5"],[23,21,37,26],[24,0,40,13,"iterations"],[24,10,40,13,"iterations"],[24,20,40,23],[24,22,40,25],[25,0,37,26],[25,9,37,14],[25,10,29,46],[26,0,54,9,"init"],[26,8,54,9,"init"],[26,12,54,13],[26,14,54,15],[26,28,54,25,"cfg"],[26,31,54,15],[26,33,54,30],[27,0,55,13],[27,15,55,18,"cfg"],[27,18,55,13],[27,21,55,24],[27,26,55,29,"cfg"],[27,29,55,24],[27,30,55,33,"extend"],[27,36,55,24],[27,37,55,40,"cfg"],[27,40,55,24],[27,41,55,13],[28,0,56,10],[28,9,29,46],[29,0,70,9,"compute"],[29,8,70,9,"compute"],[29,15,70,16],[29,17,70,18],[29,34,70,28,"password"],[29,42,70,18],[29,44,70,38,"salt"],[29,48,70,18],[29,50,70,44],[30,0,72,13],[30,14,72,17,"cfg"],[30,17,72,20],[30,20,72,23],[30,25,72,28,"cfg"],[30,28,72,13],[31,0,75,13],[31,14,75,17,"hasher"],[31,20,75,23],[31,23,75,26,"cfg"],[31,26,75,29],[31,27,75,30,"hasher"],[31,33,75,26],[31,34,75,37,"create"],[31,40,75,26],[31,42,75,13],[32,0,78,13],[32,14,78,17,"derivedKey"],[32,24,78,27],[32,27,78,30,"WordArray"],[32,36,78,39],[32,37,78,40,"create"],[32,43,78,30],[32,45,78,13],[33,0,81,13],[33,14,81,17,"derivedKeyWords"],[33,29,81,32],[33,32,81,35,"derivedKey"],[33,42,81,45],[33,43,81,46,"words"],[33,48,81,13],[34,0,82,13],[34,14,82,17,"keySize"],[34,21,82,24],[34,24,82,27,"cfg"],[34,27,82,30],[34,28,82,31,"keySize"],[34,35,82,13],[35,0,83,13],[35,14,83,17,"iterations"],[35,24,83,27],[35,27,83,30,"cfg"],[35,30,83,33],[35,31,83,34,"iterations"],[35,41,83,13],[37,0,86,13],[37,17,86,20,"derivedKeyWords"],[37,32,86,35],[37,33,86,36,"length"],[37,39,86,20],[37,42,86,45,"keySize"],[37,49,86,13],[37,51,86,54],[38,0,87,17],[38,16,87,21,"block"],[38,21,87,17],[38,23,87,28],[39,0,88,21,"hasher"],[39,14,88,21,"hasher"],[39,20,88,27],[39,21,88,28,"update"],[39,27,88,21],[39,28,88,35,"block"],[39,33,88,21],[40,0,89,18],[42,0,90,17],[42,16,90,21,"block"],[42,21,90,26],[42,24,90,29,"hasher"],[42,30,90,35],[42,31,90,36,"update"],[42,37,90,29],[42,38,90,43,"password"],[42,46,90,29],[42,48,90,53,"finalize"],[42,56,90,29],[42,57,90,62,"salt"],[42,61,90,29],[42,62,90,17],[43,0,91,17,"hasher"],[43,12,91,17,"hasher"],[43,18,91,23],[43,19,91,24,"reset"],[43,24,91,17],[45,0,94,17],[45,17,94,22],[45,21,94,26,"i"],[45,22,94,27],[45,25,94,30],[45,26,94,17],[45,28,94,33,"i"],[45,29,94,34],[45,32,94,37,"iterations"],[45,42,94,17],[45,44,94,49,"i"],[45,45,94,50],[45,47,94,17],[45,49,94,54],[46,0,95,21,"block"],[46,14,95,21,"block"],[46,19,95,26],[46,22,95,29,"hasher"],[46,28,95,35],[46,29,95,36,"finalize"],[46,37,95,29],[46,38,95,45,"block"],[46,43,95,29],[46,44,95,21],[47,0,96,21,"hasher"],[47,14,96,21,"hasher"],[47,20,96,27],[47,21,96,28,"reset"],[47,26,96,21],[48,0,97,18],[50,0,99,17,"derivedKey"],[50,12,99,17,"derivedKey"],[50,22,99,27],[50,23,99,28,"concat"],[50,29,99,17],[50,30,99,35,"block"],[50,35,99,17],[51,0,100,14],[53,0,101,13,"derivedKey"],[53,10,101,13,"derivedKey"],[53,20,101,23],[53,21,101,24,"sigBytes"],[53,29,101,13],[53,32,101,35,"keySize"],[53,39,101,42],[53,42,101,45],[53,43,101,13],[54,0,103,13],[54,17,103,20,"derivedKey"],[54,27,103,13],[55,0,104,10],[56,0,29,46],[56,7,29,34],[56,8,29,5],[58,0,124,5,"C"],[58,6,124,5,"C"],[58,7,124,6],[58,8,124,7,"EvpKDF"],[58,14,124,5],[58,17,124,16],[58,27,124,26,"password"],[58,35,124,16],[58,37,124,36,"salt"],[58,41,124,16],[58,43,124,42,"cfg"],[58,46,124,16],[58,48,124,47],[59,0,125,9],[59,15,125,16,"EvpKDF"],[59,21,125,22],[59,22,125,23,"create"],[59,28,125,16],[59,29,125,30,"cfg"],[59,32,125,16],[59,34,125,35,"compute"],[59,41,125,16],[59,42,125,43,"password"],[59,50,125,16],[59,52,125,53,"salt"],[59,56,125,16],[59,57,125,9],[60,0,126,6],[60,7,124,5],[61,0,127,2],[61,5,16,2],[61,8,16,1],[63,0,130,1],[63,11,130,8,"CryptoJS"],[63,19,130,16],[63,20,130,17,"EvpKDF"],[63,26,130,1],[64,0,132,1],[64,3,1,2],[64,4,1,1]],"functionMap":{"names":["<global>","<anonymous>","Base.extend$argument_0.init","Base.extend$argument_0.compute","C.EvpKDF"],"mappings":"AAA,EC;CDa,OC;eCwC;UDE;kBEc;UFkC;gBGoB;MHE;CDM"}},"type":"js/module"}]}