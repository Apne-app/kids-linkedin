{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./react-native","data":{"isAsync":false}},{"name":"./ensure-native-module-available","data":{"isAsync":false}},{"name":"./create-icon-source-cache","data":{"isAsync":false}},{"name":"./icon-button","data":{"isAsync":false}},{"name":"./tab-bar-item-ios","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIconSet;\n  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[13], \"./react-native\");\n\n  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./ensure-native-module-available\"));\n\n  var _createIconSourceCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./create-icon-source-cache\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./icon-button\"));\n\n  var _tabBarItemIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./tab-bar-item-ios\"));\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kids-linkedin/app/kids-linkedin/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-set.js\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _reactNative.Platform.select({\n      windows: \"/Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var Icon = function (_PureComponent) {\n      (0, _inherits2.default)(Icon, _PureComponent);\n\n      var _super = _createSuper(Icon);\n\n      function Icon() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.root = null;\n\n        _this.handleRef = function (ref) {\n          _this.root = ref;\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              children = _this$props.children,\n              props = (0, _objectWithoutProperties2.default)(_this$props, [\"name\", \"size\", \"color\", \"style\", \"children\"]);\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCodePoint(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }\n          }), glyph, children);\n        }\n      }]);\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    var imageSourceCache = (0, _createIconSourceCache.default)();\n\n    function resolveGlyph(name) {\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        return String.fromCodePoint(glyph);\n      }\n\n      return glyph;\n    }\n\n    function getImageSourceSync(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = resolveGlyph(name);\n      var processedColor = (0, _reactNative.processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      if (imageSourceCache.has(cacheKey)) {\n        return imageSourceCache.get(cacheKey);\n      }\n\n      try {\n        var imagePath = NativeIconAPI.getImageForFontSync(fontReference, glyph, size, processedColor);\n        var value = {\n          uri: imagePath,\n          scale: _reactNative.PixelRatio.get()\n        };\n        imageSourceCache.setValue(cacheKey, value);\n        return value;\n      } catch (error) {\n        imageSourceCache.setError(cacheKey, error);\n        throw error;\n      }\n    }\n\n    function getImageSource(name) {\n      var size,\n          color,\n          glyph,\n          processedColor,\n          cacheKey,\n          imagePath,\n          value,\n          _args = arguments;\n      return _regenerator.default.async(function getImageSource$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              size = _args.length > 1 && _args[1] !== undefined ? _args[1] : DEFAULT_ICON_SIZE;\n              color = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_ICON_COLOR;\n              (0, _ensureNativeModuleAvailable.default)();\n              glyph = resolveGlyph(name);\n              processedColor = (0, _reactNative.processColor)(color);\n              cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n              if (!imageSourceCache.has(cacheKey)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", imageSourceCache.get(cacheKey));\n\n            case 8:\n              _context.prev = 8;\n              _context.next = 11;\n              return _regenerator.default.awrap(NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor));\n\n            case 11:\n              imagePath = _context.sent;\n              value = {\n                uri: imagePath,\n                scale: _reactNative.PixelRatio.get()\n              };\n              imageSourceCache.setValue(cacheKey, value);\n              return _context.abrupt(\"return\", value);\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](8);\n              imageSourceCache.setError(cacheKey, _context.t0);\n              throw _context.t0;\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[8, 17]], Promise);\n    }\n\n    function loadFont() {\n      var file,\n          _args2 = arguments;\n      return _regenerator.default.async(function loadFont$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              file = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : fontFile;\n\n              if (!(_reactNative.Platform.OS === 'ios')) {\n                _context2.next = 7;\n                break;\n              }\n\n              (0, _ensureNativeModuleAvailable.default)();\n\n              if (file) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error('Unable to load font, because no file was specified. ');\n\n            case 5:\n              _context2.next = 7;\n              return _regenerator.default.awrap(NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, (0, _toConsumableArray2.default)(file.split('.'))));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.TabBarItemIOS = Icon.TabBarItem;\n    Icon.getImageSource = getImageSource;\n    Icon.getImageSourceSync = getImageSourceSync;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","lineCount":292,"map":[[30,0,1,0],[32,0,2,0],[34,0,3,0],[36,0,11,0],[38,0,12,0],[40,0,13,0],[42,0,14,0],[50,0,16,7],[50,6,16,13,"NativeIconAPI"],[50,19,16,26],[50,22,17,2,"NativeModules"],[50,49,17,16,"RNVectorIconsManager"],[50,69,17,2],[50,73,17,40,"NativeModules"],[50,100,17,54,"RNVectorIconsModule"],[50,119,16,7],[52,0,19,7],[52,6,19,13,"DEFAULT_ICON_SIZE"],[52,23,19,30],[52,26,19,33],[52,28,19,7],[54,0,20,7],[54,6,20,13,"DEFAULT_ICON_COLOR"],[54,24,20,31],[54,27,20,34],[54,34,20,7],[57,0,22,15],[57,11,22,24,"createIconSet"],[57,24,22,15],[57,25,23,2,"glyphMap"],[57,33,22,15],[57,35,24,2,"fontFamily"],[57,45,22,15],[57,47,25,2,"fontFile"],[57,55,22,15],[57,57,26,2,"fontStyle"],[57,66,22,15],[57,68,27,2],[58,0,29,2],[58,8,29,8,"fontBasename"],[58,20,29,20],[58,23,29,23,"fontFile"],[58,31,29,31],[58,34,30,6,"fontFile"],[58,42,30,14],[58,43,30,15,"replace"],[58,50,30,6],[58,51,30,23],[58,65,30,6],[58,67,30,39],[58,69,30,6],[58,70,29,31],[58,73,31,6,"fontFamily"],[58,83,29,2],[60,0,33,2],[60,8,33,8,"fontReference"],[60,21,33,21],[60,24,33,24,"Platform"],[60,46,33,33,"select"],[60,52,33,24],[60,53,33,40],[61,0,34,4,"windows"],[61,6,34,4,"windows"],[61,13,34,11],[61,28,34,24,"fontFile"],[61,36,34,11],[61,45,34,36,"fontFamily"],[61,55,33,40],[62,0,35,4,"android"],[62,6,35,4,"android"],[62,13,35,11],[62,15,35,13,"fontBasename"],[62,27,33,40],[63,0,36,4,"web"],[63,6,36,4,"web"],[63,9,36,7],[63,11,36,9,"fontBasename"],[63,23,33,40],[64,0,37,4,"default"],[64,6,37,4,"default"],[64,13,37,11],[64,15,37,13,"fontFamily"],[65,0,33,40],[65,5,33,24],[65,6,33,2],[67,0,27,2],[67,8,40,8,"Icon"],[67,12,27,2],[68,0,27,2],[70,0,27,2],[72,0,27,2],[73,0,27,2],[75,0,27,2],[77,0,27,2],[78,0,27,2],[79,0,27,2],[81,0,27,2],[82,0,27,2],[82,14,41,4,"root"],[82,18,27,2],[82,21,41,11],[82,25,27,2],[84,0,27,2],[84,14,54,4,"handleRef"],[84,23,27,2],[84,26,54,16],[84,36,54,16,"ref"],[84,39,54,19],[84,41,54,23],[85,0,55,6],[85,16,55,11,"root"],[85,20,55,6],[85,23,55,18,"ref"],[85,26,55,6],[86,0,56,5],[86,9,27,2],[88,0,27,2],[89,0,27,2],[91,0,27,2],[92,0,27,2],[93,0,27,2],[93,39,48,19,"nativeProps"],[93,50,27,2],[93,52,48,32],[94,0,49,6],[94,14,49,10],[94,19,49,15,"root"],[94,23,49,6],[94,25,49,21],[95,0,50,8],[95,17,50,13,"root"],[95,21,50,8],[95,22,50,18,"setNativeProps"],[95,36,50,8],[95,37,50,33,"nativeProps"],[95,48,50,8],[96,0,51,7],[97,0,52,5],[98,0,27,2],[99,0,27,2],[100,0,27,2],[100,33,58,13],[101,0,58,13],[101,28,59,63],[101,33,59,68,"props"],[101,38,58,13],[102,0,58,13],[102,14,59,14,"name"],[102,18,58,13],[102,33,59,14,"name"],[102,37,58,13],[103,0,58,13],[103,14,59,20,"size"],[103,18,58,13],[103,33,59,20,"size"],[103,37,58,13],[104,0,58,13],[104,14,59,26,"color"],[104,19,58,13],[104,34,59,26,"color"],[104,39,58,13],[105,0,58,13],[105,14,59,33,"style"],[105,19,58,13],[105,34,59,33,"style"],[105,39,58,13],[106,0,58,13],[106,14,59,40,"children"],[106,22,58,13],[106,37,59,40,"children"],[106,45,58,13],[107,0,58,13],[107,14,59,53,"props"],[107,19,58,13],[108,0,61,6],[108,14,61,10,"glyph"],[108,19,61,15],[108,22,61,18,"name"],[108,26,61,22],[108,29,61,25,"glyphMap"],[108,37,61,33],[108,38,61,34,"name"],[108,42,61,33],[108,43,61,25],[108,47,61,43],[108,50,61,22],[108,53,61,49],[108,55,61,6],[110,0,62,6],[110,14,62,10],[110,21,62,17,"glyph"],[110,26,62,10],[110,31,62,27],[110,39,62,6],[110,41,62,37],[111,0,63,8,"glyph"],[111,12,63,8,"glyph"],[111,17,63,13],[111,20,63,16,"String"],[111,26,63,22],[111,27,63,23,"fromCodePoint"],[111,40,63,16],[111,41,63,37,"glyph"],[111,46,63,16],[111,47,63,8],[112,0,64,7],[114,0,66,6],[114,14,66,12,"styleDefaults"],[114,27,66,25],[114,30,66,28],[115,0,67,8,"fontSize"],[115,12,67,8,"fontSize"],[115,20,67,16],[115,22,67,18,"size"],[115,26,66,28],[116,0,68,8,"color"],[116,12,68,8,"color"],[116,17,68,13],[116,19,68,8,"color"],[117,0,66,28],[117,11,66,6],[118,0,71,6],[118,14,71,12,"styleOverrides"],[118,28,71,26],[118,31,71,29],[119,0,72,8,"fontFamily"],[119,12,72,8,"fontFamily"],[119,22,72,18],[119,24,72,20,"fontReference"],[119,37,71,29],[120,0,73,8,"fontWeight"],[120,12,73,8,"fontWeight"],[120,22,73,18],[120,24,73,20],[120,32,71,29],[121,0,74,8,"fontStyle"],[121,12,74,8,"fontStyle"],[121,21,74,17],[121,23,74,19],[122,0,71,29],[122,11,71,6],[123,0,77,6,"props"],[123,10,77,6,"props"],[123,15,77,11],[123,16,77,12,"style"],[123,21,77,6],[123,24,77,20],[123,25,77,21,"styleDefaults"],[123,38,77,20],[123,40,77,36,"style"],[123,45,77,20],[123,47,77,43,"styleOverrides"],[123,61,77,20],[123,63,77,59,"fontStyle"],[123,72,77,68],[123,76,77,72],[123,78,77,20],[123,79,77,6],[124,0,78,6,"props"],[124,10,78,6,"props"],[124,15,78,11],[124,16,78,12,"ref"],[124,19,78,6],[124,22,78,18],[124,27,78,23,"handleRef"],[124,36,78,6],[125,0,80,6],[125,17,81,8],[125,46,81,9],[125,63,81,8],[125,92,81,18,"props"],[125,97,81,8],[126,0,81,8],[127,0,81,8],[128,0,81,8],[129,0,81,8],[130,0,81,8],[131,0,81,8],[132,0,81,8],[132,14,82,11,"glyph"],[132,19,81,8],[132,21,83,11,"children"],[132,29,81,8],[132,30,80,6],[133,0,86,5],[134,0,27,2],[135,0,27,2],[136,0,27,2],[136,6,40,21,"PureComponent"],[136,26,27,2],[138,0,40,8,"Icon"],[138,4,40,8,"Icon"],[138,8,27,2],[138,9,43,11,"defaultProps"],[138,21,27,2],[138,24,43,26],[139,0,44,6,"size"],[139,6,44,6,"size"],[139,10,44,10],[139,12,44,12,"DEFAULT_ICON_SIZE"],[139,29,43,26],[140,0,45,6,"allowFontScaling"],[140,6,45,6,"allowFontScaling"],[140,22,45,22],[140,24,45,24],[141,0,43,26],[141,5,27,2],[142,0,89,2],[142,8,89,8,"imageSourceCache"],[142,24,89,24],[142,27,89,27],[142,64,89,2],[144,0,91,2],[144,13,91,11,"resolveGlyph"],[144,25,91,2],[144,26,91,24,"name"],[144,30,91,2],[144,32,91,30],[145,0,92,4],[145,10,92,10,"glyph"],[145,15,92,15],[145,18,92,18,"glyphMap"],[145,26,92,26],[145,27,92,27,"name"],[145,31,92,26],[145,32,92,18],[145,36,92,36],[145,39,92,4],[147,0,93,4],[147,10,93,8],[147,17,93,15,"glyph"],[147,22,93,8],[147,27,93,25],[147,35,93,4],[147,37,93,35],[148,0,94,6],[148,15,94,13,"String"],[148,21,94,19],[148,22,94,20,"fromCodePoint"],[148,35,94,13],[148,36,94,34,"glyph"],[148,41,94,13],[148,42,94,6],[149,0,95,5],[151,0,96,4],[151,13,96,11,"glyph"],[151,18,96,4],[152,0,97,3],[154,0,99,2],[154,13,99,11,"getImageSourceSync"],[154,31,99,2],[154,32,100,4,"name"],[154,36,99,2],[154,38,103,4],[155,0,103,4],[155,10,101,4,"size"],[155,14,103,4],[155,85,101,11,"DEFAULT_ICON_SIZE"],[155,102,103,4],[156,0,103,4],[156,10,102,4,"color"],[156,15,103,4],[156,86,102,12,"DEFAULT_ICON_COLOR"],[156,104,103,4],[157,0,104,4],[158,0,106,4],[158,10,106,10,"glyph"],[158,15,106,15],[158,18,106,18,"resolveGlyph"],[158,30,106,30],[158,31,106,31,"name"],[158,35,106,30],[158,36,106,4],[159,0,107,4],[159,10,107,10,"processedColor"],[159,24,107,24],[159,27,107,27],[159,58,107,40,"color"],[159,63,107,27],[159,64,107,4],[160,0,108,4],[160,10,108,10,"cacheKey"],[160,18,108,18],[160,21,108,24,"glyph"],[160,26,108,18],[160,35,108,33,"size"],[160,39,108,18],[160,48,108,41,"processedColor"],[160,62,108,4],[162,0,110,4],[162,10,110,8,"imageSourceCache"],[162,26,110,24],[162,27,110,25,"has"],[162,30,110,8],[162,31,110,29,"cacheKey"],[162,39,110,8],[162,40,110,4],[162,42,110,40],[163,0,111,6],[163,15,111,13,"imageSourceCache"],[163,31,111,29],[163,32,111,30,"get"],[163,35,111,13],[163,36,111,34,"cacheKey"],[163,44,111,13],[163,45,111,6],[164,0,112,5],[166,0,113,4],[166,10,113,8],[167,0,114,6],[167,12,114,12,"imagePath"],[167,21,114,21],[167,24,114,24,"NativeIconAPI"],[167,37,114,37],[167,38,114,38,"getImageForFontSync"],[167,57,114,24],[167,58,115,8,"fontReference"],[167,71,114,24],[167,73,116,8,"glyph"],[167,78,114,24],[167,80,117,8,"size"],[167,84,114,24],[167,86,118,8,"processedColor"],[167,100,114,24],[167,101,114,6],[168,0,120,6],[168,12,120,12,"value"],[168,17,120,17],[168,20,120,20],[169,0,120,22,"uri"],[169,10,120,22,"uri"],[169,13,120,25],[169,15,120,27,"imagePath"],[169,24,120,20],[170,0,120,38,"scale"],[170,10,120,38,"scale"],[170,15,120,43],[170,17,120,45,"PixelRatio"],[170,41,120,56,"get"],[170,44,120,45],[171,0,120,20],[171,9,120,6],[172,0,121,6,"imageSourceCache"],[172,8,121,6,"imageSourceCache"],[172,24,121,22],[172,25,121,23,"setValue"],[172,33,121,6],[172,34,121,32,"cacheKey"],[172,42,121,6],[172,44,121,42,"value"],[172,49,121,6],[173,0,122,6],[173,15,122,13,"value"],[173,20,122,6],[174,0,123,5],[174,7,113,4],[174,8,123,6],[174,15,123,13,"error"],[174,20,123,6],[174,22,123,20],[175,0,124,6,"imageSourceCache"],[175,8,124,6,"imageSourceCache"],[175,24,124,22],[175,25,124,23,"setError"],[175,33,124,6],[175,34,124,32,"cacheKey"],[175,42,124,6],[175,44,124,42,"error"],[175,49,124,6],[176,0,125,6],[176,14,125,12,"error"],[176,19,125,6],[177,0,126,5],[178,0,127,3],[180,0,129,2],[180,13,129,17,"getImageSource"],[180,27,129,2],[180,28,130,4,"name"],[180,32,129,2],[181,0,129,2],[182,0,129,2],[183,0,129,2],[184,0,129,2],[185,0,129,2],[186,0,129,2],[187,0,129,2],[188,0,129,2],[189,0,129,2],[190,0,129,2],[191,0,129,2],[192,0,129,2],[193,0,131,4,"size"],[193,14,131,4,"size"],[193,18,129,2],[193,77,131,11,"DEFAULT_ICON_SIZE"],[193,94,129,2],[194,0,132,4,"color"],[194,14,132,4,"color"],[194,19,129,2],[194,78,132,12,"DEFAULT_ICON_COLOR"],[194,96,129,2],[195,0,134,4],[196,0,136,10,"glyph"],[196,14,136,10,"glyph"],[196,19,129,2],[196,22,136,18,"resolveGlyph"],[196,34,136,30],[196,35,136,31,"name"],[196,39,136,30],[196,40,129,2],[197,0,137,10,"processedColor"],[197,14,137,10,"processedColor"],[197,28,129,2],[197,31,137,27],[197,62,137,40,"color"],[197,67,137,27],[197,68,129,2],[198,0,138,10,"cacheKey"],[198,14,138,10,"cacheKey"],[198,22,129,2],[198,25,138,24,"glyph"],[198,30,129,2],[198,39,138,33,"size"],[198,43,129,2],[198,52,138,41,"processedColor"],[198,66,129,2],[200,0,129,2],[200,19,140,8,"imageSourceCache"],[200,35,140,24],[200,36,140,25,"has"],[200,39,140,8],[200,40,140,29,"cacheKey"],[200,48,140,8],[200,49,129,2],[201,0,129,2],[202,0,129,2],[203,0,129,2],[205,0,129,2],[205,47,141,13,"imageSourceCache"],[205,63,141,29],[205,64,141,30,"get"],[205,67,141,13],[205,68,141,34,"cacheKey"],[205,76,141,13],[205,77,129,2],[207,0,129,2],[208,0,129,2],[209,0,129,2],[210,0,129,2],[210,48,144,30,"NativeIconAPI"],[210,61,144,43],[210,62,144,44,"getImageForFont"],[210,77,144,30],[210,78,145,8,"fontReference"],[210,91,144,30],[210,93,146,8,"glyph"],[210,98,144,30],[210,100,147,8,"size"],[210,104,144,30],[210,106,148,8,"processedColor"],[210,120,144,30],[210,121,129,2],[212,0,129,2],[213,0,144,12,"imagePath"],[213,14,144,12,"imagePath"],[213,23,129,2],[214,0,150,12,"value"],[214,14,150,12,"value"],[214,19,129,2],[214,22,150,20],[215,0,150,22,"uri"],[215,16,150,22,"uri"],[215,19,150,25],[215,21,150,27,"imagePath"],[215,30,150,20],[216,0,150,38,"scale"],[216,16,150,38,"scale"],[216,21,150,43],[216,23,150,45,"PixelRatio"],[216,47,150,56,"get"],[216,50,150,45],[217,0,150,20],[217,15,129,2],[218,0,151,6,"imageSourceCache"],[218,14,151,6,"imageSourceCache"],[218,30,151,22],[218,31,151,23,"setValue"],[218,39,151,6],[218,40,151,32,"cacheKey"],[218,48,151,6],[218,50,151,42,"value"],[218,55,151,6],[219,0,129,2],[219,47,152,13,"value"],[219,52,129,2],[221,0,129,2],[222,0,129,2],[223,0,129,2],[224,0,154,6,"imageSourceCache"],[224,14,154,6,"imageSourceCache"],[224,30,154,22],[224,31,154,23,"setError"],[224,39,154,6],[224,40,154,32,"cacheKey"],[224,48,154,6],[225,0,129,2],[227,0,129,2],[228,0,129,2],[229,0,129,2],[230,0,129,2],[231,0,129,2],[232,0,129,2],[233,0,129,2],[235,0,159,2],[235,13,159,17,"loadFont"],[235,21,159,2],[236,0,159,2],[237,0,159,2],[238,0,159,2],[239,0,159,2],[240,0,159,2],[241,0,159,2],[242,0,159,26,"file"],[242,14,159,26,"file"],[242,18,159,2],[242,80,159,33,"fontFile"],[242,88,159,2],[244,0,159,2],[244,20,160,8,"Platform"],[244,42,160,17,"OS"],[244,44,160,8],[244,49,160,24],[244,54,159,2],[245,0,159,2],[246,0,159,2],[247,0,159,2],[249,0,161,6],[251,0,159,2],[251,18,162,11,"file"],[251,22,159,2],[252,0,159,2],[253,0,159,2],[254,0,159,2],[256,0,159,2],[256,20,163,14],[256,24,163,18,"Error"],[256,29,163,14],[256,30,163,24],[256,84,163,14],[256,85,159,2],[258,0,159,2],[259,0,159,2],[260,0,159,2],[260,48,165,12,"NativeIconAPI"],[260,61,165,25],[260,62,165,26,"loadFontWithFileName"],[260,82,165,12],[260,89,165,12,"NativeIconAPI"],[260,102,165,25],[260,137,165,50,"file"],[260,141,165,54],[260,142,165,55,"split"],[260,147,165,50],[260,148,165,61],[260,151,165,50],[260,152,165,25],[260,154,159,2],[262,0,159,2],[263,0,159,2],[264,0,159,2],[265,0,159,2],[266,0,159,2],[267,0,159,2],[268,0,159,2],[270,0,169,2],[270,13,169,11,"hasIcon"],[270,20,169,2],[270,21,169,19,"name"],[270,25,169,2],[270,27,169,25],[271,0,170,4],[271,13,170,11,"Object"],[271,19,170,17],[271,20,170,18,"prototype"],[271,29,170,11],[271,30,170,28,"hasOwnProperty"],[271,44,170,11],[271,45,170,43,"call"],[271,49,170,11],[271,50,170,48,"glyphMap"],[271,58,170,11],[271,60,170,58,"name"],[271,64,170,11],[271,65,170,4],[272,0,171,3],[274,0,173,2],[274,13,173,11,"getRawGlyphMap"],[274,27,173,2],[274,30,173,28],[275,0,174,4],[275,13,174,11,"glyphMap"],[275,21,174,4],[276,0,175,3],[278,0,177,2],[278,13,177,11,"getFontFamily"],[278,26,177,2],[278,29,177,27],[279,0,178,4],[279,13,178,11,"fontReference"],[279,26,178,4],[280,0,179,3],[282,0,181,2,"Icon"],[282,4,181,2,"Icon"],[282,8,181,6],[282,9,181,7,"Button"],[282,15,181,2],[282,18,181,16],[282,43,181,42,"Icon"],[282,47,181,16],[282,48,181,2],[283,0,182,2,"Icon"],[283,4,182,2,"Icon"],[283,8,182,6],[283,9,182,7,"TabBarItemIOS"],[283,22,182,2],[283,25,182,23,"Icon"],[283,29,182,27],[283,30,182,28,"TabBarItem"],[283,40,182,2],[284,0,183,2,"Icon"],[284,4,183,2,"Icon"],[284,8,183,6],[284,9,183,7,"getImageSource"],[284,23,183,2],[284,26,183,24,"getImageSource"],[284,40,183,2],[285,0,184,2,"Icon"],[285,4,184,2,"Icon"],[285,8,184,6],[285,9,184,7,"getImageSourceSync"],[285,27,184,2],[285,30,184,28,"getImageSourceSync"],[285,48,184,2],[286,0,185,2,"Icon"],[286,4,185,2,"Icon"],[286,8,185,6],[286,9,185,7,"loadFont"],[286,17,185,2],[286,20,185,18,"loadFont"],[286,28,185,2],[287,0,186,2,"Icon"],[287,4,186,2,"Icon"],[287,8,186,6],[287,9,186,7,"hasIcon"],[287,16,186,2],[287,19,186,17,"hasIcon"],[287,26,186,2],[288,0,187,2,"Icon"],[288,4,187,2,"Icon"],[288,8,187,6],[288,9,187,7,"getRawGlyphMap"],[288,23,187,2],[288,26,187,24,"getRawGlyphMap"],[288,40,187,2],[289,0,188,2,"Icon"],[289,4,188,2,"Icon"],[289,8,188,6],[289,9,188,7,"getFontFamily"],[289,22,188,2],[289,25,188,23,"getFontFamily"],[289,38,188,2],[290,0,190,2],[290,11,190,9,"Icon"],[290,15,190,2],[291,0,191,1]],"functionMap":{"names":["<global>","createIconSet","Icon","Icon#setNativeProps","Icon#handleRef","Icon#render","resolveGlyph","getImageSourceSync","getImageSource","loadFont","hasIcon","getRawGlyphMap","getFontFamily"],"mappings":"AAA;eCqB;ECkB;ICQ;KDI;gBEE;KFE;IGE;KH4B;GDC;EKI;GLM;EME;GN4B;EOE;GP4B;EQE;GRQ;ESE;GTE;EUE;GVE;EWE;GXE;CDY"}},"type":"js/module"}]}