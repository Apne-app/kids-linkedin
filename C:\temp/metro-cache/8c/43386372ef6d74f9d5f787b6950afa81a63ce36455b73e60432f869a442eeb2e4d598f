{"dependencies":[{"name":"../util/class","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":17},"end":{"line":3,"column":41}}]}},{"name":"../util/uri","data":{"isAsync":false,"locs":[{"start":{"line":4,"column":17},"end":{"line":4,"column":39}}]}},{"name":"../util/copy_object","data":{"isAsync":false,"locs":[{"start":{"line":5,"column":17},"end":{"line":5,"column":47}}]}},{"name":"../util/assign","data":{"isAsync":false,"locs":[{"start":{"line":6,"column":17},"end":{"line":6,"column":42}}]}},{"name":"../mixins/deferrable","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":17},"end":{"line":7,"column":48}}]}},{"name":"./transport","data":{"isAsync":false,"locs":[{"start":{"line":8,"column":17},"end":{"line":8,"column":39}}]}},{"name":"./xhr","data":{"isAsync":false,"locs":[{"start":{"line":9,"column":17},"end":{"line":9,"column":33}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Class = _$$_REQUIRE(_dependencyMap[0], \"../util/class\"),\n      URI = _$$_REQUIRE(_dependencyMap[1], \"../util/uri\"),\n      copyObject = _$$_REQUIRE(_dependencyMap[2], \"../util/copy_object\"),\n      assign = _$$_REQUIRE(_dependencyMap[3], \"../util/assign\"),\n      Deferrable = _$$_REQUIRE(_dependencyMap[4], \"../mixins/deferrable\"),\n      Transport = _$$_REQUIRE(_dependencyMap[5], \"./transport\"),\n      XHR = _$$_REQUIRE(_dependencyMap[6], \"./xhr\");\n\n  var EventSource = assign(Class(Transport, {\n    initialize: function initialize(dispatcher, endpoint) {\n      Transport.prototype.initialize.call(this, dispatcher, endpoint);\n      if (!global.EventSource) return this.setDeferredStatus('failed');\n      this._xhr = new XHR(dispatcher, endpoint);\n      endpoint = copyObject(endpoint);\n      endpoint.pathname += '/' + dispatcher.clientId;\n      var socket = new global.EventSource(URI.stringify(endpoint)),\n          self = this;\n\n      socket.onopen = function () {\n        self._everConnected = true;\n        self.setDeferredStatus('succeeded');\n      };\n\n      socket.onerror = function () {\n        if (self._everConnected) {\n          self._handleError([]);\n        } else {\n          self.setDeferredStatus('failed');\n          socket.close();\n        }\n      };\n\n      socket.onmessage = function (event) {\n        var replies;\n\n        try {\n          replies = JSON.parse(event.data);\n        } catch (error) {}\n\n        if (replies) self._receive(replies);else self._handleError([]);\n      };\n\n      this._socket = socket;\n    },\n    close: function close() {\n      if (!this._socket) return;\n      this._socket.onopen = this._socket.onerror = this._socket.onmessage = null;\n\n      this._socket.close();\n\n      delete this._socket;\n    },\n    isUsable: function isUsable(callback, context) {\n      this.callback(function () {\n        callback.call(context, true);\n      });\n      this.errback(function () {\n        callback.call(context, false);\n      });\n    },\n    encode: function encode(messages) {\n      return this._xhr.encode(messages);\n    },\n    request: function request(messages) {\n      return this._xhr.request(messages);\n    }\n  }), {\n    isUsable: function isUsable(dispatcher, endpoint, callback, context) {\n      var id = dispatcher.clientId;\n      if (!id) return callback.call(context, false);\n      XHR.isUsable(dispatcher, endpoint, function (usable) {\n        if (!usable) return callback.call(context, false);\n        this.create(dispatcher, endpoint).isUsable(callback, context);\n      }, this);\n    },\n    create: function create(dispatcher, endpoint) {\n      var sockets = dispatcher.transports.eventsource = dispatcher.transports.eventsource || {},\n          id = dispatcher.clientId;\n      var url = copyObject(endpoint);\n      url.pathname += '/' + (id || '');\n      url = URI.stringify(url);\n      sockets[url] = sockets[url] || new this(dispatcher, endpoint);\n      return sockets[url];\n    }\n  });\n  assign(EventSource.prototype, Deferrable);\n  module.exports = EventSource;\n});","lineCount":91,"map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"Class"],[4,11,3,9],[4,14,3,17,"require"],[4,25,3,24],[4,61,3,0],[5,0,3,0],[5,6,4,4,"URI"],[5,9,4,7],[5,12,4,17,"require"],[5,23,4,24],[5,57,3,0],[6,0,3,0],[6,6,5,4,"copyObject"],[6,16,5,14],[6,19,5,17,"require"],[6,30,5,24],[6,72,3,0],[7,0,3,0],[7,6,6,4,"assign"],[7,12,6,10],[7,15,6,17,"require"],[7,26,6,24],[7,63,3,0],[8,0,3,0],[8,6,7,4,"Deferrable"],[8,16,7,14],[8,19,7,17,"require"],[8,30,7,24],[8,73,3,0],[9,0,3,0],[9,6,8,4,"Transport"],[9,15,8,13],[9,18,8,17,"require"],[9,29,8,24],[9,63,3,0],[10,0,3,0],[10,6,9,4,"XHR"],[10,9,9,7],[10,12,9,17,"require"],[10,23,9,24],[10,51,3,0],[12,0,11,0],[12,6,11,4,"EventSource"],[12,17,11,15],[12,20,11,18,"assign"],[12,26,11,24],[12,27,11,25,"Class"],[12,32,11,30],[12,33,11,31,"Transport"],[12,42,11,30],[12,44,11,42],[13,0,12,2,"initialize"],[13,4,12,2,"initialize"],[13,14,12,12],[13,16,12,14],[13,36,12,23,"dispatcher"],[13,46,12,14],[13,48,12,35,"endpoint"],[13,56,12,14],[13,58,12,45],[14,0,13,4,"Transport"],[14,6,13,4,"Transport"],[14,15,13,13],[14,16,13,14,"prototype"],[14,25,13,4],[14,26,13,24,"initialize"],[14,36,13,4],[14,37,13,35,"call"],[14,41,13,4],[14,42,13,40],[14,46,13,4],[14,48,13,46,"dispatcher"],[14,58,13,4],[14,60,13,58,"endpoint"],[14,68,13,4],[15,0,14,4],[15,10,14,8],[15,11,14,9,"global"],[15,17,14,15],[15,18,14,16,"EventSource"],[15,29,14,4],[15,31,14,29],[15,38,14,36],[15,43,14,41,"setDeferredStatus"],[15,60,14,36],[15,61,14,59],[15,69,14,36],[15,70,14,29],[16,0,16,4],[16,11,16,9,"_xhr"],[16,15,16,4],[16,18,16,16],[16,22,16,20,"XHR"],[16,25,16,16],[16,26,16,24,"dispatcher"],[16,36,16,16],[16,38,16,36,"endpoint"],[16,46,16,16],[16,47,16,4],[17,0,18,4,"endpoint"],[17,6,18,4,"endpoint"],[17,14,18,12],[17,17,18,15,"copyObject"],[17,27,18,25],[17,28,18,26,"endpoint"],[17,36,18,25],[17,37,18,4],[18,0,19,4,"endpoint"],[18,6,19,4,"endpoint"],[18,14,19,12],[18,15,19,13,"pathname"],[18,23,19,4],[18,27,19,25],[18,33,19,31,"dispatcher"],[18,43,19,41],[18,44,19,42,"clientId"],[18,52,19,4],[19,0,21,4],[19,10,21,8,"socket"],[19,16,21,14],[19,19,21,17],[19,23,21,21,"global"],[19,29,21,27],[19,30,21,28,"EventSource"],[19,41,21,17],[19,42,21,40,"URI"],[19,45,21,43],[19,46,21,44,"stringify"],[19,55,21,40],[19,56,21,54,"endpoint"],[19,64,21,40],[19,65,21,17],[19,66,21,4],[20,0,21,4],[20,10,22,8,"self"],[20,14,22,12],[20,17,22,17],[20,21,21,4],[22,0,24,4,"socket"],[22,6,24,4,"socket"],[22,12,24,10],[22,13,24,11,"onopen"],[22,19,24,4],[22,22,24,20],[22,34,24,31],[23,0,25,6,"self"],[23,8,25,6,"self"],[23,12,25,10],[23,13,25,11,"_everConnected"],[23,27,25,6],[23,30,25,28],[23,34,25,6],[24,0,26,6,"self"],[24,8,26,6,"self"],[24,12,26,10],[24,13,26,11,"setDeferredStatus"],[24,30,26,6],[24,31,26,29],[24,42,26,6],[25,0,27,5],[25,7,24,4],[27,0,29,4,"socket"],[27,6,29,4,"socket"],[27,12,29,10],[27,13,29,11,"onerror"],[27,20,29,4],[27,23,29,21],[27,35,29,32],[28,0,30,6],[28,12,30,10,"self"],[28,16,30,14],[28,17,30,15,"_everConnected"],[28,31,30,6],[28,33,30,31],[29,0,31,8,"self"],[29,10,31,8,"self"],[29,14,31,12],[29,15,31,13,"_handleError"],[29,27,31,8],[29,28,31,26],[29,30,31,8],[30,0,32,7],[30,9,30,6],[30,15,32,13],[31,0,33,8,"self"],[31,10,33,8,"self"],[31,14,33,12],[31,15,33,13,"setDeferredStatus"],[31,32,33,8],[31,33,33,31],[31,41,33,8],[32,0,34,8,"socket"],[32,10,34,8,"socket"],[32,16,34,14],[32,17,34,15,"close"],[32,22,34,8],[33,0,35,7],[34,0,36,5],[34,7,29,4],[36,0,38,4,"socket"],[36,6,38,4,"socket"],[36,12,38,10],[36,13,38,11,"onmessage"],[36,22,38,4],[36,25,38,23],[36,35,38,32,"event"],[36,40,38,23],[36,42,38,39],[37,0,39,6],[37,12,39,10,"replies"],[37,19,39,6],[39,0,40,6],[39,12,40,10],[40,0,40,12,"replies"],[40,10,40,12,"replies"],[40,17,40,19],[40,20,40,22,"JSON"],[40,24,40,26],[40,25,40,27,"parse"],[40,30,40,22],[40,31,40,33,"event"],[40,36,40,38],[40,37,40,39,"data"],[40,41,40,22],[40,42,40,12],[41,0,40,46],[41,9,40,6],[41,10,40,47],[41,17,40,54,"error"],[41,22,40,47],[41,24,40,61],[41,25,40,63],[43,0,42,6],[43,12,42,10,"replies"],[43,19,42,6],[43,21,43,8,"self"],[43,25,43,12],[43,26,43,13,"_receive"],[43,34,43,8],[43,35,43,22,"replies"],[43,42,43,8],[43,44,42,6],[43,49,45,8,"self"],[43,53,45,12],[43,54,45,13,"_handleError"],[43,66,45,8],[43,67,45,26],[43,69,45,8],[44,0,46,5],[44,7,38,4],[46,0,48,4],[46,11,48,9,"_socket"],[46,18,48,4],[46,21,48,19,"socket"],[46,27,48,4],[47,0,49,3],[47,5,11,42],[48,0,51,2,"close"],[48,4,51,2,"close"],[48,9,51,7],[48,11,51,9],[48,28,51,20],[49,0,52,4],[49,10,52,8],[49,11,52,9],[49,16,52,14,"_socket"],[49,23,52,4],[49,25,52,23],[50,0,53,4],[50,11,53,9,"_socket"],[50,18,53,4],[50,19,53,17,"onopen"],[50,25,53,4],[50,28,53,26],[50,33,53,31,"_socket"],[50,40,53,26],[50,41,53,39,"onerror"],[50,48,53,26],[50,51,53,49],[50,56,53,54,"_socket"],[50,63,53,49],[50,64,53,62,"onmessage"],[50,73,53,49],[50,76,53,74],[50,80,53,4],[52,0,54,4],[52,11,54,9,"_socket"],[52,18,54,4],[52,19,54,17,"close"],[52,24,54,4],[54,0,55,4],[54,13,55,11],[54,18,55,16,"_socket"],[54,25,55,4],[55,0,56,3],[55,5,11,42],[56,0,58,2,"isUsable"],[56,4,58,2,"isUsable"],[56,12,58,10],[56,14,58,12],[56,32,58,21,"callback"],[56,40,58,12],[56,42,58,31,"context"],[56,49,58,12],[56,51,58,40],[57,0,59,4],[57,11,59,9,"callback"],[57,19,59,4],[57,20,59,18],[57,32,59,29],[58,0,59,31,"callback"],[58,8,59,31,"callback"],[58,16,59,39],[58,17,59,40,"call"],[58,21,59,31],[58,22,59,45,"context"],[58,29,59,31],[58,31,59,54],[58,35,59,31],[59,0,59,61],[59,7,59,4],[60,0,60,4],[60,11,60,9,"errback"],[60,18,60,4],[60,19,60,17],[60,31,60,28],[61,0,60,30,"callback"],[61,8,60,30,"callback"],[61,16,60,38],[61,17,60,39,"call"],[61,21,60,30],[61,22,60,44,"context"],[61,29,60,30],[61,31,60,53],[61,36,60,30],[62,0,60,61],[62,7,60,4],[63,0,61,3],[63,5,11,42],[64,0,63,2,"encode"],[64,4,63,2,"encode"],[64,10,63,8],[64,12,63,10],[64,28,63,19,"messages"],[64,36,63,10],[64,38,63,29],[65,0,64,4],[65,13,64,11],[65,18,64,16,"_xhr"],[65,22,64,11],[65,23,64,21,"encode"],[65,29,64,11],[65,30,64,28,"messages"],[65,38,64,11],[65,39,64,4],[66,0,65,3],[66,5,11,42],[67,0,67,2,"request"],[67,4,67,2,"request"],[67,11,67,9],[67,13,67,11],[67,30,67,20,"messages"],[67,38,67,11],[67,40,67,30],[68,0,68,4],[68,13,68,11],[68,18,68,16,"_xhr"],[68,22,68,11],[68,23,68,21,"request"],[68,30,68,11],[68,31,68,29,"messages"],[68,39,68,11],[68,40,68,4],[69,0,69,3],[70,0,11,42],[70,3,11,30],[70,4,11,24],[70,6,71,4],[71,0,72,2,"isUsable"],[71,4,72,2,"isUsable"],[71,12,72,10],[71,14,72,12],[71,32,72,21,"dispatcher"],[71,42,72,12],[71,44,72,33,"endpoint"],[71,52,72,12],[71,54,72,43,"callback"],[71,62,72,12],[71,64,72,53,"context"],[71,71,72,12],[71,73,72,62],[72,0,73,4],[72,10,73,8,"id"],[72,12,73,10],[72,15,73,13,"dispatcher"],[72,25,73,23],[72,26,73,24,"clientId"],[72,34,73,4],[73,0,74,4],[73,10,74,8],[73,11,74,9,"id"],[73,13,74,4],[73,15,74,13],[73,22,74,20,"callback"],[73,30,74,28],[73,31,74,29,"call"],[73,35,74,20],[73,36,74,34,"context"],[73,43,74,20],[73,45,74,43],[73,50,74,20],[73,51,74,13],[74,0,76,4,"XHR"],[74,6,76,4,"XHR"],[74,9,76,7],[74,10,76,8,"isUsable"],[74,18,76,4],[74,19,76,17,"dispatcher"],[74,29,76,4],[74,31,76,29,"endpoint"],[74,39,76,4],[74,41,76,39],[74,51,76,48,"usable"],[74,57,76,39],[74,59,76,56],[75,0,77,6],[75,12,77,10],[75,13,77,11,"usable"],[75,19,77,6],[75,21,77,19],[75,28,77,26,"callback"],[75,36,77,34],[75,37,77,35,"call"],[75,41,77,26],[75,42,77,40,"context"],[75,49,77,26],[75,51,77,49],[75,56,77,26],[75,57,77,19],[76,0,78,6],[76,13,78,11,"create"],[76,19,78,6],[76,20,78,18,"dispatcher"],[76,30,78,6],[76,32,78,30,"endpoint"],[76,40,78,6],[76,42,78,40,"isUsable"],[76,50,78,6],[76,51,78,49,"callback"],[76,59,78,6],[76,61,78,59,"context"],[76,68,78,6],[77,0,79,5],[77,7,76,4],[77,9,79,7],[77,13,76,4],[78,0,80,3],[78,5,71,4],[79,0,82,2,"create"],[79,4,82,2,"create"],[79,10,82,8],[79,12,82,10],[79,28,82,19,"dispatcher"],[79,38,82,10],[79,40,82,31,"endpoint"],[79,48,82,10],[79,50,82,41],[80,0,83,4],[80,10,83,8,"sockets"],[80,17,83,15],[80,20,83,18,"dispatcher"],[80,30,83,28],[80,31,83,29,"transports"],[80,41,83,18],[80,42,83,40,"eventsource"],[80,53,83,18],[80,56,83,54,"dispatcher"],[80,66,83,64],[80,67,83,65,"transports"],[80,77,83,54],[80,78,83,76,"eventsource"],[80,89,83,54],[80,93,83,91],[80,95,83,4],[81,0,83,4],[81,10,84,8,"id"],[81,12,84,10],[81,15,84,18,"dispatcher"],[81,25,84,28],[81,26,84,29,"clientId"],[81,34,83,4],[82,0,86,4],[82,10,86,8,"url"],[82,13,86,11],[82,16,86,14,"copyObject"],[82,26,86,24],[82,27,86,25,"endpoint"],[82,35,86,24],[82,36,86,4],[83,0,87,4,"url"],[83,6,87,4,"url"],[83,9,87,7],[83,10,87,8,"pathname"],[83,18,87,4],[83,22,87,20],[83,29,87,27,"id"],[83,31,87,29],[83,35,87,33],[83,37,87,20],[83,38,87,4],[84,0,88,4,"url"],[84,6,88,4,"url"],[84,9,88,7],[84,12,88,10,"URI"],[84,15,88,13],[84,16,88,14,"stringify"],[84,25,88,10],[84,26,88,24,"url"],[84,29,88,10],[84,30,88,4],[85,0,90,4,"sockets"],[85,6,90,4,"sockets"],[85,13,90,11],[85,14,90,12,"url"],[85,17,90,11],[85,18,90,4],[85,21,90,19,"sockets"],[85,28,90,26],[85,29,90,27,"url"],[85,32,90,26],[85,33,90,19],[85,37,90,35],[85,41,90,39],[85,45,90,35],[85,46,90,44,"dispatcher"],[85,56,90,35],[85,58,90,56,"endpoint"],[85,66,90,35],[85,67,90,4],[86,0,91,4],[86,13,91,11,"sockets"],[86,20,91,18],[86,21,91,19,"url"],[86,24,91,18],[86,25,91,4],[87,0,92,3],[88,0,71,4],[88,3,11,24],[88,4,11,0],[89,0,95,0,"assign"],[89,2,95,0,"assign"],[89,8,95,6],[89,9,95,7,"EventSource"],[89,20,95,18],[89,21,95,19,"prototype"],[89,30,95,6],[89,32,95,30,"Deferrable"],[89,42,95,6],[89,43,95,0],[90,0,97,0,"module"],[90,2,97,0,"module"],[90,8,97,6],[90,9,97,7,"exports"],[90,16,97,0],[90,19,97,17,"EventSource"],[90,30,97,0]],"functionMap":{"names":["<global>","Class$argument_1.initialize","socket.onopen","socket.onerror","socket.onmessage","Class$argument_1.close","Class$argument_1.isUsable","callback$argument_0","errback$argument_0","Class$argument_1.encode","Class$argument_1.request","assign$argument_1.isUsable","XHR.isUsable$argument_2","assign$argument_1.create"],"mappings":"AAA;cCW;oBCY;KDG;qBEE;KFO;uBGE;KHQ;GDG;SKE;GLK;YME;kBCC,2CD;iBEC,4CF;GNC;USE;GTE;WUE;GVE;YWG;uCCI;KDG;GXC;UaE;GbU"}},"type":"js/module"}]}