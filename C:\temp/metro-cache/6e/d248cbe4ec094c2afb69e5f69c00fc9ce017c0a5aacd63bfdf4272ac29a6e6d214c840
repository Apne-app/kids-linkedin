{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], \"./_xfBase\");\n\n  var XFindLastIndex = function () {\n    function XFindLastIndex(f, xf) {\n      this.xf = xf;\n      this.f = f;\n      this.idx = -1;\n      this.lastIdx = -1;\n    }\n\n    XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n    XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n    };\n\n    XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n      this.idx += 1;\n\n      if (this.f(input)) {\n        this.lastIdx = this.idx;\n      }\n\n      return result;\n    };\n\n    return XFindLastIndex;\n  }();\n\n  var _xfindLastIndex = _curry2(function _xfindLastIndex(f, xf) {\n    return new XFindLastIndex(f, xf);\n  });\n\n  module.exports = _xfindLastIndex;\n});","lineCount":38,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_xfBase"],[4,13,5,11],[4,16,7,0,"require"],[4,27,7,7],[4,59,5,0],[6,0,9,0],[6,6,9,4,"XFindLastIndex"],[6,20,9,18],[6,23,11,0],[6,35,11,12],[7,0,12,2],[7,13,12,11,"XFindLastIndex"],[7,27,12,2],[7,28,12,26,"f"],[7,29,12,2],[7,31,12,29,"xf"],[7,33,12,2],[7,35,12,33],[8,0,13,4],[8,11,13,9,"xf"],[8,13,13,4],[8,16,13,14,"xf"],[8,18,13,4],[9,0,14,4],[9,11,14,9,"f"],[9,12,14,4],[9,15,14,13,"f"],[9,16,14,4],[10,0,15,4],[10,11,15,9,"idx"],[10,14,15,4],[10,17,15,15],[10,18,15,16],[10,19,15,4],[11,0,16,4],[11,11,16,9,"lastIdx"],[11,18,16,4],[11,21,16,19],[11,22,16,20],[11,23,16,4],[12,0,17,3],[14,0,19,2,"XFindLastIndex"],[14,4,19,2,"XFindLastIndex"],[14,18,19,16],[14,19,19,17,"prototype"],[14,28,19,2],[14,29,19,27],[14,48,19,2],[14,52,19,50,"_xfBase"],[14,59,19,57],[14,60,19,58,"init"],[14,64,19,2],[16,0,21,2,"XFindLastIndex"],[16,4,21,2,"XFindLastIndex"],[16,18,21,16],[16,19,21,17,"prototype"],[16,28,21,2],[16,29,21,27],[16,50,21,2],[16,54,21,52],[16,64,21,62,"result"],[16,70,21,52],[16,72,21,70],[17,0,22,4],[17,13,22,11],[17,18,22,16,"xf"],[17,20,22,11],[17,21,22,19],[17,42,22,11],[17,44,22,42],[17,49,22,47,"xf"],[17,51,22,42],[17,52,22,50],[17,71,22,42],[17,73,22,71,"result"],[17,79,22,42],[17,81,22,79],[17,86,22,84,"lastIdx"],[17,93,22,42],[17,94,22,11],[17,95,22,4],[18,0,23,3],[18,5,21,2],[20,0,25,2,"XFindLastIndex"],[20,4,25,2,"XFindLastIndex"],[20,18,25,16],[20,19,25,17,"prototype"],[20,28,25,2],[20,29,25,27],[20,48,25,2],[20,52,25,50],[20,62,25,60,"result"],[20,68,25,50],[20,70,25,68,"input"],[20,75,25,50],[20,77,25,75],[21,0,26,4],[21,11,26,9,"idx"],[21,14,26,4],[21,18,26,16],[21,19,26,4],[23,0,28,4],[23,10,28,8],[23,15,28,13,"f"],[23,16,28,8],[23,17,28,15,"input"],[23,22,28,8],[23,23,28,4],[23,25,28,23],[24,0,29,6],[24,13,29,11,"lastIdx"],[24,20,29,6],[24,23,29,21],[24,28,29,26,"idx"],[24,31,29,6],[25,0,30,5],[27,0,32,4],[27,13,32,11,"result"],[27,19,32,4],[28,0,33,3],[28,5,25,2],[30,0,35,2],[30,11,35,9,"XFindLastIndex"],[30,25,35,2],[31,0,36,1],[31,3,11,0],[31,5,9,0],[33,0,38,0],[33,6,38,4,"_xfindLastIndex"],[33,21,38,19],[33,24,40,0,"_curry2"],[33,31,40,7],[33,32,40,8],[33,41,40,17,"_xfindLastIndex"],[33,56,40,8],[33,57,40,33,"f"],[33,58,40,8],[33,60,40,36,"xf"],[33,62,40,8],[33,64,40,40],[34,0,41,2],[34,11,41,9],[34,15,41,13,"XFindLastIndex"],[34,29,41,9],[34,30,41,28,"f"],[34,31,41,9],[34,33,41,31,"xf"],[34,35,41,9],[34,36,41,2],[35,0,42,1],[35,3,40,7],[35,4,38,0],[37,0,44,0,"module"],[37,2,44,0,"module"],[37,8,44,6],[37,9,44,7,"exports"],[37,16,44,0],[37,19,44,17,"_xfindLastIndex"],[37,34,44,0]],"functionMap":{"names":["<global>","<anonymous>","XFindLastIndex","XFindLastIndex.prototype.transducerResult","XFindLastIndex.prototype.transducerStep","_xfindLastIndex"],"mappings":"AAA;ACU;ECC;GDK;oDEI;GFE;kDGE;GHQ;CDG;QKI;CLE"}},"type":"js/module"}]}