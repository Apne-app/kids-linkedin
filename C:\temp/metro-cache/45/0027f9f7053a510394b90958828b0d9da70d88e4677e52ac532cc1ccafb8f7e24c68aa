{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react-native-reanimated","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./Gesture","data":{"isAsync":false}},{"name":"./Vectors","data":{"isAsync":false}},{"name":"./AnimationRunners","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDebug = exports.useDiff = exports.useClocks = exports.useValues = exports.useLoop = exports.useValue = exports.useClock = exports.useVectors = exports.useVector = exports.useScrollHandler = exports.useTapGestureHandler = exports.usePinchGestureHandler = exports.useRotationGestureHandler = exports.usePanGestureHandler = exports.useGestureHandler = exports.useConst = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _reactNativeReanimated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"react-native-reanimated\"));\n\n  var _react = _$$_REQUIRE(_dependencyMap[3], \"react\");\n\n  var _Gesture = _$$_REQUIRE(_dependencyMap[4], \"./Gesture\");\n\n  var _Vectors = _$$_REQUIRE(_dependencyMap[5], \"./Vectors\");\n\n  var _AnimationRunners = _$$_REQUIRE(_dependencyMap[6], \"./AnimationRunners\");\n\n  var Clock = _reactNativeReanimated.default.Clock,\n      Value = _reactNativeReanimated.default.Value,\n      diff = _reactNativeReanimated.default.diff,\n      set = _reactNativeReanimated.default.set,\n      useCode = _reactNativeReanimated.default.useCode,\n      debug = _reactNativeReanimated.default.debug,\n      block = _reactNativeReanimated.default.block;\n\n  var useConst = function useConst(initialValue) {\n    var ref = (0, _react.useRef)();\n\n    if (ref.current === undefined) {\n      ref.current = {\n        value: typeof initialValue === \"function\" ? initialValue() : initialValue\n      };\n    }\n\n    return ref.current.value;\n  };\n\n  exports.useConst = useConst;\n\n  var useGestureHandler = function useGestureHandler(nativeEvent) {\n    return useConst(function () {\n      return (0, _Gesture.onGestureEvent)(nativeEvent);\n    });\n  };\n\n  exports.useGestureHandler = useGestureHandler;\n\n  var usePanGestureHandler = function usePanGestureHandler() {\n    return useConst(function () {\n      return (0, _Gesture.panGestureHandler)();\n    });\n  };\n\n  exports.usePanGestureHandler = usePanGestureHandler;\n\n  var useRotationGestureHandler = function useRotationGestureHandler() {\n    return useConst(function () {\n      return (0, _Gesture.rotationGestureHandler)();\n    });\n  };\n\n  exports.useRotationGestureHandler = useRotationGestureHandler;\n\n  var usePinchGestureHandler = function usePinchGestureHandler() {\n    return useConst(function () {\n      return (0, _Gesture.pinchGestureHandler)();\n    });\n  };\n\n  exports.usePinchGestureHandler = usePinchGestureHandler;\n\n  var useTapGestureHandler = function useTapGestureHandler() {\n    return useConst(function () {\n      return (0, _Gesture.tapGestureHandler)();\n    });\n  };\n\n  exports.useTapGestureHandler = useTapGestureHandler;\n\n  var useScrollHandler = function useScrollHandler() {\n    return useConst(function () {\n      return (0, _Gesture.scrollHandler)();\n    });\n  };\n\n  exports.useScrollHandler = useScrollHandler;\n\n  var useVector = function useVector() {\n    for (var _len = arguments.length, defaultValues = new Array(_len), _key = 0; _key < _len; _key++) {\n      defaultValues[_key] = arguments[_key];\n    }\n\n    return useConst(function () {\n      return _Vectors.vec.createValue.apply(_Vectors.vec, defaultValues);\n    });\n  };\n\n  exports.useVector = useVector;\n\n  var useVectors = function useVectors() {\n    for (var _len2 = arguments.length, defaultValues = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      defaultValues[_key2] = arguments[_key2];\n    }\n\n    return useConst(function () {\n      return defaultValues.map(function (values) {\n        return _Vectors.vec.createValue.apply(_Vectors.vec, (0, _toConsumableArray2.default)(values));\n      });\n    });\n  };\n\n  exports.useVectors = useVectors;\n\n  var useClock = function useClock() {\n    return useConst(function () {\n      return new Clock();\n    });\n  };\n\n  exports.useClock = useClock;\n\n  var useValue = function useValue(value) {\n    return useConst(function () {\n      return new Value(value);\n    });\n  };\n\n  exports.useValue = useValue;\n\n  var useLoop = function useLoop() {\n    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n    var boomerang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var progress = useValue(0);\n    useCode(function () {\n      return set(progress, (0, _AnimationRunners.loop)({\n        duration: duration,\n        boomerang: boomerang\n      }));\n    }, [progress]);\n    return progress;\n  };\n\n  exports.useLoop = useLoop;\n\n  var useValues = function useValues() {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return useConst(function () {\n      return values.map(function (v) {\n        return new Value(v);\n      });\n    });\n  };\n\n  exports.useValues = useValues;\n\n  var useClocks = function useClocks(numberOfClocks) {\n    return useConst(function () {\n      return new Array(numberOfClocks).fill(0).map(function () {\n        return new Clock();\n      });\n    });\n  };\n\n  exports.useClocks = useClocks;\n\n  var useDiff = function useDiff(node) {\n    var dDiff = useValue(0);\n    useCode(function () {\n      return set(dDiff, diff(node));\n    }, [dDiff, node]);\n    return dDiff;\n  };\n\n  exports.useDiff = useDiff;\n\n  var useDebug = function useDebug(values) {\n    var keys = Object.keys(values);\n    useCode(function () {\n      return block(keys.map(function (name) {\n        return debug(name, values[name]);\n      }));\n    }, [keys, values]);\n  };\n\n  exports.useDebug = useDebug;\n});","lineCount":192,"map":[[9,0,1,0],[11,0,1,73],[13,0,1,119],[15,0,1,145],[17,0,1,276],[19,0,1,303],[21,0,1,340],[21,6,1,344,"Clock"],[21,11,1,349],[21,14,1,350,"Animated"],[21,45,1,359,"Clock"],[21,50,1,340],[22,0,1,340],[22,6,1,365,"Value"],[22,11,1,370],[22,14,1,371,"Animated"],[22,45,1,380,"Value"],[22,50,1,340],[23,0,1,340],[23,6,1,386,"diff"],[23,10,1,390],[23,13,1,391,"Animated"],[23,44,1,400,"diff"],[23,48,1,340],[24,0,1,340],[24,6,1,405,"set"],[24,9,1,408],[24,12,1,409,"Animated"],[24,43,1,418,"set"],[24,46,1,340],[25,0,1,340],[25,6,1,422,"useCode"],[25,13,1,429],[25,16,1,430,"Animated"],[25,47,1,439,"useCode"],[25,54,1,340],[26,0,1,340],[26,6,1,447,"debug"],[26,11,1,452],[26,14,1,453,"Animated"],[26,45,1,462,"debug"],[26,50,1,340],[27,0,1,340],[27,6,1,468,"block"],[27,11,1,473],[27,14,1,474,"Animated"],[27,45,1,483,"block"],[27,50,1,340],[29,0,1,496],[29,6,1,500,"useConst"],[29,14,1,508],[29,17,1,509],[29,26,1,518,"useConst"],[29,34,1,509],[29,35,1,527,"initialValue"],[29,47,1,509],[29,49,1,540],[30,0,1,541],[30,8,1,545,"ref"],[30,11,1,548],[30,14,1,549],[30,34,1,541],[32,0,1,558],[32,8,1,561,"ref"],[32,11,1,564],[32,12,1,565,"current"],[32,19,1,561],[32,24,1,575,"undefined"],[32,33,1,558],[32,35,1,585],[33,0,1,586,"ref"],[33,6,1,586,"ref"],[33,9,1,589],[33,10,1,590,"current"],[33,17,1,586],[33,20,1,598],[34,0,1,599,"value"],[34,8,1,599,"value"],[34,13,1,604],[34,15,1,605],[34,22,1,612,"initialValue"],[34,34,1,605],[34,39,1,627],[34,49,1,605],[34,52,1,638,"initialValue"],[34,64,1,650],[34,66,1,605],[34,69,1,653,"initialValue"],[35,0,1,598],[35,7,1,586],[36,0,1,668],[38,0,1,668],[38,11,1,675,"ref"],[38,14,1,678],[38,15,1,679,"current"],[38,22,1,675],[38,23,1,687,"value"],[38,28,1,668],[39,0,1,694],[39,3,1,496],[43,0,1,702],[43,6,1,706,"useGestureHandler"],[43,23,1,723],[43,26,1,724],[43,35,1,733,"useGestureHandler"],[43,52,1,724],[43,53,1,751,"nativeEvent"],[43,64,1,724],[43,66,1,763],[44,0,1,764],[44,11,1,771,"useConst"],[44,19,1,779],[44,20,1,780],[44,32,1,790],[45,0,1,791],[45,13,1,798],[45,42,1,813,"nativeEvent"],[45,53,1,798],[45,54,1,791],[46,0,1,827],[46,5,1,779],[46,6,1,764],[47,0,1,830],[47,3,1,702],[51,0,1,838],[51,6,1,842,"usePanGestureHandler"],[51,26,1,862],[51,29,1,863],[51,38,1,872,"usePanGestureHandler"],[51,58,1,863],[51,61,1,894],[52,0,1,895],[52,11,1,902,"useConst"],[52,19,1,910],[52,20,1,911],[52,32,1,921],[53,0,1,922],[53,13,1,929],[53,46,1,922],[54,0,1,950],[54,5,1,910],[54,6,1,895],[55,0,1,953],[55,3,1,838],[59,0,1,961],[59,6,1,965,"useRotationGestureHandler"],[59,31,1,990],[59,34,1,991],[59,43,1,1000,"useRotationGestureHandler"],[59,68,1,991],[59,71,1,1027],[60,0,1,1028],[60,11,1,1035,"useConst"],[60,19,1,1043],[60,20,1,1044],[60,32,1,1054],[61,0,1,1055],[61,13,1,1062],[61,51,1,1055],[62,0,1,1088],[62,5,1,1043],[62,6,1,1028],[63,0,1,1091],[63,3,1,961],[67,0,1,1099],[67,6,1,1103,"usePinchGestureHandler"],[67,28,1,1125],[67,31,1,1126],[67,40,1,1135,"usePinchGestureHandler"],[67,62,1,1126],[67,65,1,1159],[68,0,1,1160],[68,11,1,1167,"useConst"],[68,19,1,1175],[68,20,1,1176],[68,32,1,1186],[69,0,1,1187],[69,13,1,1194],[69,48,1,1187],[70,0,1,1217],[70,5,1,1175],[70,6,1,1160],[71,0,1,1220],[71,3,1,1099],[75,0,1,1228],[75,6,1,1232,"useTapGestureHandler"],[75,26,1,1252],[75,29,1,1253],[75,38,1,1262,"useTapGestureHandler"],[75,58,1,1253],[75,61,1,1284],[76,0,1,1285],[76,11,1,1292,"useConst"],[76,19,1,1300],[76,20,1,1301],[76,32,1,1311],[77,0,1,1312],[77,13,1,1319],[77,46,1,1312],[78,0,1,1340],[78,5,1,1300],[78,6,1,1285],[79,0,1,1343],[79,3,1,1228],[83,0,1,1351],[83,6,1,1355,"useScrollHandler"],[83,22,1,1371],[83,25,1,1372],[83,34,1,1381,"useScrollHandler"],[83,50,1,1372],[83,53,1,1399],[84,0,1,1400],[84,11,1,1407,"useConst"],[84,19,1,1415],[84,20,1,1416],[84,32,1,1426],[85,0,1,1427],[85,13,1,1434],[85,42,1,1427],[86,0,1,1451],[86,5,1,1415],[86,6,1,1400],[87,0,1,1454],[87,3,1,1351],[91,0,1,1462],[91,6,1,1466,"useVector"],[91,15,1,1475],[91,18,1,1476],[91,27,1,1485,"useVector"],[91,36,1,1476],[91,39,1,1496],[92,0,1,1497],[92,9,1,1501],[92,13,1,1505,"_len"],[92,17,1,1509],[92,20,1,1510,"arguments"],[92,29,1,1519],[92,30,1,1520,"length"],[92,36,1,1501],[92,38,1,1527,"defaultValues"],[92,51,1,1540],[92,54,1,1541],[92,58,1,1545,"Array"],[92,63,1,1541],[92,64,1,1551,"_len"],[92,68,1,1541],[92,69,1,1501],[92,71,1,1557,"_key"],[92,75,1,1561],[92,78,1,1562],[92,79,1,1497],[92,81,1,1564,"_key"],[92,85,1,1568],[92,88,1,1569,"_len"],[92,92,1,1497],[92,94,1,1574,"_key"],[92,98,1,1578],[92,100,1,1497],[92,102,1,1581],[93,0,1,1582,"defaultValues"],[93,6,1,1582,"defaultValues"],[93,19,1,1595],[93,20,1,1596,"_key"],[93,24,1,1595],[93,25,1,1582],[93,28,1,1602,"arguments"],[93,37,1,1611],[93,38,1,1612,"_key"],[93,42,1,1611],[93,43,1,1582],[94,0,1,1619],[96,0,1,1619],[96,11,1,1626,"useConst"],[96,19,1,1634],[96,20,1,1635],[96,32,1,1645],[97,0,1,1646],[97,13,1,1653,"vec"],[97,26,1,1657,"createValue"],[97,37,1,1653],[97,38,1,1669,"apply"],[97,43,1,1653],[97,44,1,1675,"vec"],[97,56,1,1653],[97,58,1,1679,"defaultValues"],[97,71,1,1653],[97,72,1,1646],[98,0,1,1695],[98,5,1,1634],[98,6,1,1619],[99,0,1,1698],[99,3,1,1462],[103,0,1,1706],[103,6,1,1710,"useVectors"],[103,16,1,1720],[103,19,1,1721],[103,28,1,1730,"useVectors"],[103,38,1,1721],[103,41,1,1742],[104,0,1,1743],[104,9,1,1747],[104,13,1,1751,"_len2"],[104,18,1,1756],[104,21,1,1757,"arguments"],[104,30,1,1766],[104,31,1,1767,"length"],[104,37,1,1747],[104,39,1,1774,"defaultValues"],[104,52,1,1787],[104,55,1,1788],[104,59,1,1792,"Array"],[104,64,1,1788],[104,65,1,1798,"_len2"],[104,70,1,1788],[104,71,1,1747],[104,73,1,1805,"_key2"],[104,78,1,1810],[104,81,1,1811],[104,82,1,1743],[104,84,1,1813,"_key2"],[104,89,1,1818],[104,92,1,1819,"_len2"],[104,97,1,1743],[104,99,1,1825,"_key2"],[104,104,1,1830],[104,106,1,1743],[104,108,1,1833],[105,0,1,1834,"defaultValues"],[105,6,1,1834,"defaultValues"],[105,19,1,1847],[105,20,1,1848,"_key2"],[105,25,1,1847],[105,26,1,1834],[105,29,1,1855,"arguments"],[105,38,1,1864],[105,39,1,1865,"_key2"],[105,44,1,1864],[105,45,1,1834],[106,0,1,1873],[108,0,1,1873],[108,11,1,1880,"useConst"],[108,19,1,1888],[108,20,1,1889],[108,32,1,1899],[109,0,1,1900],[109,13,1,1907,"defaultValues"],[109,26,1,1920],[109,27,1,1921,"map"],[109,30,1,1907],[109,31,1,1925],[109,41,1,1934,"values"],[109,47,1,1925],[109,49,1,1941],[110,0,1,1942],[110,15,1,1949,"vec"],[110,28,1,1953,"createValue"],[110,39,1,1949],[110,40,1,1965,"apply"],[110,45,1,1949],[110,46,1,1971,"vec"],[110,58,1,1949],[110,60,1,1975],[110,93,1,1994,"values"],[110,99,1,1975],[110,100,1,1949],[110,101,1,1942],[111,0,1,2004],[111,7,1,1907],[111,8,1,1900],[112,0,1,2007],[112,5,1,1888],[112,6,1,1873],[113,0,1,2010],[113,3,1,1706],[117,0,1,2018],[117,6,1,2022,"useClock"],[117,14,1,2030],[117,17,1,2031],[117,26,1,2040,"useClock"],[117,34,1,2031],[117,37,1,2050],[118,0,1,2051],[118,11,1,2058,"useConst"],[118,19,1,2066],[118,20,1,2067],[118,32,1,2077],[119,0,1,2078],[119,13,1,2085],[119,17,1,2089,"Clock"],[119,22,1,2085],[119,24,1,2078],[120,0,1,2098],[120,5,1,2066],[120,6,1,2051],[121,0,1,2101],[121,3,1,2018],[125,0,1,2109],[125,6,1,2113,"useValue"],[125,14,1,2121],[125,17,1,2122],[125,26,1,2131,"useValue"],[125,34,1,2122],[125,35,1,2140,"value"],[125,40,1,2122],[125,42,1,2146],[126,0,1,2147],[126,11,1,2154,"useConst"],[126,19,1,2162],[126,20,1,2163],[126,32,1,2173],[127,0,1,2174],[127,13,1,2181],[127,17,1,2185,"Value"],[127,22,1,2181],[127,23,1,2191,"value"],[127,28,1,2181],[127,29,1,2174],[128,0,1,2199],[128,5,1,2162],[128,6,1,2147],[129,0,1,2202],[129,3,1,2109],[133,0,1,2210],[133,6,1,2214,"useLoop"],[133,13,1,2221],[133,16,1,2222],[133,25,1,2231,"useLoop"],[133,32,1,2222],[133,35,1,2240],[134,0,1,2241],[134,8,1,2245,"duration"],[134,16,1,2253],[134,19,1,2254,"arguments"],[134,28,1,2263],[134,29,1,2264,"length"],[134,35,1,2254],[134,38,1,2271],[134,39,1,2254],[134,43,1,2274,"arguments"],[134,52,1,2283],[134,53,1,2284],[134,54,1,2283],[134,55,1,2274],[134,60,1,2289,"undefined"],[134,69,1,2254],[134,72,1,2299,"arguments"],[134,81,1,2308],[134,82,1,2309],[134,83,1,2308],[134,84,1,2254],[134,87,1,2312],[134,91,1,2241],[135,0,1,2317],[135,8,1,2321,"boomerang"],[135,17,1,2330],[135,20,1,2331,"arguments"],[135,29,1,2340],[135,30,1,2341,"length"],[135,36,1,2331],[135,39,1,2348],[135,40,1,2331],[135,44,1,2351,"arguments"],[135,53,1,2360],[135,54,1,2361],[135,55,1,2360],[135,56,1,2351],[135,61,1,2366,"undefined"],[135,70,1,2331],[135,73,1,2376,"arguments"],[135,82,1,2385],[135,83,1,2386],[135,84,1,2385],[135,85,1,2331],[135,88,1,2389],[135,92,1,2317],[136,0,1,2394],[136,8,1,2398,"progress"],[136,16,1,2406],[136,19,1,2407,"useValue"],[136,27,1,2415],[136,28,1,2416],[136,29,1,2415],[136,30,1,2394],[137,0,1,2419,"useCode"],[137,4,1,2419,"useCode"],[137,11,1,2426],[137,12,1,2427],[137,24,1,2437],[138,0,1,2438],[138,13,1,2445,"set"],[138,16,1,2448],[138,17,1,2449,"progress"],[138,25,1,2448],[138,27,1,2458],[138,55,1,2463],[139,0,1,2464,"duration"],[139,8,1,2464,"duration"],[139,16,1,2472],[139,18,1,2473,"duration"],[139,26,1,2463],[140,0,1,2482,"boomerang"],[140,8,1,2482,"boomerang"],[140,17,1,2491],[140,19,1,2492,"boomerang"],[141,0,1,2463],[141,7,1,2458],[141,8,1,2448],[141,9,1,2438],[142,0,1,2506],[142,5,1,2426],[142,7,1,2507],[142,8,1,2508,"progress"],[142,16,1,2507],[142,17,1,2426],[142,18,1,2419],[143,0,1,2519],[143,11,1,2526,"progress"],[143,19,1,2519],[144,0,1,2536],[144,3,1,2210],[148,0,1,2544],[148,6,1,2548,"useValues"],[148,15,1,2557],[148,18,1,2558],[148,27,1,2567,"useValues"],[148,36,1,2558],[148,39,1,2578],[149,0,1,2579],[149,9,1,2583],[149,13,1,2587,"_len3"],[149,18,1,2592],[149,21,1,2593,"arguments"],[149,30,1,2602],[149,31,1,2603,"length"],[149,37,1,2583],[149,39,1,2610,"values"],[149,45,1,2616],[149,48,1,2617],[149,52,1,2621,"Array"],[149,57,1,2617],[149,58,1,2627,"_len3"],[149,63,1,2617],[149,64,1,2583],[149,66,1,2634,"_key3"],[149,71,1,2639],[149,74,1,2640],[149,75,1,2579],[149,77,1,2642,"_key3"],[149,82,1,2647],[149,85,1,2648,"_len3"],[149,90,1,2579],[149,92,1,2654,"_key3"],[149,97,1,2659],[149,99,1,2579],[149,101,1,2662],[150,0,1,2663,"values"],[150,6,1,2663,"values"],[150,12,1,2669],[150,13,1,2670,"_key3"],[150,18,1,2669],[150,19,1,2663],[150,22,1,2677,"arguments"],[150,31,1,2686],[150,32,1,2687,"_key3"],[150,37,1,2686],[150,38,1,2663],[151,0,1,2695],[153,0,1,2695],[153,11,1,2702,"useConst"],[153,19,1,2710],[153,20,1,2711],[153,32,1,2721],[154,0,1,2722],[154,13,1,2729,"values"],[154,19,1,2735],[154,20,1,2736,"map"],[154,23,1,2729],[154,24,1,2740],[154,34,1,2749,"v"],[154,35,1,2740],[154,37,1,2751],[155,0,1,2752],[155,15,1,2759],[155,19,1,2763,"Value"],[155,24,1,2759],[155,25,1,2769,"v"],[155,26,1,2759],[155,27,1,2752],[156,0,1,2773],[156,7,1,2729],[156,8,1,2722],[157,0,1,2776],[157,5,1,2710],[157,6,1,2695],[158,0,1,2779],[158,3,1,2544],[162,0,1,2787],[162,6,1,2791,"useClocks"],[162,15,1,2800],[162,18,1,2801],[162,27,1,2810,"useClocks"],[162,36,1,2801],[162,37,1,2820,"numberOfClocks"],[162,51,1,2801],[162,53,1,2835],[163,0,1,2836],[163,11,1,2843,"useConst"],[163,19,1,2851],[163,20,1,2852],[163,32,1,2862],[164,0,1,2863],[164,13,1,2870],[164,17,1,2874,"Array"],[164,22,1,2870],[164,23,1,2880,"numberOfClocks"],[164,37,1,2870],[164,39,1,2896,"fill"],[164,43,1,2870],[164,44,1,2901],[164,45,1,2870],[164,47,1,2904,"map"],[164,50,1,2870],[164,51,1,2908],[164,63,1,2918],[165,0,1,2919],[165,15,1,2926],[165,19,1,2930,"Clock"],[165,24,1,2926],[165,26,1,2919],[166,0,1,2939],[166,7,1,2870],[166,8,1,2863],[167,0,1,2942],[167,5,1,2851],[167,6,1,2836],[168,0,1,2945],[168,3,1,2787],[172,0,1,2953],[172,6,1,2957,"useDiff"],[172,13,1,2964],[172,16,1,2965],[172,25,1,2974,"useDiff"],[172,32,1,2965],[172,33,1,2982,"node"],[172,37,1,2965],[172,39,1,2987],[173,0,1,2988],[173,8,1,2992,"dDiff"],[173,13,1,2997],[173,16,1,2998,"useValue"],[173,24,1,3006],[173,25,1,3007],[173,26,1,3006],[173,27,1,2988],[174,0,1,3010,"useCode"],[174,4,1,3010,"useCode"],[174,11,1,3017],[174,12,1,3018],[174,24,1,3028],[175,0,1,3029],[175,13,1,3036,"set"],[175,16,1,3039],[175,17,1,3040,"dDiff"],[175,22,1,3039],[175,24,1,3046,"diff"],[175,28,1,3050],[175,29,1,3051,"node"],[175,33,1,3050],[175,34,1,3039],[175,35,1,3029],[176,0,1,3059],[176,5,1,3017],[176,7,1,3060],[176,8,1,3061,"dDiff"],[176,13,1,3060],[176,15,1,3067,"node"],[176,19,1,3060],[176,20,1,3017],[176,21,1,3010],[177,0,1,3074],[177,11,1,3081,"dDiff"],[177,16,1,3074],[178,0,1,3088],[178,3,1,2953],[182,0,1,3096],[182,6,1,3100,"useDebug"],[182,14,1,3108],[182,17,1,3109],[182,26,1,3118,"useDebug"],[182,34,1,3109],[182,35,1,3127,"values"],[182,41,1,3109],[182,43,1,3134],[183,0,1,3135],[183,8,1,3139,"keys"],[183,12,1,3143],[183,15,1,3144,"Object"],[183,21,1,3150],[183,22,1,3151,"keys"],[183,26,1,3144],[183,27,1,3156,"values"],[183,33,1,3144],[183,34,1,3135],[184,0,1,3164,"useCode"],[184,4,1,3164,"useCode"],[184,11,1,3171],[184,12,1,3172],[184,24,1,3182],[185,0,1,3183],[185,13,1,3190,"block"],[185,18,1,3195],[185,19,1,3196,"keys"],[185,23,1,3200],[185,24,1,3201,"map"],[185,27,1,3196],[185,28,1,3205],[185,38,1,3214,"name"],[185,42,1,3205],[185,44,1,3219],[186,0,1,3220],[186,15,1,3227,"debug"],[186,20,1,3232],[186,21,1,3233,"name"],[186,25,1,3232],[186,27,1,3238,"values"],[186,33,1,3244],[186,34,1,3245,"name"],[186,38,1,3244],[186,39,1,3232],[186,40,1,3220],[187,0,1,3253],[187,7,1,3196],[187,8,1,3195],[187,9,1,3183],[188,0,1,3257],[188,5,1,3171],[188,7,1,3258],[188,8,1,3259,"keys"],[188,12,1,3258],[188,14,1,3264,"values"],[188,20,1,3258],[188,21,1,3171],[188,22,1,3164],[189,0,1,3274],[189,3,1,3096]],"functionMap":{"names":["<global>","useConst","useGestureHandler","useConst$argument_0","usePanGestureHandler","useRotationGestureHandler","usePinchGestureHandler","useTapGestureHandler","useScrollHandler","useVector","useVectors","defaultValues.map$argument_0","useClock","useValue","useLoop","useCode$argument_0","useValues","values.map$argument_0","useClocks","Array.fill.map$argument_0","useDiff","useDebug","keys.map$argument_0"],"mappings":"AAA,6fC,yLD,8BE,wDC,+CD,GF,iCI,gDD,uCC,GJ,sCK,qDF,4CE,GL,mCM,kDH,yCG,GN,iCO,gDJ,uCI,GP,6BQ,4CL,mCK,GR,sBS,+JN,4DM,GT,uBU,wKP,oCQ,+ER,GO,GV,qBY,oCT,+BS,GZ,qBa,yCV,oCU,Gb,oBc,6MC,+ED,8Bd,sBgB,yJb,6Bc,iCd,Ga,GhB,sBkB,mDf,wDgB,+BhB,Ge,GlB,oBoB,qDL,yCK,6BpB,qBqB,+DN,iCO,gDP,IM,iBrB"}},"type":"js/module"}]}