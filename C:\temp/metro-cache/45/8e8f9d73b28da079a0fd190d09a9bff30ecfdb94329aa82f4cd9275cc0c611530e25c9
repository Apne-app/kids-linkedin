{"dependencies":[{"name":"./_curryN","data":{"isAsync":false}},{"name":"./_has","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curryN = _$$_REQUIRE(_dependencyMap[0], \"./_curryN\");\n\n  var _has = _$$_REQUIRE(_dependencyMap[1], \"./_has\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XReduceBy = function () {\n    function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n      this.valueFn = valueFn;\n      this.valueAcc = valueAcc;\n      this.keyFn = keyFn;\n      this.xf = xf;\n      this.inputs = {};\n    }\n\n    XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n    XReduceBy.prototype['@@transducer/result'] = function (result) {\n      var key;\n\n      for (key in this.inputs) {\n        if (_has(key, this.inputs)) {\n          result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n          if (result['@@transducer/reduced']) {\n            result = result['@@transducer/value'];\n            break;\n          }\n        }\n      }\n\n      this.inputs = null;\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n      var key = this.keyFn(input);\n      this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n      this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n      return result;\n    };\n\n    return XReduceBy;\n  }();\n\n  var _xreduceBy = _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  });\n\n  module.exports = _xreduceBy;\n});","lineCount":52,"map":[[2,0,1,0],[2,6,1,4,"_curryN"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_has"],[4,10,5,8],[4,13,7,0,"require"],[4,24,7,7],[4,53,5,0],[6,0,9,0],[6,6,9,4,"_xfBase"],[6,13,9,11],[6,16,11,0,"require"],[6,27,11,7],[6,59,9,0],[8,0,13,0],[8,6,13,4,"XReduceBy"],[8,15,13,13],[8,18,15,0],[8,30,15,12],[9,0,16,2],[9,13,16,11,"XReduceBy"],[9,22,16,2],[9,23,16,21,"valueFn"],[9,30,16,2],[9,32,16,30,"valueAcc"],[9,40,16,2],[9,42,16,40,"keyFn"],[9,47,16,2],[9,49,16,47,"xf"],[9,51,16,2],[9,53,16,51],[10,0,17,4],[10,11,17,9,"valueFn"],[10,18,17,4],[10,21,17,19,"valueFn"],[10,28,17,4],[11,0,18,4],[11,11,18,9,"valueAcc"],[11,19,18,4],[11,22,18,20,"valueAcc"],[11,30,18,4],[12,0,19,4],[12,11,19,9,"keyFn"],[12,16,19,4],[12,19,19,17,"keyFn"],[12,24,19,4],[13,0,20,4],[13,11,20,9,"xf"],[13,13,20,4],[13,16,20,14,"xf"],[13,18,20,4],[14,0,21,4],[14,11,21,9,"inputs"],[14,17,21,4],[14,20,21,18],[14,22,21,4],[15,0,22,3],[17,0,24,2,"XReduceBy"],[17,4,24,2,"XReduceBy"],[17,13,24,11],[17,14,24,12,"prototype"],[17,23,24,2],[17,24,24,22],[17,43,24,2],[17,47,24,45,"_xfBase"],[17,54,24,52],[17,55,24,53,"init"],[17,59,24,2],[19,0,26,2,"XReduceBy"],[19,4,26,2,"XReduceBy"],[19,13,26,11],[19,14,26,12,"prototype"],[19,23,26,2],[19,24,26,22],[19,45,26,2],[19,49,26,47],[19,59,26,57,"result"],[19,65,26,47],[19,67,26,65],[20,0,27,4],[20,10,27,8,"key"],[20,13,27,4],[22,0,29,4],[22,11,29,9,"key"],[22,14,29,4],[22,18,29,16],[22,23,29,21,"inputs"],[22,29,29,4],[22,31,29,29],[23,0,30,6],[23,12,30,10,"_has"],[23,16,30,14],[23,17,30,15,"key"],[23,20,30,14],[23,22,30,20],[23,27,30,25,"inputs"],[23,33,30,14],[23,34,30,6],[23,36,30,34],[24,0,31,8,"result"],[24,10,31,8,"result"],[24,16,31,14],[24,19,31,17],[24,24,31,22,"xf"],[24,26,31,17],[24,27,31,25],[24,46,31,17],[24,48,31,46,"result"],[24,54,31,17],[24,56,31,54],[24,61,31,59,"inputs"],[24,67,31,54],[24,68,31,66,"key"],[24,71,31,54],[24,72,31,17],[24,73,31,8],[26,0,33,8],[26,14,33,12,"result"],[26,20,33,18],[26,21,33,19],[26,43,33,18],[26,44,33,8],[26,46,33,44],[27,0,34,10,"result"],[27,12,34,10,"result"],[27,18,34,16],[27,21,34,19,"result"],[27,27,34,25],[27,28,34,26],[27,48,34,25],[27,49,34,10],[28,0,35,10],[29,0,36,9],[30,0,37,7],[31,0,38,5],[33,0,40,4],[33,11,40,9,"inputs"],[33,17,40,4],[33,20,40,18],[33,24,40,4],[34,0,41,4],[34,13,41,11],[34,18,41,16,"xf"],[34,20,41,11],[34,21,41,19],[34,42,41,11],[34,44,41,42,"result"],[34,50,41,11],[34,51,41,4],[35,0,42,3],[35,5,26,2],[37,0,44,2,"XReduceBy"],[37,4,44,2,"XReduceBy"],[37,13,44,11],[37,14,44,12,"prototype"],[37,23,44,2],[37,24,44,22],[37,43,44,2],[37,47,44,45],[37,57,44,55,"result"],[37,63,44,45],[37,65,44,63,"input"],[37,70,44,45],[37,72,44,70],[38,0,45,4],[38,10,45,8,"key"],[38,13,45,11],[38,16,45,14],[38,21,45,19,"keyFn"],[38,26,45,14],[38,27,45,25,"input"],[38,32,45,14],[38,33,45,4],[39,0,46,4],[39,11,46,9,"inputs"],[39,17,46,4],[39,18,46,16,"key"],[39,21,46,4],[39,25,46,23],[39,30,46,28,"inputs"],[39,36,46,23],[39,37,46,35,"key"],[39,40,46,23],[39,45,46,43],[39,46,46,44,"key"],[39,49,46,43],[39,51,46,49],[39,56,46,54,"valueAcc"],[39,64,46,43],[39,65,46,4],[40,0,47,4],[40,11,47,9,"inputs"],[40,17,47,4],[40,18,47,16,"key"],[40,21,47,4],[40,23,47,21],[40,24,47,4],[40,28,47,26],[40,33,47,31,"valueFn"],[40,40,47,26],[40,41,47,39],[40,46,47,44,"inputs"],[40,52,47,39],[40,53,47,51,"key"],[40,56,47,39],[40,58,47,56],[40,59,47,39],[40,60,47,26],[40,62,47,60,"input"],[40,67,47,26],[40,68,47,4],[41,0,48,4],[41,13,48,11,"result"],[41,19,48,4],[42,0,49,3],[42,5,44,2],[44,0,51,2],[44,11,51,9,"XReduceBy"],[44,20,51,2],[45,0,52,1],[45,3,15,0],[45,5,13,0],[47,0,54,0],[47,6,54,4,"_xreduceBy"],[47,16,54,14],[47,19,56,0,"_curryN"],[47,26,56,7],[47,27,56,8],[47,28,56,7],[47,30,56,11],[47,32,56,7],[47,34,56,15],[47,43,56,24,"_xreduceBy"],[47,53,56,15],[47,54,56,35,"valueFn"],[47,61,56,15],[47,63,56,44,"valueAcc"],[47,71,56,15],[47,73,56,54,"keyFn"],[47,78,56,15],[47,80,56,61,"xf"],[47,82,56,15],[47,84,56,65],[48,0,57,2],[48,11,57,9],[48,15,57,13,"XReduceBy"],[48,24,57,9],[48,25,57,23,"valueFn"],[48,32,57,9],[48,34,57,32,"valueAcc"],[48,42,57,9],[48,44,57,42,"keyFn"],[48,49,57,9],[48,51,57,49,"xf"],[48,53,57,9],[48,54,57,2],[49,0,58,1],[49,3,56,7],[49,4,54,0],[51,0,60,0,"module"],[51,2,60,0,"module"],[51,8,60,6],[51,9,60,7,"exports"],[51,16,60,0],[51,19,60,17,"_xreduceBy"],[51,29,60,0]],"functionMap":{"names":["<global>","<anonymous>","XReduceBy","XReduceBy.prototype.transducerResult","XReduceBy.prototype.transducerStep","_xreduceBy"],"mappings":"AAA;ACc;ECC;GDM;+CEI;GFgB;6CGE;GHK;CDG;eKI;CLE"}},"type":"js/module"}]}