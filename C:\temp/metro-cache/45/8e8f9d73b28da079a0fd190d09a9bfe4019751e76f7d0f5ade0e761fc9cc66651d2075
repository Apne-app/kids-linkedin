{"dependencies":[{"name":"./_curryN","data":{"isAsync":false}},{"name":"./_has","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curryN = _$$_REQUIRE(_dependencyMap[0], \"./_curryN\");\n\n  var _has = _$$_REQUIRE(_dependencyMap[1], \"./_has\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XReduceBy = function () {\n    function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n      this.valueFn = valueFn;\n      this.valueAcc = valueAcc;\n      this.keyFn = keyFn;\n      this.xf = xf;\n      this.inputs = {};\n    }\n\n    XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n    XReduceBy.prototype['@@transducer/result'] = function (result) {\n      var key;\n\n      for (key in this.inputs) {\n        if (_has(key, this.inputs)) {\n          result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n          if (result['@@transducer/reduced']) {\n            result = result['@@transducer/value'];\n            break;\n          }\n        }\n      }\n\n      this.inputs = null;\n      return this.xf['@@transducer/result'](result);\n    };\n\n    XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n      var key = this.keyFn(input);\n      this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n      this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n      return result;\n    };\n\n    return XReduceBy;\n  }();\n\n  var _xreduceBy = _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  });\n\n  module.exports = _xreduceBy;\n});","lineCount":52,"map":[[2,0,1,0],[2,6,1,4,"_curryN"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_has"],[4,10,3,8],[4,13,3,24,"require"],[4,24,3,31],[4,53,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XReduceBy"],[8,15,7,13],[8,18,7,29],[8,30,7,41],[9,0,9,2],[9,13,9,11,"XReduceBy"],[9,22,9,2],[9,23,9,21,"valueFn"],[9,30,9,2],[9,32,9,30,"valueAcc"],[9,40,9,2],[9,42,9,40,"keyFn"],[9,47,9,2],[9,49,9,47,"xf"],[9,51,9,2],[9,53,9,51],[10,0,10,4],[10,11,10,9,"valueFn"],[10,18,10,4],[10,21,10,19,"valueFn"],[10,28,10,4],[11,0,11,4],[11,11,11,9,"valueAcc"],[11,19,11,4],[11,22,11,20,"valueAcc"],[11,30,11,4],[12,0,12,4],[12,11,12,9,"keyFn"],[12,16,12,4],[12,19,12,17,"keyFn"],[12,24,12,4],[13,0,13,4],[13,11,13,9,"xf"],[13,13,13,4],[13,16,13,14,"xf"],[13,18,13,4],[14,0,14,4],[14,11,14,9,"inputs"],[14,17,14,4],[14,20,14,18],[14,22,14,4],[15,0,15,3],[17,0,16,2,"XReduceBy"],[17,4,16,2,"XReduceBy"],[17,13,16,11],[17,14,16,12,"prototype"],[17,23,16,2],[17,24,16,22],[17,43,16,2],[17,47,16,45,"_xfBase"],[17,54,16,52],[17,55,16,53,"init"],[17,59,16,2],[19,0,17,2,"XReduceBy"],[19,4,17,2,"XReduceBy"],[19,13,17,11],[19,14,17,12,"prototype"],[19,23,17,2],[19,24,17,22],[19,45,17,2],[19,49,17,47],[19,59,17,57,"result"],[19,65,17,47],[19,67,17,65],[20,0,18,4],[20,10,18,8,"key"],[20,13,18,4],[22,0,19,4],[22,11,19,9,"key"],[22,14,19,4],[22,18,19,16],[22,23,19,21,"inputs"],[22,29,19,4],[22,31,19,29],[23,0,20,6],[23,12,20,10,"_has"],[23,16,20,14],[23,17,20,15,"key"],[23,20,20,14],[23,22,20,20],[23,27,20,25,"inputs"],[23,33,20,14],[23,34,20,6],[23,36,20,34],[24,0,21,8,"result"],[24,10,21,8,"result"],[24,16,21,14],[24,19,21,17],[24,24,21,22,"xf"],[24,26,21,17],[24,27,21,25],[24,46,21,17],[24,48,21,46,"result"],[24,54,21,17],[24,56,21,54],[24,61,21,59,"inputs"],[24,67,21,54],[24,68,21,66,"key"],[24,71,21,54],[24,72,21,17],[24,73,21,8],[26,0,22,8],[26,14,22,12,"result"],[26,20,22,18],[26,21,22,19],[26,43,22,18],[26,44,22,8],[26,46,22,44],[27,0,23,10,"result"],[27,12,23,10,"result"],[27,18,23,16],[27,21,23,19,"result"],[27,27,23,25],[27,28,23,26],[27,48,23,25],[27,49,23,10],[28,0,24,10],[29,0,25,9],[30,0,26,7],[31,0,27,5],[33,0,28,4],[33,11,28,9,"inputs"],[33,17,28,4],[33,20,28,18],[33,24,28,4],[34,0,29,4],[34,13,29,11],[34,18,29,16,"xf"],[34,20,29,11],[34,21,29,19],[34,42,29,11],[34,44,29,42,"result"],[34,50,29,11],[34,51,29,4],[35,0,30,3],[35,5,17,2],[37,0,31,2,"XReduceBy"],[37,4,31,2,"XReduceBy"],[37,13,31,11],[37,14,31,12,"prototype"],[37,23,31,2],[37,24,31,22],[37,43,31,2],[37,47,31,45],[37,57,31,55,"result"],[37,63,31,45],[37,65,31,63,"input"],[37,70,31,45],[37,72,31,70],[38,0,32,4],[38,10,32,8,"key"],[38,13,32,11],[38,16,32,14],[38,21,32,19,"keyFn"],[38,26,32,14],[38,27,32,25,"input"],[38,32,32,14],[38,33,32,4],[39,0,33,4],[39,11,33,9,"inputs"],[39,17,33,4],[39,18,33,16,"key"],[39,21,33,4],[39,25,33,23],[39,30,33,28,"inputs"],[39,36,33,23],[39,37,33,35,"key"],[39,40,33,23],[39,45,33,43],[39,46,33,44,"key"],[39,49,33,43],[39,51,33,49],[39,56,33,54,"valueAcc"],[39,64,33,43],[39,65,33,4],[40,0,34,4],[40,11,34,9,"inputs"],[40,17,34,4],[40,18,34,16,"key"],[40,21,34,4],[40,23,34,21],[40,24,34,4],[40,28,34,26],[40,33,34,31,"valueFn"],[40,40,34,26],[40,41,34,39],[40,46,34,44,"inputs"],[40,52,34,39],[40,53,34,51,"key"],[40,56,34,39],[40,58,34,56],[40,59,34,39],[40,60,34,26],[40,62,34,60,"input"],[40,67,34,26],[40,68,34,4],[41,0,35,4],[41,13,35,11,"result"],[41,19,35,4],[42,0,36,3],[42,5,31,2],[44,0,38,2],[44,11,38,9,"XReduceBy"],[44,20,38,2],[45,0,39,1],[45,3,7,29],[45,5,7,0],[47,0,41,0],[47,6,41,4,"_xreduceBy"],[47,16,41,14],[47,19,41,30,"_curryN"],[47,26,41,37],[47,27,41,38],[47,28,41,37],[47,30,41,41],[47,32,41,37],[47,34,41,45],[47,43,41,54,"_xreduceBy"],[47,53,41,45],[47,54,41,65,"valueFn"],[47,61,41,45],[47,63,41,74,"valueAcc"],[47,71,41,45],[47,73,41,84,"keyFn"],[47,78,41,45],[47,80,41,91,"xf"],[47,82,41,45],[47,84,41,95],[48,0,42,2],[48,11,42,9],[48,15,42,13,"XReduceBy"],[48,24,42,9],[48,25,42,23,"valueFn"],[48,32,42,9],[48,34,42,32,"valueAcc"],[48,42,42,9],[48,44,42,42,"keyFn"],[48,49,42,9],[48,51,42,49,"xf"],[48,53,42,9],[48,54,42,2],[49,0,43,1],[49,3,41,37],[49,4,41,0],[51,0,44,0,"module"],[51,2,44,0,"module"],[51,8,44,6],[51,9,44,7,"exports"],[51,16,44,0],[51,19,44,17,"_xreduceBy"],[51,29,44,0]],"functionMap":{"names":["<global>","<anonymous>","XReduceBy","XReduceBy.prototype.transducerResult","XReduceBy.prototype.transducerStep","_xreduceBy"],"mappings":"AAA;6BCM;ECE;GDM;+CEE;GFa;6CGC;GHK;CDG;6CKE;CLE"}},"type":"js/module"}]}