{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native/Libraries/Image/resolveAssetSource","data":{"isAsync":false}},{"name":"./xml","data":{"isAsync":false}},{"name":"./css","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getUriFromSource = getUriFromSource;\n  exports.loadLocalRawResourceDefault = loadLocalRawResourceDefault;\n  exports.isUriAnAndroidResourceIdentifier = isUriAnAndroidResourceIdentifier;\n  exports.loadAndroidRawResource = loadAndroidRawResource;\n  exports.loadLocalRawResourceAndroid = loadLocalRawResourceAndroid;\n  exports.LocalSvg = LocalSvg;\n  exports.default = exports.WithLocalSvg = exports.loadLocalRawResource = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/extends\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/regenerator\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[12], \"react-native\");\n\n  var _resolveAssetSource = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native/Libraries/Image/resolveAssetSource\"));\n\n  var _xml = _$$_REQUIRE(_dependencyMap[14], \"./xml\");\n\n  var _css = _$$_REQUIRE(_dependencyMap[15], \"./css\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kids-linkedin/app/kids-linkedin/node_modules/react-native-svg/src/LocalSvg.tsx\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var _ref = _reactNative.NativeModules.RNSVGRenderableManager || {},\n      getRawResource = _ref.getRawResource;\n\n  function getUriFromSource(source) {\n    var resolvedAssetSource = (0, _resolveAssetSource.default)(source);\n    return resolvedAssetSource.uri;\n  }\n\n  function loadLocalRawResourceDefault(source) {\n    var uri = getUriFromSource(source);\n    return (0, _xml.fetchText)(uri);\n  }\n\n  function isUriAnAndroidResourceIdentifier(uri) {\n    return typeof uri === 'string' && uri.indexOf('/') <= -1;\n  }\n\n  function loadAndroidRawResource(uri) {\n    return _regenerator.default.async(function loadAndroidRawResource$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(getRawResource(uri));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error in RawResourceUtils while trying to natively load an Android raw resource: ', _context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  function loadLocalRawResourceAndroid(source) {\n    var uri = getUriFromSource(source);\n\n    if (isUriAnAndroidResourceIdentifier(uri)) {\n      return loadAndroidRawResource(uri);\n    } else {\n      return (0, _xml.fetchText)(uri);\n    }\n  }\n\n  var loadLocalRawResource = _reactNative.Platform.OS !== 'android' ? loadLocalRawResourceDefault : loadLocalRawResourceAndroid;\n  exports.loadLocalRawResource = loadLocalRawResource;\n\n  function LocalSvg(props) {\n    var asset = props.asset,\n        rest = (0, _objectWithoutProperties2.default)(props, [\"asset\"]);\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      loadLocalRawResource(asset).then(setXml);\n    }, [asset]);\n    return _react.default.createElement(_css.SvgCss, (0, _extends2.default)({\n      xml: xml\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }\n    }));\n  }\n\n  var WithLocalSvg = function (_Component) {\n    (0, _inherits2.default)(WithLocalSvg, _Component);\n\n    var _super = _createSuper(WithLocalSvg);\n\n    function WithLocalSvg() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, WithLocalSvg);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        xml: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(WithLocalSvg, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.load(this.props.asset);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var asset = this.props.asset;\n\n        if (asset !== prevProps.asset) {\n          this.load(asset);\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(asset) {\n        return _regenerator.default.async(function load$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!asset) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(loadLocalRawResource(asset));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]], Promise);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(_css.SvgWithCss, {\n          xml: xml,\n          override: props,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 12\n          }\n        });\n      }\n    }]);\n    return WithLocalSvg;\n  }(_react.Component);\n\n  exports.WithLocalSvg = WithLocalSvg;\n  var _default = LocalSvg;\n  exports.default = _default;\n});","lineCount":238,"map":[[35,0,1,0],[37,0,2,0],[39,0,4,0],[41,0,6,0],[43,0,7,0],[51,13,9,27,"NativeModules"],[51,40,9,41,"RNSVGRenderableManager"],[51,62,9,27],[51,66,9,67],[51,68],[52,6,9,8,"getRawResource"],[52,20],[52,28,9,8,"getRawResource"],[52,42],[54,0,11,7],[54,11,11,16,"getUriFromSource"],[54,27,11,7],[54,28,11,33,"source"],[54,34,11,7],[54,36,11,59],[55,0,12,2],[55,8,12,8,"resolvedAssetSource"],[55,27,12,27],[55,30,12,30],[55,63,12,49,"source"],[55,69,12,30],[55,70,12,2],[56,0,13,2],[56,11,13,9,"resolvedAssetSource"],[56,30,13,28],[56,31,13,29,"uri"],[56,34,13,2],[57,0,14,1],[59,0,16,7],[59,11,16,16,"loadLocalRawResourceDefault"],[59,38,16,7],[59,39,16,44,"source"],[59,45,16,7],[59,47,16,70],[60,0,17,2],[60,8,17,8,"uri"],[60,11,17,11],[60,14,17,14,"getUriFromSource"],[60,30,17,30],[60,31,17,31,"source"],[60,37,17,30],[60,38,17,2],[61,0,18,2],[61,11,18,9],[61,31,18,19,"uri"],[61,34,18,9],[61,35,18,2],[62,0,19,1],[64,0,21,7],[64,11,21,16,"isUriAnAndroidResourceIdentifier"],[64,43,21,7],[64,44,21,49,"uri"],[64,47,21,7],[64,49,21,72],[65,0,22,2],[65,11,22,9],[65,18,22,16,"uri"],[65,21,22,9],[65,26,22,24],[65,34,22,9],[65,38,22,36,"uri"],[65,41,22,39],[65,42,22,40,"indexOf"],[65,49,22,36],[65,50,22,48],[65,53,22,36],[65,58,22,56],[65,59,22,57],[65,60,22,2],[66,0,23,1],[68,0,25,7],[68,11,25,22,"loadAndroidRawResource"],[68,33,25,7],[68,34,25,45,"uri"],[68,37,25,7],[69,0,25,7],[70,0,25,7],[71,0,25,7],[72,0,25,7],[73,0,25,7],[74,0,25,7],[75,0,25,7],[75,46,27,17,"getRawResource"],[75,60,27,31],[75,61,27,32,"uri"],[75,64,27,31],[75,65,25,7],[77,0,25,7],[78,0,25,7],[80,0,25,7],[81,0,25,7],[82,0,25,7],[83,0,29,4,"console"],[83,12,29,4,"console"],[83,19,29,11],[83,20,29,12,"error"],[83,25,29,4],[83,26,30,6],[83,109,29,4],[84,0,25,7],[84,45,33,11],[84,49,25,7],[86,0,25,7],[87,0,25,7],[88,0,25,7],[89,0,25,7],[90,0,25,7],[91,0,25,7],[92,0,25,7],[94,0,37,7],[94,11,37,16,"loadLocalRawResourceAndroid"],[94,38,37,7],[94,39,37,44,"source"],[94,45,37,7],[94,47,37,70],[95,0,38,2],[95,8,38,8,"uri"],[95,11,38,11],[95,14,38,14,"getUriFromSource"],[95,30,38,30],[95,31,38,31,"source"],[95,37,38,30],[95,38,38,2],[97,0,39,2],[97,8,39,6,"isUriAnAndroidResourceIdentifier"],[97,40,39,38],[97,41,39,39,"uri"],[97,44,39,38],[97,45,39,2],[97,47,39,45],[98,0,40,4],[98,13,40,11,"loadAndroidRawResource"],[98,35,40,33],[98,36,40,34,"uri"],[98,39,40,33],[98,40,40,4],[99,0,41,3],[99,5,39,2],[99,11,41,9],[100,0,42,4],[100,13,42,11],[100,33,42,21,"uri"],[100,36,42,11],[100,37,42,4],[101,0,43,3],[102,0,44,1],[104,0,46,7],[104,6,46,13,"loadLocalRawResource"],[104,26,46,33],[104,29,47,2,"Platform"],[104,51,47,11,"OS"],[104,53,47,2],[104,58,47,18],[104,67,47,2],[104,70,48,6,"loadLocalRawResourceDefault"],[104,97,47,2],[104,100,49,6,"loadLocalRawResourceAndroid"],[104,127,46,7],[107,0,54,7],[107,11,54,16,"LocalSvg"],[107,19,54,7],[107,20,54,25,"props"],[107,25,54,7],[107,27,54,44],[108,0,54,44],[108,8,55,10,"asset"],[108,13,54,44],[108,16,55,29,"props"],[108,21,54,44],[108,22,55,10,"asset"],[108,27,54,44],[109,0,54,44],[109,8,55,20,"rest"],[109,12,54,44],[109,54,55,29,"props"],[109,59,54,44],[111,0,54,44],[111,20,56,24],[111,41,56,33],[111,45,56,24],[111,46,54,44],[112,0,54,44],[113,0,54,44],[113,8,56,9,"xml"],[113,11,54,44],[114,0,54,44],[114,8,56,14,"setXml"],[114,14,54,44],[116,0,57,2],[116,26,57,12],[116,38,57,18],[117,0,58,4,"loadLocalRawResource"],[117,6,58,4,"loadLocalRawResource"],[117,26,58,24],[117,27,58,25,"asset"],[117,32,58,24],[117,33,58,4],[117,34,58,32,"then"],[117,38,58,4],[117,39,58,37,"setXml"],[117,45,58,4],[118,0,59,3],[118,5,57,2],[118,7,59,5],[118,8,59,6,"asset"],[118,13,59,5],[118,14,57,2],[119,0,60,2],[119,11,60,9],[119,40,60,10],[119,51,60,9],[120,0,60,17],[120,6,60,17],[120,9,60,20],[120,11,60,22,"xml"],[121,0,60,9],[121,7,60,31,"rest"],[121,11,60,9],[122,0,60,9],[123,0,60,9],[124,0,60,9],[125,0,60,9],[126,0,60,9],[127,0,60,9],[128,0,60,9],[128,7,60,2],[129,0,61,1],[131,6,63,13,"WithLocalSvg"],[131,18],[146,12,64,2,"state"],[146,17],[146,20,64,10],[147,0,64,12,"xml"],[147,8,64,12,"xml"],[147,11,64,15],[147,13,64,17],[148,0,64,10],[148,7],[154,42,65,22],[155,0,66,4],[155,13,66,9,"load"],[155,17,66,4],[155,18,66,14],[155,23,66,19,"props"],[155,28,66,14],[155,29,66,25,"asset"],[155,34,66,4],[156,0,67,3],[159,41,68,21,"prevProps"],[159,50],[159,52,68,61],[160,0,68,61],[160,12,69,12,"asset"],[160,17,68,61],[160,20,69,22],[160,25,69,27,"props"],[160,30,68,61],[160,31,69,12,"asset"],[160,36,68,61],[162,0,70,4],[162,12,70,8,"asset"],[162,17,70,13],[162,22,70,18,"prevProps"],[162,31,70,27],[162,32,70,28,"asset"],[162,37,70,4],[162,39,70,35],[163,0,71,6],[163,15,71,11,"load"],[163,19,71,6],[163,20,71,16,"asset"],[163,25,71,6],[164,0,72,5],[165,0,73,3],[168,27,74,13,"asset"],[168,32],[174,31,76,6],[174,35],[176,21,76,27,"asset"],[176,26],[182,50,76,41,"loadLocalRawResource"],[182,70,76,61],[182,71,76,62,"asset"],[182,76,76,61],[182,77],[190,31,76,71],[190,35],[195,0,76,22,"xml"],[195,18,76,22,"xml"],[195,21],[198,29,76,11,"setState"],[198,37],[206,0,78,6,"console"],[206,16,78,6,"console"],[206,23,78,13],[206,24,78,14,"error"],[206,29,78,6],[217,31,81,11],[218,0,81,11],[218,12,83,6,"props"],[218,17,81,11],[218,20,85,8],[218,24,81,11],[218,25,83,6,"props"],[218,30,81,11],[219,0,81,11],[219,12,84,15,"xml"],[219,15,81,11],[219,18,85,8],[219,22,81,11],[219,23,84,6,"state"],[219,28,81,11],[219,29,84,15,"xml"],[219,32,81,11],[220,0,86,4],[220,15,86,11],[220,44,86,12],[220,59,86,11],[221,0,86,23],[221,10,86,23],[221,13,86,26],[221,15,86,28,"xml"],[221,18,86,11],[222,0,86,33],[222,10,86,33],[222,18,86,41],[222,20,86,43,"props"],[222,25,86,11],[223,0,86,11],[224,0,86,11],[225,0,86,11],[226,0,86,11],[227,0,86,11],[228,0,86,11],[229,0,86,11],[229,10,86,4],[230,0,87,3],[233,4,63,34,"Component"],[233,20],[236,17,90,15,"LocalSvg"],[236,25]],"functionMap":{"names":["<global>","getUriFromSource","loadLocalRawResourceDefault","isUriAnAndroidResourceIdentifier","loadAndroidRawResource","loadLocalRawResourceAndroid","LocalSvg","useEffect$argument_0","WithLocalSvg","WithLocalSvg#componentDidMount","WithLocalSvg#componentDidUpdate","WithLocalSvg#load","WithLocalSvg#render"],"mappings":"AAA;OCU;CDG;OEE;CFG;OGE;CHE;OIE;CJU;OKE;CLO;OMU;YCG;GDE;CNE;OQE;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CRC"}},"type":"js/module"}]}