{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-iphone-x-helper","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[9], \"react-native-iphone-x-helper\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/kidsLinkedin/kids-linkedin/node_modules/react-native-sticky-keyboard-accessory/src/index.js\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var KeyboardAccessory = function (_Component) {\n    (0, _inherits2.default)(KeyboardAccessory, _Component);\n\n    var _super = _createSuper(KeyboardAccessory);\n\n    function KeyboardAccessory(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, KeyboardAccessory);\n      _this = _super.call(this, props);\n      _this.state = {\n        bottom: 0\n      };\n\n      if (_reactNative.UIManager.setLayoutAnimationEnabledExperimental) {\n        _reactNative.UIManager.setLayoutAnimationEnabledExperimental(true);\n      }\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(KeyboardAccessory, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var keyboardShowEvent = 'keyboardWillShow';\n        var keyboardHideEvent = 'keyboardWillHide';\n\n        if (_reactNative.Platform.OS === 'android') {\n          keyboardShowEvent = 'keyboardDidShow';\n          keyboardHideEvent = 'keyboardDidHide';\n        }\n\n        this.keyboardShowListener = _reactNative.Keyboard.addListener(keyboardShowEvent, function (e) {\n          return _this2.keyboardShow(e);\n        });\n        this.keyboardHideListener = _reactNative.Keyboard.addListener(keyboardHideEvent, function (e) {\n          return _this2.keyboardHide(e);\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.keyboardShowListener.remove();\n        this.keyboardHideListener.remove();\n      }\n    }, {\n      key: \"keyboardShow\",\n      value: function keyboardShow(e) {\n        _reactNative.LayoutAnimation.easeInEaseOut();\n\n        this.setState({\n          bottom: (0, _reactNativeIphoneXHelper.isIphoneX)() ? e.endCoordinates.height - (0, _reactNativeIphoneXHelper.getBottomSpace)() : e.endCoordinates.height\n        });\n      }\n    }, {\n      key: \"keyboardHide\",\n      value: function keyboardHide(e) {\n        _reactNative.LayoutAnimation.easeInEaseOut();\n\n        this.setState({\n          bottom: 0\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var bottom = this.state.bottom;\n        var _this$props = this.props,\n            children = _this$props.children,\n            backgroundColor = _this$props.backgroundColor,\n            verticalOffset = _this$props.verticalOffset;\n\n        if (bottom !== 0) {\n          bottom = bottom + verticalOffset;\n        }\n\n        if (!children) {\n          throw new Error('`children` Missing. You should wrap at least one component into <KeyboardAccessory />.');\n        }\n\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.container, {\n            backgroundColor: backgroundColor,\n            bottom: bottom\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }\n        }, this.props.children);\n      }\n    }]);\n    return KeyboardAccessory;\n  }(_react.Component);\n\n  exports.default = KeyboardAccessory;\n  KeyboardAccessory.defaultProps = {\n    backgroundColor: '#f6f6f6',\n    verticalOffset: 0\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  });\n});","lineCount":146,"map":[[21,0,1,0],[23,0,2,0],[25,0,10,0],[33,6,12,21,"KeyboardAccessory"],[33,23],[38,0,18,2],[38,31,18,14,"props"],[38,36,18,2],[38,38,18,21],[39,0,18,21],[41,0,18,21],[42,0,19,4],[42,32,19,10,"props"],[42,37,19,4],[43,0,20,4],[43,12,20,9,"state"],[43,17,20,4],[43,20,20,17],[44,0,21,6,"bottom"],[44,8,21,6,"bottom"],[44,14,21,12],[44,16,21,14],[45,0,20,17],[45,7,20,4],[47,0,24,4],[47,10,24,8,"UIManager"],[47,33,24,18,"setLayoutAnimationEnabledExperimental"],[47,70,24,4],[47,72,24,57],[48,0,25,6,"UIManager"],[48,31,25,16,"setLayoutAnimationEnabledExperimental"],[48,68,25,6],[48,69,25,54],[48,73,25,6],[49,0,26,5],[51,0,18,21],[52,0,27,3],[56,42,29,22],[57,0,29,22],[59,0,30,4],[59,12,30,8,"keyboardShowEvent"],[59,29,30,25],[59,32,30,28],[59,50,30,4],[60,0,31,4],[60,12,31,8,"keyboardHideEvent"],[60,29,31,25],[60,32,31,28],[60,50,31,4],[62,0,33,4],[62,12,33,8,"Platform"],[62,34,33,17,"OS"],[62,36,33,8],[62,41,33,24],[62,50,33,4],[62,52,33,35],[63,0,34,6,"keyboardShowEvent"],[63,10,34,6,"keyboardShowEvent"],[63,27,34,23],[63,30,34,26],[63,47,34,6],[64,0,35,6,"keyboardHideEvent"],[64,10,35,6,"keyboardHideEvent"],[64,27,35,23],[64,30,35,26],[64,47,35,6],[65,0,36,5],[67,0,38,4],[67,13,38,9,"keyboardShowListener"],[67,33,38,4],[67,36,38,32,"Keyboard"],[67,58,38,41,"addListener"],[67,69,38,32],[67,70,38,53,"keyboardShowEvent"],[67,87,38,32],[67,89,38,72],[67,99,38,73,"e"],[67,100,38,72],[68,0,38,72],[68,17,38,79],[68,23,38,83],[68,24,38,84,"keyboardShow"],[68,36,38,79],[68,37,38,97,"e"],[68,38,38,79],[68,39,38,72],[69,0,38,72],[69,9,38,32],[69,10,38,4],[70,0,39,4],[70,13,39,9,"keyboardHideListener"],[70,33,39,4],[70,36,39,32,"Keyboard"],[70,58,39,41,"addListener"],[70,69,39,32],[70,70,39,53,"keyboardHideEvent"],[70,87,39,32],[70,89,39,72],[70,99,39,73,"e"],[70,100,39,72],[71,0,39,72],[71,17,39,79],[71,23,39,83],[71,24,39,84,"keyboardHide"],[71,36,39,79],[71,37,39,97,"e"],[71,38,39,79],[71,39,39,72],[72,0,39,72],[72,9,39,32],[72,10,39,4],[73,0,40,3],[76,45,42,25],[77,0,43,4],[77,13,43,9,"keyboardShowListener"],[77,33,43,4],[77,34,43,30,"remove"],[77,40,43,4],[78,0,44,4],[78,13,44,9,"keyboardHideListener"],[78,33,44,4],[78,34,44,30,"remove"],[78,40,44,4],[79,0,45,3],[82,35,47,15,"e"],[82,36],[82,38,47,18],[83,0,48,4,"LayoutAnimation"],[83,37,48,20,"easeInEaseOut"],[83,50,48,4],[85,0,49,4],[85,13,49,9,"setState"],[85,21,49,4],[85,22,49,18],[86,0,50,6,"bottom"],[86,10,50,6,"bottom"],[86,16,50,12],[86,18,50,14],[86,63,50,29,"e"],[86,64,50,30],[86,65,50,31,"endCoordinates"],[86,79,50,29],[86,80,50,46,"height"],[86,86,50,29],[86,89,50,55],[86,136,50,14],[86,139,50,75,"e"],[86,140,50,76],[86,141,50,77,"endCoordinates"],[86,155,50,75],[86,156,50,92,"height"],[87,0,49,18],[87,9,49,4],[88,0,52,3],[91,35,54,15,"e"],[91,36],[91,38,54,18],[92,0,55,4,"LayoutAnimation"],[92,37,55,20,"easeInEaseOut"],[92,50,55,4],[94,0,56,4],[94,13,56,9,"setState"],[94,21,56,4],[94,22,56,18],[95,0,57,6,"bottom"],[95,10,57,6,"bottom"],[95,16,57,12],[95,18,57,14],[96,0,56,18],[96,9,56,4],[97,0,59,3],[100,31,61,11],[101,0,61,11],[101,12,62,10,"bottom"],[101,18,61,11],[101,21,62,21],[101,26,62,26,"state"],[101,31,61,11],[101,32,62,10,"bottom"],[101,38,61,11],[102,0,61,11],[102,26,63,56],[102,31,63,61,"props"],[102,36,61,11],[103,0,61,11],[103,12,63,10,"children"],[103,20,61,11],[103,35,63,10,"children"],[103,43,61,11],[104,0,61,11],[104,12,63,20,"backgroundColor"],[104,27,61,11],[104,42,63,20,"backgroundColor"],[104,57,61,11],[105,0,61,11],[105,12,63,37,"verticalOffset"],[105,26,61,11],[105,41,63,37,"verticalOffset"],[105,55,61,11],[107,0,64,4],[107,12,64,8,"bottom"],[107,18,64,14],[107,23,64,19],[107,24,64,4],[107,26,64,22],[108,0,65,6,"bottom"],[108,10,65,6,"bottom"],[108,16,65,12],[108,19,65,15,"bottom"],[108,25,65,21],[108,28,65,24,"verticalOffset"],[108,42,65,6],[109,0,66,5],[111,0,68,4],[111,12,68,8],[111,13,68,9,"children"],[111,21,68,4],[111,23,68,19],[112,0,69,6],[112,16,69,12],[112,20,69,16,"Error"],[112,25,69,12],[112,26,69,22],[112,114,69,12],[112,115,69,6],[113,0,70,5],[115,0,72,4],[115,15,73,6],[115,44,73,7],[115,61,73,6],[116,0,73,12],[116,10,73,12],[116,15,73,17],[116,17,73,19],[116,18,73,20,"styles"],[116,24,73,26],[116,25,73,27,"container"],[116,34,73,19],[116,36,73,38],[117,0,73,40,"backgroundColor"],[117,12,73,40,"backgroundColor"],[117,27,73,55],[117,29,73,40,"backgroundColor"],[117,44,73,38],[118,0,73,57,"bottom"],[118,12,73,57,"bottom"],[118,18,73,63],[118,20,73,57,"bottom"],[119,0,73,38],[119,11,73,19],[119,12,73,6],[120,0,73,6],[121,0,73,6],[122,0,73,6],[123,0,73,6],[124,0,73,6],[125,0,73,6],[126,0,73,6],[126,11,74,9],[126,16,74,14,"props"],[126,21,74,9],[126,22,74,20,"children"],[126,30,73,6],[126,31,72,4],[127,0,77,3],[130,4,12,47,"Component"],[130,20],[133,0,12,21,"KeyboardAccessory"],[133,2,12,21,"KeyboardAccessory"],[133,19],[133,20,13,9,"defaultProps"],[133,32],[133,35,13,24],[134,0,14,4,"backgroundColor"],[134,4,14,4,"backgroundColor"],[134,19,14,19],[134,21,14,21],[134,30,13,24],[135,0,15,4,"verticalOffset"],[135,4,15,4,"verticalOffset"],[135,18,15,18],[135,20,15,20],[136,0,13,24],[136,3],[138,0,80,0],[138,6,80,6,"styles"],[138,12,80,12],[138,15,80,15,"StyleSheet"],[138,39,80,26,"create"],[138,45,80,15],[138,46,80,33],[139,0,81,2,"container"],[139,4,81,2,"container"],[139,13,81,11],[139,15,81,13],[140,0,82,4,"position"],[140,6,82,4,"position"],[140,14,82,12],[140,16,82,14],[140,26,81,13],[141,0,83,4,"left"],[141,6,83,4,"left"],[141,10,83,8],[141,12,83,10],[141,13,81,13],[142,0,84,4,"right"],[142,6,84,4,"right"],[142,11,84,9],[142,13,84,11],[142,14,81,13],[143,0,85,4,"bottom"],[143,6,85,4,"bottom"],[143,12,85,10],[143,14,85,12],[144,0,81,13],[145,0,80,33],[145,3,80,15],[145,4,80,0]],"functionMap":{"names":["<global>","KeyboardAccessory","KeyboardAccessory#constructor","KeyboardAccessory#componentDidMount","Keyboard.addListener$argument_1","KeyboardAccessory#componentWillUnmount","KeyboardAccessory#keyboardShow","KeyboardAccessory#keyboardHide","KeyboardAccessory#render"],"mappings":"AAA;eCW;ECM;GDS;EEE;wECS,2BD;wECC,2BD;GFC;EIE;GJG;EKE;GLK;EME;GNK;EOE;GPgB;CDC"}},"type":"js/module"}]}