{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./TabRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[5], \"nanoid/non-secure\");\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./TabRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread(_objectSpread({}, _TabRouter.TabActions), {}, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.some(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(_ref) {\n    var openByDefault = _ref.openByDefault,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"openByDefault\"]);\n    var router = (0, _TabRouter.default)(rest);\n    return _objectSpread(_objectSpread({}, router), {}, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (isDrawerOpen(partialState)) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n\n        if (openByDefault) {\n          return openDrawer(result);\n        }\n\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (openByDefault) {\n              if (!isDrawerOpen(state)) {\n                return openDrawer(state);\n              }\n            } else {\n              if (isDrawerOpen(state)) {\n                return closeDrawer(state);\n              }\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":168,"map":[[18,0,1,0],[20,0,8,0],[26,0,61,7],[26,6,61,13,"DrawerActions"],[26,19,61,26],[26,54,62,5,"TabActions"],[26,75,61,26],[27,0,63,2,"openDrawer"],[27,4,63,2,"openDrawer"],[27,14,61,26],[27,38,63,33],[28,0,64,4],[28,13,64,11],[29,0,64,13,"type"],[29,8,64,13,"type"],[29,12,64,17],[29,14,64,19],[30,0,64,11],[30,7,64,4],[31,0,65,3],[31,5,61,26],[32,0,66,2,"closeDrawer"],[32,4,66,2,"closeDrawer"],[32,15,61,26],[32,40,66,34],[33,0,67,4],[33,13,67,11],[34,0,67,13,"type"],[34,8,67,13,"type"],[34,12,67,17],[34,14,67,19],[35,0,67,11],[35,7,67,4],[36,0,68,3],[36,5,61,26],[37,0,69,2,"toggleDrawer"],[37,4,69,2,"toggleDrawer"],[37,16,61,26],[37,42,69,35],[38,0,70,4],[38,13,70,11],[39,0,70,13,"type"],[39,8,70,13,"type"],[39,12,70,17],[39,14,70,19],[40,0,70,11],[40,7,70,4],[41,0,71,3],[42,0,61,26],[42,4,61,7],[46,0,74,0],[46,6,74,6,"isDrawerOpen"],[46,18,74,18],[46,21,74,21],[46,30,74,6,"isDrawerOpen"],[46,42,74,21],[46,43,75,2,"state"],[46,48,74,21],[47,0,74,21],[49,0,74,21],[49,11,78,5,"Boolean"],[49,18,78,12],[49,37,78,13,"state"],[49,42,78,18],[49,43,78,19,"history"],[49,50,78,12],[49,71,78,13],[49,86,78,28,"some"],[49,90,78,13],[49,91,78,33],[49,101,78,34,"it"],[49,103,78,33],[50,0,78,33],[50,13,78,41,"it"],[50,15,78,43],[50,16,78,44,"type"],[50,20,78,41],[50,25,78,53],[50,33,78,33],[51,0,78,33],[51,5,78,13],[51,6,78,12],[51,7,74,21],[52,0,74,21],[52,3,74,0],[54,0,80,0],[54,6,80,6,"openDrawer"],[54,16,80,16],[54,19,80,19],[54,28,80,6,"openDrawer"],[54,38,80,19],[54,39,81,2,"state"],[54,44,80,19],[54,46,82,43],[55,0,83,2],[55,8,83,6,"isDrawerOpen"],[55,20,83,18],[55,21,83,19,"state"],[55,26,83,18],[55,27,83,2],[55,29,83,27],[56,0,84,4],[56,13,84,11,"state"],[56,18,84,4],[57,0,85,3],[59,0,87,2],[59,43,88,7,"state"],[59,48,87,2],[60,0,89,4,"history"],[60,6,89,4,"history"],[60,13,89,11],[60,58,89,17,"state"],[60,63,89,22],[60,64,89,23,"history"],[60,71,89,11],[60,75,89,32],[61,0,89,34,"type"],[61,8,89,34,"type"],[61,12,89,38],[61,14,89,40],[62,0,89,32],[62,7,89,11],[63,0,87,2],[64,0,91,1],[64,3,80,0],[66,0,93,0],[66,6,93,6,"closeDrawer"],[66,17,93,17],[66,20,93,20],[66,29,93,6,"closeDrawer"],[66,40,93,20],[66,41,94,2,"state"],[66,46,93,20],[66,48,95,43],[67,0,96,2],[67,8,96,6],[67,9,96,7,"isDrawerOpen"],[67,21,96,19],[67,22,96,20,"state"],[67,27,96,19],[67,28,96,2],[67,30,96,28],[68,0,97,4],[68,13,97,11,"state"],[68,18,97,4],[69,0,98,3],[71,0,100,2],[71,43,101,7,"state"],[71,48,100,2],[72,0,102,4,"history"],[72,6,102,4,"history"],[72,13,102,11],[72,15,102,13,"state"],[72,20,102,18],[72,21,102,19,"history"],[72,28,102,13],[72,29,102,27,"filter"],[72,35,102,13],[72,36,102,34],[72,46,102,35,"it"],[72,48,102,34],[73,0,102,34],[73,15,102,42,"it"],[73,17,102,44],[73,18,102,45,"type"],[73,22,102,42],[73,27,102,54],[73,35,102,34],[74,0,102,34],[74,7,102,13],[75,0,100,2],[76,0,104,1],[76,3,93,0],[78,0,106,15],[78,11,106,24,"DrawerRouter"],[78,23,106,15],[78,30,112,2],[79,0,112,2],[79,8,107,2,"openByDefault"],[79,21,112,2],[79,29,107,2,"openByDefault"],[79,42,112,2],[80,0,112,2],[80,8,108,5,"rest"],[80,12,112,2],[81,0,113,2],[81,8,113,8,"router"],[81,14,113,14],[81,17,113,18],[81,41,113,28,"rest"],[81,45,113,18],[81,46,113,2],[82,0,118,2],[82,43,119,7,"router"],[82,49,118,2],[83,0,121,4,"type"],[83,6,121,4,"type"],[83,10,121,8],[83,12,121,10],[83,20,118,2],[84,0,123,4,"getInitialState"],[84,6,123,4,"getInitialState"],[84,21,118,2],[84,55,123,52],[85,0,123,52],[85,12,123,22,"routeNames"],[85,22,123,52],[85,31,123,22,"routeNames"],[85,41,123,52],[86,0,123,52],[86,12,123,34,"routeParamList"],[86,26,123,52],[86,35,123,34,"routeParamList"],[86,49,123,52],[87,0,124,6],[87,12,124,10,"state"],[87,17,124,15],[87,20,124,18,"router"],[87,26,124,24],[87,27,124,25,"getInitialState"],[87,42,124,18],[87,43,124,41],[88,0,124,43,"routeNames"],[88,10,124,43,"routeNames"],[88,20,124,53],[88,22,124,43,"routeNames"],[88,32,124,41],[89,0,124,55,"routeParamList"],[89,10,124,55,"routeParamList"],[89,24,124,69],[89,26,124,55,"routeParamList"],[90,0,124,41],[90,9,124,18],[90,10,124,6],[92,0,126,6],[92,12,126,10,"openByDefault"],[92,25,126,6],[92,27,126,25],[93,0,127,8,"state"],[93,10,127,8,"state"],[93,15,127,13],[93,18,127,16,"openDrawer"],[93,28,127,26],[93,29,127,27,"state"],[93,34,127,26],[93,35,127,8],[94,0,128,7],[96,0,130,6],[96,47,131,11,"state"],[96,52,130,6],[97,0,132,8,"stale"],[97,10,132,8,"stale"],[97,15,132,13],[97,17,132,15],[97,22,130,6],[98,0,133,8,"type"],[98,10,133,8,"type"],[98,14,133,12],[98,16,133,14],[98,24,130,6],[99,0,134,8,"key"],[99,10,134,8,"key"],[99,13,134,11],[99,27,134,23],[100,0,130,6],[101,0,136,5],[101,7,118,2],[102,0,138,4,"getRehydratedState"],[102,6,138,4,"getRehydratedState"],[102,24,118,2],[102,54,138,23,"partialState"],[102,66,118,2],[102,75,138,69],[103,0,138,69],[103,12,138,39,"routeNames"],[103,22,138,69],[103,31,138,39,"routeNames"],[103,41,138,69],[104,0,138,69],[104,12,138,51,"routeParamList"],[104,26,138,69],[104,35,138,51,"routeParamList"],[104,49,138,69],[106,0,139,6],[106,12,139,10,"partialState"],[106,24,139,22],[106,25,139,23,"stale"],[106,30,139,10],[106,35,139,33],[106,40,139,6],[106,42,139,40],[107,0,140,8],[107,17,140,15,"partialState"],[107,29,140,8],[108,0,141,7],[110,0,143,6],[110,12,143,10,"state"],[110,17,143,15],[110,20,143,18,"router"],[110,26,143,24],[110,27,143,25,"getRehydratedState"],[110,45,143,18],[110,46,143,44,"partialState"],[110,58,143,18],[110,60,143,58],[111,0,144,8,"routeNames"],[111,10,144,8,"routeNames"],[111,20,144,18],[111,22,144,8,"routeNames"],[111,32,143,58],[112,0,145,8,"routeParamList"],[112,10,145,8,"routeParamList"],[112,24,145,22],[112,26,145,8,"routeParamList"],[113,0,143,58],[113,9,143,18],[113,10,143,6],[115,0,148,6],[115,12,148,10,"isDrawerOpen"],[115,24,148,22],[115,25,148,23,"partialState"],[115,37,148,22],[115,38,148,6],[115,40,148,38],[116,0,149,8,"state"],[116,10,149,8,"state"],[116,15,149,13],[116,18,149,16,"openDrawer"],[116,28,149,26],[116,29,149,27,"state"],[116,34,149,26],[116,35,149,8],[117,0,150,7],[119,0,152,6],[119,47,153,11,"state"],[119,52,152,6],[120,0,154,8,"type"],[120,10,154,8,"type"],[120,14,154,12],[120,16,154,14],[120,24,152,6],[121,0,155,8,"key"],[121,10,155,8,"key"],[121,13,155,11],[121,27,155,23],[122,0,152,6],[123,0,157,5],[123,7,118,2],[124,0,159,4,"getStateForRouteFocus"],[124,6,159,4,"getStateForRouteFocus"],[124,27,118,2],[124,60,159,26,"state"],[124,65,118,2],[124,67,159,33,"key"],[124,70,118,2],[124,72,159,38],[125,0,160,6],[125,12,160,12,"result"],[125,18,160,18],[125,21,160,21,"router"],[125,27,160,27],[125,28,160,28,"getStateForRouteFocus"],[125,49,160,21],[125,50,160,50,"state"],[125,55,160,21],[125,57,160,57,"key"],[125,60,160,21],[125,61,160,6],[127,0,162,6],[127,12,162,10,"openByDefault"],[127,25,162,6],[127,27,162,25],[128,0,163,8],[128,17,163,15,"openDrawer"],[128,27,163,25],[128,28,163,26,"result"],[128,34,163,25],[128,35,163,8],[129,0,164,7],[131,0,166,6],[131,15,166,13,"closeDrawer"],[131,26,166,24],[131,27,166,25,"result"],[131,33,166,24],[131,34,166,6],[132,0,167,5],[132,7,118,2],[133,0,169,4,"getStateForAction"],[133,6,169,4,"getStateForAction"],[133,23,118,2],[133,52,169,22,"state"],[133,57,118,2],[133,59,169,29,"action"],[133,65,118,2],[133,67,169,37,"options"],[133,74,118,2],[133,76,169,46],[134,0,170,6],[134,16,170,14,"action"],[134,22,170,20],[134,23,170,21,"type"],[134,27,170,6],[135,0,171,8],[135,15,171,13],[135,28,171,8],[136,0,172,10],[136,19,172,17,"openDrawer"],[136,29,172,27],[136,30,172,28,"state"],[136,35,172,27],[136,36,172,10],[138,0,174,8],[138,15,174,13],[138,29,174,8],[139,0,175,10],[139,19,175,17,"closeDrawer"],[139,30,175,28],[139,31,175,29,"state"],[139,36,175,28],[139,37,175,10],[141,0,177,8],[141,15,177,13],[141,30,177,8],[142,0,178,10],[142,16,178,14,"isDrawerOpen"],[142,28,178,26],[142,29,178,27,"state"],[142,34,178,26],[142,35,178,10],[142,37,178,35],[143,0,179,12],[143,21,179,19,"closeDrawer"],[143,32,179,30],[143,33,179,31,"state"],[143,38,179,30],[143,39,179,12],[144,0,180,11],[146,0,182,10],[146,19,182,17,"openDrawer"],[146,29,182,27],[146,30,182,28,"state"],[146,35,182,27],[146,36,182,10],[148,0,184,8],[148,15,184,13],[148,24,184,8],[149,0,185,10],[149,16,185,14,"openByDefault"],[149,29,185,10],[149,31,185,29],[150,0,186,12],[150,18,186,16],[150,19,186,17,"isDrawerOpen"],[150,31,186,29],[150,32,186,30,"state"],[150,37,186,29],[150,38,186,12],[150,40,186,38],[151,0,187,14],[151,23,187,21,"openDrawer"],[151,33,187,31],[151,34,187,32,"state"],[151,39,187,31],[151,40,187,14],[152,0,188,13],[153,0,189,11],[153,13,185,10],[153,19,189,17],[154,0,190,12],[154,18,190,16,"isDrawerOpen"],[154,30,190,28],[154,31,190,29,"state"],[154,36,190,28],[154,37,190,12],[154,39,190,37],[155,0,191,14],[155,23,191,21,"closeDrawer"],[155,34,191,32],[155,35,191,33,"state"],[155,40,191,32],[155,41,191,14],[156,0,192,13],[157,0,193,11],[159,0,195,10],[159,19,195,17,"router"],[159,25,195,23],[159,26,195,24,"getStateForAction"],[159,43,195,17],[159,44,195,42,"state"],[159,49,195,17],[159,51,195,49,"action"],[159,57,195,17],[159,59,195,57,"options"],[159,66,195,17],[159,67,195,10],[161,0,197,8],[162,0,198,10],[162,19,198,17,"router"],[162,25,198,23],[162,26,198,24,"getStateForAction"],[162,43,198,17],[162,44,198,42,"state"],[162,49,198,17],[162,51,198,49,"action"],[162,57,198,17],[162,59,198,57,"options"],[162,66,198,17],[162,67,198,10],[163,0,170,6],[164,0,200,5],[164,7,118,2],[165,0,202,4,"actionCreators"],[165,6,202,4,"actionCreators"],[165,20,202,18],[165,22,202,20,"DrawerActions"],[166,0,118,2],[167,0,204,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC8D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCI,4BD,EJ;mBME;CNW;oBOE;kCCS,4BD;CPE;eSE;ICiB;KDa;IEE;KFmB;IGE;KHQ;IIE;KJ+B;CTI"}},"type":"js/module"}]}