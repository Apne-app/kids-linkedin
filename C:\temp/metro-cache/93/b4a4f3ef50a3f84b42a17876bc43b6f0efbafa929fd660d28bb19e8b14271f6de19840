{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./TabRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[5], \"nanoid/non-secure\");\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./TabRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread(_objectSpread({}, _TabRouter.TabActions), {}, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.some(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(_ref) {\n    var openByDefault = _ref.openByDefault,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"openByDefault\"]);\n    var router = (0, _TabRouter.default)(rest);\n    return _objectSpread(_objectSpread({}, router), {}, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList,\n            routeGetIdList = _ref2.routeGetIdList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList,\n            routeGetIdList = _ref3.routeGetIdList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (partialState.history ? isDrawerOpen(partialState) : openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n\n        if (openByDefault) {\n          return openDrawer(result);\n        }\n\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (openByDefault) {\n              if (!isDrawerOpen(state)) {\n                return openDrawer(state);\n              }\n            } else {\n              if (isDrawerOpen(state)) {\n                return closeDrawer(state);\n              }\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":172,"map":[[18,0,1,0],[20,0,8,0],[26,0,61,7],[26,6,61,13,"DrawerActions"],[26,19,61,26],[26,54,62,5,"TabActions"],[26,75,61,26],[27,0,63,2,"openDrawer"],[27,4,63,2,"openDrawer"],[27,14,61,26],[27,38,63,33],[28,0,64,4],[28,13,64,11],[29,0,64,13,"type"],[29,8,64,13,"type"],[29,12,64,17],[29,14,64,19],[30,0,64,11],[30,7,64,4],[31,0,65,3],[31,5,61,26],[32,0,66,2,"closeDrawer"],[32,4,66,2,"closeDrawer"],[32,15,61,26],[32,40,66,34],[33,0,67,4],[33,13,67,11],[34,0,67,13,"type"],[34,8,67,13,"type"],[34,12,67,17],[34,14,67,19],[35,0,67,11],[35,7,67,4],[36,0,68,3],[36,5,61,26],[37,0,69,2,"toggleDrawer"],[37,4,69,2,"toggleDrawer"],[37,16,61,26],[37,42,69,35],[38,0,70,4],[38,13,70,11],[39,0,70,13,"type"],[39,8,70,13,"type"],[39,12,70,17],[39,14,70,19],[40,0,70,11],[40,7,70,4],[41,0,71,3],[42,0,61,26],[42,4,61,7],[46,0,74,0],[46,6,74,6,"isDrawerOpen"],[46,18,74,18],[46,21,74,21],[46,30,74,6,"isDrawerOpen"],[46,42,74,21],[46,43,75,2,"state"],[46,48,74,21],[47,0,74,21],[49,0,74,21],[49,11,78,5,"Boolean"],[49,18,78,12],[49,37,78,13,"state"],[49,42,78,18],[49,43,78,19,"history"],[49,50,78,12],[49,71,78,13],[49,86,78,28,"some"],[49,90,78,13],[49,91,78,33],[49,101,78,34,"it"],[49,103,78,33],[50,0,78,33],[50,13,78,41,"it"],[50,15,78,43],[50,16,78,44,"type"],[50,20,78,41],[50,25,78,53],[50,33,78,33],[51,0,78,33],[51,5,78,13],[51,6,78,12],[51,7,74,21],[52,0,74,21],[52,3,74,0],[54,0,80,0],[54,6,80,6,"openDrawer"],[54,16,80,16],[54,19,80,19],[54,28,80,6,"openDrawer"],[54,38,80,19],[54,39,81,2,"state"],[54,44,80,19],[54,46,82,43],[55,0,83,2],[55,8,83,6,"isDrawerOpen"],[55,20,83,18],[55,21,83,19,"state"],[55,26,83,18],[55,27,83,2],[55,29,83,27],[56,0,84,4],[56,13,84,11,"state"],[56,18,84,4],[57,0,85,3],[59,0,87,2],[59,43,88,7,"state"],[59,48,87,2],[60,0,89,4,"history"],[60,6,89,4,"history"],[60,13,89,11],[60,58,89,17,"state"],[60,63,89,22],[60,64,89,23,"history"],[60,71,89,11],[60,75,89,32],[61,0,89,34,"type"],[61,8,89,34,"type"],[61,12,89,38],[61,14,89,40],[62,0,89,32],[62,7,89,11],[63,0,87,2],[64,0,91,1],[64,3,80,0],[66,0,93,0],[66,6,93,6,"closeDrawer"],[66,17,93,17],[66,20,93,20],[66,29,93,6,"closeDrawer"],[66,40,93,20],[66,41,94,2,"state"],[66,46,93,20],[66,48,95,43],[67,0,96,2],[67,8,96,6],[67,9,96,7,"isDrawerOpen"],[67,21,96,19],[67,22,96,20,"state"],[67,27,96,19],[67,28,96,2],[67,30,96,28],[68,0,97,4],[68,13,97,11,"state"],[68,18,97,4],[69,0,98,3],[71,0,100,2],[71,43,101,7,"state"],[71,48,100,2],[72,0,102,4,"history"],[72,6,102,4,"history"],[72,13,102,11],[72,15,102,13,"state"],[72,20,102,18],[72,21,102,19,"history"],[72,28,102,13],[72,29,102,27,"filter"],[72,35,102,13],[72,36,102,34],[72,46,102,35,"it"],[72,48,102,34],[73,0,102,34],[73,15,102,42,"it"],[73,17,102,44],[73,18,102,45,"type"],[73,22,102,42],[73,27,102,54],[73,35,102,34],[74,0,102,34],[74,7,102,13],[75,0,100,2],[76,0,104,1],[76,3,93,0],[78,0,106,15],[78,11,106,24,"DrawerRouter"],[78,23,106,15],[78,30,112,2],[79,0,112,2],[79,8,107,2,"openByDefault"],[79,21,112,2],[79,29,107,2,"openByDefault"],[79,42,112,2],[80,0,112,2],[80,8,108,5,"rest"],[80,12,112,2],[81,0,113,2],[81,8,113,8,"router"],[81,14,113,14],[81,17,113,18],[81,41,113,28,"rest"],[81,45,113,18],[81,46,113,2],[82,0,118,2],[82,43,119,7,"router"],[82,49,118,2],[83,0,121,4,"type"],[83,6,121,4,"type"],[83,10,121,8],[83,12,121,10],[83,20,118,2],[84,0,123,4,"getInitialState"],[84,6,123,4,"getInitialState"],[84,21,118,2],[84,55,123,68],[85,0,123,68],[85,12,123,22,"routeNames"],[85,22,123,68],[85,31,123,22,"routeNames"],[85,41,123,68],[86,0,123,68],[86,12,123,34,"routeParamList"],[86,26,123,68],[86,35,123,34,"routeParamList"],[86,49,123,68],[87,0,123,68],[87,12,123,50,"routeGetIdList"],[87,26,123,68],[87,35,123,50,"routeGetIdList"],[87,49,123,68],[88,0,124,6],[88,12,124,10,"state"],[88,17,124,15],[88,20,124,18,"router"],[88,26,124,24],[88,27,124,25,"getInitialState"],[88,42,124,18],[88,43,124,41],[89,0,125,8,"routeNames"],[89,10,125,8,"routeNames"],[89,20,125,18],[89,22,125,8,"routeNames"],[89,32,124,41],[90,0,126,8,"routeParamList"],[90,10,126,8,"routeParamList"],[90,24,126,22],[90,26,126,8,"routeParamList"],[90,40,124,41],[91,0,127,8,"routeGetIdList"],[91,10,127,8,"routeGetIdList"],[91,24,127,22],[91,26,127,8,"routeGetIdList"],[92,0,124,41],[92,9,124,18],[92,10,124,6],[94,0,130,6],[94,12,130,10,"openByDefault"],[94,25,130,6],[94,27,130,25],[95,0,131,8,"state"],[95,10,131,8,"state"],[95,15,131,13],[95,18,131,16,"openDrawer"],[95,28,131,26],[95,29,131,27,"state"],[95,34,131,26],[95,35,131,8],[96,0,132,7],[98,0,134,6],[98,47,135,11,"state"],[98,52,134,6],[99,0,136,8,"stale"],[99,10,136,8,"stale"],[99,15,136,13],[99,17,136,15],[99,22,134,6],[100,0,137,8,"type"],[100,10,137,8,"type"],[100,14,137,12],[100,16,137,14],[100,24,134,6],[101,0,138,8,"key"],[101,10,138,8,"key"],[101,13,138,11],[101,27,138,23],[102,0,134,6],[103,0,140,5],[103,7,118,2],[104,0,142,4,"getRehydratedState"],[104,6,142,4,"getRehydratedState"],[104,24,118,2],[104,54,143,6,"partialState"],[104,66,118,2],[104,75,145,6],[105,0,145,6],[105,12,144,8,"routeNames"],[105,22,145,6],[105,31,144,8,"routeNames"],[105,41,145,6],[106,0,145,6],[106,12,144,20,"routeParamList"],[106,26,145,6],[106,35,144,20,"routeParamList"],[106,49,145,6],[107,0,145,6],[107,12,144,36,"routeGetIdList"],[107,26,145,6],[107,35,144,36,"routeGetIdList"],[107,49,145,6],[109,0,146,6],[109,12,146,10,"partialState"],[109,24,146,22],[109,25,146,23,"stale"],[109,30,146,10],[109,35,146,33],[109,40,146,6],[109,42,146,40],[110,0,147,8],[110,17,147,15,"partialState"],[110,29,147,8],[111,0,148,7],[113,0,150,6],[113,12,150,10,"state"],[113,17,150,15],[113,20,150,18,"router"],[113,26,150,24],[113,27,150,25,"getRehydratedState"],[113,45,150,18],[113,46,150,44,"partialState"],[113,58,150,18],[113,60,150,58],[114,0,151,8,"routeNames"],[114,10,151,8,"routeNames"],[114,20,151,18],[114,22,151,8,"routeNames"],[114,32,150,58],[115,0,152,8,"routeParamList"],[115,10,152,8,"routeParamList"],[115,24,152,22],[115,26,152,8,"routeParamList"],[115,40,150,58],[116,0,153,8,"routeGetIdList"],[116,10,153,8,"routeGetIdList"],[116,24,153,22],[116,26,153,8,"routeGetIdList"],[117,0,150,58],[117,9,150,18],[117,10,150,6],[119,0,156,6],[119,12,156,10,"partialState"],[119,24,156,22],[119,25,156,23,"history"],[119,32,156,10],[119,35,156,33,"isDrawerOpen"],[119,47,156,45],[119,48,156,46,"partialState"],[119,60,156,45],[119,61,156,10],[119,64,156,62,"openByDefault"],[119,77,156,6],[119,79,156,77],[120,0,157,8,"state"],[120,10,157,8,"state"],[120,15,157,13],[120,18,157,16,"openDrawer"],[120,28,157,26],[120,29,157,27,"state"],[120,34,157,26],[120,35,157,8],[121,0,158,7],[123,0,160,6],[123,47,161,11,"state"],[123,52,160,6],[124,0,162,8,"type"],[124,10,162,8,"type"],[124,14,162,12],[124,16,162,14],[124,24,160,6],[125,0,163,8,"key"],[125,10,163,8,"key"],[125,13,163,11],[125,27,163,23],[126,0,160,6],[127,0,165,5],[127,7,118,2],[128,0,167,4,"getStateForRouteFocus"],[128,6,167,4,"getStateForRouteFocus"],[128,27,118,2],[128,60,167,26,"state"],[128,65,118,2],[128,67,167,33,"key"],[128,70,118,2],[128,72,167,38],[129,0,168,6],[129,12,168,12,"result"],[129,18,168,18],[129,21,168,21,"router"],[129,27,168,27],[129,28,168,28,"getStateForRouteFocus"],[129,49,168,21],[129,50,168,50,"state"],[129,55,168,21],[129,57,168,57,"key"],[129,60,168,21],[129,61,168,6],[131,0,170,6],[131,12,170,10,"openByDefault"],[131,25,170,6],[131,27,170,25],[132,0,171,8],[132,17,171,15,"openDrawer"],[132,27,171,25],[132,28,171,26,"result"],[132,34,171,25],[132,35,171,8],[133,0,172,7],[135,0,174,6],[135,15,174,13,"closeDrawer"],[135,26,174,24],[135,27,174,25,"result"],[135,33,174,24],[135,34,174,6],[136,0,175,5],[136,7,118,2],[137,0,177,4,"getStateForAction"],[137,6,177,4,"getStateForAction"],[137,23,118,2],[137,52,177,22,"state"],[137,57,118,2],[137,59,177,29,"action"],[137,65,118,2],[137,67,177,37,"options"],[137,74,118,2],[137,76,177,46],[138,0,178,6],[138,16,178,14,"action"],[138,22,178,20],[138,23,178,21,"type"],[138,27,178,6],[139,0,179,8],[139,15,179,13],[139,28,179,8],[140,0,180,10],[140,19,180,17,"openDrawer"],[140,29,180,27],[140,30,180,28,"state"],[140,35,180,27],[140,36,180,10],[142,0,182,8],[142,15,182,13],[142,29,182,8],[143,0,183,10],[143,19,183,17,"closeDrawer"],[143,30,183,28],[143,31,183,29,"state"],[143,36,183,28],[143,37,183,10],[145,0,185,8],[145,15,185,13],[145,30,185,8],[146,0,186,10],[146,16,186,14,"isDrawerOpen"],[146,28,186,26],[146,29,186,27,"state"],[146,34,186,26],[146,35,186,10],[146,37,186,35],[147,0,187,12],[147,21,187,19,"closeDrawer"],[147,32,187,30],[147,33,187,31,"state"],[147,38,187,30],[147,39,187,12],[148,0,188,11],[150,0,190,10],[150,19,190,17,"openDrawer"],[150,29,190,27],[150,30,190,28,"state"],[150,35,190,27],[150,36,190,10],[152,0,192,8],[152,15,192,13],[152,24,192,8],[153,0,193,10],[153,16,193,14,"openByDefault"],[153,29,193,10],[153,31,193,29],[154,0,194,12],[154,18,194,16],[154,19,194,17,"isDrawerOpen"],[154,31,194,29],[154,32,194,30,"state"],[154,37,194,29],[154,38,194,12],[154,40,194,38],[155,0,195,14],[155,23,195,21,"openDrawer"],[155,33,195,31],[155,34,195,32,"state"],[155,39,195,31],[155,40,195,14],[156,0,196,13],[157,0,197,11],[157,13,193,10],[157,19,197,17],[158,0,198,12],[158,18,198,16,"isDrawerOpen"],[158,30,198,28],[158,31,198,29,"state"],[158,36,198,28],[158,37,198,12],[158,39,198,37],[159,0,199,14],[159,23,199,21,"closeDrawer"],[159,34,199,32],[159,35,199,33,"state"],[159,40,199,32],[159,41,199,14],[160,0,200,13],[161,0,201,11],[163,0,203,10],[163,19,203,17,"router"],[163,25,203,23],[163,26,203,24,"getStateForAction"],[163,43,203,17],[163,44,203,42,"state"],[163,49,203,17],[163,51,203,49,"action"],[163,57,203,17],[163,59,203,57,"options"],[163,66,203,17],[163,67,203,10],[165,0,205,8],[166,0,206,10],[166,19,206,17,"router"],[166,25,206,23],[166,26,206,24,"getStateForAction"],[166,43,206,17],[166,44,206,42,"state"],[166,49,206,17],[166,51,206,49,"action"],[166,57,206,17],[166,59,206,57,"options"],[166,66,206,17],[166,67,206,10],[167,0,178,6],[168,0,208,5],[168,7,118,2],[169,0,210,4,"actionCreators"],[169,6,210,4,"actionCreators"],[169,20,210,18],[169,22,210,20,"DrawerActions"],[170,0,118,2],[171,0,212,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC8D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCI,4BD,EJ;mBME;CNW;oBOE;kCCS,4BD;CPE;eSE;ICiB;KDiB;IEE;KFuB;IGE;KHQ;IIE;KJ+B;CTI"}},"type":"js/module"}]}