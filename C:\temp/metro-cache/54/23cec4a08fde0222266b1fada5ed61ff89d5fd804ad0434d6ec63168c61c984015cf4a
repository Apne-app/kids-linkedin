{"dependencies":[{"name":"./internal/_curry2","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":29}}]}},{"name":"./internal/_isInteger","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}]}},{"name":"./internal/_isArray","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}]}},{"name":"./assoc","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":18}}]}},{"name":"./dissoc","data":{"isAsync":false,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":19}}]}},{"name":"./remove","data":{"isAsync":false,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":19}}]}},{"name":"./update","data":{"isAsync":false,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":19}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./internal/_curry2\");\n\n  var _isInteger = _$$_REQUIRE(_dependencyMap[1], \"./internal/_isInteger\");\n\n  var _isArray = _$$_REQUIRE(_dependencyMap[2], \"./internal/_isArray\");\n\n  var assoc = _$$_REQUIRE(_dependencyMap[3], \"./assoc\");\n\n  var dissoc = _$$_REQUIRE(_dependencyMap[4], \"./dissoc\");\n\n  var remove = _$$_REQUIRE(_dependencyMap[5], \"./remove\");\n\n  var update = _$$_REQUIRE(_dependencyMap[6], \"./update\");\n\n  var dissocPath = _curry2(function dissocPath(path, obj) {\n    switch (path.length) {\n      case 0:\n        return obj;\n\n      case 1:\n        return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n      default:\n        var head = path[0];\n        var tail = Array.prototype.slice.call(path, 1);\n\n        if (obj[head] == null) {\n          return obj;\n        } else if (_isInteger(head) && _isArray(obj)) {\n          return update(head, dissocPath(tail, obj[head]), obj);\n        } else {\n          return assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n\n    }\n  });\n\n  module.exports = dissocPath;\n});","lineCount":40,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,68,1,0],[4,0,5,0],[4,6,5,4,"_isInteger"],[4,16,5,14],[4,19,7,0,"require"],[4,30,7,7],[4,74,5,0],[6,0,9,0],[6,6,9,4,"_isArray"],[6,14,9,12],[6,17,11,0,"require"],[6,28,11,7],[6,70,9,0],[8,0,13,0],[8,6,13,4,"assoc"],[8,11,13,9],[8,14,15,0,"require"],[8,25,15,7],[8,55,13,0],[10,0,17,0],[10,6,17,4,"dissoc"],[10,12,17,10],[10,15,19,0,"require"],[10,26,19,7],[10,57,17,0],[12,0,21,0],[12,6,21,4,"remove"],[12,12,21,10],[12,15,23,0,"require"],[12,26,23,7],[12,57,21,0],[14,0,25,0],[14,6,25,4,"update"],[14,12,25,10],[14,15,27,0,"require"],[14,26,27,7],[14,57,25,0],[16,0,49,0],[16,6,49,4,"dissocPath"],[16,16,49,14],[16,19,51,0,"_curry2"],[16,26,51,7],[16,27,51,8],[16,36,51,17,"dissocPath"],[16,46,51,8],[16,47,51,28,"path"],[16,51,51,8],[16,53,51,34,"obj"],[16,56,51,8],[16,58,51,39],[17,0,52,2],[17,12,52,10,"path"],[17,16,52,14],[17,17,52,15,"length"],[17,23,52,2],[18,0,53,4],[18,11,53,9],[18,12,53,4],[19,0,54,6],[19,15,54,13,"obj"],[19,18,54,6],[21,0,56,4],[21,11,56,9],[21,12,56,4],[22,0,57,6],[22,15,57,13,"_isInteger"],[22,25,57,23],[22,26,57,24,"path"],[22,30,57,28],[22,31,57,29],[22,32,57,28],[22,33,57,23],[22,34,57,13],[22,38,57,36,"_isArray"],[22,46,57,44],[22,47,57,45,"obj"],[22,50,57,44],[22,51,57,13],[22,54,57,52,"remove"],[22,60,57,58],[22,61,57,59,"path"],[22,65,57,63],[22,66,57,64],[22,67,57,63],[22,68,57,58],[22,70,57,68],[22,71,57,58],[22,73,57,71,"obj"],[22,76,57,58],[22,77,57,13],[22,80,57,78,"dissoc"],[22,86,57,84],[22,87,57,85,"path"],[22,91,57,89],[22,92,57,90],[22,93,57,89],[22,94,57,84],[22,96,57,94,"obj"],[22,99,57,84],[22,100,57,6],[24,0,59,4],[25,0,60,6],[25,12,60,10,"head"],[25,16,60,14],[25,19,60,17,"path"],[25,23,60,21],[25,24,60,22],[25,25,60,21],[25,26,60,6],[26,0,61,6],[26,12,61,10,"tail"],[26,16,61,14],[26,19,61,17,"Array"],[26,24,61,22],[26,25,61,23,"prototype"],[26,34,61,17],[26,35,61,33,"slice"],[26,40,61,17],[26,41,61,39,"call"],[26,45,61,17],[26,46,61,44,"path"],[26,50,61,17],[26,52,61,50],[26,53,61,17],[26,54,61,6],[28,0,63,6],[28,12,63,10,"obj"],[28,15,63,13],[28,16,63,14,"head"],[28,20,63,13],[28,21,63,10],[28,25,63,23],[28,29,63,6],[28,31,63,29],[29,0,64,8],[29,17,64,15,"obj"],[29,20,64,8],[30,0,65,7],[30,9,63,6],[30,15,65,13],[30,19,65,17,"_isInteger"],[30,29,65,27],[30,30,65,28,"head"],[30,34,65,27],[30,35,65,17],[30,39,65,37,"_isArray"],[30,47,65,45],[30,48,65,46,"obj"],[30,51,65,45],[30,52,65,13],[30,54,65,52],[31,0,66,8],[31,17,66,15,"update"],[31,23,66,21],[31,24,66,22,"head"],[31,28,66,21],[31,30,66,28,"dissocPath"],[31,40,66,38],[31,41,66,39,"tail"],[31,45,66,38],[31,47,66,45,"obj"],[31,50,66,48],[31,51,66,49,"head"],[31,55,66,48],[31,56,66,38],[31,57,66,21],[31,59,66,57,"obj"],[31,62,66,21],[31,63,66,8],[32,0,67,7],[32,9,65,13],[32,15,67,13],[33,0,68,8],[33,17,68,15,"assoc"],[33,22,68,20],[33,23,68,21,"head"],[33,27,68,20],[33,29,68,27,"dissocPath"],[33,39,68,37],[33,40,68,38,"tail"],[33,44,68,37],[33,46,68,44,"obj"],[33,49,68,47],[33,50,68,48,"head"],[33,54,68,47],[33,55,68,37],[33,56,68,20],[33,58,68,56,"obj"],[33,61,68,20],[33,62,68,8],[34,0,69,7],[36,0,52,2],[37,0,72,1],[37,3,51,7],[37,4,49,0],[39,0,74,0,"module"],[39,2,74,0,"module"],[39,8,74,6],[39,9,74,7,"exports"],[39,16,74,0],[39,19,74,17,"dissocPath"],[39,29,74,0]],"functionMap":{"names":["<global>","dissocPath"],"mappings":"AAA;QCkD;CDqB"}},"type":"js/module"}]}