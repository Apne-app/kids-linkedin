{"dependencies":[{"name":"./_forceReduced","data":{"isAsync":false}},{"name":"./_isArrayLike","data":{"isAsync":false}},{"name":"./_reduce","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _forceReduced = _$$_REQUIRE(_dependencyMap[0], \"./_forceReduced\");\n\n  var _isArrayLike = _$$_REQUIRE(_dependencyMap[1], \"./_isArrayLike\");\n\n  var _reduce = _$$_REQUIRE(_dependencyMap[2], \"./_reduce\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[3], \"./_xfBase\");\n\n  var preservingReduced = function preservingReduced(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  var _flatCat = function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function transducerResult(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function transducerStep(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n\n  module.exports = _flatCat;\n});","lineCount":37,"map":[[2,0,1,0],[2,6,1,4,"_forceReduced"],[2,19,1,17],[2,22,1,33,"require"],[2,33,1,40],[2,71,1,0],[4,0,3,0],[4,6,3,4,"_isArrayLike"],[4,18,3,16],[4,21,3,32,"require"],[4,32,3,39],[4,69,3,0],[6,0,5,0],[6,6,5,4,"_reduce"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"_xfBase"],[8,13,7,11],[8,16,7,27,"require"],[8,27,7,34],[8,59,7,0],[10,0,9,0],[10,6,9,4,"preservingReduced"],[10,23,9,21],[10,26,9,24],[10,35,9,4,"preservingReduced"],[10,52,9,24],[10,53,9,34,"xf"],[10,55,9,24],[10,57,9,38],[11,0,10,2],[11,11,10,9],[12,0,11,4],[12,27,11,25,"_xfBase"],[12,34,11,32],[12,35,11,33,"init"],[12,39,10,9],[13,0,12,4],[13,29,12,27],[13,55,12,37,"result"],[13,61,12,27],[13,63,12,45],[14,0,13,6],[14,15,13,13,"xf"],[14,17,13,15],[14,18,13,16],[14,39,13,15],[14,40,13,13],[14,41,13,39,"result"],[14,47,13,13],[14,48,13,6],[15,0,14,5],[15,7,10,9],[16,0,15,4],[16,27,15,25],[16,51,15,35,"result"],[16,57,15,25],[16,59,15,43,"input"],[16,64,15,25],[16,66,15,50],[17,0,16,6],[17,12,16,10,"ret"],[17,15,16,13],[17,18,16,16,"xf"],[17,20,16,18],[17,21,16,19],[17,40,16,18],[17,41,16,16],[17,42,16,40,"result"],[17,48,16,16],[17,50,16,48,"input"],[17,55,16,16],[17,56,16,6],[18,0,17,6],[18,15,17,13,"ret"],[18,18,17,16],[18,19,17,17],[18,41,17,16],[18,42,17,13],[18,45,17,43,"_forceReduced"],[18,58,17,56],[18,59,17,57,"ret"],[18,62,17,56],[18,63,17,13],[18,66,17,64,"ret"],[18,69,17,6],[19,0,18,5],[20,0,10,9],[20,5,10,2],[21,0,20,1],[21,3,9,0],[23,0,22,0],[23,6,22,4,"_flatCat"],[23,14,22,12],[23,17,22,15],[23,26,22,24,"_xcat"],[23,31,22,15],[23,32,22,30,"xf"],[23,34,22,15],[23,36,22,34],[24,0,23,2],[24,8,23,6,"rxf"],[24,11,23,9],[24,14,23,12,"preservingReduced"],[24,31,23,29],[24,32,23,30,"xf"],[24,34,23,29],[24,35,23,2],[25,0,24,2],[25,11,24,9],[26,0,25,4],[26,27,25,25,"_xfBase"],[26,34,25,32],[26,35,25,33,"init"],[26,39,24,9],[27,0,26,4],[27,29,26,27],[27,55,26,37,"result"],[27,61,26,27],[27,63,26,45],[28,0,27,6],[28,15,27,13,"rxf"],[28,18,27,16],[28,19,27,17],[28,40,27,16],[28,41,27,13],[28,42,27,40,"result"],[28,48,27,13],[28,49,27,6],[29,0,28,5],[29,7,24,9],[30,0,29,4],[30,27,29,25],[30,51,29,35,"result"],[30,57,29,25],[30,59,29,43,"input"],[30,64,29,25],[30,66,29,50],[31,0,30,6],[31,15,30,13],[31,16,30,14,"_isArrayLike"],[31,28,30,26],[31,29,30,27,"input"],[31,34,30,26],[31,35,30,13],[31,38,30,36,"_reduce"],[31,45,30,43],[31,46,30,44,"rxf"],[31,49,30,43],[31,51,30,49,"result"],[31,57,30,43],[31,59,30,57],[31,60,30,58,"input"],[31,65,30,57],[31,66,30,43],[31,67,30,13],[31,70,30,68,"_reduce"],[31,77,30,75],[31,78,30,76,"rxf"],[31,81,30,75],[31,83,30,81,"result"],[31,89,30,75],[31,91,30,89,"input"],[31,96,30,75],[31,97,30,6],[32,0,31,5],[33,0,24,9],[33,5,24,2],[34,0,33,1],[34,3,22,0],[36,0,35,0,"module"],[36,2,35,0,"module"],[36,8,35,6],[36,9,35,7,"exports"],[36,16,35,0],[36,19,35,17,"_flatCat"],[36,27,35,0]],"functionMap":{"names":["<global>","preservingReduced","transducerResult","transducerStep","_xcat"],"mappings":"AAA;wBCQ;2BCG;KDE;yBEC;KFG;CDE;eIE;2BFI;KEE;yBDC;KCE;CJE"}},"type":"js/module"}]}