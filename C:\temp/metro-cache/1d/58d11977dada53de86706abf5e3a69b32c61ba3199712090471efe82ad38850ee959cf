{"dependencies":[{"name":"./_isArrayLike","data":{"isAsync":false}},{"name":"./_xwrap","data":{"isAsync":false}},{"name":"../bind","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _isArrayLike = _$$_REQUIRE(_dependencyMap[0], \"./_isArrayLike\");\n\n  var _xwrap = _$$_REQUIRE(_dependencyMap[1], \"./_xwrap\");\n\n  var bind = _$$_REQUIRE(_dependencyMap[2], \"../bind\");\n\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n\n      idx += 1;\n    }\n\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n\n      step = iter.next();\n    }\n\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\n  function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  }\n\n  module.exports = _reduce;\n});","lineCount":78,"map":[[2,0,1,0],[2,6,1,4,"_isArrayLike"],[2,18,1,16],[2,21,3,0,"require"],[2,32,3,7],[2,69,1,0],[4,0,5,0],[4,6,5,4,"_xwrap"],[4,12,5,10],[4,15,7,0,"require"],[4,26,7,7],[4,57,5,0],[6,0,9,0],[6,6,9,4,"bind"],[6,10,9,8],[6,13,11,0,"require"],[6,24,11,7],[6,54,9,0],[8,0,13,0],[8,11,13,9,"_arrayReduce"],[8,23,13,0],[8,24,13,22,"xf"],[8,26,13,0],[8,28,13,26,"acc"],[8,31,13,0],[8,33,13,31,"list"],[8,37,13,0],[8,39,13,37],[9,0,14,2],[9,8,14,6,"idx"],[9,11,14,9],[9,14,14,12],[9,15,14,2],[10,0,15,2],[10,8,15,6,"len"],[10,11,15,9],[10,14,15,12,"list"],[10,18,15,16],[10,19,15,17,"length"],[10,25,15,2],[12,0,17,2],[12,11,17,9,"idx"],[12,14,17,12],[12,17,17,15,"len"],[12,20,17,2],[12,22,17,20],[13,0,18,4,"acc"],[13,6,18,4,"acc"],[13,9,18,7],[13,12,18,10,"xf"],[13,14,18,12],[13,15,18,13],[13,34,18,12],[13,35,18,10],[13,36,18,34,"acc"],[13,39,18,10],[13,41,18,39,"list"],[13,45,18,43],[13,46,18,44,"idx"],[13,49,18,43],[13,50,18,10],[13,51,18,4],[15,0,20,4],[15,10,20,8,"acc"],[15,13,20,11],[15,17,20,15,"acc"],[15,20,20,18],[15,21,20,19],[15,43,20,18],[15,44,20,4],[15,46,20,44],[16,0,21,6,"acc"],[16,8,21,6,"acc"],[16,11,21,9],[16,14,21,12,"acc"],[16,17,21,15],[16,18,21,16],[16,38,21,15],[16,39,21,6],[17,0,22,6],[18,0,23,5],[20,0,25,4,"idx"],[20,6,25,4,"idx"],[20,9,25,7],[20,13,25,11],[20,14,25,4],[21,0,26,3],[23,0,28,2],[23,11,28,9,"xf"],[23,13,28,11],[23,14,28,12],[23,35,28,11],[23,36,28,9],[23,37,28,35,"acc"],[23,40,28,9],[23,41,28,2],[24,0,29,1],[26,0,31,0],[26,11,31,9,"_iterableReduce"],[26,26,31,0],[26,27,31,25,"xf"],[26,29,31,0],[26,31,31,29,"acc"],[26,34,31,0],[26,36,31,34,"iter"],[26,40,31,0],[26,42,31,40],[27,0,32,2],[27,8,32,6,"step"],[27,12,32,10],[27,15,32,13,"iter"],[27,19,32,17],[27,20,32,18,"next"],[27,24,32,13],[27,26,32,2],[29,0,34,2],[29,11,34,9],[29,12,34,10,"step"],[29,16,34,14],[29,17,34,15,"done"],[29,21,34,2],[29,23,34,21],[30,0,35,4,"acc"],[30,6,35,4,"acc"],[30,9,35,7],[30,12,35,10,"xf"],[30,14,35,12],[30,15,35,13],[30,34,35,12],[30,35,35,10],[30,36,35,34,"acc"],[30,39,35,10],[30,41,35,39,"step"],[30,45,35,43],[30,46,35,44,"value"],[30,51,35,10],[30,52,35,4],[32,0,37,4],[32,10,37,8,"acc"],[32,13,37,11],[32,17,37,15,"acc"],[32,20,37,18],[32,21,37,19],[32,43,37,18],[32,44,37,4],[32,46,37,44],[33,0,38,6,"acc"],[33,8,38,6,"acc"],[33,11,38,9],[33,14,38,12,"acc"],[33,17,38,15],[33,18,38,16],[33,38,38,15],[33,39,38,6],[34,0,39,6],[35,0,40,5],[37,0,42,4,"step"],[37,6,42,4,"step"],[37,10,42,8],[37,13,42,11,"iter"],[37,17,42,15],[37,18,42,16,"next"],[37,22,42,11],[37,24,42,4],[38,0,43,3],[40,0,45,2],[40,11,45,9,"xf"],[40,13,45,11],[40,14,45,12],[40,35,45,11],[40,36,45,9],[40,37,45,35,"acc"],[40,40,45,9],[40,41,45,2],[41,0,46,1],[43,0,48,0],[43,11,48,9,"_methodReduce"],[43,24,48,0],[43,25,48,23,"xf"],[43,27,48,0],[43,29,48,27,"acc"],[43,32,48,0],[43,34,48,32,"obj"],[43,37,48,0],[43,39,48,37,"methodName"],[43,49,48,0],[43,51,48,49],[44,0,49,2],[44,11,49,9,"xf"],[44,13,49,11],[44,14,49,12],[44,35,49,11],[44,36,49,9],[44,37,49,35,"obj"],[44,40,49,38],[44,41,49,39,"methodName"],[44,51,49,38],[44,52,49,35],[44,53,49,51,"bind"],[44,57,49,55],[44,58,49,56,"xf"],[44,60,49,58],[44,61,49,59],[44,80,49,58],[44,81,49,55],[44,83,49,81,"xf"],[44,85,49,55],[44,86,49,35],[44,88,49,86,"acc"],[44,91,49,35],[44,92,49,9],[44,93,49,2],[45,0,50,1],[47,0,52,0],[47,6,52,4,"symIterator"],[47,17,52,15],[47,20,52,18],[47,27,52,25,"Symbol"],[47,33,52,18],[47,38,52,36],[47,49,52,18],[47,52,52,50,"Symbol"],[47,58,52,56],[47,59,52,57,"iterator"],[47,67,52,18],[47,70,52,68],[47,82,52,0],[49,0,54,0],[49,11,54,9,"_reduce"],[49,18,54,0],[49,19,54,17,"fn"],[49,21,54,0],[49,23,54,21,"acc"],[49,26,54,0],[49,28,54,26,"list"],[49,32,54,0],[49,34,54,32],[50,0,55,2],[50,8,55,6],[50,15,55,13,"fn"],[50,17,55,6],[50,22,55,20],[50,32,55,2],[50,34,55,32],[51,0,56,4,"fn"],[51,6,56,4,"fn"],[51,8,56,6],[51,11,56,9,"_xwrap"],[51,17,56,15],[51,18,56,16,"fn"],[51,20,56,15],[51,21,56,4],[52,0,57,3],[54,0,59,2],[54,8,59,6,"_isArrayLike"],[54,20,59,18],[54,21,59,19,"list"],[54,25,59,18],[54,26,59,2],[54,28,59,26],[55,0,60,4],[55,13,60,11,"_arrayReduce"],[55,25,60,23],[55,26,60,24,"fn"],[55,28,60,23],[55,30,60,28,"acc"],[55,33,60,23],[55,35,60,33,"list"],[55,39,60,23],[55,40,60,4],[56,0,61,3],[58,0,63,2],[58,8,63,6],[58,15,63,13,"list"],[58,19,63,17],[58,20,63,18],[58,41,63,17],[58,42,63,6],[58,47,63,45],[58,57,63,2],[58,59,63,57],[59,0,64,4],[59,13,64,11,"_methodReduce"],[59,26,64,24],[59,27,64,25,"fn"],[59,29,64,24],[59,31,64,29,"acc"],[59,34,64,24],[59,36,64,34,"list"],[59,40,64,24],[59,42,64,40],[59,63,64,24],[59,64,64,4],[60,0,65,3],[62,0,67,2],[62,8,67,6,"list"],[62,12,67,10],[62,13,67,11,"symIterator"],[62,24,67,10],[62,25,67,6],[62,29,67,27],[62,33,67,2],[62,35,67,33],[63,0,68,4],[63,13,68,11,"_iterableReduce"],[63,28,68,26],[63,29,68,27,"fn"],[63,31,68,26],[63,33,68,31,"acc"],[63,36,68,26],[63,38,68,36,"list"],[63,42,68,40],[63,43,68,41,"symIterator"],[63,54,68,40],[63,55,68,36],[63,57,68,26],[63,58,68,4],[64,0,69,3],[66,0,71,2],[66,8,71,6],[66,15,71,13,"list"],[66,19,71,17],[66,20,71,18,"next"],[66,24,71,6],[66,29,71,27],[66,39,71,2],[66,41,71,39],[67,0,72,4],[67,13,72,11,"_iterableReduce"],[67,28,72,26],[67,29,72,27,"fn"],[67,31,72,26],[67,33,72,31,"acc"],[67,36,72,26],[67,38,72,36,"list"],[67,42,72,26],[67,43,72,4],[68,0,73,3],[70,0,75,2],[70,8,75,6],[70,15,75,13,"list"],[70,19,75,17],[70,20,75,18,"reduce"],[70,26,75,6],[70,31,75,29],[70,41,75,2],[70,43,75,41],[71,0,76,4],[71,13,76,11,"_methodReduce"],[71,26,76,24],[71,27,76,25,"fn"],[71,29,76,24],[71,31,76,29,"acc"],[71,34,76,24],[71,36,76,34,"list"],[71,40,76,24],[71,42,76,40],[71,50,76,24],[71,51,76,4],[72,0,77,3],[74,0,79,2],[74,10,79,8],[74,14,79,12,"TypeError"],[74,23,79,8],[74,24,79,22],[74,64,79,8],[74,65,79,2],[75,0,80,1],[77,0,82,0,"module"],[77,2,82,0,"module"],[77,8,82,6],[77,9,82,7,"exports"],[77,16,82,0],[77,19,82,17,"_reduce"],[77,26,82,0]],"functionMap":{"names":["<global>","_arrayReduce","_iterableReduce","_methodReduce","_reduce"],"mappings":"AAA;ACY;CDgB;AEE;CFe;AGE;CHE;AII;CJ0B"}},"type":"js/module"}]}