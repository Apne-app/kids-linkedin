{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XTakeWhile = function () {\n    function XTakeWhile(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n    XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n    XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n      return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n    };\n\n    return XTakeWhile;\n  }();\n\n  var _xtakeWhile = _curry2(function _xtakeWhile(f, xf) {\n    return new XTakeWhile(f, xf);\n  });\n\n  module.exports = _xtakeWhile;\n});","lineCount":29,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_reduced"],[4,14,5,12],[4,17,7,0,"require"],[4,28,7,7],[4,61,5,0],[6,0,9,0],[6,6,9,4,"_xfBase"],[6,13,9,11],[6,16,11,0,"require"],[6,27,11,7],[6,59,9,0],[8,0,13,0],[8,6,13,4,"XTakeWhile"],[8,16,13,14],[8,19,15,0],[8,31,15,12],[9,0,16,2],[9,13,16,11,"XTakeWhile"],[9,23,16,2],[9,24,16,22,"f"],[9,25,16,2],[9,27,16,25,"xf"],[9,29,16,2],[9,31,16,29],[10,0,17,4],[10,11,17,9,"xf"],[10,13,17,4],[10,16,17,14,"xf"],[10,18,17,4],[11,0,18,4],[11,11,18,9,"f"],[11,12,18,4],[11,15,18,13,"f"],[11,16,18,4],[12,0,19,3],[14,0,21,2,"XTakeWhile"],[14,4,21,2,"XTakeWhile"],[14,14,21,12],[14,15,21,13,"prototype"],[14,24,21,2],[14,25,21,23],[14,44,21,2],[14,48,21,46,"_xfBase"],[14,55,21,53],[14,56,21,54,"init"],[14,60,21,2],[15,0,22,2,"XTakeWhile"],[15,4,22,2,"XTakeWhile"],[15,14,22,12],[15,15,22,13,"prototype"],[15,24,22,2],[15,25,22,23],[15,46,22,2],[15,50,22,48,"_xfBase"],[15,57,22,55],[15,58,22,56,"result"],[15,64,22,2],[17,0,24,2,"XTakeWhile"],[17,4,24,2,"XTakeWhile"],[17,14,24,12],[17,15,24,13,"prototype"],[17,24,24,2],[17,25,24,23],[17,44,24,2],[17,48,24,46],[17,58,24,56,"result"],[17,64,24,46],[17,66,24,64,"input"],[17,71,24,46],[17,73,24,71],[18,0,25,4],[18,13,25,11],[18,18,25,16,"f"],[18,19,25,11],[18,20,25,18,"input"],[18,25,25,11],[18,29,25,27],[18,34,25,32,"xf"],[18,36,25,27],[18,37,25,35],[18,56,25,27],[18,58,25,56,"result"],[18,64,25,27],[18,66,25,64,"input"],[18,71,25,27],[18,72,25,11],[18,75,25,73,"_reduced"],[18,83,25,81],[18,84,25,82,"result"],[18,90,25,81],[18,91,25,4],[19,0,26,3],[19,5,24,2],[21,0,28,2],[21,11,28,9,"XTakeWhile"],[21,21,28,2],[22,0,29,1],[22,3,15,0],[22,5,13,0],[24,0,31,0],[24,6,31,4,"_xtakeWhile"],[24,17,31,15],[24,20,33,0,"_curry2"],[24,27,33,7],[24,28,33,8],[24,37,33,17,"_xtakeWhile"],[24,48,33,8],[24,49,33,29,"f"],[24,50,33,8],[24,52,33,32,"xf"],[24,54,33,8],[24,56,33,36],[25,0,34,2],[25,11,34,9],[25,15,34,13,"XTakeWhile"],[25,25,34,9],[25,26,34,24,"f"],[25,27,34,9],[25,29,34,27,"xf"],[25,31,34,9],[25,32,34,2],[26,0,35,1],[26,3,33,7],[26,4,31,0],[28,0,37,0,"module"],[28,2,37,0,"module"],[28,8,37,6],[28,9,37,7,"exports"],[28,16,37,0],[28,19,37,17,"_xtakeWhile"],[28,30,37,0]],"functionMap":{"names":["<global>","<anonymous>","XTakeWhile","XTakeWhile.prototype.transducerStep","_xtakeWhile"],"mappings":"AAA;ACc;ECC;GDG;8CEK;GFE;CDG;QII;CJE"}},"type":"js/module"}]}