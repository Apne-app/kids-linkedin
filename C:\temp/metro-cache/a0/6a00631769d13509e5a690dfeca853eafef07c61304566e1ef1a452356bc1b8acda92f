{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"../../core/theming","data":{"isAsync":false,"locs":[]}},{"name":"color","data":{"isAsync":false,"locs":[]}},{"name":"../IconButton","data":{"isAsync":false,"locs":[]}},{"name":"./ToggleButtonGroup","data":{"isAsync":false,"locs":[]}},{"name":"../../styles/colors","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ToggleButton = exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _theming = _$$_REQUIRE(_dependencyMap[6], \"../../core/theming\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"color\"));\n\n  var _IconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../IconButton\"));\n\n  var _ToggleButtonGroup = _$$_REQUIRE(_dependencyMap[9], \"./ToggleButtonGroup\");\n\n  var _colors = _$$_REQUIRE(_dependencyMap[10], \"../../styles/colors\");\n\n  var _this = this,\n      _jsxFileName = \"/media/shashwatmdas/Shashwat2/kids-linkedin/new-app/kids-linkedin/node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.tsx\";\n\n  var ToggleButton = function ToggleButton(_ref) {\n    var icon = _ref.icon,\n        size = _ref.size,\n        theme = _ref.theme,\n        accessibilityLabel = _ref.accessibilityLabel,\n        disabled = _ref.disabled,\n        style = _ref.style,\n        value = _ref.value,\n        status = _ref.status,\n        _onPress = _ref.onPress,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"icon\", \"size\", \"theme\", \"accessibilityLabel\", \"disabled\", \"style\", \"value\", \"status\", \"onPress\"]);\n    var borderRadius = theme.roundness;\n    return React.createElement(_ToggleButtonGroup.ToggleButtonGroupContext.Consumer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, function (context) {\n      var backgroundColor;\n      var checked = context && context.value === value || status === 'checked';\n\n      if (checked) {\n        backgroundColor = theme.dark ? 'rgba(255, 255, 255, .12)' : 'rgba(0, 0, 0, .08)';\n      } else {\n        backgroundColor = 'transparent';\n      }\n\n      return React.createElement(_IconButton.default, (0, _extends2.default)({\n        borderless: false,\n        icon: icon,\n        onPress: function onPress(e) {\n          if (_onPress) {\n            _onPress(e);\n          }\n\n          if (context) {\n            context.onValueChange(!checked ? value : null);\n          }\n        },\n        size: size,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: {\n          disabled: disabled,\n          selected: checked\n        },\n        disabled: disabled,\n        style: [styles.content, {\n          backgroundColor: backgroundColor,\n          borderRadius: borderRadius,\n          borderColor: (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.29).rgb().string()\n        }, style]\n      }, rest, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      width: 42,\n      height: 42,\n      margin: 0\n    }\n  });\n\n  var _default = (0, _theming.withTheme)(ToggleButton);\n\n  exports.default = _default;\n  var ToggleButtonWithTheme = (0, _theming.withTheme)(ToggleButton);\n  exports.ToggleButton = ToggleButtonWithTheme;\n});","lineCount":109,"map":[[15,0,1,0],[17,0,2,0],[19,0,8,0],[21,0,9,0],[23,0,10,0],[25,0,11,0],[27,0,12,0],[32,0,89,0],[32,6,89,6,"ToggleButton"],[32,18,89,18],[32,21,89,21],[32,30,89,6,"ToggleButton"],[32,42,89,21],[32,49,100,13],[33,0,100,13],[33,8,90,2,"icon"],[33,12,100,13],[33,20,90,2,"icon"],[33,24,100,13],[34,0,100,13],[34,8,91,2,"size"],[34,12,100,13],[34,20,91,2,"size"],[34,24,100,13],[35,0,100,13],[35,8,92,2,"theme"],[35,13,100,13],[35,21,92,2,"theme"],[35,26,100,13],[36,0,100,13],[36,8,93,2,"accessibilityLabel"],[36,26,100,13],[36,34,93,2,"accessibilityLabel"],[36,52,100,13],[37,0,100,13],[37,8,94,2,"disabled"],[37,16,100,13],[37,24,94,2,"disabled"],[37,32,100,13],[38,0,100,13],[38,8,95,2,"style"],[38,13,100,13],[38,21,95,2,"style"],[38,26,100,13],[39,0,100,13],[39,8,96,2,"value"],[39,13,100,13],[39,21,96,2,"value"],[39,26,100,13],[40,0,100,13],[40,8,97,2,"status"],[40,14,100,13],[40,22,97,2,"status"],[40,28,100,13],[41,0,100,13],[41,8,98,2,"onPress"],[41,16,100,13],[41,24,98,2,"onPress"],[41,31,100,13],[42,0,100,13],[42,8,99,5,"rest"],[42,12,100,13],[43,0,101,2],[43,8,101,8,"borderRadius"],[43,20,101,20],[43,23,101,23,"theme"],[43,28,101,28],[43,29,101,29,"roundness"],[43,38,101,2],[44,0,103,2],[44,11,104,4],[44,31,104,5],[44,74,104,4],[44,75,104,30],[44,83,104,4],[45,0,104,4],[46,0,104,4],[47,0,104,4],[48,0,104,4],[49,0,104,4],[50,0,104,4],[51,0,104,4],[51,7,105,7],[51,17,105,8,"context"],[51,24,105,7],[51,26,105,71],[52,0,106,8],[52,10,106,12,"backgroundColor"],[52,25,106,8],[53,0,108,8],[53,10,108,14,"checked"],[53,17,108,37],[53,20,109,11,"context"],[53,27,109,18],[53,31,109,22,"context"],[53,38,109,29],[53,39,109,30,"value"],[53,44,109,22],[53,49,109,40,"value"],[53,54,109,10],[53,58,109,50,"status"],[53,64,109,56],[53,69,109,61],[53,78,108,8],[55,0,111,8],[55,10,111,12,"checked"],[55,17,111,8],[55,19,111,21],[56,0,112,10,"backgroundColor"],[56,8,112,10,"backgroundColor"],[56,23,112,25],[56,26,112,28,"theme"],[56,31,112,33],[56,32,112,34,"dark"],[56,36,112,28],[56,39,113,14],[56,65,112,28],[56,68,114,14],[56,88,112,10],[57,0,115,9],[57,7,111,8],[57,13,115,15],[58,0,116,10,"backgroundColor"],[58,8,116,10,"backgroundColor"],[58,23,116,25],[58,26,116,28],[58,39,116,10],[59,0,117,9],[61,0,119,8],[61,13,120,10],[61,33,120,11],[61,52,120,10],[62,0,121,12],[62,8,121,12],[62,18,121,22],[62,20,121,24],[62,25,120,10],[63,0,122,12],[63,8,122,12],[63,12,122,16],[63,14,122,18,"icon"],[63,18,120,10],[64,0,123,12],[64,8,123,12],[64,15,123,19],[64,17,123,21],[64,34,123,22,"e"],[64,35,123,21],[64,37,123,61],[65,0,124,14],[65,14,124,18,"onPress"],[65,22,124,14],[65,24,124,27],[66,0,125,16,"onPress"],[66,12,125,16,"onPress"],[66,20,125,23],[66,21,125,24,"e"],[66,22,125,23],[66,23,125,16],[67,0,126,15],[69,0,128,14],[69,14,128,18,"context"],[69,21,128,14],[69,23,128,27],[70,0,129,16,"context"],[70,12,129,16,"context"],[70,19,129,23],[70,20,129,24,"onValueChange"],[70,33,129,16],[70,34,129,38],[70,35,129,39,"checked"],[70,42,129,38],[70,45,129,49,"value"],[70,50,129,38],[70,53,129,57],[70,57,129,16],[71,0,130,15],[72,0,131,13],[72,9,120,10],[73,0,132,12],[73,8,132,12],[73,12,132,16],[73,14,132,18,"size"],[73,18,120,10],[74,0,133,12],[74,8,133,12],[74,26,133,30],[74,28,133,32,"accessibilityLabel"],[74,46,120,10],[75,0,134,12],[75,8,134,12],[75,26,134,30],[75,28,134,32],[76,0,134,34,"disabled"],[76,10,134,34,"disabled"],[76,18,134,42],[76,20,134,34,"disabled"],[76,28,134,32],[77,0,134,44,"selected"],[77,10,134,44,"selected"],[77,18,134,52],[77,20,134,54,"checked"],[78,0,134,32],[78,9,120,10],[79,0,135,12],[79,8,135,12],[79,16,135,20],[79,18,135,22,"disabled"],[79,26,120,10],[80,0,136,12],[80,8,136,12],[80,13,136,17],[80,15,136,19],[80,16,137,14,"styles"],[80,22,137,20],[80,23,137,21,"content"],[80,30,136,19],[80,32,138,14],[81,0,139,16,"backgroundColor"],[81,10,139,16,"backgroundColor"],[81,25,139,31],[81,27,139,16,"backgroundColor"],[81,42,138,14],[82,0,140,16,"borderRadius"],[82,10,140,16,"borderRadius"],[82,22,140,28],[82,24,140,16,"borderRadius"],[82,36,138,14],[83,0,141,16,"borderColor"],[83,10,141,16,"borderColor"],[83,21,141,27],[83,23,141,29],[83,43,141,35,"theme"],[83,48,141,40],[83,49,141,41,"dark"],[83,53,141,35],[83,56,141,48,"white"],[83,69,141,35],[83,72,141,56,"black"],[83,85,141,29],[83,87,142,19,"alpha"],[83,92,141,29],[83,93,142,25],[83,97,141,29],[83,99,143,19,"rgb"],[83,102,141,29],[83,105,144,19,"string"],[83,111,141,29],[84,0,138,14],[84,9,136,19],[84,11,146,14,"style"],[84,16,136,19],[85,0,120,10],[85,9,148,16,"rest"],[85,13,120,10],[86,0,120,10],[87,0,120,10],[88,0,120,10],[89,0,120,10],[90,0,120,10],[91,0,120,10],[92,0,120,10],[92,9,119,8],[93,0,151,7],[93,5,104,4],[93,6,103,2],[94,0,154,1],[94,3,89,0],[96,0,156,0],[96,6,156,6,"styles"],[96,12,156,12],[96,15,156,15,"StyleSheet"],[96,39,156,26,"create"],[96,45,156,15],[96,46,156,33],[97,0,157,2,"content"],[97,4,157,2,"content"],[97,11,157,9],[97,13,157,11],[98,0,158,4,"width"],[98,6,158,4,"width"],[98,11,158,9],[98,13,158,11],[98,15,157,11],[99,0,159,4,"height"],[99,6,159,4,"height"],[99,12,159,10],[99,14,159,12],[99,16,157,11],[100,0,160,4,"margin"],[100,6,160,4,"margin"],[100,12,160,10],[100,14,160,12],[101,0,157,11],[102,0,156,33],[102,3,156,15],[102,4,156,0],[104,17,164,15],[104,41,164,25,"ToggleButton"],[104,53,164,15],[104,54],[107,0,167,0],[107,6,167,6,"ToggleButtonWithTheme"],[107,27,167,27],[107,30,167,30],[107,54,167,40,"ToggleButton"],[107,66,167,30],[107,67,167,0]],"functionMap":{"names":["<global>","ToggleButton","ToggleButtonGroupContext.Consumer.props.children","IconButton.props.onPress"],"mappings":"AAA;qBCwF;OCgB;qBCkB;aDQ;ODoB;CDG"}},"type":"js/module"}]}