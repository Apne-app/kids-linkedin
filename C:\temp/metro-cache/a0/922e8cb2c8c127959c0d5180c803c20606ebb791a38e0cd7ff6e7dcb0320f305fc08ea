{"dependencies":[{"name":"./internal/_curry2","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":29}}]}},{"name":"./internal/_isFunction","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}]}},{"name":"./curryN","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":19}}]}},{"name":"./toString","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":21}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./internal/_curry2\");\n\n  var _isFunction = _$$_REQUIRE(_dependencyMap[1], \"./internal/_isFunction\");\n\n  var curryN = _$$_REQUIRE(_dependencyMap[2], \"./curryN\");\n\n  var toString = _$$_REQUIRE(_dependencyMap[3], \"./toString\");\n\n  var invoker = _curry2(function invoker(arity, method) {\n    return curryN(arity + 1, function () {\n      var target = arguments[arity];\n\n      if (target != null && _isFunction(target[method])) {\n        return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n      }\n\n      throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n    });\n  });\n\n  module.exports = invoker;\n});","lineCount":23,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,68,1,0],[4,0,5,0],[4,6,5,4,"_isFunction"],[4,17,5,15],[4,20,7,0,"require"],[4,31,7,7],[4,76,5,0],[6,0,9,0],[6,6,9,4,"curryN"],[6,12,9,10],[6,15,11,0,"require"],[6,26,11,7],[6,57,9,0],[8,0,13,0],[8,6,13,4,"toString"],[8,14,13,12],[8,17,15,0,"require"],[8,28,15,7],[8,61,13,0],[10,0,52,0],[10,6,52,4,"invoker"],[10,13,52,11],[10,16,54,0,"_curry2"],[10,23,54,7],[10,24,54,8],[10,33,54,17,"invoker"],[10,40,54,8],[10,41,54,25,"arity"],[10,46,54,8],[10,48,54,32,"method"],[10,54,54,8],[10,56,54,40],[11,0,55,2],[11,11,55,9,"curryN"],[11,17,55,15],[11,18,55,16,"arity"],[11,23,55,21],[11,26,55,24],[11,27,55,15],[11,29,55,27],[11,41,55,39],[12,0,56,4],[12,10,56,8,"target"],[12,16,56,14],[12,19,56,17,"arguments"],[12,28,56,26],[12,29,56,27,"arity"],[12,34,56,26],[12,35,56,4],[14,0,58,4],[14,10,58,8,"target"],[14,16,58,14],[14,20,58,18],[14,24,58,8],[14,28,58,26,"_isFunction"],[14,39,58,37],[14,40,58,38,"target"],[14,46,58,44],[14,47,58,45,"method"],[14,53,58,44],[14,54,58,37],[14,55,58,4],[14,57,58,55],[15,0,59,6],[15,15,59,13,"target"],[15,21,59,19],[15,22,59,20,"method"],[15,28,59,19],[15,29,59,13],[15,30,59,28,"apply"],[15,35,59,13],[15,36,59,34,"target"],[15,42,59,13],[15,44,59,42,"Array"],[15,49,59,47],[15,50,59,48,"prototype"],[15,59,59,42],[15,60,59,58,"slice"],[15,65,59,42],[15,66,59,64,"call"],[15,70,59,42],[15,71,59,69,"arguments"],[15,80,59,42],[15,82,59,80],[15,83,59,42],[15,85,59,83,"arity"],[15,90,59,42],[15,91,59,13],[15,92,59,6],[16,0,60,5],[18,0,62,4],[18,12,62,10],[18,16,62,14,"TypeError"],[18,25,62,10],[18,26,62,24,"toString"],[18,34,62,32],[18,35,62,33,"target"],[18,41,62,32],[18,42,62,24],[18,45,62,43],[18,78,62,24],[18,81,62,79,"method"],[18,87,62,24],[18,90,62,88],[18,93,62,10],[18,94,62,4],[19,0,63,3],[19,5,55,15],[19,6,55,2],[20,0,64,1],[20,3,54,7],[20,4,52,0],[22,0,66,0,"module"],[22,2,66,0,"module"],[22,8,66,6],[22,9,66,7,"exports"],[22,16,66,0],[22,19,66,17,"invoker"],[22,26,66,0]],"functionMap":{"names":["<global>","invoker","curryN$argument_1"],"mappings":"AAA;QCqD;2BCC;GDQ;CDC"}},"type":"js/module"}]}