{"dependencies":[{"name":"./_curry2","data":{"isAsync":false}},{"name":"./_reduced","data":{"isAsync":false}},{"name":"./_xfBase","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _reduced = _$$_REQUIRE(_dependencyMap[1], \"./_reduced\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[2], \"./_xfBase\");\n\n  var XTakeWhile = function () {\n    function XTakeWhile(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n    XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n    XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n      return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n    };\n\n    return XTakeWhile;\n  }();\n\n  var _xtakeWhile = _curry2(function _xtakeWhile(f, xf) {\n    return new XTakeWhile(f, xf);\n  });\n\n  module.exports = _xtakeWhile;\n});","lineCount":29,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,1,27,"require"],[2,27,1,34],[2,59,1,0],[4,0,3,0],[4,6,3,4,"_reduced"],[4,14,3,12],[4,17,3,28,"require"],[4,28,3,35],[4,61,3,0],[6,0,5,0],[6,6,5,4,"_xfBase"],[6,13,5,11],[6,16,5,27,"require"],[6,27,5,34],[6,59,5,0],[8,0,7,0],[8,6,7,4,"XTakeWhile"],[8,16,7,14],[8,19,7,30],[8,31,7,42],[9,0,9,2],[9,13,9,11,"XTakeWhile"],[9,23,9,2],[9,24,9,22,"f"],[9,25,9,2],[9,27,9,25,"xf"],[9,29,9,2],[9,31,9,29],[10,0,10,4],[10,11,10,9,"xf"],[10,13,10,4],[10,16,10,14,"xf"],[10,18,10,4],[11,0,11,4],[11,11,11,9,"f"],[11,12,11,4],[11,15,11,13,"f"],[11,16,11,4],[12,0,12,3],[14,0,13,2,"XTakeWhile"],[14,4,13,2,"XTakeWhile"],[14,14,13,12],[14,15,13,13,"prototype"],[14,24,13,2],[14,25,13,23],[14,44,13,2],[14,48,13,46,"_xfBase"],[14,55,13,53],[14,56,13,54,"init"],[14,60,13,2],[15,0,14,2,"XTakeWhile"],[15,4,14,2,"XTakeWhile"],[15,14,14,12],[15,15,14,13,"prototype"],[15,24,14,2],[15,25,14,23],[15,46,14,2],[15,50,14,48,"_xfBase"],[15,57,14,55],[15,58,14,56,"result"],[15,64,14,2],[17,0,15,2,"XTakeWhile"],[17,4,15,2,"XTakeWhile"],[17,14,15,12],[17,15,15,13,"prototype"],[17,24,15,2],[17,25,15,23],[17,44,15,2],[17,48,15,46],[17,58,15,56,"result"],[17,64,15,46],[17,66,15,64,"input"],[17,71,15,46],[17,73,15,71],[18,0,16,4],[18,13,16,11],[18,18,16,16,"f"],[18,19,16,11],[18,20,16,18,"input"],[18,25,16,11],[18,29,16,27],[18,34,16,32,"xf"],[18,36,16,27],[18,37,16,35],[18,56,16,27],[18,58,16,56,"result"],[18,64,16,27],[18,66,16,64,"input"],[18,71,16,27],[18,72,16,11],[18,75,16,73,"_reduced"],[18,83,16,81],[18,84,16,82,"result"],[18,90,16,81],[18,91,16,4],[19,0,17,3],[19,5,15,2],[21,0,19,2],[21,11,19,9,"XTakeWhile"],[21,21,19,2],[22,0,20,1],[22,3,7,30],[22,5,7,0],[24,0,22,0],[24,6,22,4,"_xtakeWhile"],[24,17,22,15],[24,20,22,31,"_curry2"],[24,27,22,38],[24,28,22,39],[24,37,22,48,"_xtakeWhile"],[24,48,22,39],[24,49,22,60,"f"],[24,50,22,39],[24,52,22,63,"xf"],[24,54,22,39],[24,56,22,67],[25,0,23,2],[25,11,23,9],[25,15,23,13,"XTakeWhile"],[25,25,23,9],[25,26,23,24,"f"],[25,27,23,9],[25,29,23,27,"xf"],[25,31,23,9],[25,32,23,2],[26,0,24,1],[26,3,22,38],[26,4,22,0],[28,0,25,0,"module"],[28,2,25,0,"module"],[28,8,25,6],[28,9,25,7,"exports"],[28,16,25,0],[28,19,25,17,"_xtakeWhile"],[28,30,25,0]],"functionMap":{"names":["<global>","<anonymous>","XTakeWhile","XTakeWhile.prototype.transducerStep","_xtakeWhile"],"mappings":"AAA;8BCM;ECE;GDG;8CEG;GFE;CDG;uCIE;CJE"}},"type":"js/module"}]}