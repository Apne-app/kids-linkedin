{"dependencies":[{"name":"./core","data":{"isAsync":false}},{"name":"./cipher-core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  ;\n\n  (function (root, factory, undef) {\n    if (typeof exports === \"object\") {\n      module.exports = exports = factory(_$$_REQUIRE(_dependencyMap[0], \"./core\"), _$$_REQUIRE(_dependencyMap[1], \"./cipher-core\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      define([\"./core\", \"./cipher-core\"], factory);\n    } else {\n      factory(root.CryptoJS);\n    }\n  })(this, function (CryptoJS) {\n    /** @preserve\n     * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n     * derived from CryptoJS.mode.CTR\n     * Jan Hruby jhruby.web@gmail.com\n     */\n    CryptoJS.mode.CTRGladman = function () {\n      var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n      function incWord(word) {\n        if ((word >> 24 & 0xff) === 0xff) {\n          var b1 = word >> 16 & 0xff;\n          var b2 = word >> 8 & 0xff;\n          var b3 = word & 0xff;\n\n          if (b1 === 0xff) {\n              b1 = 0;\n\n              if (b2 === 0xff) {\n                b2 = 0;\n\n                if (b3 === 0xff) {\n                  b3 = 0;\n                } else {\n                  ++b3;\n                }\n              } else {\n                ++b2;\n              }\n            } else {\n            ++b1;\n          }\n\n          word = 0;\n          word += b1 << 16;\n          word += b2 << 8;\n          word += b3;\n        } else {\n          word += 0x01 << 24;\n        }\n\n        return word;\n      }\n\n      function incCounter(counter) {\n        if ((counter[0] = incWord(counter[0])) === 0) {\n          counter[1] = incWord(counter[1]);\n        }\n\n        return counter;\n      }\n\n      var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n        processBlock: function processBlock(words, offset) {\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n          var iv = this._iv;\n          var counter = this._counter;\n\n          if (iv) {\n            counter = this._counter = iv.slice(0);\n            this._iv = undefined;\n          }\n\n          incCounter(counter);\n          var keystream = counter.slice(0);\n          cipher.encryptBlock(keystream, 0);\n\n          for (var i = 0; i < blockSize; i++) {\n            words[offset + i] ^= keystream[i];\n          }\n        }\n      });\n      CTRGladman.Decryptor = Encryptor;\n      return CTRGladman;\n    }();\n\n    return CryptoJS.mode.CTRGladman;\n  });\n});","lineCount":91,"map":[[2,0,1,0],[4,0,1,2],[4,13,1,12,"root"],[4,17,1,2],[4,19,1,18,"factory"],[4,26,1,2],[4,28,1,27,"undef"],[4,33,1,2],[4,35,1,34],[5,0,2,1],[5,8,2,5],[5,15,2,12,"exports"],[5,22,2,5],[5,27,2,24],[5,35,2,1],[5,37,2,34],[6,0,4,2,"module"],[6,6,4,2,"module"],[6,12,4,8],[6,13,4,9,"exports"],[6,20,4,2],[6,23,4,19,"exports"],[6,30,4,26],[6,33,4,29,"factory"],[6,40,4,36],[6,41,4,37,"require"],[6,52,4,44],[6,81,4,36],[6,83,4,56,"require"],[6,94,4,63],[6,130,4,36],[6,131,4,2],[7,0,5,2],[7,5,2,1],[7,11,6,6],[7,15,6,10],[7,22,6,17,"define"],[7,28,6,10],[7,33,6,28],[7,43,6,10],[7,47,6,42,"define"],[7,53,6,48],[7,54,6,49,"amd"],[7,57,6,6],[7,59,6,54],[8,0,8,2,"define"],[8,6,8,2,"define"],[8,12,8,8],[8,13,8,9],[8,14,8,10],[8,22,8,9],[8,24,8,20],[8,39,8,9],[8,40,8,8],[8,42,8,38,"factory"],[8,49,8,8],[8,50,8,2],[9,0,9,2],[9,5,6,6],[9,11,10,6],[10,0,12,2,"factory"],[10,6,12,2,"factory"],[10,13,12,9],[10,14,12,10,"root"],[10,18,12,14],[10,19,12,15,"CryptoJS"],[10,27,12,9],[10,28,12,2],[11,0,13,2],[12,0,14,1],[12,3,1,2],[12,5,14,2],[12,9,1,2],[12,11,14,8],[12,21,14,18,"CryptoJS"],[12,29,14,8],[12,31,14,28],[13,0,16,1],[18,0,21,1,"CryptoJS"],[18,4,21,1,"CryptoJS"],[18,12,21,9],[18,13,21,10,"mode"],[18,17,21,1],[18,18,21,15,"CTRGladman"],[18,28,21,1],[18,31,21,29],[18,43,21,41],[19,0,22,5],[19,10,22,9,"CTRGladman"],[19,20,22,19],[19,23,22,22,"CryptoJS"],[19,31,22,30],[19,32,22,31,"lib"],[19,35,22,22],[19,36,22,35,"BlockCipherMode"],[19,51,22,22],[19,52,22,51,"extend"],[19,58,22,22],[19,60,22,5],[21,0,24,2],[21,15,24,11,"incWord"],[21,22,24,2],[21,23,24,19,"word"],[21,27,24,2],[21,29,25,2],[22,0,26,3],[22,12,26,7],[22,13,26,9,"word"],[22,17,26,13],[22,21,26,17],[22,23,26,8],[22,26,26,23],[22,30,26,7],[22,36,26,33],[22,40,26,3],[22,42,26,39],[23,0,27,3],[23,14,27,7,"b1"],[23,16,27,9],[23,19,27,13,"word"],[23,23,27,17],[23,27,27,21],[23,29,27,12],[23,32,27,25],[23,36,27,3],[24,0,28,3],[24,14,28,7,"b2"],[24,16,28,9],[24,19,28,13,"word"],[24,23,28,17],[24,27,28,21],[24,28,28,12],[24,31,28,24],[24,35,28,3],[25,0,29,3],[25,14,29,7,"b3"],[25,16,29,9],[25,19,29,12,"word"],[25,23,29,16],[25,26,29,19],[25,30,29,3],[27,0,31,3],[27,14,31,7,"b1"],[27,16,31,9],[27,21,31,14],[27,25,31,3],[27,27,32,3],[28,0,33,3,"b1"],[28,14,33,3,"b1"],[28,16,33,5],[28,19,33,8],[28,20,33,3],[30,0,34,3],[30,18,34,7,"b2"],[30,20,34,9],[30,25,34,14],[30,29,34,3],[30,31,35,3],[31,0,36,4,"b2"],[31,16,36,4,"b2"],[31,18,36,6],[31,21,36,9],[31,22,36,4],[33,0,37,4],[33,20,37,8,"b3"],[33,22,37,10],[33,27,37,15],[33,31,37,4],[33,33,38,4],[34,0,39,5,"b3"],[34,18,39,5,"b3"],[34,20,39,7],[34,23,39,10],[34,24,39,5],[35,0,40,5],[35,17,37,4],[35,23,42,4],[36,0,43,5],[36,20,43,7,"b3"],[36,22,43,5],[37,0,44,5],[38,0,45,4],[38,15,34,3],[38,21,47,3],[39,0,48,4],[39,18,48,6,"b2"],[39,20,48,4],[40,0,49,4],[41,0,50,4],[41,13,31,3],[41,19,52,3],[42,0,53,3],[42,14,53,5,"b1"],[42,16,53,3],[43,0,54,4],[45,0,56,3,"word"],[45,10,56,3,"word"],[45,14,56,7],[45,17,56,10],[45,18,56,3],[46,0,57,3,"word"],[46,10,57,3,"word"],[46,14,57,7],[46,18,57,12,"b1"],[46,20,57,14],[46,24,57,18],[46,26,57,3],[47,0,58,3,"word"],[47,10,58,3,"word"],[47,14,58,7],[47,18,58,12,"b2"],[47,20,58,14],[47,24,58,18],[47,25,58,3],[48,0,59,3,"word"],[48,10,59,3,"word"],[48,14,59,7],[48,18,59,11,"b3"],[48,20,59,3],[49,0,60,4],[49,9,26,3],[49,15,62,3],[50,0,63,3,"word"],[50,10,63,3,"word"],[50,14,63,7],[50,18,63,12],[50,26,63,20],[50,28,63,3],[51,0,64,4],[53,0,65,3],[53,15,65,10,"word"],[53,19,65,3],[54,0,66,3],[56,0,68,2],[56,15,68,11,"incCounter"],[56,25,68,2],[56,26,68,22,"counter"],[56,33,68,2],[56,35,69,2],[57,0,70,3],[57,12,70,7],[57,13,70,8,"counter"],[57,20,70,15],[57,21,70,16],[57,22,70,15],[57,23,70,8],[57,26,70,21,"incWord"],[57,33,70,28],[57,34,70,29,"counter"],[57,41,70,36],[57,42,70,37],[57,43,70,36],[57,44,70,28],[57,45,70,7],[57,51,70,46],[57,52,70,3],[57,54,71,3],[58,0,73,4,"counter"],[58,10,73,4,"counter"],[58,17,73,11],[58,18,73,12],[58,19,73,11],[58,20,73,4],[58,23,73,17,"incWord"],[58,30,73,24],[58,31,73,25,"counter"],[58,38,73,32],[58,39,73,33],[58,40,73,32],[58,41,73,24],[58,42,73,4],[59,0,74,4],[61,0,75,3],[61,15,75,10,"counter"],[61,22,75,3],[62,0,76,3],[64,0,78,5],[64,10,78,9,"Encryptor"],[64,19,78,18],[64,22,78,21,"CTRGladman"],[64,32,78,31],[64,33,78,32,"Encryptor"],[64,42,78,21],[64,45,78,44,"CTRGladman"],[64,55,78,54],[64,56,78,55,"extend"],[64,62,78,44],[64,63,78,62],[65,0,79,9,"processBlock"],[65,8,79,9,"processBlock"],[65,20,79,21],[65,22,79,23],[65,44,79,33,"words"],[65,49,79,23],[65,51,79,40,"offset"],[65,57,79,23],[65,59,79,48],[66,0,81,13],[66,14,81,17,"cipher"],[66,20,81,23],[66,23,81,26],[66,28,81,31,"_cipher"],[66,35,81,13],[67,0,82,13],[67,14,82,17,"blockSize"],[67,23,82,26],[67,26,82,29,"cipher"],[67,32,82,35],[67,33,82,36,"blockSize"],[67,42,82,13],[68,0,83,13],[68,14,83,17,"iv"],[68,16,83,19],[68,19,83,22],[68,24,83,27,"_iv"],[68,27,83,13],[69,0,84,13],[69,14,84,17,"counter"],[69,21,84,24],[69,24,84,27],[69,29,84,32,"_counter"],[69,37,84,13],[71,0,87,13],[71,14,87,17,"iv"],[71,16,87,13],[71,18,87,21],[72,0,88,17,"counter"],[72,12,88,17,"counter"],[72,19,88,24],[72,22,88,27],[72,27,88,32,"_counter"],[72,35,88,27],[72,38,88,43,"iv"],[72,40,88,45],[72,41,88,46,"slice"],[72,46,88,43],[72,47,88,52],[72,48,88,43],[72,49,88,17],[73,0,91,17],[73,17,91,22,"_iv"],[73,20,91,17],[73,23,91,28,"undefined"],[73,32,91,17],[74,0,92,14],[76,0,94,4,"incCounter"],[76,10,94,4,"incCounter"],[76,20,94,14],[76,21,94,15,"counter"],[76,28,94,14],[76,29,94,4],[77,0,96,4],[77,14,96,8,"keystream"],[77,23,96,17],[77,26,96,20,"counter"],[77,33,96,27],[77,34,96,28,"slice"],[77,39,96,20],[77,40,96,34],[77,41,96,20],[77,42,96,4],[78,0,97,13,"cipher"],[78,10,97,13,"cipher"],[78,16,97,19],[78,17,97,20,"encryptBlock"],[78,29,97,13],[78,30,97,33,"keystream"],[78,39,97,13],[78,41,97,44],[78,42,97,13],[80,0,100,13],[80,15,100,18],[80,19,100,22,"i"],[80,20,100,23],[80,23,100,26],[80,24,100,13],[80,26,100,29,"i"],[80,27,100,30],[80,30,100,33,"blockSize"],[80,39,100,13],[80,41,100,44,"i"],[80,42,100,45],[80,44,100,13],[80,46,100,49],[81,0,101,17,"words"],[81,12,101,17,"words"],[81,17,101,22],[81,18,101,23,"offset"],[81,24,101,29],[81,27,101,32,"i"],[81,28,101,22],[81,29,101,17],[81,33,101,38,"keystream"],[81,42,101,47],[81,43,101,48,"i"],[81,44,101,47],[81,45,101,17],[82,0,102,14],[83,0,103,10],[84,0,78,62],[84,7,78,44],[84,8,78,5],[85,0,106,5,"CTRGladman"],[85,6,106,5,"CTRGladman"],[85,16,106,15],[85,17,106,16,"Decryptor"],[85,26,106,5],[85,29,106,28,"Encryptor"],[85,38,106,5],[86,0,108,5],[86,13,108,12,"CTRGladman"],[86,23,108,5],[87,0,109,2],[87,5,21,29],[87,7,21,1],[89,0,114,1],[89,11,114,8,"CryptoJS"],[89,19,114,16],[89,20,114,17,"mode"],[89,24,114,8],[89,25,114,22,"CTRGladman"],[89,35,114,1],[90,0,116,1],[90,3,1,2],[90,4,1,1]],"functionMap":{"names":["<global>","<anonymous>","incWord","incCounter","CTRGladman.extend$argument_0.processBlock"],"mappings":"AAA,EC;CDa,OC;ECU;GD0C;EEE;GFQ;uBGG;UHwB;CDa"}},"type":"js/module"}]}