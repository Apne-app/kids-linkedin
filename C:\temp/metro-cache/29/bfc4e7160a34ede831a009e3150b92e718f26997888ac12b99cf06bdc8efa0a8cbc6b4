{"dependencies":[{"name":"./internal/_curry2","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":29}}]}},{"name":"./internal/_isInteger","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}]}},{"name":"./nth","data":{"isAsync":false,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":16}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./internal/_curry2\");\n\n  var _isInteger = _$$_REQUIRE(_dependencyMap[1], \"./internal/_isInteger\");\n\n  var nth = _$$_REQUIRE(_dependencyMap[2], \"./nth\");\n\n  var paths = _curry2(function paths(pathsArray, obj) {\n    return pathsArray.map(function (paths) {\n      var val = obj;\n      var idx = 0;\n      var p;\n\n      while (idx < paths.length) {\n        if (val == null) {\n          return;\n        }\n\n        p = paths[idx];\n        val = _isInteger(p) ? nth(p, val) : val[p];\n        idx += 1;\n      }\n\n      return val;\n    });\n  });\n\n  module.exports = paths;\n});","lineCount":29,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,68,1,0],[4,0,5,0],[4,6,5,4,"_isInteger"],[4,16,5,14],[4,19,7,0,"require"],[4,30,7,7],[4,74,5,0],[6,0,9,0],[6,6,9,4,"nth"],[6,9,9,7],[6,12,11,0,"require"],[6,23,11,7],[6,51,9,0],[8,0,32,0],[8,6,32,4,"paths"],[8,11,32,9],[8,14,34,0,"_curry2"],[8,21,34,7],[8,22,34,8],[8,31,34,17,"paths"],[8,36,34,8],[8,37,34,23,"pathsArray"],[8,47,34,8],[8,49,34,35,"obj"],[8,52,34,8],[8,54,34,40],[9,0,35,2],[9,11,35,9,"pathsArray"],[9,21,35,19],[9,22,35,20,"map"],[9,25,35,9],[9,26,35,24],[9,36,35,34,"paths"],[9,41,35,24],[9,43,35,41],[10,0,36,4],[10,10,36,8,"val"],[10,13,36,11],[10,16,36,14,"obj"],[10,19,36,4],[11,0,37,4],[11,10,37,8,"idx"],[11,13,37,11],[11,16,37,14],[11,17,37,4],[12,0,38,4],[12,10,38,8,"p"],[12,11,38,4],[14,0,40,4],[14,13,40,11,"idx"],[14,16,40,14],[14,19,40,17,"paths"],[14,24,40,22],[14,25,40,23,"length"],[14,31,40,4],[14,33,40,31],[15,0,41,6],[15,12,41,10,"val"],[15,15,41,13],[15,19,41,17],[15,23,41,6],[15,25,41,23],[16,0,42,8],[17,0,43,7],[19,0,45,6,"p"],[19,8,45,6,"p"],[19,9,45,7],[19,12,45,10,"paths"],[19,17,45,15],[19,18,45,16,"idx"],[19,21,45,15],[19,22,45,6],[20,0,46,6,"val"],[20,8,46,6,"val"],[20,11,46,9],[20,14,46,12,"_isInteger"],[20,24,46,22],[20,25,46,23,"p"],[20,26,46,22],[20,27,46,12],[20,30,46,28,"nth"],[20,33,46,31],[20,34,46,32,"p"],[20,35,46,31],[20,37,46,35,"val"],[20,40,46,31],[20,41,46,12],[20,44,46,42,"val"],[20,47,46,45],[20,48,46,46,"p"],[20,49,46,45],[20,50,46,6],[21,0,47,6,"idx"],[21,8,47,6,"idx"],[21,11,47,9],[21,15,47,13],[21,16,47,6],[22,0,48,5],[24,0,50,4],[24,13,50,11,"val"],[24,16,50,4],[25,0,51,3],[25,5,35,9],[25,6,35,2],[26,0,52,1],[26,3,34,7],[26,4,32,0],[28,0,54,0,"module"],[28,2,54,0,"module"],[28,8,54,6],[28,9,54,7,"exports"],[28,16,54,0],[28,19,54,17,"paths"],[28,24,54,0]],"functionMap":{"names":["<global>","paths","pathsArray.map$argument_0"],"mappings":"AAA;QCiC;wBCC;GDgB;CDC"}},"type":"js/module"}]}