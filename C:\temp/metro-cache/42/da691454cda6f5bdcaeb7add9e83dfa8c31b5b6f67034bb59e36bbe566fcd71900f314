{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"../utils/createCustomError","data":{"isAsync":false}},{"name":"../definition-syntax/generate","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var createCustomError = _$$_REQUIRE(_dependencyMap[1], \"../utils/createCustomError\");\n\n  var generate = _$$_REQUIRE(_dependencyMap[2], \"../definition-syntax/generate\");\n\n  var defaultLoc = {\n    offset: 0,\n    line: 1,\n    column: 1\n  };\n\n  function locateMismatch(matchResult, node) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    var badNode = mismatchNode !== node ? mismatchNode : null;\n    var mismatchOffset = 0;\n    var mismatchLength = 0;\n    var entries = 0;\n    var css = '';\n    var start;\n    var end;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i].value;\n\n      if (i === longestMatch) {\n        mismatchLength = token.length;\n        mismatchOffset = css.length;\n      }\n\n      if (badNode !== null && tokens[i].node === badNode) {\n        if (i <= longestMatch) {\n          entries++;\n        } else {\n          entries = 0;\n        }\n      }\n\n      css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) {\n      start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n      end = buildLoc(start);\n    } else {\n      start = fromLoc(badNode, 'start') || buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n      end = fromLoc(badNode, 'end') || buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n      css: css,\n      mismatchOffset: mismatchOffset,\n      mismatchLength: mismatchLength,\n      start: start,\n      end: end\n    };\n  }\n\n  function fromLoc(node, point) {\n    var value = node && node.loc && node.loc[point];\n\n    if (value) {\n      return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n  }\n\n  function buildLoc(_ref, extra) {\n    var offset = _ref.offset,\n        line = _ref.line,\n        column = _ref.column;\n    var loc = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n\n    if (extra) {\n      var lines = extra.split(/\\n|\\r\\n?|\\f/);\n      loc.offset += extra.length;\n      loc.line += lines.length - 1;\n      loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n  }\n\n  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {\n    var error = createCustomError('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));\n    error.reference = referenceName;\n    return error;\n  };\n\n  var SyntaxMatchError = function SyntaxMatchError(message, syntax, node, matchResult) {\n    var error = createCustomError('SyntaxMatchError', message);\n\n    var _locateMismatch = locateMismatch(matchResult, node),\n        css = _locateMismatch.css,\n        mismatchOffset = _locateMismatch.mismatchOffset,\n        mismatchLength = _locateMismatch.mismatchLength,\n        start = _locateMismatch.start,\n        end = _locateMismatch.end;\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' + '  syntax: ' + error.syntax + '\\n' + '   value: ' + (css || '<empty string>') + '\\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    _extends(error, start);\n\n    error.loc = {\n      source: node && node.loc && node.loc.source || '<unknown>',\n      start: start,\n      end: end\n    };\n    return error;\n  };\n\n  module.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    SyntaxMatchError: SyntaxMatchError\n  };\n});","lineCount":129,"map":[[4,0,1,0],[4,6,1,6,"createCustomError"],[4,23,1,23],[4,26,1,26,"require"],[4,37,1,33],[4,86,1,0],[6,0,2,0],[6,6,2,6,"generate"],[6,14,2,14],[6,17,2,17,"require"],[6,28,2,24],[6,80,2,0],[8,0,3,0],[8,6,3,6,"defaultLoc"],[8,16,3,16],[8,19,3,19],[9,0,3,21,"offset"],[9,4,3,21,"offset"],[9,10,3,27],[9,12,3,29],[9,13,3,19],[10,0,3,32,"line"],[10,4,3,32,"line"],[10,8,3,36],[10,10,3,38],[10,11,3,19],[11,0,3,41,"column"],[11,4,3,41,"column"],[11,10,3,47],[11,12,3,49],[12,0,3,19],[12,3,3,0],[14,0,5,0],[14,11,5,9,"locateMismatch"],[14,25,5,0],[14,26,5,24,"matchResult"],[14,37,5,0],[14,39,5,37,"node"],[14,43,5,0],[14,45,5,43],[15,0,6,4],[15,8,6,10,"tokens"],[15,14,6,16],[15,17,6,19,"matchResult"],[15,28,6,30],[15,29,6,31,"tokens"],[15,35,6,4],[16,0,7,4],[16,8,7,10,"longestMatch"],[16,20,7,22],[16,23,7,25,"matchResult"],[16,34,7,36],[16,35,7,37,"longestMatch"],[16,47,7,4],[17,0,8,4],[17,8,8,10,"mismatchNode"],[17,20,8,22],[17,23,8,25,"longestMatch"],[17,35,8,37],[17,38,8,40,"tokens"],[17,44,8,46],[17,45,8,47,"length"],[17,51,8,25],[17,54,8,56,"tokens"],[17,60,8,62],[17,61,8,63,"longestMatch"],[17,73,8,62],[17,74,8,56],[17,75,8,77,"node"],[17,79,8,56],[17,83,8,85],[17,87,8,25],[17,90,8,92],[17,94,8,4],[18,0,9,4],[18,8,9,10,"badNode"],[18,15,9,17],[18,18,9,20,"mismatchNode"],[18,30,9,32],[18,35,9,37,"node"],[18,39,9,20],[18,42,9,44,"mismatchNode"],[18,54,9,20],[18,57,9,59],[18,61,9,4],[19,0,10,4],[19,8,10,8,"mismatchOffset"],[19,22,10,22],[19,25,10,25],[19,26,10,4],[20,0,11,4],[20,8,11,8,"mismatchLength"],[20,22,11,22],[20,25,11,25],[20,26,11,4],[21,0,12,4],[21,8,12,8,"entries"],[21,15,12,15],[21,18,12,18],[21,19,12,4],[22,0,13,4],[22,8,13,8,"css"],[22,11,13,11],[22,14,13,14],[22,16,13,4],[23,0,14,4],[23,8,14,8,"start"],[23,13,14,4],[24,0,15,4],[24,8,15,8,"end"],[24,11,15,4],[26,0,17,4],[26,9,17,9],[26,13,17,13,"i"],[26,14,17,14],[26,17,17,17],[26,18,17,4],[26,20,17,20,"i"],[26,21,17,21],[26,24,17,24,"tokens"],[26,30,17,30],[26,31,17,31,"length"],[26,37,17,4],[26,39,17,39,"i"],[26,40,17,40],[26,42,17,4],[26,44,17,44],[27,0,18,8],[27,10,18,14,"token"],[27,15,18,19],[27,18,18,22,"tokens"],[27,24,18,28],[27,25,18,29,"i"],[27,26,18,28],[27,27,18,22],[27,28,18,32,"value"],[27,33,18,8],[29,0,20,8],[29,10,20,12,"i"],[29,11,20,13],[29,16,20,18,"longestMatch"],[29,28,20,8],[29,30,20,32],[30,0,21,12,"mismatchLength"],[30,8,21,12,"mismatchLength"],[30,22,21,26],[30,25,21,29,"token"],[30,30,21,34],[30,31,21,35,"length"],[30,37,21,12],[31,0,22,12,"mismatchOffset"],[31,8,22,12,"mismatchOffset"],[31,22,22,26],[31,25,22,29,"css"],[31,28,22,32],[31,29,22,33,"length"],[31,35,22,12],[32,0,23,9],[34,0,25,8],[34,10,25,12,"badNode"],[34,17,25,19],[34,22,25,24],[34,26,25,12],[34,30,25,32,"tokens"],[34,36,25,38],[34,37,25,39,"i"],[34,38,25,38],[34,39,25,32],[34,40,25,42,"node"],[34,44,25,32],[34,49,25,51,"badNode"],[34,56,25,8],[34,58,25,60],[35,0,26,12],[35,12,26,16,"i"],[35,13,26,17],[35,17,26,21,"longestMatch"],[35,29,26,12],[35,31,26,35],[36,0,27,16,"entries"],[36,10,27,16,"entries"],[36,17,27,23],[37,0,28,13],[37,9,26,12],[37,15,28,19],[38,0,29,16,"entries"],[38,10,29,16,"entries"],[38,17,29,23],[38,20,29,26],[38,21,29,16],[39,0,30,13],[40,0,31,9],[42,0,33,8,"css"],[42,6,33,8,"css"],[42,9,33,11],[42,13,33,15,"token"],[42,18,33,8],[43,0,34,5],[45,0,36,4],[45,8,36,8,"longestMatch"],[45,20,36,20],[45,25,36,25,"tokens"],[45,31,36,31],[45,32,36,32,"length"],[45,38,36,8],[45,42,36,42,"entries"],[45,49,36,49],[45,52,36,52],[45,53,36,4],[45,55,36,55],[46,0,37,8,"start"],[46,6,37,8,"start"],[46,11,37,13],[46,14,37,16,"fromLoc"],[46,21,37,23],[46,22,37,24,"badNode"],[46,29,37,31],[46,33,37,35,"node"],[46,37,37,23],[46,39,37,41],[46,44,37,23],[46,45,37,16],[46,49,37,51,"buildLoc"],[46,57,37,59],[46,58,37,60,"defaultLoc"],[46,68,37,59],[46,70,37,72,"css"],[46,73,37,59],[46,74,37,8],[47,0,38,8,"end"],[47,6,38,8,"end"],[47,9,38,11],[47,12,38,14,"buildLoc"],[47,20,38,22],[47,21,38,23,"start"],[47,26,38,22],[47,27,38,8],[48,0,39,5],[48,5,36,4],[48,11,39,11],[49,0,40,8,"start"],[49,6,40,8,"start"],[49,11,40,13],[49,14,40,16,"fromLoc"],[49,21,40,23],[49,22,40,24,"badNode"],[49,29,40,23],[49,31,40,33],[49,38,40,23],[49,39,40,16],[49,43,41,12,"buildLoc"],[49,51,41,20],[49,52,41,21,"fromLoc"],[49,59,41,28],[49,60,41,29,"node"],[49,64,41,28],[49,66,41,35],[49,73,41,28],[49,74,41,21],[49,78,41,47,"defaultLoc"],[49,88,41,20],[49,90,41,59,"css"],[49,93,41,62],[49,94,41,63,"slice"],[49,99,41,59],[49,100,41,69],[49,101,41,59],[49,103,41,72,"mismatchOffset"],[49,117,41,59],[49,118,41,20],[49,119,40,8],[50,0,42,8,"end"],[50,6,42,8,"end"],[50,9,42,11],[50,12,42,14,"fromLoc"],[50,19,42,21],[50,20,42,22,"badNode"],[50,27,42,21],[50,29,42,31],[50,34,42,21],[50,35,42,14],[50,39,43,12,"buildLoc"],[50,47,43,20],[50,48,43,21,"start"],[50,53,43,20],[50,55,43,28,"css"],[50,58,43,31],[50,59,43,32,"substr"],[50,65,43,28],[50,66,43,39,"mismatchOffset"],[50,80,43,28],[50,82,43,55,"mismatchLength"],[50,96,43,28],[50,97,43,20],[50,98,42,8],[51,0,44,5],[53,0,46,4],[53,11,46,11],[54,0,47,8,"css"],[54,6,47,8,"css"],[54,9,47,11],[54,11,47,8,"css"],[54,14,46,11],[55,0,48,8,"mismatchOffset"],[55,6,48,8,"mismatchOffset"],[55,20,48,22],[55,22,48,8,"mismatchOffset"],[55,36,46,11],[56,0,49,8,"mismatchLength"],[56,6,49,8,"mismatchLength"],[56,20,49,22],[56,22,49,8,"mismatchLength"],[56,36,46,11],[57,0,50,8,"start"],[57,6,50,8,"start"],[57,11,50,13],[57,13,50,8,"start"],[57,18,46,11],[58,0,51,8,"end"],[58,6,51,8,"end"],[58,9,51,11],[58,11,51,8,"end"],[59,0,46,11],[59,5,46,4],[60,0,53,1],[62,0,55,0],[62,11,55,9,"fromLoc"],[62,18,55,0],[62,19,55,17,"node"],[62,23,55,0],[62,25,55,23,"point"],[62,30,55,0],[62,32,55,30],[63,0,56,4],[63,8,56,10,"value"],[63,13,56,15],[63,16,56,18,"node"],[63,20,56,22],[63,24,56,26,"node"],[63,28,56,30],[63,29,56,31,"loc"],[63,32,56,18],[63,36,56,38,"node"],[63,40,56,42],[63,41,56,43,"loc"],[63,44,56,38],[63,45,56,47,"point"],[63,50,56,38],[63,51,56,4],[65,0,58,4],[65,8,58,8,"value"],[65,13,58,4],[65,15,58,15],[66,0,59,8],[66,13,59,15],[66,23,59,25,"value"],[66,28,59,15],[66,31,59,33,"buildLoc"],[66,39,59,41],[66,40,59,42,"value"],[66,45,59,41],[66,46,59,15],[66,49,59,51,"value"],[66,54,59,8],[67,0,60,5],[69,0,62,4],[69,11,62,11],[69,15,62,4],[70,0,63,1],[72,0,65,0],[72,11,65,9,"buildLoc"],[72,19,65,0],[72,26,65,44,"extra"],[72,31,65,0],[72,33,65,51],[73,0,65,51],[73,8,65,20,"offset"],[73,14,65,51],[73,22,65,20,"offset"],[73,28,65,51],[74,0,65,51],[74,8,65,28,"line"],[74,12,65,51],[74,20,65,28,"line"],[74,24,65,51],[75,0,65,51],[75,8,65,34,"column"],[75,14,65,51],[75,22,65,34,"column"],[75,28,65,51],[76,0,66,4],[76,8,66,10,"loc"],[76,11,66,13],[76,14,66,16],[77,0,67,8,"offset"],[77,6,67,8,"offset"],[77,12,67,14],[77,14,67,8,"offset"],[77,20,66,16],[78,0,68,8,"line"],[78,6,68,8,"line"],[78,10,68,12],[78,12,68,8,"line"],[78,16,66,16],[79,0,69,8,"column"],[79,6,69,8,"column"],[79,12,69,14],[79,14,69,8,"column"],[80,0,66,16],[80,5,66,4],[82,0,72,4],[82,8,72,8,"extra"],[82,13,72,4],[82,15,72,15],[83,0,73,8],[83,10,73,14,"lines"],[83,15,73,19],[83,18,73,22,"extra"],[83,23,73,27],[83,24,73,28,"split"],[83,29,73,22],[83,30,73,34],[83,43,73,22],[83,44,73,8],[84,0,75,8,"loc"],[84,6,75,8,"loc"],[84,9,75,11],[84,10,75,12,"offset"],[84,16,75,8],[84,20,75,22,"extra"],[84,25,75,27],[84,26,75,28,"length"],[84,32,75,8],[85,0,76,8,"loc"],[85,6,76,8,"loc"],[85,9,76,11],[85,10,76,12,"line"],[85,14,76,8],[85,18,76,20,"lines"],[85,23,76,25],[85,24,76,26,"length"],[85,30,76,20],[85,33,76,35],[85,34,76,8],[86,0,77,8,"loc"],[86,6,77,8,"loc"],[86,9,77,11],[86,10,77,12,"column"],[86,16,77,8],[86,19,77,21,"lines"],[86,24,77,26],[86,25,77,27,"length"],[86,31,77,21],[86,36,77,38],[86,37,77,21],[86,40,77,42,"loc"],[86,43,77,45],[86,44,77,46,"column"],[86,50,77,42],[86,53,77,55,"extra"],[86,58,77,60],[86,59,77,61,"length"],[86,65,77,21],[86,68,77,70,"lines"],[86,73,77,75],[86,74,77,76,"pop"],[86,77,77,70],[86,80,77,82,"length"],[86,86,77,70],[86,89,77,91],[86,90,77,8],[87,0,78,5],[89,0,80,4],[89,11,80,11,"loc"],[89,14,80,4],[90,0,81,1],[92,0,83,0],[92,6,83,6,"SyntaxReferenceError"],[92,26,83,26],[92,29,83,29],[92,38,83,6,"SyntaxReferenceError"],[92,58,83,29],[92,59,83,38,"type"],[92,63,83,29],[92,65,83,44,"referenceName"],[92,78,83,29],[92,80,83,59],[93,0,84,4],[93,8,84,10,"error"],[93,13,84,15],[93,16,84,18,"createCustomError"],[93,33,84,35],[93,34,85,8],[93,56,84,35],[93,58,86,8,"type"],[93,62,86,12],[93,66,86,16,"referenceName"],[93,79,86,29],[93,82,86,32],[93,89,86,39,"referenceName"],[93,102,86,32],[93,105,86,55],[93,108,86,29],[93,111,86,61],[93,113,86,12],[93,114,84,35],[93,115,84,4],[94,0,89,4,"error"],[94,4,89,4,"error"],[94,9,89,9],[94,10,89,10,"reference"],[94,19,89,4],[94,22,89,22,"referenceName"],[94,35,89,4],[95,0,91,4],[95,11,91,11,"error"],[95,16,91,4],[96,0,92,1],[96,3,83,0],[98,0,94,0],[98,6,94,6,"SyntaxMatchError"],[98,22,94,22],[98,25,94,25],[98,34,94,6,"SyntaxMatchError"],[98,50,94,25],[98,51,94,34,"message"],[98,58,94,25],[98,60,94,43,"syntax"],[98,66,94,25],[98,68,94,51,"node"],[98,72,94,25],[98,74,94,57,"matchResult"],[98,85,94,25],[98,87,94,70],[99,0,95,4],[99,8,95,10,"error"],[99,13,95,15],[99,16,95,18,"createCustomError"],[99,33,95,35],[99,34,95,36],[99,52,95,35],[99,54,95,56,"message"],[99,61,95,35],[99,62,95,4],[101,0,94,70],[101,26,102,8,"locateMismatch"],[101,40,102,22],[101,41,102,23,"matchResult"],[101,52,102,22],[101,54,102,36,"node"],[101,58,102,22],[101,59,94,70],[102,0,94,70],[102,8,97,8,"css"],[102,11,94,70],[102,30,97,8,"css"],[102,33,94,70],[103,0,94,70],[103,8,98,8,"mismatchOffset"],[103,22,94,70],[103,41,98,8,"mismatchOffset"],[103,55,94,70],[104,0,94,70],[104,8,99,8,"mismatchLength"],[104,22,94,70],[104,41,99,8,"mismatchLength"],[104,55,94,70],[105,0,94,70],[105,8,100,8,"start"],[105,13,94,70],[105,32,100,8,"start"],[105,37,94,70],[106,0,94,70],[106,8,101,8,"end"],[106,11,94,70],[106,30,101,8,"end"],[106,33,94,70],[108,0,104,4,"error"],[108,4,104,4,"error"],[108,9,104,9],[108,10,104,10,"rawMessage"],[108,20,104,4],[108,23,104,23,"message"],[108,30,104,4],[109,0,105,4,"error"],[109,4,105,4,"error"],[109,9,105,9],[109,10,105,10,"syntax"],[109,16,105,4],[109,19,105,19,"syntax"],[109,25,105,25],[109,28,105,28,"generate"],[109,36,105,36],[109,37,105,37,"syntax"],[109,43,105,36],[109,44,105,25],[109,47,105,47],[109,58,105,4],[110,0,106,4,"error"],[110,4,106,4,"error"],[110,9,106,9],[110,10,106,10,"css"],[110,13,106,4],[110,16,106,16,"css"],[110,19,106,4],[111,0,107,4,"error"],[111,4,107,4,"error"],[111,9,107,9],[111,10,107,10,"mismatchOffset"],[111,24,107,4],[111,27,107,27,"mismatchOffset"],[111,41,107,4],[112,0,108,4,"error"],[112,4,108,4,"error"],[112,9,108,9],[112,10,108,10,"mismatchLength"],[112,24,108,4],[112,27,108,27,"mismatchLength"],[112,41,108,4],[113,0,109,4,"error"],[113,4,109,4,"error"],[113,9,109,9],[113,10,109,10,"message"],[113,17,109,4],[113,20,109,20,"message"],[113,27,109,27],[113,30,109,30],[113,34,109,20],[113,37,110,8],[113,49,109,20],[113,52,110,23,"error"],[113,57,110,28],[113,58,110,29,"syntax"],[113,64,109,20],[113,67,110,38],[113,71,109,20],[113,74,111,8],[113,86,109,20],[113,90,111,24,"css"],[113,93,111,27],[113,97,111,31],[113,113,109,20],[113,117,111,51],[113,121,109,20],[113,124,112,8],[113,136,109,20],[113,139,112,23],[113,143,112,27,"Array"],[113,148,112,23],[113,149,112,33,"error"],[113,154,112,38],[113,155,112,39,"mismatchOffset"],[113,169,112,33],[113,172,112,56],[113,173,112,23],[113,175,112,59,"join"],[113,179,112,23],[113,180,112,64],[113,183,112,23],[113,184,109,20],[113,187,112,71],[113,190,109,4],[115,0,114,4],[115,13,114,18,"error"],[115,18,114,4],[115,20,114,25,"start"],[115,25,114,4],[117,0,115,4,"error"],[117,4,115,4,"error"],[117,9,115,9],[117,10,115,10,"loc"],[117,13,115,4],[117,16,115,16],[118,0,116,8,"source"],[118,6,116,8,"source"],[118,12,116,14],[118,14,116,17,"node"],[118,18,116,21],[118,22,116,25,"node"],[118,26,116,29],[118,27,116,30,"loc"],[118,30,116,17],[118,34,116,37,"node"],[118,38,116,41],[118,39,116,42,"loc"],[118,42,116,37],[118,43,116,46,"source"],[118,49,116,16],[118,53,116,57],[118,64,115,16],[119,0,117,8,"start"],[119,6,117,8,"start"],[119,11,117,13],[119,13,117,8,"start"],[119,18,115,16],[120,0,118,8,"end"],[120,6,118,8,"end"],[120,9,118,11],[120,11,118,8,"end"],[121,0,115,16],[121,5,115,4],[122,0,121,4],[122,11,121,11,"error"],[122,16,121,4],[123,0,122,1],[123,3,94,0],[125,0,124,0,"module"],[125,2,124,0,"module"],[125,8,124,6],[125,9,124,7,"exports"],[125,16,124,0],[125,19,124,17],[126,0,125,4,"SyntaxReferenceError"],[126,4,125,4,"SyntaxReferenceError"],[126,24,125,24],[126,26,125,4,"SyntaxReferenceError"],[126,46,124,17],[127,0,126,4,"SyntaxMatchError"],[127,4,126,4,"SyntaxMatchError"],[127,20,126,20],[127,22,126,4,"SyntaxMatchError"],[128,0,124,17],[128,3,124,0]],"functionMap":{"names":["<global>","locateMismatch","fromLoc","buildLoc","SyntaxReferenceError","SyntaxMatchError"],"mappings":"AAA;ACI;CDgD;AEE;CFQ;AGE;CHgB;6BIE;CJS;yBKE;CL4B"}},"type":"js/module"}]}