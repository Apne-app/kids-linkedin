{"dependencies":[{"name":"./_isArrayLike","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _isArrayLike = _$$_REQUIRE(_dependencyMap[0], \"./_isArrayLike\");\n\n  function _makeFlat(recursive) {\n    return function flatt(list) {\n      var value, jlen, j;\n      var result = [];\n      var idx = 0;\n      var ilen = list.length;\n\n      while (idx < ilen) {\n        if (_isArrayLike(list[idx])) {\n          value = recursive ? flatt(list[idx]) : list[idx];\n          j = 0;\n          jlen = value.length;\n\n          while (j < jlen) {\n            result[result.length] = value[j];\n            j += 1;\n          }\n        } else {\n          result[result.length] = list[idx];\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    };\n  }\n\n  module.exports = _makeFlat;\n});","lineCount":33,"map":[[2,0,1,0],[2,6,1,4,"_isArrayLike"],[2,18,1,16],[2,21,1,32,"require"],[2,32,1,39],[2,69,1,0],[4,0,11,0],[4,11,11,9,"_makeFlat"],[4,20,11,0],[4,21,11,19,"recursive"],[4,30,11,0],[4,32,11,30],[5,0,12,2],[5,11,12,9],[5,20,12,18,"flatt"],[5,25,12,9],[5,26,12,24,"list"],[5,30,12,9],[5,32,12,30],[6,0,13,4],[6,10,13,8,"value"],[6,15,13,4],[6,17,13,15,"jlen"],[6,21,13,4],[6,23,13,21,"j"],[6,24,13,4],[7,0,14,4],[7,10,14,8,"result"],[7,16,14,14],[7,19,14,17],[7,21,14,4],[8,0,15,4],[8,10,15,8,"idx"],[8,13,15,11],[8,16,15,14],[8,17,15,4],[9,0,16,4],[9,10,16,8,"ilen"],[9,14,16,12],[9,17,16,15,"list"],[9,21,16,19],[9,22,16,20,"length"],[9,28,16,4],[11,0,18,4],[11,13,18,11,"idx"],[11,16,18,14],[11,19,18,17,"ilen"],[11,23,18,4],[11,25,18,23],[12,0,19,6],[12,12,19,10,"_isArrayLike"],[12,24,19,22],[12,25,19,23,"list"],[12,29,19,27],[12,30,19,28,"idx"],[12,33,19,27],[12,34,19,22],[12,35,19,6],[12,37,19,35],[13,0,20,8,"value"],[13,10,20,8,"value"],[13,15,20,13],[13,18,20,16,"recursive"],[13,27,20,25],[13,30,20,28,"flatt"],[13,35,20,33],[13,36,20,34,"list"],[13,40,20,38],[13,41,20,39,"idx"],[13,44,20,38],[13,45,20,33],[13,46,20,25],[13,49,20,47,"list"],[13,53,20,51],[13,54,20,52,"idx"],[13,57,20,51],[13,58,20,8],[14,0,21,8,"j"],[14,10,21,8,"j"],[14,11,21,9],[14,14,21,12],[14,15,21,8],[15,0,22,8,"jlen"],[15,10,22,8,"jlen"],[15,14,22,12],[15,17,22,15,"value"],[15,22,22,20],[15,23,22,21,"length"],[15,29,22,8],[17,0,23,8],[17,17,23,15,"j"],[17,18,23,16],[17,21,23,19,"jlen"],[17,25,23,8],[17,27,23,25],[18,0,24,10,"result"],[18,12,24,10,"result"],[18,18,24,16],[18,19,24,17,"result"],[18,25,24,23],[18,26,24,24,"length"],[18,32,24,16],[18,33,24,10],[18,36,24,34,"value"],[18,41,24,39],[18,42,24,40,"j"],[18,43,24,39],[18,44,24,10],[19,0,25,10,"j"],[19,12,25,10,"j"],[19,13,25,11],[19,17,25,15],[19,18,25,10],[20,0,26,9],[21,0,27,7],[21,9,19,6],[21,15,27,13],[22,0,28,8,"result"],[22,10,28,8,"result"],[22,16,28,14],[22,17,28,15,"result"],[22,23,28,21],[22,24,28,22,"length"],[22,30,28,14],[22,31,28,8],[22,34,28,32,"list"],[22,38,28,36],[22,39,28,37,"idx"],[22,42,28,36],[22,43,28,8],[23,0,29,7],[25,0,30,6,"idx"],[25,8,30,6,"idx"],[25,11,30,9],[25,15,30,13],[25,16,30,6],[26,0,31,5],[28,0,32,4],[28,13,32,11,"result"],[28,19,32,4],[29,0,33,3],[29,5,12,2],[30,0,34,1],[32,0,35,0,"module"],[32,2,35,0,"module"],[32,8,35,6],[32,9,35,7,"exports"],[32,16,35,0],[32,19,35,17,"_makeFlat"],[32,28,35,0]],"functionMap":{"names":["<global>","_makeFlat","flatt"],"mappings":"AAA;ACU;SCC;GDqB;CDC"}},"type":"js/module"}]}