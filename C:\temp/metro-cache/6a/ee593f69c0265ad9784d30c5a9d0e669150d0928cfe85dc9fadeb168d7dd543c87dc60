{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isLastFilledCell = exports.getStyle = exports.getSymbols = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var truncateString = function truncateString(codeValue, codeLength) {\n    return codeValue.substr(0, codeLength);\n  };\n\n  var getSymbols = function getSymbols(codeValue, codeLength) {\n    return [].concat((0, _toConsumableArray2.default)(truncateString(codeValue, codeLength).split('')), (0, _toConsumableArray2.default)(new Array(codeLength).fill(''))).slice(0, codeLength);\n  };\n\n  exports.getSymbols = getSymbols;\n\n  var getStyle = function getStyle(base, custom) {\n    return custom ? [base, custom] : base;\n  };\n\n  exports.getStyle = getStyle;\n\n  var isLastFilledCell = function isLastFilledCell(_ref) {\n    var value = _ref.value,\n        index = _ref.index;\n    return Boolean(value && value.length - 2 === index);\n  };\n\n  exports.isLastFilledCell = isLastFilledCell;\n});","lineCount":34,"map":[[11,0,1,0],[11,6,1,6,"truncateString"],[11,20,1,20],[11,23,1,23],[11,32,1,6,"truncateString"],[11,46,1,23],[11,47,1,24,"codeValue"],[11,56,1,23],[11,58,1,35,"codeLength"],[11,68,1,23],[12,0,1,23],[12,11,2,2,"codeValue"],[12,20,2,11],[12,21,2,12,"substr"],[12,27,2,2],[12,28,2,19],[12,29,2,2],[12,31,2,22,"codeLength"],[12,41,2,2],[12,42,1,23],[13,0,1,23],[13,3,1,0],[15,0,3,7],[15,6,3,13,"getSymbols"],[15,16,3,23],[15,19,3,26],[15,28,3,13,"getSymbols"],[15,38,3,26],[15,39,3,27,"codeValue"],[15,48,3,26],[15,50,3,38,"codeLength"],[15,60,3,26],[16,0,3,26],[16,11,4,2],[16,54,5,7,"truncateString"],[16,68,5,21],[16,69,5,22,"codeValue"],[16,78,5,21],[16,80,5,33,"codeLength"],[16,90,5,21],[16,91,5,7],[16,92,5,45,"split"],[16,97,5,7],[16,98,5,51],[16,100,5,7],[16,101,4,2],[16,137,6,7],[16,141,6,11,"Array"],[16,146,6,7],[16,147,6,17,"codeLength"],[16,157,6,7],[16,159,6,29,"fill"],[16,163,6,7],[16,164,6,34],[16,166,6,7],[16,167,4,2],[16,170,7,4,"slice"],[16,175,4,2],[16,176,7,10],[16,177,4,2],[16,179,7,13,"codeLength"],[16,189,4,2],[16,190,3,26],[17,0,3,26],[17,3,3,7],[21,0,8,7],[21,6,8,13,"getStyle"],[21,14,8,21],[21,17,8,24],[21,26,8,13,"getStyle"],[21,34,8,24],[21,35,8,25,"base"],[21,39,8,24],[21,41,8,31,"custom"],[21,47,8,24],[22,0,8,24],[22,11,8,43,"custom"],[22,17,8,49],[22,20,8,52],[22,21,8,53,"base"],[22,25,8,52],[22,27,8,59,"custom"],[22,33,8,52],[22,34,8,49],[22,37,8,69,"base"],[22,41,8,24],[23,0,8,24],[23,3,8,7],[27,0,9,7],[27,6,9,13,"isLastFilledCell"],[27,22,9,29],[27,25,9,32],[27,34,9,13,"isLastFilledCell"],[27,50,9,32],[28,0,9,32],[28,8,9,34,"value"],[28,13,9,32],[28,21,9,34,"value"],[28,26,9,32],[29,0,9,32],[29,8,9,41,"index"],[29,13,9,32],[29,21,9,41,"index"],[29,26,9,32],[30,0,9,32],[30,11,10,2,"Boolean"],[30,18,10,9],[30,19,10,10,"value"],[30,24,10,15],[30,28,10,19,"value"],[30,33,10,24],[30,34,10,25,"length"],[30,40,10,19],[30,43,10,34],[30,44,10,19],[30,49,10,40,"index"],[30,54,10,9],[30,55,9,32],[31,0,9,32],[31,3,9,7]],"functionMap":{"names":["<global>","truncateString","getSymbols","getStyle","isLastFilledCell"],"mappings":"AAA,uBC;iCDC;0BEC;wBFI;wBGC,kDH;gCIC;8CJC"}},"type":"js/module"}]}