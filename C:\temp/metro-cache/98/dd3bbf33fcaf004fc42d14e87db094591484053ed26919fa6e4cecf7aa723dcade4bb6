{"dependencies":[{"name":"./core","data":{"isAsync":false}},{"name":"./cipher-core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  ;\n\n  (function (root, factory, undef) {\n    if (typeof exports === \"object\") {\n      module.exports = exports = factory(_$$_REQUIRE(_dependencyMap[0], \"./core\"), _$$_REQUIRE(_dependencyMap[1], \"./cipher-core\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      define([\"./core\", \"./cipher-core\"], factory);\n    } else {\n      factory(root.CryptoJS);\n    }\n  })(this, function (CryptoJS) {\n    CryptoJS.mode.CTR = function () {\n      var CTR = CryptoJS.lib.BlockCipherMode.extend();\n      var Encryptor = CTR.Encryptor = CTR.extend({\n        processBlock: function processBlock(words, offset) {\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n          var iv = this._iv;\n          var counter = this._counter;\n\n          if (iv) {\n            counter = this._counter = iv.slice(0);\n            this._iv = undefined;\n          }\n\n          var keystream = counter.slice(0);\n          cipher.encryptBlock(keystream, 0);\n          counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;\n\n          for (var i = 0; i < blockSize; i++) {\n            words[offset + i] ^= keystream[i];\n          }\n        }\n      });\n      CTR.Decryptor = Encryptor;\n      return CTR;\n    }();\n\n    return CryptoJS.mode.CTR;\n  });\n});","lineCount":42,"map":[[2,0,1,0],[4,0,1,2],[4,13,1,12,"root"],[4,17,1,2],[4,19,1,18,"factory"],[4,26,1,2],[4,28,1,27,"undef"],[4,33,1,2],[4,35,1,34],[5,0,2,1],[5,8,2,5],[5,15,2,12,"exports"],[5,22,2,5],[5,27,2,24],[5,35,2,1],[5,37,2,34],[6,0,4,2,"module"],[6,6,4,2,"module"],[6,12,4,8],[6,13,4,9,"exports"],[6,20,4,2],[6,23,4,19,"exports"],[6,30,4,26],[6,33,4,29,"factory"],[6,40,4,36],[6,41,4,37,"require"],[6,52,4,44],[6,81,4,36],[6,83,4,56,"require"],[6,94,4,63],[6,130,4,36],[6,131,4,2],[7,0,5,2],[7,5,2,1],[7,11,6,6],[7,15,6,10],[7,22,6,17,"define"],[7,28,6,10],[7,33,6,28],[7,43,6,10],[7,47,6,42,"define"],[7,53,6,48],[7,54,6,49,"amd"],[7,57,6,6],[7,59,6,54],[8,0,8,2,"define"],[8,6,8,2,"define"],[8,12,8,8],[8,13,8,9],[8,14,8,10],[8,22,8,9],[8,24,8,20],[8,39,8,9],[8,40,8,8],[8,42,8,38,"factory"],[8,49,8,8],[8,50,8,2],[9,0,9,2],[9,5,6,6],[9,11,10,6],[10,0,12,2,"factory"],[10,6,12,2,"factory"],[10,13,12,9],[10,14,12,10,"root"],[10,18,12,14],[10,19,12,15,"CryptoJS"],[10,27,12,9],[10,28,12,2],[11,0,13,2],[12,0,14,1],[12,3,1,2],[12,5,14,2],[12,9,1,2],[12,11,14,8],[12,21,14,18,"CryptoJS"],[12,29,14,8],[12,31,14,28],[13,0,19,1,"CryptoJS"],[13,4,19,1,"CryptoJS"],[13,12,19,9],[13,13,19,10,"mode"],[13,17,19,1],[13,18,19,15,"CTR"],[13,21,19,1],[13,24,19,22],[13,36,19,34],[14,0,20,5],[14,10,20,9,"CTR"],[14,13,20,12],[14,16,20,15,"CryptoJS"],[14,24,20,23],[14,25,20,24,"lib"],[14,28,20,15],[14,29,20,28,"BlockCipherMode"],[14,44,20,15],[14,45,20,44,"extend"],[14,51,20,15],[14,53,20,5],[15,0,22,5],[15,10,22,9,"Encryptor"],[15,19,22,18],[15,22,22,21,"CTR"],[15,25,22,24],[15,26,22,25,"Encryptor"],[15,35,22,21],[15,38,22,37,"CTR"],[15,41,22,40],[15,42,22,41,"extend"],[15,48,22,37],[15,49,22,48],[16,0,23,9,"processBlock"],[16,8,23,9,"processBlock"],[16,20,23,21],[16,22,23,23],[16,44,23,33,"words"],[16,49,23,23],[16,51,23,40,"offset"],[16,57,23,23],[16,59,23,48],[17,0,25,13],[17,14,25,17,"cipher"],[17,20,25,23],[17,23,25,26],[17,28,25,31,"_cipher"],[17,35,25,13],[18,0,26,13],[18,14,26,17,"blockSize"],[18,23,26,26],[18,26,26,29,"cipher"],[18,32,26,35],[18,33,26,36,"blockSize"],[18,42,26,13],[19,0,27,13],[19,14,27,17,"iv"],[19,16,27,19],[19,19,27,22],[19,24,27,27,"_iv"],[19,27,27,13],[20,0,28,13],[20,14,28,17,"counter"],[20,21,28,24],[20,24,28,27],[20,29,28,32,"_counter"],[20,37,28,13],[22,0,31,13],[22,14,31,17,"iv"],[22,16,31,13],[22,18,31,21],[23,0,32,17,"counter"],[23,12,32,17,"counter"],[23,19,32,24],[23,22,32,27],[23,27,32,32,"_counter"],[23,35,32,27],[23,38,32,43,"iv"],[23,40,32,45],[23,41,32,46,"slice"],[23,46,32,43],[23,47,32,52],[23,48,32,43],[23,49,32,17],[24,0,35,17],[24,17,35,22,"_iv"],[24,20,35,17],[24,23,35,28,"undefined"],[24,32,35,17],[25,0,36,14],[27,0,37,13],[27,14,37,17,"keystream"],[27,23,37,26],[27,26,37,29,"counter"],[27,33,37,36],[27,34,37,37,"slice"],[27,39,37,29],[27,40,37,43],[27,41,37,29],[27,42,37,13],[28,0,38,13,"cipher"],[28,10,38,13,"cipher"],[28,16,38,19],[28,17,38,20,"encryptBlock"],[28,29,38,13],[28,30,38,33,"keystream"],[28,39,38,13],[28,41,38,44],[28,42,38,13],[29,0,41,13,"counter"],[29,10,41,13,"counter"],[29,17,41,20],[29,18,41,21,"blockSize"],[29,27,41,30],[29,30,41,33],[29,31,41,20],[29,32,41,13],[29,35,41,39,"counter"],[29,42,41,46],[29,43,41,47,"blockSize"],[29,52,41,56],[29,55,41,59],[29,56,41,46],[29,57,41,39],[29,60,41,64],[29,61,41,38],[29,64,41,69],[29,65,41,13],[31,0,44,13],[31,15,44,18],[31,19,44,22,"i"],[31,20,44,23],[31,23,44,26],[31,24,44,13],[31,26,44,29,"i"],[31,27,44,30],[31,30,44,33,"blockSize"],[31,39,44,13],[31,41,44,44,"i"],[31,42,44,45],[31,44,44,13],[31,46,44,49],[32,0,45,17,"words"],[32,12,45,17,"words"],[32,17,45,22],[32,18,45,23,"offset"],[32,24,45,29],[32,27,45,32,"i"],[32,28,45,22],[32,29,45,17],[32,33,45,38,"keystream"],[32,42,45,47],[32,43,45,48,"i"],[32,44,45,47],[32,45,45,17],[33,0,46,14],[34,0,47,10],[35,0,22,48],[35,7,22,37],[35,8,22,5],[36,0,50,5,"CTR"],[36,6,50,5,"CTR"],[36,9,50,8],[36,10,50,9,"Decryptor"],[36,19,50,5],[36,22,50,21,"Encryptor"],[36,31,50,5],[37,0,52,5],[37,13,52,12,"CTR"],[37,16,52,5],[38,0,53,2],[38,5,19,22],[38,7,19,1],[40,0,56,1],[40,11,56,8,"CryptoJS"],[40,19,56,16],[40,20,56,17,"mode"],[40,24,56,8],[40,25,56,22,"CTR"],[40,28,56,1],[41,0,58,1],[41,3,1,2],[41,4,1,1]],"functionMap":{"names":["<global>","<anonymous>","CTR.extend$argument_0.processBlock"],"mappings":"AAA,EC;CDa,OC;uBCS;UDwB;CDW"}},"type":"js/module"}]}