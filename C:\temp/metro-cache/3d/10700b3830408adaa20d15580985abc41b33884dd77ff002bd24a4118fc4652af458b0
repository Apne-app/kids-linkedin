{"dependencies":[{"name":"./_curry2","data":{"isAsync":false,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":20}}]}},{"name":"./_xfBase","data":{"isAsync":false,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":20}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _curry2 = _$$_REQUIRE(_dependencyMap[0], \"./_curry2\");\n\n  var _xfBase = _$$_REQUIRE(_dependencyMap[1], \"./_xfBase\");\n\n  var XDropWhile = function () {\n    function XDropWhile(f, xf) {\n      this.xf = xf;\n      this.f = f;\n    }\n\n    XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n    XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n    XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n      if (this.f) {\n        if (this.f(input)) {\n          return result;\n        }\n\n        this.f = null;\n      }\n\n      return this.xf['@@transducer/step'](result, input);\n    };\n\n    return XDropWhile;\n  }();\n\n  var _xdropWhile = _curry2(function _xdropWhile(f, xf) {\n    return new XDropWhile(f, xf);\n  });\n\n  module.exports = _xdropWhile;\n});","lineCount":35,"map":[[2,0,1,0],[2,6,1,4,"_curry2"],[2,13,1,11],[2,16,3,0,"require"],[2,27,3,7],[2,59,1,0],[4,0,5,0],[4,6,5,4,"_xfBase"],[4,13,5,11],[4,16,7,0,"require"],[4,27,7,7],[4,59,5,0],[6,0,9,0],[6,6,9,4,"XDropWhile"],[6,16,9,14],[6,19,11,0],[6,31,11,12],[7,0,12,2],[7,13,12,11,"XDropWhile"],[7,23,12,2],[7,24,12,22,"f"],[7,25,12,2],[7,27,12,25,"xf"],[7,29,12,2],[7,31,12,29],[8,0,13,4],[8,11,13,9,"xf"],[8,13,13,4],[8,16,13,14,"xf"],[8,18,13,4],[9,0,14,4],[9,11,14,9,"f"],[9,12,14,4],[9,15,14,13,"f"],[9,16,14,4],[10,0,15,3],[12,0,17,2,"XDropWhile"],[12,4,17,2,"XDropWhile"],[12,14,17,12],[12,15,17,13,"prototype"],[12,24,17,2],[12,25,17,23],[12,44,17,2],[12,48,17,46,"_xfBase"],[12,55,17,53],[12,56,17,54,"init"],[12,60,17,2],[13,0,18,2,"XDropWhile"],[13,4,18,2,"XDropWhile"],[13,14,18,12],[13,15,18,13,"prototype"],[13,24,18,2],[13,25,18,23],[13,46,18,2],[13,50,18,48,"_xfBase"],[13,57,18,55],[13,58,18,56,"result"],[13,64,18,2],[15,0,20,2,"XDropWhile"],[15,4,20,2,"XDropWhile"],[15,14,20,12],[15,15,20,13,"prototype"],[15,24,20,2],[15,25,20,23],[15,44,20,2],[15,48,20,46],[15,58,20,56,"result"],[15,64,20,46],[15,66,20,64,"input"],[15,71,20,46],[15,73,20,71],[16,0,21,4],[16,10,21,8],[16,15,21,13,"f"],[16,16,21,4],[16,18,21,16],[17,0,22,6],[17,12,22,10],[17,17,22,15,"f"],[17,18,22,10],[17,19,22,17,"input"],[17,24,22,10],[17,25,22,6],[17,27,22,25],[18,0,23,8],[18,17,23,15,"result"],[18,23,23,8],[19,0,24,7],[21,0,26,6],[21,13,26,11,"f"],[21,14,26,6],[21,17,26,15],[21,21,26,6],[22,0,27,5],[24,0,29,4],[24,13,29,11],[24,18,29,16,"xf"],[24,20,29,11],[24,21,29,19],[24,40,29,11],[24,42,29,40,"result"],[24,48,29,11],[24,50,29,48,"input"],[24,55,29,11],[24,56,29,4],[25,0,30,3],[25,5,20,2],[27,0,32,2],[27,11,32,9,"XDropWhile"],[27,21,32,2],[28,0,33,1],[28,3,11,0],[28,5,9,0],[30,0,35,0],[30,6,35,4,"_xdropWhile"],[30,17,35,15],[30,20,37,0,"_curry2"],[30,27,37,7],[30,28,37,8],[30,37,37,17,"_xdropWhile"],[30,48,37,8],[30,49,37,29,"f"],[30,50,37,8],[30,52,37,32,"xf"],[30,54,37,8],[30,56,37,36],[31,0,38,2],[31,11,38,9],[31,15,38,13,"XDropWhile"],[31,25,38,9],[31,26,38,24,"f"],[31,27,38,9],[31,29,38,27,"xf"],[31,31,38,9],[31,32,38,2],[32,0,39,1],[32,3,37,7],[32,4,35,0],[34,0,41,0,"module"],[34,2,41,0,"module"],[34,8,41,6],[34,9,41,7,"exports"],[34,16,41,0],[34,19,41,17,"_xdropWhile"],[34,30,41,0]],"functionMap":{"names":["<global>","<anonymous>","XDropWhile","XDropWhile.prototype.transducerStep","_xdropWhile"],"mappings":"AAA;ACU;ECC;GDG;8CEK;GFU;CDG;QII;CJE"}},"type":"js/module"}]}