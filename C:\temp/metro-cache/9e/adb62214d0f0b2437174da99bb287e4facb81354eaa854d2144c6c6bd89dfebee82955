{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false,"locs":[]}},{"name":"./ExponentAV","data":{"isAsync":false,"locs":[]}},{"name":"./Audio/Recording","data":{"isAsync":false,"locs":[]}},{"name":"./Audio/Sound","data":{"isAsync":false,"locs":[]}},{"name":"./Audio/AudioAvailability","data":{"isAsync":false,"locs":[]}},{"name":"./AV","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS: true,\n    INTERRUPTION_MODE_IOS_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_IOS_DUCK_OTHERS: true,\n    INTERRUPTION_MODE_ANDROID_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_ANDROID_DUCK_OTHERS: true,\n    setAudioModeAsync: true,\n    setIsEnabledAsync: true,\n    PitchCorrectionQuality: true\n  };\n  exports.setAudioModeAsync = setAudioModeAsync;\n  Object.defineProperty(exports, \"setIsEnabledAsync\", {\n    enumerable: true,\n    get: function get() {\n      return _AudioAvailability.setIsEnabledAsync;\n    }\n  });\n  Object.defineProperty(exports, \"PitchCorrectionQuality\", {\n    enumerable: true,\n    get: function get() {\n      return _AV.PitchCorrectionQuality;\n    }\n  });\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./ExponentAV\"));\n\n  var _Recording = _$$_REQUIRE(_dependencyMap[3], \"./Audio/Recording\");\n\n  Object.keys(_Recording).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Recording[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Recording[key];\n      }\n    });\n  });\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[4], \"./Audio/Sound\");\n\n  Object.keys(_Sound).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Sound[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Sound[key];\n      }\n    });\n  });\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[5], \"./Audio/AudioAvailability\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[6], \"./AV\");\n\n  var INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = 0;\n  exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS;\n  var INTERRUPTION_MODE_IOS_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = INTERRUPTION_MODE_IOS_DO_NOT_MIX;\n  var INTERRUPTION_MODE_IOS_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = INTERRUPTION_MODE_IOS_DUCK_OTHERS;\n  var INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = INTERRUPTION_MODE_ANDROID_DO_NOT_MIX;\n  var INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = INTERRUPTION_MODE_ANDROID_DUCK_OTHERS;\n\n  var _isValueValid = function _isValueValid(value, validValues) {\n    return validValues.filter(function (validValue) {\n      return validValue === value;\n    }).length > 0;\n  };\n\n  var _populateMissingKeys = function _populateMissingKeys(userAudioMode, defaultAudioMode) {\n    for (var key in defaultAudioMode) {\n      if (!userAudioMode.hasOwnProperty(key)) {\n        userAudioMode[key] = defaultAudioMode[key];\n      }\n    }\n\n    return userAudioMode;\n  };\n\n  var defaultMode = {\n    allowsRecordingIOS: false,\n    interruptionModeIOS: INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,\n    playsInSilentModeIOS: false,\n    staysActiveInBackground: false,\n    interruptionModeAndroid: INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n    shouldDuckAndroid: true,\n    playThroughEarpieceAndroid: false\n  };\n  var currentAudioMode = null;\n\n  function getCurrentAudioMode() {\n    if (!currentAudioMode) {\n      return defaultMode;\n    }\n\n    return currentAudioMode;\n  }\n\n  function setAudioModeAsync(partialMode) {\n    var mode;\n    return _regenerator.default.async(function setAudioModeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            mode = _populateMissingKeys(partialMode, getCurrentAudioMode());\n\n            if (_isValueValid(mode.interruptionModeIOS, [INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS, INTERRUPTION_MODE_IOS_DO_NOT_MIX, INTERRUPTION_MODE_IOS_DUCK_OTHERS])) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeIOS\\\" was set to an invalid value.\");\n\n          case 3:\n            if (_isValueValid(mode.interruptionModeAndroid, [INTERRUPTION_MODE_ANDROID_DO_NOT_MIX, INTERRUPTION_MODE_ANDROID_DUCK_OTHERS])) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeAndroid\\\" was set to an invalid value.\");\n\n          case 5:\n            if (!(typeof mode.allowsRecordingIOS !== 'boolean' || typeof mode.playsInSilentModeIOS !== 'boolean' || typeof mode.staysActiveInBackground !== 'boolean' || typeof mode.shouldDuckAndroid !== 'boolean' || typeof mode.playThroughEarpieceAndroid !== 'boolean')) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", \"staysActiveInBackground\" and \"shouldDuckAndroid\" must be booleans.');\n\n          case 7:\n            currentAudioMode = mode;\n            _context.next = 10;\n            return _regenerator.default.awrap(_ExponentAV.default.setAudioMode(mode));\n\n          case 10:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","lineCount":160,"map":[[34,0,1,0],[36,0,2,0],[38,0,2,0],[39,0,2,0],[40,0,2,0],[41,0,2,0],[42,0,2,0],[43,0,2,0],[44,0,2,0],[45,0,2,0],[46,0,2,0],[47,0,2,0],[48,0,2,0],[50,0,3,0],[52,0,3,0],[53,0,3,0],[54,0,3,0],[55,0,3,0],[56,0,3,0],[57,0,3,0],[58,0,3,0],[59,0,3,0],[60,0,3,0],[61,0,3,0],[62,0,3,0],[64,0,4,0],[66,0,5,0],[68,0,6,7],[68,6,6,13,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[68,43,6,50],[68,46,6,53],[68,47,6,7],[70,0,7,7],[70,6,7,13,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[70,38,7,45],[70,41,7,48],[70,42,7,7],[72,0,8,7],[72,6,8,13,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[72,39,8,46],[72,42,8,49],[72,43,8,7],[74,0,9,7],[74,6,9,13,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[74,42,9,49],[74,45,9,52],[74,46,9,7],[76,0,10,7],[76,6,10,13,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[76,43,10,50],[76,46,10,53],[76,47,10,7],[79,0,12,0],[79,6,12,6,"_isValueValid"],[79,19,12,19],[79,22,12,22],[79,31,12,6,"_isValueValid"],[79,44,12,22],[79,45,12,23,"value"],[79,50,12,22],[79,52,12,30,"validValues"],[79,63,12,22],[79,65,12,46],[80,0,13,4],[80,11,13,11,"validValues"],[80,22,13,22],[80,23,13,23,"filter"],[80,29,13,11],[80,30,13,30],[80,40,13,30,"validValue"],[80,50,13,40],[81,0,13,40],[81,13,13,44,"validValue"],[81,23,13,54],[81,28,13,59,"value"],[81,33,13,40],[82,0,13,40],[82,5,13,11],[82,7,13,66,"length"],[82,13,13,11],[82,16,13,75],[82,17,13,4],[83,0,14,1],[83,3,12,0],[85,0,15,0],[85,6,15,6,"_populateMissingKeys"],[85,26,15,26],[85,29,15,29],[85,38,15,6,"_populateMissingKeys"],[85,58,15,29],[85,59,15,30,"userAudioMode"],[85,72,15,29],[85,74,15,45,"defaultAudioMode"],[85,90,15,29],[85,92,15,66],[86,0,16,4],[86,9,16,9],[86,13,16,15,"key"],[86,16,16,4],[86,20,16,22,"defaultAudioMode"],[86,36,16,4],[86,38,16,40],[87,0,17,8],[87,10,17,12],[87,11,17,13,"userAudioMode"],[87,24,17,26],[87,25,17,27,"hasOwnProperty"],[87,39,17,13],[87,40,17,42,"key"],[87,43,17,13],[87,44,17,8],[87,46,17,48],[88,0,18,12,"userAudioMode"],[88,8,18,12,"userAudioMode"],[88,21,18,25],[88,22,18,26,"key"],[88,25,18,25],[88,26,18,12],[88,29,18,33,"defaultAudioMode"],[88,45,18,49],[88,46,18,50,"key"],[88,49,18,49],[88,50,18,12],[89,0,19,9],[90,0,20,5],[92,0,21,4],[92,11,21,11,"userAudioMode"],[92,24,21,4],[93,0,22,1],[93,3,15,0],[95,0,23,0],[95,6,23,6,"defaultMode"],[95,17,23,17],[95,20,23,20],[96,0,24,4,"allowsRecordingIOS"],[96,4,24,4,"allowsRecordingIOS"],[96,22,24,22],[96,24,24,24],[96,29,23,20],[97,0,25,4,"interruptionModeIOS"],[97,4,25,4,"interruptionModeIOS"],[97,23,25,23],[97,25,25,25,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[97,62,23,20],[98,0,26,4,"playsInSilentModeIOS"],[98,4,26,4,"playsInSilentModeIOS"],[98,24,26,24],[98,26,26,26],[98,31,23,20],[99,0,27,4,"staysActiveInBackground"],[99,4,27,4,"staysActiveInBackground"],[99,27,27,27],[99,29,27,29],[99,34,23,20],[100,0,28,4,"interruptionModeAndroid"],[100,4,28,4,"interruptionModeAndroid"],[100,27,28,27],[100,29,28,29,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[100,66,23,20],[101,0,29,4,"shouldDuckAndroid"],[101,4,29,4,"shouldDuckAndroid"],[101,21,29,21],[101,23,29,23],[101,27,23,20],[102,0,30,4,"playThroughEarpieceAndroid"],[102,4,30,4,"playThroughEarpieceAndroid"],[102,30,30,30],[102,32,30,32],[103,0,23,20],[103,3,23,0],[104,0,32,0],[104,6,32,4,"currentAudioMode"],[104,22,32,20],[104,25,32,23],[104,29,32,0],[106,0,33,0],[106,11,33,9,"getCurrentAudioMode"],[106,30,33,0],[106,33,33,31],[107,0,34,4],[107,8,34,8],[107,9,34,9,"currentAudioMode"],[107,25,34,4],[107,27,34,27],[108,0,35,8],[108,13,35,15,"defaultMode"],[108,24,35,8],[109,0,36,5],[111,0,37,4],[111,11,37,11,"currentAudioMode"],[111,27,37,4],[112,0,38,1],[114,0,39,7],[114,11,39,22,"setAudioModeAsync"],[114,28,39,7],[114,29,39,40,"partialMode"],[114,40,39,7],[115,0,39,7],[116,0,39,7],[117,0,39,7],[118,0,39,7],[119,0,39,7],[120,0,40,10,"mode"],[120,12,40,10,"mode"],[120,16,39,7],[120,19,40,17,"_populateMissingKeys"],[120,39,40,37],[120,40,40,38,"partialMode"],[120,51,40,37],[120,53,40,51,"getCurrentAudioMode"],[120,72,40,70],[120,74,40,37],[120,75,39,7],[122,0,39,7],[122,16,41,9,"_isValueValid"],[122,29,41,22],[122,30,41,23,"mode"],[122,34,41,27],[122,35,41,28,"interruptionModeIOS"],[122,54,41,22],[122,56,41,49],[122,57,42,8,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[122,94,41,49],[122,96,43,8,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[122,128,41,49],[122,130,44,8,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[122,163,41,49],[122,164,41,22],[122,165,39,7],[123,0,39,7],[124,0,39,7],[125,0,39,7],[127,0,39,7],[127,18,46,14],[127,22,46,18,"Error"],[127,27,46,14],[127,83,39,7],[129,0,39,7],[130,0,39,7],[130,16,48,9,"_isValueValid"],[130,29,48,22],[130,30,48,23,"mode"],[130,34,48,27],[130,35,48,28,"interruptionModeAndroid"],[130,58,48,22],[130,60,48,53],[130,61,49,8,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[130,97,48,53],[130,99,50,8,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[130,136,48,53],[130,137,48,22],[130,138,39,7],[131,0,39,7],[132,0,39,7],[133,0,39,7],[135,0,39,7],[135,18,52,14],[135,22,52,18,"Error"],[135,27,52,14],[135,87,39,7],[137,0,39,7],[138,0,39,7],[138,18,54,8],[138,25,54,15,"mode"],[138,29,54,19],[138,30,54,20,"allowsRecordingIOS"],[138,48,54,8],[138,53,54,43],[138,62,54,8],[138,66,55,8],[138,73,55,15,"mode"],[138,77,55,19],[138,78,55,20,"playsInSilentModeIOS"],[138,98,55,8],[138,103,55,45],[138,112,54,8],[138,116,56,8],[138,123,56,15,"mode"],[138,127,56,19],[138,128,56,20,"staysActiveInBackground"],[138,151,56,8],[138,156,56,48],[138,165,54,8],[138,169,57,8],[138,176,57,15,"mode"],[138,180,57,19],[138,181,57,20,"shouldDuckAndroid"],[138,198,57,8],[138,203,57,42],[138,212,54,8],[138,216,58,8],[138,223,58,15,"mode"],[138,227,58,19],[138,228,58,20,"playThroughEarpieceAndroid"],[138,254,58,8],[138,259,58,51],[138,268,39,7],[139,0,39,7],[140,0,39,7],[141,0,39,7],[143,0,39,7],[143,18,59,14],[143,22,59,18,"Error"],[143,27,59,14],[143,28,59,24],[143,173,59,14],[143,174,39,7],[145,0,39,7],[146,0,61,4,"currentAudioMode"],[146,12,61,4,"currentAudioMode"],[146,28,61,20],[146,31,61,23,"mode"],[146,35,61,4],[147,0,39,7],[148,0,39,7],[148,46,62,17,"ExponentAV"],[148,66,62,28,"setAudioMode"],[148,78,62,17],[148,79,62,41,"mode"],[148,83,62,17],[148,84,39,7],[150,0,39,7],[151,0,39,7],[153,0,39,7],[154,0,39,7],[155,0,39,7],[156,0,39,7],[157,0,39,7],[158,0,39,7],[159,0,39,7]],"functionMap":{"names":["<global>","_isValueValid","validValues.filter$argument_0","_populateMissingKeys","getCurrentAudioMode","setAudioModeAsync"],"mappings":"AAA;sBCW;8BCC,kCD;CDC;6BGC;CHO;AIW;CJK;OKC;CLwB"}},"type":"js/module"}]}