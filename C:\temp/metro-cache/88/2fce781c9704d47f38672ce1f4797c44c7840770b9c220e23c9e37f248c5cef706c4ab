{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false,"locs":[]}},{"name":"@unimodules/core","data":{"isAsync":false,"locs":[]}},{"name":"unimodules-permissions-interface","data":{"isAsync":false,"locs":[]}},{"name":"../AV","data":{"isAsync":false,"locs":[]}},{"name":"../ExponentAV","data":{"isAsync":false,"locs":[]}},{"name":"./AudioAvailability","data":{"isAsync":false,"locs":[]}},{"name":"./Sound","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function get() {\n      return _unimodulesPermissionsInterface.PermissionStatus;\n    }\n  });\n  exports.Recording = exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@unimodules/core\");\n\n  var _unimodulesPermissionsInterface = _$$_REQUIRE(_dependencyMap[6], \"unimodules-permissions-interface\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[7], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../ExponentAV\"));\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[9], \"./AudioAvailability\");\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[10], \"./Sound\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = 1;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = 2;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = 3;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = 4;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = 5;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = 6;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = 7;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = 8;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = 9;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = 1;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = 2;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = 3;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = 4;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = 5;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = 'lpcm';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = 'ac-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = 'cac3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = 'ima4';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = 'aac ';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = 'celp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = 'hvxc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = 'twvq';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = 'MAC3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = 'MAC6';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = 'ulaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = 'alaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = 'QDMC';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = 'QDM2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = 'Qclp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = '.mp1';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = '.mp2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = '.mp3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = 'alac';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = 'aach';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = 'aacl';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = 'aace';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = 'aacf';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = 'aacg';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = 'aacp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = 'aacs';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = 'samr';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = 'sawb';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = 'AUDB';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = 'ilbc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = 0x6d730011;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = 0x6d730031;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = 'aes3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = 'ec-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = 0;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = 0x20;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = 0x40;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = 0x60;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = 0x7f;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = 0;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = 1;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = 2;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = 3;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE;\n  var RECORDING_OPTIONS_PRESET_HIGH_QUALITY = {\n    android: {\n      extension: '.m4a',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = RECORDING_OPTIONS_PRESET_HIGH_QUALITY;\n  var RECORDING_OPTIONS_PRESET_LOW_QUALITY = {\n    android: {\n      extension: '.3gp',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n  var _recorderExists = false;\n  var eventEmitter = _core.Platform.OS === 'android' ? new _core.EventEmitter(_ExponentAV.default) : null;\n\n  function getPermissionsAsync() {\n    return _regenerator.default.async(function getPermissionsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExponentAV.default.getPermissionsAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _ExponentAV.default.requestPermissionsAsync());\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var Recording = function () {\n    function Recording() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Recording);\n      this._subscription = null;\n      this._canRecord = false;\n      this._isDoneRecording = false;\n      this._finalDurationMillis = 0;\n      this._uri = null;\n      this._onRecordingStatusUpdate = null;\n      this._progressUpdateTimeoutVariable = null;\n      this._progressUpdateIntervalMillis = _AV._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n      this._options = null;\n\n      this._cleanupForUnloadedRecorder = function _callee(finalStatus) {\n        var _finalStatus$duration;\n\n        return _regenerator.default.async(function _callee$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this._canRecord = false;\n                _this._isDoneRecording = true;\n                _this._finalDurationMillis = (_finalStatus$duration = finalStatus == null ? void 0 : finalStatus.durationMillis) != null ? _finalStatus$duration : 0;\n                _recorderExists = false;\n\n                if (_this._subscription) {\n                  _this._subscription.remove();\n\n                  _this._subscription = null;\n                }\n\n                _this._disablePolling();\n\n                _context3.next = 8;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      this._pollingLoop = function _callee2() {\n        return _regenerator.default.async(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!((0, _AudioAvailability.isAudioEnabled)() && _this._canRecord && _this._onRecordingStatusUpdate != null)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _this._progressUpdateTimeoutVariable = setTimeout(_this._pollingLoop, _this._progressUpdateIntervalMillis);\n                _context4.prev = 2;\n                _context4.next = 5;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 5:\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](2);\n\n                _this._disablePolling();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      };\n\n      this.getStatusAsync = function _callee3() {\n        var status;\n        return _regenerator.default.async(function _callee3$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!_this._canRecord) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getAudioRecordingStatus();\n                }));\n\n              case 2:\n                status = {\n                  canRecord: false,\n                  isRecording: false,\n                  isDoneRecording: _this._isDoneRecording,\n                  durationMillis: _this._finalDurationMillis\n                };\n\n                _this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context5.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n    }\n\n    (0, _createClass2.default)(Recording, [{\n      key: \"_disablePolling\",\n      value: function _disablePolling() {\n        if (this._progressUpdateTimeoutVariable != null) {\n          clearTimeout(this._progressUpdateTimeoutVariable);\n          this._progressUpdateTimeoutVariable = null;\n        }\n      }\n    }, {\n      key: \"_enablePollingIfNecessaryAndPossible\",\n      value: function _enablePollingIfNecessaryAndPossible() {\n        if ((0, _AudioAvailability.isAudioEnabled)() && this._canRecord && this._onRecordingStatusUpdate != null) {\n          this._disablePolling();\n\n          this._pollingLoop();\n        }\n      }\n    }, {\n      key: \"_callOnRecordingStatusUpdateForNewStatus\",\n      value: function _callOnRecordingStatusUpdateForNewStatus(status) {\n        if (this._onRecordingStatusUpdate != null) {\n          this._onRecordingStatusUpdate(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var status;\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._canRecord) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                status = _context6.sent;\n\n                this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context6.abrupt(\"return\", status);\n\n              case 9:\n                throw new Error('Cannot complete operation because this recorder is not ready to record.');\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"setOnRecordingStatusUpdate\",\n      value: function setOnRecordingStatusUpdate(onRecordingStatusUpdate) {\n        this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n\n        if (onRecordingStatusUpdate == null) {\n          this._disablePolling();\n        } else {\n          this._enablePollingIfNecessaryAndPossible();\n        }\n\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"setProgressUpdateInterval\",\n      value: function setProgressUpdateInterval(progressUpdateIntervalMillis) {\n        this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"prepareToRecordAsync\",\n      value: function prepareToRecordAsync() {\n        var options,\n            extensionRegex,\n            _await$ExponentAV$pre,\n            uri,\n            status,\n            currentStatus,\n            _args7 = arguments;\n\n        return _regenerator.default.async(function prepareToRecordAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!_recorderExists) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error('Only one Recording object can be prepared at a given time.');\n\n              case 4:\n                if (!this._isDoneRecording) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error('This Recording object is done recording; you must make a new one.');\n\n              case 6:\n                if (!(!options || !options.android || !options.ios)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                throw new Error('You must provide recording options for android and ios in order to prepare to record.');\n\n              case 8:\n                extensionRegex = /^\\.\\w+$/;\n\n                if (!(!options.android.extension || !options.ios.extension || !extensionRegex.test(options.android.extension) || !extensionRegex.test(options.ios.extension))) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                throw new Error(\"Your file extensions must match \" + extensionRegex.toString() + \".\");\n\n              case 11:\n                if (this._canRecord) {\n                  _context7.next = 28;\n                  break;\n                }\n\n                if (eventEmitter) {\n                  this._subscription = eventEmitter.addListener('Expo.Recording.recorderUnloaded', this._cleanupForUnloadedRecorder);\n                }\n\n                _context7.next = 15;\n                return _regenerator.default.awrap(_ExponentAV.default.prepareAudioRecorder(options));\n\n              case 15:\n                _await$ExponentAV$pre = _context7.sent;\n                uri = _await$ExponentAV$pre.uri;\n                status = _await$ExponentAV$pre.status;\n                _recorderExists = true;\n                this._uri = uri;\n                this._options = options;\n                this._canRecord = true;\n                currentStatus = _objectSpread(_objectSpread({}, status), {}, {\n                  canRecord: true\n                });\n\n                this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n\n                this._enablePollingIfNecessaryAndPossible();\n\n                return _context7.abrupt(\"return\", currentStatus);\n\n              case 28:\n                throw new Error('This Recording object is already prepared to record.');\n\n              case 29:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"startAsync\",\n      value: function startAsync() {\n        return _regenerator.default.async(function startAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.startAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"pauseAsync\",\n      value: function pauseAsync() {\n        return _regenerator.default.async(function pauseAsync$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.pauseAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"stopAndUnloadAsync\",\n      value: function stopAndUnloadAsync() {\n        var stopResult, stopError, status;\n        return _regenerator.default.async(function stopAndUnloadAsync$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (this._canRecord) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                if (!this._isDoneRecording) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                throw new Error('Cannot unload a Recording that has already been unloaded.');\n\n              case 5:\n                throw new Error('Cannot unload a Recording that has not been prepared.');\n\n              case 6:\n                _context10.prev = 6;\n                _context10.next = 9;\n                return _regenerator.default.awrap(_ExponentAV.default.stopAudioRecording());\n\n              case 9:\n                stopResult = _context10.sent;\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](6);\n                stopError = _context10.t0;\n\n              case 15:\n                _context10.next = 17;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadAudioRecorder());\n\n              case 17:\n                _context10.next = 19;\n                return _regenerator.default.awrap(this._cleanupForUnloadedRecorder(stopResult));\n\n              case 19:\n                status = _context10.sent;\n                return _context10.abrupt(\"return\", stopError ? Promise.reject(stopError) : status);\n\n              case 21:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, this, [[6, 12]], Promise);\n      }\n    }, {\n      key: \"getURI\",\n      value: function getURI() {\n        return this._uri;\n      }\n    }, {\n      key: \"createNewLoadedSound\",\n      value: function createNewLoadedSound() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args11 = arguments;\n        return _regenerator.default.async(function createNewLoadedSound$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                initialStatus = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : {};\n                onPlaybackStatusUpdate = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : null;\n                console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");\n                return _context11.abrupt(\"return\", this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate));\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"createNewLoadedSoundAsync\",\n      value: function createNewLoadedSoundAsync() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args12 = arguments;\n        return _regenerator.default.async(function createNewLoadedSoundAsync$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                initialStatus = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};\n                onPlaybackStatusUpdate = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : null;\n\n                if (!(this._uri == null || !this._isDoneRecording)) {\n                  _context12.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot create sound when the Recording has not finished!');\n\n              case 4:\n                return _context12.abrupt(\"return\", _Sound.Sound.createAsync({\n                  uri: this._uri\n                }, initialStatus, onPlaybackStatusUpdate, false));\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }]);\n    return Recording;\n  }();\n\n  exports.Recording = Recording;\n});","lineCount":679,"map":[[25,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[41,0,8,7],[41,6,8,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT"],[41,52,8,59],[41,55,8,62],[41,56,8,7],[43,0,9,7],[43,6,9,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[43,54,9,61],[43,57,9,64],[43,58,9,7],[45,0,10,7],[45,6,10,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[45,51,10,58],[45,54,10,61],[45,55,10,7],[47,0,11,7],[47,6,11,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB"],[47,51,11,58],[47,54,11,61],[47,55,11,7],[49,0,12,7],[49,6,12,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB"],[49,51,12,58],[49,54,12,61],[49,55,12,7],[51,0,13,7],[51,6,13,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF"],[51,53,13,60],[51,56,13,63],[51,57,13,7],[53,0,14,7],[53,6,14,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS"],[53,53,14,60],[53,56,14,63],[53,57,14,7],[55,0,15,7],[55,6,15,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP"],[55,52,15,59],[55,55,15,62],[55,56,15,7],[57,0,16,7],[57,6,16,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS"],[57,52,16,59],[57,55,16,62],[57,56,16,7],[59,0,17,7],[59,6,17,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM"],[59,49,17,56],[59,52,17,59],[59,53,17,7],[61,0,18,7],[61,6,18,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT"],[61,52,18,59],[61,55,18,62],[61,56,18,7],[63,0,19,7],[63,6,19,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[63,51,19,58],[63,54,19,61],[63,55,19,7],[65,0,20,7],[65,6,20,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB"],[65,51,20,58],[65,54,20,61],[65,55,20,7],[67,0,21,7],[67,6,21,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[67,48,21,55],[67,51,21,58],[67,52,21,7],[69,0,22,7],[69,6,22,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC"],[69,51,22,58],[69,54,22,61],[69,55,22,7],[71,0,23,7],[71,6,23,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD"],[71,52,23,59],[71,55,23,62],[71,56,23,7],[73,0,24,7],[73,6,24,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM"],[73,50,24,57],[73,53,24,60],[73,59,24,7],[75,0,25,7],[75,6,25,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3"],[75,44,25,51],[75,47,25,54],[75,53,25,7],[77,0,26,7],[77,6,26,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3"],[77,49,26,56],[77,52,26,59],[77,58,26,7],[79,0,27,7],[79,6,27,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4"],[79,50,27,57],[79,53,27,60],[79,59,27,7],[81,0,28,7],[81,6,28,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC"],[81,49,28,56],[81,52,28,59],[81,58,28,7],[83,0,29,7],[83,6,29,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP"],[83,50,29,57],[83,53,29,60],[83,59,29,7],[85,0,30,7],[85,6,30,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC"],[85,50,30,57],[85,53,30,60],[85,59,30,7],[87,0,31,7],[87,6,31,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ"],[87,52,31,59],[87,55,31,62],[87,61,31,7],[89,0,32,7],[89,6,32,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3"],[89,46,32,53],[89,49,32,56],[89,55,32,7],[91,0,33,7],[91,6,33,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6"],[91,46,33,53],[91,49,33,56],[91,55,33,7],[93,0,34,7],[93,6,34,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW"],[93,45,34,52],[93,48,34,55],[93,54,34,7],[95,0,35,7],[95,6,35,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW"],[95,45,35,52],[95,48,35,55],[95,54,35,7],[97,0,36,7],[97,6,36,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN"],[97,48,36,55],[97,51,36,58],[97,57,36,7],[99,0,37,7],[99,6,37,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2"],[99,49,37,56],[99,52,37,59],[99,58,37,7],[101,0,38,7],[101,6,38,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM"],[101,49,38,56],[101,52,38,59],[101,58,38,7],[103,0,39,7],[103,6,39,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1"],[103,51,39,58],[103,54,39,61],[103,60,39,7],[105,0,40,7],[105,6,40,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2"],[105,51,40,58],[105,54,40,61],[105,60,40,7],[107,0,41,7],[107,6,41,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3"],[107,51,41,58],[107,54,41,61],[107,60,41,7],[109,0,42,7],[109,6,42,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS"],[109,54,42,61],[109,57,42,64],[109,63,42,7],[111,0,43,7],[111,6,43,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE"],[111,52,43,59],[111,55,43,62],[111,61,43,7],[113,0,44,7],[113,6,44,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD"],[113,52,44,59],[113,55,44,62],[113,61,44,7],[115,0,45,7],[115,6,45,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD"],[115,53,45,60],[115,56,45,63],[115,62,45,7],[117,0,46,7],[117,6,46,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR"],[117,57,46,64],[117,60,46,67],[117,66,46,7],[119,0,47,7],[119,6,47,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2"],[119,56,47,63],[119,59,47,66],[119,65,47,7],[121,0,48,7],[121,6,48,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2"],[121,55,48,62],[121,58,48,65],[121,64,48,7],[123,0,49,7],[123,6,49,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL"],[123,57,49,64],[123,60,49,67],[123,66,49,7],[125,0,50,7],[125,6,50,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR"],[125,44,50,51],[125,47,50,54],[125,53,50,7],[127,0,51,7],[127,6,51,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB"],[127,47,51,54],[127,50,51,57],[127,56,51,7],[129,0,52,7],[129,6,52,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE"],[129,48,52,55],[129,51,52,58],[129,57,52,7],[131,0,53,7],[131,6,53,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC"],[131,45,53,52],[131,48,53,55],[131,54,53,7],[133,0,54,7],[133,6,54,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA"],[133,52,54,59],[133,55,54,62],[133,65,54,7],[135,0,55,7],[135,6,55,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM"],[135,53,55,60],[135,56,55,63],[135,66,55,7],[137,0,56,7],[137,6,56,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3"],[137,45,56,52],[137,48,56,55],[137,54,56,7],[139,0,57,7],[139,6,57,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3"],[139,52,57,59],[139,55,57,62],[139,61,57,7],[141,0,58,7],[141,6,58,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[141,44,58,51],[141,47,58,54],[141,48,58,7],[143,0,59,7],[143,6,59,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW"],[143,44,59,51],[143,47,59,54],[143,51,59,7],[145,0,60,7],[145,6,60,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM"],[145,47,60,54],[145,50,60,57],[145,54,60,7],[147,0,61,7],[147,6,61,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH"],[147,45,61,52],[147,48,61,55],[147,52,61,7],[149,0,62,7],[149,6,62,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[149,44,62,51],[149,47,62,54],[149,51,62,7],[151,0,63,7],[151,6,63,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT"],[151,53,63,60],[151,56,63,63],[151,57,63,7],[153,0,64,7],[153,6,64,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE"],[153,62,64,69],[153,65,64,72],[153,66,64,7],[155,0,65,7],[155,6,65,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED"],[155,65,65,72],[155,68,65,75],[155,69,65,7],[157,0,66,7],[157,6,66,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE"],[157,53,66,60],[157,56,66,63],[157,57,66,7],[159,0,68,7],[159,6,68,13,"RECORDING_OPTIONS_PRESET_HIGH_QUALITY"],[159,43,68,50],[159,46,68,53],[160,0,69,4,"android"],[160,4,69,4,"android"],[160,11,69,11],[160,13,69,13],[161,0,70,8,"extension"],[161,6,70,8,"extension"],[161,15,70,17],[161,17,70,19],[161,23,69,13],[162,0,71,8,"outputFormat"],[162,6,71,8,"outputFormat"],[162,18,71,20],[162,20,71,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[162,65,69,13],[163,0,72,8,"audioEncoder"],[163,6,72,8,"audioEncoder"],[163,18,72,20],[163,20,72,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[163,62,69,13],[164,0,73,8,"sampleRate"],[164,6,73,8,"sampleRate"],[164,16,73,18],[164,18,73,20],[164,23,69,13],[165,0,74,8,"numberOfChannels"],[165,6,74,8,"numberOfChannels"],[165,22,74,24],[165,24,74,26],[165,25,69,13],[166,0,75,8,"bitRate"],[166,6,75,8,"bitRate"],[166,13,75,15],[166,15,75,17],[167,0,69,13],[167,5,68,53],[168,0,77,4,"ios"],[168,4,77,4,"ios"],[168,7,77,7],[168,9,77,9],[169,0,78,8,"extension"],[169,6,78,8,"extension"],[169,15,78,17],[169,17,78,19],[169,23,77,9],[170,0,79,8,"audioQuality"],[170,6,79,8,"audioQuality"],[170,18,79,20],[170,20,79,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[170,58,77,9],[171,0,80,8,"sampleRate"],[171,6,80,8,"sampleRate"],[171,16,80,18],[171,18,80,20],[171,23,77,9],[172,0,81,8,"numberOfChannels"],[172,6,81,8,"numberOfChannels"],[172,22,81,24],[172,24,81,26],[172,25,77,9],[173,0,82,8,"bitRate"],[173,6,82,8,"bitRate"],[173,13,82,15],[173,15,82,17],[173,21,77,9],[174,0,83,8,"linearPCMBitDepth"],[174,6,83,8,"linearPCMBitDepth"],[174,23,83,25],[174,25,83,27],[174,27,77,9],[175,0,84,8,"linearPCMIsBigEndian"],[175,6,84,8,"linearPCMIsBigEndian"],[175,26,84,28],[175,28,84,30],[175,33,77,9],[176,0,85,8,"linearPCMIsFloat"],[176,6,85,8,"linearPCMIsFloat"],[176,22,85,24],[176,24,85,26],[177,0,77,9],[178,0,68,53],[178,3,68,7],[180,0,88,7],[180,6,88,13,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[180,42,88,49],[180,45,88,52],[181,0,89,4,"android"],[181,4,89,4,"android"],[181,11,89,11],[181,13,89,13],[182,0,90,8,"extension"],[182,6,90,8,"extension"],[182,15,90,17],[182,17,90,19],[182,23,89,13],[183,0,91,8,"outputFormat"],[183,6,91,8,"outputFormat"],[183,18,91,20],[183,20,91,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[183,68,89,13],[184,0,92,8,"audioEncoder"],[184,6,92,8,"audioEncoder"],[184,18,92,20],[184,20,92,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[184,65,89,13],[185,0,93,8,"sampleRate"],[185,6,93,8,"sampleRate"],[185,16,93,18],[185,18,93,20],[185,23,89,13],[186,0,94,8,"numberOfChannels"],[186,6,94,8,"numberOfChannels"],[186,22,94,24],[186,24,94,26],[186,25,89,13],[187,0,95,8,"bitRate"],[187,6,95,8,"bitRate"],[187,13,95,15],[187,15,95,17],[188,0,89,13],[188,5,88,52],[189,0,97,4,"ios"],[189,4,97,4,"ios"],[189,7,97,7],[189,9,97,9],[190,0,98,8,"extension"],[190,6,98,8,"extension"],[190,15,98,17],[190,17,98,19],[190,23,97,9],[191,0,99,8,"audioQuality"],[191,6,99,8,"audioQuality"],[191,18,99,20],[191,20,99,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[191,58,97,9],[192,0,100,8,"sampleRate"],[192,6,100,8,"sampleRate"],[192,16,100,18],[192,18,100,20],[192,23,97,9],[193,0,101,8,"numberOfChannels"],[193,6,101,8,"numberOfChannels"],[193,22,101,24],[193,24,101,26],[193,25,97,9],[194,0,102,8,"bitRate"],[194,6,102,8,"bitRate"],[194,13,102,15],[194,15,102,17],[194,21,97,9],[195,0,103,8,"linearPCMBitDepth"],[195,6,103,8,"linearPCMBitDepth"],[195,23,103,25],[195,25,103,27],[195,27,97,9],[196,0,104,8,"linearPCMIsBigEndian"],[196,6,104,8,"linearPCMIsBigEndian"],[196,26,104,28],[196,28,104,30],[196,33,97,9],[197,0,105,8,"linearPCMIsFloat"],[197,6,105,8,"linearPCMIsFloat"],[197,22,105,24],[197,24,105,26],[198,0,97,9],[199,0,88,52],[199,3,88,7],[201,0,109,0],[201,6,109,4,"_recorderExists"],[201,21,109,19],[201,24,109,22],[201,29,109,0],[202,0,110,0],[202,6,110,6,"eventEmitter"],[202,18,110,18],[202,21,110,21,"Platform"],[202,36,110,30,"OS"],[202,38,110,21],[202,43,110,37],[202,52,110,21],[202,55,110,49],[202,59,110,53,"EventEmitter"],[202,77,110,49],[202,78,110,66,"ExponentAV"],[202,97,110,49],[202,98,110,21],[202,101,110,80],[202,105,110,0],[204,0,111,7],[204,11,111,22,"getPermissionsAsync"],[204,30,111,7],[205,0,111,7],[206,0,111,7],[207,0,111,7],[208,0,111,7],[209,0,111,7],[209,45,112,11,"ExponentAV"],[209,65,112,22,"getPermissionsAsync"],[209,84,112,11],[209,86,111,7],[211,0,111,7],[212,0,111,7],[213,0,111,7],[214,0,111,7],[215,0,111,7],[216,0,111,7],[217,0,111,7],[219,0,114,7],[219,11,114,22,"requestPermissionsAsync"],[219,34,114,7],[220,0,114,7],[221,0,114,7],[222,0,114,7],[223,0,114,7],[224,0,114,7],[224,46,115,11,"ExponentAV"],[224,66,115,22,"requestPermissionsAsync"],[224,89,115,11],[224,91,114,7],[226,0,114,7],[227,0,114,7],[228,0,114,7],[229,0,114,7],[230,0,114,7],[231,0,114,7],[232,0,114,7],[234,6,117,13,"Recording"],[234,15],[235,0,118,4],[235,25,118,18],[236,0,118,18],[238,0,118,18],[239,0,119,8],[239,11,119,13,"_subscription"],[239,24,119,8],[239,27,119,29],[239,31,119,8],[240,0,120,8],[240,11,120,13,"_canRecord"],[240,21,120,8],[240,24,120,26],[240,29,120,8],[241,0,121,8],[241,11,121,13,"_isDoneRecording"],[241,27,121,8],[241,30,121,32],[241,35,121,8],[242,0,122,8],[242,11,122,13,"_finalDurationMillis"],[242,31,122,8],[242,34,122,36],[242,35,122,8],[243,0,123,8],[243,11,123,13,"_uri"],[243,15,123,8],[243,18,123,20],[243,22,123,8],[244,0,124,8],[244,11,124,13,"_onRecordingStatusUpdate"],[244,35,124,8],[244,38,124,40],[244,42,124,8],[245,0,125,8],[245,11,125,13,"_progressUpdateTimeoutVariable"],[245,41,125,8],[245,44,125,46],[245,48,125,8],[246,0,126,8],[246,11,126,13,"_progressUpdateIntervalMillis"],[246,40,126,8],[246,43,126,45,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[246,87,126,8],[247,0,127,8],[247,11,127,13,"_options"],[247,19,127,8],[247,22,127,24],[247,26,127,8],[249,0,129,8],[249,11,129,13,"_cleanupForUnloadedRecorder"],[249,38,129,8],[249,41,129,43],[249,58,129,50,"finalStatus"],[249,69,129,43],[250,0,129,43],[252,0,129,43],[253,0,129,43],[254,0,129,43],[255,0,129,43],[256,0,130,12],[256,16,130,12],[256,21,130,16],[256,22,130,17,"_canRecord"],[256,32,130,12],[256,35,130,30],[256,40,130,12],[257,0,131,12],[257,16,131,12],[257,21,131,16],[257,22,131,17,"_isDoneRecording"],[257,38,131,12],[257,41,131,36],[257,45,131,12],[258,0,132,12],[258,16,132,12],[258,21,132,16],[258,22,132,17,"_finalDurationMillis"],[258,42,132,12],[258,70,132,40,"finalStatus"],[258,81,132,12],[258,101,132,40,"finalStatus"],[258,112,132,51],[258,113,132,53,"durationMillis"],[258,127,132,12],[258,163,132,71],[258,164,132,12],[259,0,133,12,"_recorderExists"],[259,16,133,12,"_recorderExists"],[259,31,133,27],[259,34,133,30],[259,39,133,12],[261,0,134,12],[261,20,134,16],[261,25,134,20],[261,26,134,21,"_subscription"],[261,39,134,12],[261,41,134,36],[262,0,135,16],[262,18,135,16],[262,23,135,20],[262,24,135,21,"_subscription"],[262,37,135,16],[262,38,135,35,"remove"],[262,44,135,16],[264,0,136,16],[264,18,136,16],[264,23,136,20],[264,24,136,21,"_subscription"],[264,37,136,16],[264,40,136,37],[264,44,136,16],[265,0,137,13],[267,0,138,12],[267,16,138,12],[267,21,138,16],[267,22,138,17,"_disablePolling"],[267,37,138,12],[269,0,129,43],[270,0,129,43],[270,50,139,25],[270,55,139,29],[270,56,139,30,"getStatusAsync"],[270,70,139,25],[270,72,129,43],[272,0,129,43],[273,0,129,43],[275,0,129,43],[276,0,129,43],[277,0,129,43],[278,0,129,43],[279,0,129,43],[280,0,129,43],[281,0,129,43],[281,7,129,8],[283,0,141,8],[283,11,141,13,"_pollingLoop"],[283,23,141,8],[283,26,141,28],[284,0,141,28],[285,0,141,28],[286,0,141,28],[287,0,141,28],[288,0,141,28],[288,22,142,16],[288,66,142,36],[288,71,142,40],[288,72,142,41,"_canRecord"],[288,82,142,16],[288,86,142,55],[288,91,142,59],[288,92,142,60,"_onRecordingStatusUpdate"],[288,116,142,55],[288,120,142,88],[288,124,141,28],[289,0,141,28],[290,0,141,28],[291,0,141,28],[293,0,143,16],[293,16,143,16],[293,21,143,20],[293,22,143,21,"_progressUpdateTimeoutVariable"],[293,52,143,16],[293,55,143,54,"setTimeout"],[293,65,143,64],[293,66,143,65],[293,71,143,69],[293,72,143,70,"_pollingLoop"],[293,84,143,64],[293,86,143,84],[293,91,143,88],[293,92,143,89,"_progressUpdateIntervalMillis"],[293,121,143,64],[293,122,143,16],[294,0,141,28],[295,0,141,28],[296,0,141,28],[296,50,145,26],[296,55,145,30],[296,56,145,31,"getStatusAsync"],[296,70,145,26],[296,72,141,28],[298,0,141,28],[299,0,141,28],[300,0,141,28],[302,0,141,28],[303,0,141,28],[304,0,141,28],[306,0,148,20],[306,16,148,20],[306,21,148,24],[306,22,148,25,"_disablePolling"],[306,37,148,20],[308,0,141,28],[309,0,141,28],[310,0,141,28],[311,0,141,28],[312,0,141,28],[313,0,141,28],[314,0,141,28],[314,7,141,8],[316,0,154,8],[316,11,154,13,"getStatusAsync"],[316,25,154,8],[316,28,154,30],[317,0,154,30],[318,0,154,30],[319,0,154,30],[320,0,154,30],[321,0,154,30],[322,0,154,30],[322,21,156,16],[322,26,156,20],[322,27,156,21,"_canRecord"],[322,37,154,30],[323,0,154,30],[324,0,154,30],[325,0,154,30],[327,0,154,30],[327,50,157,23],[327,55,157,27],[327,56,157,28,"_performOperationAndHandleStatusAsync"],[327,93,157,23],[327,94,157,66],[328,0,157,66],[328,25,157,72,"ExponentAV"],[328,45,157,83,"getAudioRecordingStatus"],[328,68,157,72],[328,70,157,66],[329,0,157,66],[329,17,157,23],[329,18,154,30],[331,0,154,30],[332,0,159,18,"status"],[332,16,159,18,"status"],[332,22,154,30],[332,25,159,27],[333,0,160,16,"canRecord"],[333,18,160,16,"canRecord"],[333,27,160,25],[333,29,160,27],[333,34,159,27],[334,0,161,16,"isRecording"],[334,18,161,16,"isRecording"],[334,29,161,27],[334,31,161,29],[334,36,159,27],[335,0,162,16,"isDoneRecording"],[335,18,162,16,"isDoneRecording"],[335,33,162,31],[335,35,162,33],[335,40,162,37],[335,41,162,38,"_isDoneRecording"],[335,57,159,27],[336,0,163,16,"durationMillis"],[336,18,163,16,"durationMillis"],[336,32,163,30],[336,34,163,32],[336,39,163,36],[336,40,163,37,"_finalDurationMillis"],[337,0,159,27],[337,17,154,30],[339,0,165,12],[339,16,165,12],[339,21,165,16],[339,22,165,17,"_callOnRecordingStatusUpdateForNewStatus"],[339,62,165,12],[339,63,165,58,"status"],[339,69,165,12],[341,0,154,30],[341,50,166,19,"status"],[341,56,154,30],[343,0,154,30],[344,0,154,30],[345,0,154,30],[346,0,154,30],[347,0,154,30],[348,0,154,30],[349,0,154,30],[349,7,154,8],[350,0,168,5],[354,13,169,4],[354,40,169,22],[355,0,170,8],[355,12,170,12],[355,17,170,17,"_progressUpdateTimeoutVariable"],[355,47,170,12],[355,51,170,51],[355,55,170,8],[355,57,170,57],[356,0,171,12,"clearTimeout"],[356,10,171,12,"clearTimeout"],[356,22,171,24],[356,23,171,25],[356,28,171,30,"_progressUpdateTimeoutVariable"],[356,58,171,24],[356,59,171,12],[357,0,172,12],[357,15,172,17,"_progressUpdateTimeoutVariable"],[357,45,172,12],[357,48,172,50],[357,52,172,12],[358,0,173,9],[359,0,174,5],[362,13,175,4],[362,61,175,43],[363,0,176,8],[363,12,176,12],[363,56,176,32],[363,61,176,37,"_canRecord"],[363,71,176,12],[363,75,176,51],[363,80,176,56,"_onRecordingStatusUpdate"],[363,104,176,51],[363,108,176,84],[363,112,176,8],[363,114,176,90],[364,0,177,12],[364,15,177,17,"_disablePolling"],[364,30,177,12],[366,0,178,12],[366,15,178,17,"_pollingLoop"],[366,27,178,12],[367,0,179,9],[368,0,180,5],[371,13,181,4],[371,63,181,45,"status"],[371,69,181,4],[371,71,181,53],[372,0,182,8],[372,12,182,12],[372,17,182,17,"_onRecordingStatusUpdate"],[372,41,182,12],[372,45,182,45],[372,49,182,8],[372,51,182,51],[373,0,183,12],[373,15,183,17,"_onRecordingStatusUpdate"],[373,39,183,12],[373,40,183,42,"status"],[373,46,183,12],[374,0,184,9],[375,0,185,5],[378,13,186,4],[378,60,186,48,"operation"],[378,69,186,4],[379,0,186,4],[380,0,186,4],[381,0,186,4],[382,0,186,4],[383,0,186,4],[384,0,187,8],[386,0,186,4],[386,21,188,12],[386,26,188,17,"_canRecord"],[386,36,186,4],[387,0,186,4],[388,0,186,4],[389,0,186,4],[391,0,186,4],[392,0,186,4],[392,50,189,33,"operation"],[392,59,189,42],[392,61,186,4],[394,0,186,4],[395,0,189,18,"status"],[395,16,189,18,"status"],[395,22,186,4],[397,0,190,12],[397,21,190,17,"_callOnRecordingStatusUpdateForNewStatus"],[397,61,190,12],[397,62,190,58,"status"],[397,68,190,12],[399,0,186,4],[399,50,191,19,"status"],[399,56,186,4],[401,0,186,4],[402,0,186,4],[402,22,194,18],[402,26,194,22,"Error"],[402,31,194,18],[402,32,194,28],[402,105,194,18],[402,106,186,4],[404,0,186,4],[405,0,186,4],[406,0,186,4],[407,0,186,4],[408,0,186,4],[409,0,186,4],[410,0,186,4],[413,13,197,4],[413,49,197,31,"onRecordingStatusUpdate"],[413,72,197,4],[413,74,197,56],[414,0,198,8],[414,13,198,13,"_onRecordingStatusUpdate"],[414,37,198,8],[414,40,198,40,"onRecordingStatusUpdate"],[414,63,198,8],[416,0,199,8],[416,12,199,12,"onRecordingStatusUpdate"],[416,35,199,35],[416,39,199,39],[416,43,199,8],[416,45,199,45],[417,0,200,12],[417,15,200,17,"_disablePolling"],[417,30,200,12],[418,0,201,9],[418,9,199,8],[418,15,202,13],[419,0,203,12],[419,15,203,17,"_enablePollingIfNecessaryAndPossible"],[419,51,203,12],[420,0,204,9],[422,0,205,8],[422,13,205,13,"getStatusAsync"],[422,27,205,8],[423,0,206,5],[426,13,207,4],[426,48,207,30,"progressUpdateIntervalMillis"],[426,76,207,4],[426,78,207,60],[427,0,208,8],[427,13,208,13,"_progressUpdateIntervalMillis"],[427,42,208,8],[427,45,208,45,"progressUpdateIntervalMillis"],[427,73,208,8],[428,0,209,8],[428,13,209,13,"getStatusAsync"],[428,27,209,8],[429,0,210,5],[432,13,212,4],[433,0,212,4],[434,0,212,4],[435,0,212,4],[436,0,212,4],[437,0,212,4],[438,0,212,4],[439,0,212,4],[441,0,212,4],[442,0,212,4],[443,0,212,4],[444,0,212,4],[445,0,212,31,"options"],[445,16,212,31,"options"],[445,23,212,4],[445,85,212,41,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[445,121,212,4],[446,0,213,8],[448,0,212,4],[448,21,214,12,"_recorderExists"],[448,36,212,4],[449,0,212,4],[450,0,212,4],[451,0,212,4],[453,0,212,4],[453,22,215,18],[453,26,215,22,"Error"],[453,31,215,18],[453,32,215,28],[453,92,215,18],[453,93,212,4],[455,0,212,4],[456,0,212,4],[456,21,217,12],[456,26,217,17,"_isDoneRecording"],[456,42,212,4],[457,0,212,4],[458,0,212,4],[459,0,212,4],[461,0,212,4],[461,22,218,18],[461,26,218,22,"Error"],[461,31,218,18],[461,32,218,28],[461,99,218,18],[461,100,212,4],[463,0,212,4],[464,0,212,4],[464,22,220,12],[464,23,220,13,"options"],[464,30,220,12],[464,34,220,24],[464,35,220,25,"options"],[464,42,220,32],[464,43,220,33,"android"],[464,50,220,12],[464,54,220,44],[464,55,220,45,"options"],[464,62,220,52],[464,63,220,53,"ios"],[464,66,212,4],[465,0,212,4],[466,0,212,4],[467,0,212,4],[469,0,212,4],[469,22,221,18],[469,26,221,22,"Error"],[469,31,221,18],[469,32,221,28],[469,119,221,18],[469,120,212,4],[471,0,212,4],[472,0,223,14,"extensionRegex"],[472,16,223,14,"extensionRegex"],[472,30,212,4],[472,33,223,31],[472,42,212,4],[474,0,212,4],[474,22,224,12],[474,23,224,13,"options"],[474,30,224,20],[474,31,224,21,"android"],[474,38,224,13],[474,39,224,29,"extension"],[474,48,224,12],[474,52,225,12],[474,53,225,13,"options"],[474,60,225,20],[474,61,225,21,"ios"],[474,64,225,13],[474,65,225,25,"extension"],[474,74,224,12],[474,78,226,12],[474,79,226,13,"extensionRegex"],[474,93,226,27],[474,94,226,28,"test"],[474,98,226,13],[474,99,226,33,"options"],[474,106,226,40],[474,107,226,41,"android"],[474,114,226,33],[474,115,226,49,"extension"],[474,124,226,13],[474,125,224,12],[474,129,227,12],[474,130,227,13,"extensionRegex"],[474,144,227,27],[474,145,227,28,"test"],[474,149,227,13],[474,150,227,33,"options"],[474,157,227,40],[474,158,227,41,"ios"],[474,161,227,33],[474,162,227,45,"extension"],[474,171,227,13],[474,172,212,4],[475,0,212,4],[476,0,212,4],[477,0,212,4],[479,0,212,4],[479,22,228,18],[479,26,228,22,"Error"],[479,31,228,18],[479,69,228,63,"extensionRegex"],[479,83,228,77],[479,84,228,78,"toString"],[479,92,228,63],[479,94,228,18],[479,101,212,4],[481,0,212,4],[482,0,212,4],[482,20,230,13],[482,25,230,18,"_canRecord"],[482,35,212,4],[483,0,212,4],[484,0,212,4],[485,0,212,4],[487,0,231,12],[487,20,231,16,"eventEmitter"],[487,32,231,12],[487,34,231,30],[488,0,232,16],[488,23,232,21,"_subscription"],[488,36,232,16],[488,39,232,37,"eventEmitter"],[488,51,232,49],[488,52,232,50,"addListener"],[488,63,232,37],[488,64,232,62],[488,97,232,37],[488,99,232,97],[488,104,232,102,"_cleanupForUnloadedRecorder"],[488,131,232,37],[488,132,232,16],[489,0,233,13],[491,0,212,4],[492,0,212,4],[492,50,234,43,"ExponentAV"],[492,70,234,54,"prepareAudioRecorder"],[492,90,234,43],[492,91,234,75,"options"],[492,98,234,43],[492,99,212,4],[494,0,212,4],[495,0,212,4],[496,0,234,20,"uri"],[496,16,234,20,"uri"],[496,19,212,4],[496,44,234,20,"uri"],[496,47,212,4],[497,0,234,25,"status"],[497,16,234,25,"status"],[497,22,212,4],[497,47,234,25,"status"],[497,53,212,4],[498,0,235,12,"_recorderExists"],[498,16,235,12,"_recorderExists"],[498,31,235,27],[498,34,235,30],[498,38,235,12],[499,0,236,12],[499,21,236,17,"_uri"],[499,25,236,12],[499,28,236,24,"uri"],[499,31,236,12],[500,0,237,12],[500,21,237,17,"_options"],[500,29,237,12],[500,32,237,28,"options"],[500,39,237,12],[501,0,238,12],[501,21,238,17,"_canRecord"],[501,31,238,12],[501,34,238,30],[501,38,238,12],[502,0,239,18,"currentStatus"],[502,16,239,18,"currentStatus"],[502,29,212,4],[502,64,239,39,"status"],[502,70,212,4],[503,0,239,47,"canRecord"],[503,18,239,47,"canRecord"],[503,27,239,56],[503,29,239,58],[504,0,212,4],[506,0,240,12],[506,21,240,17,"_callOnRecordingStatusUpdateForNewStatus"],[506,61,240,12],[506,62,240,58,"currentStatus"],[506,75,240,12],[508,0,241,12],[508,21,241,17,"_enablePollingIfNecessaryAndPossible"],[508,57,241,12],[510,0,212,4],[510,50,242,19,"currentStatus"],[510,63,212,4],[512,0,212,4],[513,0,212,4],[513,22,245,18],[513,26,245,22,"Error"],[513,31,245,18],[513,32,245,28],[513,86,245,18],[513,87,212,4],[515,0,212,4],[516,0,212,4],[517,0,212,4],[518,0,212,4],[519,0,212,4],[520,0,212,4],[521,0,212,4],[524,13,248,4],[525,0,248,4],[526,0,248,4],[527,0,248,4],[528,0,248,4],[529,0,248,4],[529,50,249,15],[529,55,249,20,"_performOperationAndHandleStatusAsync"],[529,92,249,15],[529,93,249,58],[530,0,249,58],[530,25,249,64,"ExponentAV"],[530,45,249,75,"startAudioRecording"],[530,64,249,64],[530,66,249,58],[531,0,249,58],[531,17,249,15],[531,18,248,4],[533,0,248,4],[534,0,248,4],[535,0,248,4],[536,0,248,4],[537,0,248,4],[538,0,248,4],[539,0,248,4],[542,13,251,4],[543,0,251,4],[544,0,251,4],[545,0,251,4],[546,0,251,4],[547,0,251,4],[547,50,252,15],[547,55,252,20,"_performOperationAndHandleStatusAsync"],[547,92,252,15],[547,93,252,58],[548,0,252,58],[548,25,252,64,"ExponentAV"],[548,45,252,75,"pauseAudioRecording"],[548,64,252,64],[548,66,252,58],[549,0,252,58],[549,17,252,15],[549,18,251,4],[551,0,251,4],[552,0,251,4],[553,0,251,4],[554,0,251,4],[555,0,251,4],[556,0,251,4],[557,0,251,4],[560,13,254,4],[561,0,254,4],[562,0,254,4],[563,0,254,4],[564,0,254,4],[565,0,254,4],[566,0,254,4],[566,20,255,13],[566,25,255,18,"_canRecord"],[566,35,254,4],[567,0,254,4],[568,0,254,4],[569,0,254,4],[571,0,254,4],[571,21,256,16],[571,26,256,21,"_isDoneRecording"],[571,42,254,4],[572,0,254,4],[573,0,254,4],[574,0,254,4],[576,0,254,4],[576,22,257,22],[576,26,257,26,"Error"],[576,31,257,22],[576,32,257,32],[576,91,257,22],[576,92,254,4],[578,0,254,4],[579,0,254,4],[579,22,260,22],[579,26,260,26,"Error"],[579,31,260,22],[579,32,260,32],[579,87,260,22],[579,88,254,4],[581,0,254,4],[582,0,254,4],[583,0,254,4],[584,0,254,4],[584,50,268,31,"ExponentAV"],[584,70,268,42,"stopAudioRecording"],[584,88,268,31],[584,90,254,4],[586,0,254,4],[587,0,268,12,"stopResult"],[587,16,268,12,"stopResult"],[587,26,254,4],[588,0,254,4],[589,0,254,4],[591,0,254,4],[592,0,254,4],[593,0,254,4],[594,0,271,12,"stopError"],[594,16,271,12,"stopError"],[594,25,271,21],[594,41,271,12],[596,0,254,4],[597,0,254,4],[598,0,254,4],[598,50,274,14,"ExponentAV"],[598,70,274,25,"unloadAudioRecorder"],[598,89,274,14],[598,91,254,4],[600,0,254,4],[601,0,254,4],[602,0,254,4],[602,50,275,29],[602,55,275,34,"_cleanupForUnloadedRecorder"],[602,82,275,29],[602,83,275,62,"stopResult"],[602,93,275,29],[602,94,254,4],[604,0,254,4],[605,0,275,14,"status"],[605,16,275,14,"status"],[605,22,254,4],[606,0,254,4],[606,51,276,15,"stopError"],[606,60,276,24],[606,63,276,27,"Promise"],[606,70,276,34],[606,71,276,35,"reject"],[606,77,276,27],[606,78,276,42,"stopError"],[606,87,276,27],[606,88,276,24],[606,91,276,55,"status"],[606,97,254,4],[608,0,254,4],[609,0,254,4],[610,0,254,4],[611,0,254,4],[612,0,254,4],[613,0,254,4],[614,0,254,4],[617,13,279,4],[617,31,279,13],[618,0,280,8],[618,15,280,15],[618,20,280,20,"_uri"],[618,24,280,8],[619,0,281,5],[622,13,283,4],[623,0,283,4],[624,0,283,4],[625,0,283,4],[626,0,283,4],[627,0,283,4],[628,0,283,4],[629,0,283,4],[630,0,283,31,"initialStatus"],[630,16,283,31,"initialStatus"],[630,29,283,4],[630,94,283,47],[630,96,283,4],[631,0,283,51,"onPlaybackStatusUpdate"],[631,16,283,51,"onPlaybackStatusUpdate"],[631,38,283,4],[631,103,283,76],[631,107,283,4],[632,0,284,8,"console"],[632,16,284,8,"console"],[632,23,284,15],[632,24,284,16,"warn"],[632,28,284,8],[633,0,283,4],[633,51,285,15],[633,56,285,20,"createNewLoadedSoundAsync"],[633,81,285,15],[633,82,285,46,"initialStatus"],[633,95,285,15],[633,97,285,61,"onPlaybackStatusUpdate"],[633,119,285,15],[633,120,283,4],[635,0,283,4],[636,0,283,4],[637,0,283,4],[638,0,283,4],[639,0,283,4],[640,0,283,4],[641,0,283,4],[644,13,287,4],[645,0,287,4],[646,0,287,4],[647,0,287,4],[648,0,287,4],[649,0,287,4],[650,0,287,4],[651,0,287,4],[652,0,287,36,"initialStatus"],[652,16,287,36,"initialStatus"],[652,29,287,4],[652,94,287,52],[652,96,287,4],[653,0,287,56,"onPlaybackStatusUpdate"],[653,16,287,56,"onPlaybackStatusUpdate"],[653,38,287,4],[653,103,287,81],[653,107,287,4],[655,0,287,4],[655,22,288,12],[655,27,288,17,"_uri"],[655,31,288,12],[655,35,288,25],[655,39,288,12],[655,43,288,33],[655,44,288,34],[655,49,288,39,"_isDoneRecording"],[655,65,287,4],[656,0,287,4],[657,0,287,4],[658,0,287,4],[660,0,287,4],[660,22,289,18],[660,26,289,22,"Error"],[660,31,289,18],[660,32,289,28],[660,90,289,18],[660,91,287,4],[662,0,287,4],[663,0,287,4],[663,51,291,15,"Sound"],[663,64,291,21,"createAsync"],[663,75,291,15],[663,76,293,8],[664,0,293,10,"uri"],[664,18,293,10,"uri"],[664,21,293,13],[664,23,293,15],[664,28,293,20,"_uri"],[665,0,293,8],[665,17,291,15],[665,19,293,28,"initialStatus"],[665,32,291,15],[665,34,293,43,"onPlaybackStatusUpdate"],[665,56,291,15],[665,58,293,67],[665,63,291,15],[665,64,287,4],[667,0,287,4],[668,0,287,4],[669,0,287,4],[670,0,287,4],[671,0,287,4],[672,0,287,4],[673,0,287,4]],"functionMap":{"names":["<global>","getPermissionsAsync","requestPermissionsAsync","Recording","constructor","_cleanupForUnloadedRecorder","_pollingLoop","getStatusAsync","_performOperationAndHandleStatusAsync$argument_0","_disablePolling","_enablePollingIfNecessaryAndPossible","_callOnRecordingStatusUpdateForNewStatus","_performOperationAndHandleStatusAsync","setOnRecordingStatusUpdate","setProgressUpdateInterval","prepareToRecordAsync","startAsync","pauseAsync","stopAndUnloadAsync","getURI","createNewLoadedSound","createNewLoadedSoundAsync"],"mappings":"AAA;OC8G;CDE;OEC;CFE;OGC;ICC;2CCW;SDW;4BEC;SFU;8BGG;kECG,0CD;SHU;KDC;IMC;KNK;IOC;KPK;IQC;KRI;ISC;KTU;IUC;KVS;IWC;KXG;IYE;KZmC;IaC;0DRC,sCQ;KbC;IcC;0DTC,sCS;KdC;IeC;KfuB;IgBE;KhBE;IiBE;KjBG;IkBC;KlBO;CHC"}},"type":"js/module"}]}